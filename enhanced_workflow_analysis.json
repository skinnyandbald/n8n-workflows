{
  "metadata": {
    "generation_timestamp": "2025-06-01T16:06:49.158083",
    "total_workflows": 2050,
    "total_errors": 0,
    "analysis_version": "2.0_complete"
  },
  "summary": {
    "total_workflows_analyzed": 2050,
    "total_errors": 0,
    "categories": {
      "DATA": 204,
      "AI": 896,
      "COMM": 281,
      "UTIL": 512,
      "ECOMMERCE": 13,
      "BIZ": 60,
      "ANALYTICS": 12,
      "CONTENT": 37,
      "OPS": 34,
      "MARKETING": 1
    },
    "top_functions": {
      "create": 63,
      "automate": 45,
      "receive": 33,
      "send": 32,
      "agent": 28,
      "telegram": 22,
      "extract": 19,
      "google": 18,
      "generate": 18,
      "email": 16,
      "youtube": 15,
      "powered": 14,
      "automated": 14,
      "openai": 13,
      "build": 13,
      "analyze": 12,
      "auto": 11,
      "chat": 10,
      "summarize": 9,
      "daily": 9
    },
    "top_integrations": {
      "stickyNote": 1164,
      "set": 1011,
      "httpRequest": 846,
      "manualTrigger": 745,
      "if": 589,
      "code": 472,
      "@n8n/langchain.lmChatOpenAi": 390,
      "@n8n/langchain.agent": 282,
      "merge": 281,
      "scheduleTrigger": 278,
      "webhook": 273,
      "googleSheets": 255,
      "splitOut": 251,
      "splitInBatches": 194,
      "switch": 187,
      "@n8n/langchain.memoryBufferWindow": 163,
      "@n8n/langchain.chatTrigger": 160,
      "filter": 156,
      "telegram": 155,
      "@n8n/langchain.openAi": 154,
      "executeWorkflowTrigger": 142,
      "respondToWebhook": 140,
      "googleDrive": 140,
      "@n8n/langchain.outputParserStructured": 139,
      "gmail": 136,
      "@n8n/langchain.chainLlm": 134,
      "aggregate": 131,
      "slack": 126,
      "wait": 124,
      "function": 121,
      "cron": 108,
      "extractFromFile": 107,
      "formTrigger": 106,
      "airtable": 103,
      "@n8n/langchain.lmChatGoogleGemini": 95,
      "telegramTrigger": 91,
      "@n8n/langchain.documentDefaultDataLoader": 81,
      "@n8n/langchain.toolWorkflow": 78,
      "html": 73,
      "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter": 69,
      "emailSend": 63,
      "convertToFile": 61,
      "@n8n/langchain.embeddingsOpenAi": 58,
      "markdown": 58,
      "notion": 56,
      "@n8n/langchain.informationExtractor": 51,
      "gmailTrigger": 50,
      "n8n": 47,
      "itemLists": 46,
      "limit": 44
    }
  },
  "workflows": [
    {
      "original_filename": "data_accountcraft_automate_googlesheets_emailsend_webhook.json",
      "workflow_name": "AccountCraft WhatsApp Automation - Infridet",
      "suggested_filename": "data_accountcraft_automate_googlesheets_emailsend_webhook.json",
      "category": "DATA",
      "business_function": "accountcraft",
      "key_integrations": [
        "webhook",
        "googleSheets",
        "httpRequest",
        "emailSend"
      ],
      "trigger_type": "webhook",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.emailSend": 1
      },
      "business_value": "Automates accountcraft processes using webhook, googleSheets, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.518650"
    },
    {
      "original_filename": "ai_automate_ai_process_airtable_gmail_cron_2.json",
      "workflow_name": "Automate Pinterest Analysis & AI-Powered Content Suggestions With Pinterest API",
      "suggested_filename": "ai_automate_ai_process_airtable_gmail_cron_2.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "airtableTool",
        "scheduleTrigger",
        "httpRequest",
        "code",
        "airtable",
        "@n8n/langchain.agent",
        "@n8n/langchain.chainSummarization",
        "gmail",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.airtableTool": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.airtable": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates automate processes using @n8n/langchain.lmChatOpenAi, airtableTool, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.519056"
    },
    {
      "original_filename": "comm_google_automate_googlecalendar_microsoftoutlook.json",
      "workflow_name": "Google calendar to Outlook",
      "suggested_filename": "comm_google_automate_googlecalendar_microsoftoutlook.json",
      "category": "COMM",
      "business_function": "google",
      "key_integrations": [
        "merge",
        "googleCalendarTrigger",
        "microsoftOutlook"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.googleCalendarTrigger": 2,
        "n8n-nodes-base.microsoftOutlook": 4
      },
      "business_value": "Automates google processes using merge, googleCalendarTrigger, microsoftOutlook",
      "analysis_timestamp": "2025-06-01T16:06:48.519325"
    },
    {
      "original_filename": "data_1363_workflow_1363_automate_postgres_httprequest_webhook.json",
      "workflow_name": "data_1363_workflow_1363_automate_postgres_httprequest_webhook",
      "suggested_filename": "data_1363_workflow_1363_automate_postgres_httprequest_webhook.json",
      "category": "DATA",
      "business_function": "1363",
      "key_integrations": [
        "webhook",
        "mySql",
        "httpRequest",
        "postgres",
        "function",
        "merge"
      ],
      "trigger_type": "webhook",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.mySql": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.postgres": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates 1363 processes using webhook, mySql, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.519577"
    },
    {
      "original_filename": "util_3186_workflow_3186_automate_stopanderror_webhook_webhook.json",
      "workflow_name": "util_3186_workflow_3186_automate_stopanderror_webhook_webhook",
      "suggested_filename": "util_3186_workflow_3186_automate_stopanderror_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "3186",
      "key_integrations": [
        "webhook",
        "stopAndError",
        "set",
        "if",
        "switch",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stopAndError": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.stickyNote": 6
      },
      "business_value": "Automates 3186 processes using webhook, stopAndError, set",
      "analysis_timestamp": "2025-06-01T16:06:48.519900"
    },
    {
      "original_filename": "ai_xsend_ai_process_emailsend_httprequest.json",
      "workflow_name": "xSend and check TTS (Text-to-speech) voice calls end email verification",
      "suggested_filename": "ai_xsend_ai_process_emailsend_httprequest.json",
      "category": "AI",
      "business_function": "xsend",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "formTrigger",
        "emailSend",
        "code",
        "set",
        "form",
        "if"
      ],
      "trigger_type": "email",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.form": 5,
        "n8n-nodes-base.if": 2
      },
      "business_value": "Automates xsend processes using stickyNote, httpRequest, formTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.520289"
    },
    {
      "original_filename": "util_2032_workflow_2032_automate_httprequest_manual.json",
      "workflow_name": "util_2032_workflow_2032_automate_httprequest_manual",
      "suggested_filename": "util_2032_workflow_2032_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "2032",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 2032 processes using manualTrigger, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.520547"
    },
    {
      "original_filename": "comm_slack_automate_webhook_graphql_webhook.json",
      "workflow_name": "Slack-GitHub User Info",
      "suggested_filename": "comm_slack_automate_webhook_graphql_webhook.json",
      "category": "COMM",
      "business_function": "slack",
      "key_integrations": [
        "webhook",
        "graphql",
        "function",
        "slack"
      ],
      "trigger_type": "webhook",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.graphql": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates slack processes using webhook, graphql, function",
      "analysis_timestamp": "2025-06-01T16:06:48.520778"
    },
    {
      "original_filename": "ai_2173_workflow_2173_automate_form_openai.json",
      "workflow_name": "ai_2173_workflow_2173_automate_form_openai",
      "suggested_filename": "ai_2173_workflow_2173_automate_form_openai.json",
      "category": "AI",
      "business_function": "2173",
      "key_integrations": [
        "set",
        "openAi",
        "respondToWebhook",
        "formTrigger"
      ],
      "trigger_type": "webhook",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.formTrigger": 1
      },
      "business_value": "Automates 2173 processes using set, openAi, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:48.521057"
    },
    {
      "original_filename": "ai_model_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "workflow_name": "Use any LLM-Model via OpenRouter",
      "suggested_filename": "ai_model_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "category": "AI",
      "business_function": "model",
      "key_integrations": [
        "set",
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates model processes using set, stickyNote, @n8n/langchain.chatTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.521292"
    },
    {
      "original_filename": "comm_730_workflow_730_automate_gmail_googlecalendar.json",
      "workflow_name": "comm_730_workflow_730_automate_gmail_googlecalendar",
      "suggested_filename": "comm_730_workflow_730_automate_gmail_googlecalendar.json",
      "category": "COMM",
      "business_function": "730",
      "key_integrations": [
        "typeformTrigger",
        "googleSheets",
        "mattermost",
        "function",
        "merge",
        "googleCalendar",
        "gmail"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.mattermost": 3,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.googleCalendar": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates 730 processes using typeformTrigger, googleSheets, mattermost",
      "analysis_timestamp": "2025-06-01T16:06:48.521545"
    },
    {
      "original_filename": "comm_send_automate_twake_manual.json",
      "workflow_name": "Send a message on Twake",
      "suggested_filename": "comm_send_automate_twake_manual.json",
      "category": "COMM",
      "business_function": "send",
      "key_integrations": [
        "manualTrigger",
        "twake"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.twake": 1
      },
      "business_value": "Automates send processes using manualTrigger, twake",
      "analysis_timestamp": "2025-06-01T16:06:48.521745"
    },
    {
      "original_filename": "comm_1820_workflow_1820_automate_slack_webhook_webhook.json",
      "workflow_name": "comm_1820_workflow_1820_automate_slack_webhook_webhook",
      "suggested_filename": "comm_1820_workflow_1820_automate_slack_webhook_webhook.json",
      "category": "COMM",
      "business_function": "1820",
      "key_integrations": [
        "zendesk",
        "if",
        "webhook",
        "slack",
        "set",
        "stickyNote",
        "code"
      ],
      "trigger_type": "webhook",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.zendesk": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.slack": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates 1820 processes using zendesk, if, webhook",
      "analysis_timestamp": "2025-06-01T16:06:48.522002"
    },
    {
      "original_filename": "comm_create_create_manual_twist.json",
      "workflow_name": "Create and update a channel, and send a message on Twist",
      "suggested_filename": "comm_create_create_manual_twist.json",
      "category": "COMM",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "twist"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.twist": 3
      },
      "business_value": "Automates create processes using manualTrigger, twist",
      "analysis_timestamp": "2025-06-01T16:06:48.522213"
    },
    {
      "original_filename": "data_6_workflow_6_automate_googlesheets_cron_cron.json",
      "workflow_name": "data_6_workflow_6_automate_googlesheets_cron_cron",
      "suggested_filename": "data_6_workflow_6_automate_googlesheets_cron_cron.json",
      "category": "DATA",
      "business_function": "6",
      "key_integrations": [
        "googleSheets",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates 6 processes using googleSheets, cron",
      "analysis_timestamp": "2025-06-01T16:06:48.522525"
    },
    {
      "original_filename": "util_3409_workflow_3409_automate_n8nnodeslangchainmemorybufferwindow_executionda.json",
      "workflow_name": "util_3409_workflow_3409_automate_n8nnodeslangchainmemorybufferwindow_executionda",
      "suggested_filename": "util_3409_workflow_3409_automate_n8nnodeslangchainmemorybufferwindow_executionda.json",
      "category": "UTIL",
      "business_function": "3409",
      "key_integrations": [
        "httpRequest",
        "executeWorkflowTrigger",
        "code",
        "if",
        "stickyNote",
        "wait",
        "manualTrigger",
        "set",
        "aggregate",
        "executeWorkflow"
      ],
      "trigger_type": "manual",
      "complexity_score": 39,
      "complexity": "High",
      "total_nodes": 39,
      "node_types": {
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 12,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.memoryManager": 3,
        "n8n-nodes-base.executionData": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates 3409 processes using httpRequest, executeWorkflowTrigger, code",
      "analysis_timestamp": "2025-06-01T16:06:48.523020"
    },
    {
      "original_filename": "util_2764_workflow_2764_automate_httprequest_manual.json",
      "workflow_name": "util_2764_workflow_2764_automate_httprequest_manual",
      "suggested_filename": "util_2764_workflow_2764_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "2764",
      "key_integrations": [
        "manualTrigger",
        "extractFromFile",
        "googleDrive",
        "httpRequest",
        "stickyNote",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 2764 processes using manualTrigger, extractFromFile, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.523388"
    },
    {
      "original_filename": "ai_prod_automate_n8nnodeslangchaintextsplittertokensplitter_n8nnodeslangchainemb.json",
      "workflow_name": "Prod: Notion to Vector Store - Dimension 768",
      "suggested_filename": "ai_prod_automate_n8nnodeslangchaintextsplittertokensplitter_n8nnodeslangchainemb.json",
      "category": "AI",
      "business_function": "prod",
      "key_integrations": [
        "@n8n/langchain.textSplitterTokenSplitter",
        "notionTrigger",
        "notion",
        "filter",
        "summarize",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.embeddingsGoogleGemini",
        "@n8n/langchain.vectorStorePinecone"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.notionTrigger": 1,
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.summarize": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 1
      },
      "business_value": "Automates prod processes using @n8n/langchain.textSplitterTokenSplitter, notionTrigger, notion",
      "analysis_timestamp": "2025-06-01T16:06:48.523700"
    },
    {
      "original_filename": "comm_2212_workflow_2212_automate_gmail_httprequest_cron.json",
      "workflow_name": "comm_2212_workflow_2212_automate_gmail_httprequest_cron",
      "suggested_filename": "comm_2212_workflow_2212_automate_gmail_httprequest_cron.json",
      "category": "COMM",
      "business_function": "2212",
      "key_integrations": [
        "googleSheets",
        "if",
        "set",
        "scheduleTrigger",
        "httpRequest",
        "gmail",
        "formTrigger",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.googleSheets": 4,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates 2212 processes using googleSheets, if, set",
      "analysis_timestamp": "2025-06-01T16:06:48.524136"
    },
    {
      "original_filename": "ecommerce_create_create_manual_googlefirebasecloudfirestore.json",
      "workflow_name": "Create, update, and get a document in Google Cloud Firestore",
      "suggested_filename": "ecommerce_create_create_manual_googlefirebasecloudfirestore.json",
      "category": "ECOMMERCE",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "googleFirebaseCloudFirestore",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleFirebaseCloudFirestore": 3,
        "n8n-nodes-base.set": 2
      },
      "business_value": "Automates create processes using manualTrigger, googleFirebaseCloudFirestore, set",
      "analysis_timestamp": "2025-06-01T16:06:48.524424"
    },
    {
      "original_filename": "ai_proxmox_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchaino.json",
      "workflow_name": "ai_proxmox_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchaino",
      "suggested_filename": "ai_proxmox_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchaino.json",
      "category": "AI",
      "business_function": "proxmox",
      "key_integrations": [
        "httpRequest",
        "@n8n/langchain.toolHttpRequest",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.outputParserStructured",
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "telegramTrigger",
        "gmailTrigger",
        "webhook"
      ],
      "trigger_type": "chat",
      "complexity_score": 35,
      "complexity": "High",
      "total_nodes": 35,
      "node_types": {
        "n8n-nodes-base.httpRequest": 5,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 3,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 3,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 8,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.merge": 2,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates proxmox processes using httpRequest, @n8n/langchain.toolHttpRequest, @n8n/langchain.outputParserAutofixing",
      "analysis_timestamp": "2025-06-01T16:06:48.524847"
    },
    {
      "original_filename": "util_1068_workflow_1068_automate_filemaker_manual.json",
      "workflow_name": "util_1068_workflow_1068_automate_filemaker_manual",
      "suggested_filename": "util_1068_workflow_1068_automate_filemaker_manual.json",
      "category": "UTIL",
      "business_function": "1068",
      "key_integrations": [
        "filemaker",
        "manualTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.filemaker": 4,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates 1068 processes using filemaker, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.525134"
    },
    {
      "original_filename": "util_create_create_manual_n8n.json",
      "workflow_name": "Create Google Creds",
      "suggested_filename": "util_create_create_manual_n8n.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "set",
        "splitOut",
        "n8n",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates create processes using manualTrigger, set, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.525394"
    },
    {
      "original_filename": "ai_check_ai_process_hubspot_onesimpleapi.json",
      "workflow_name": "Check for valid Hubspot contact email",
      "suggested_filename": "ai_check_ai_process_hubspot_onesimpleapi.json",
      "category": "AI",
      "business_function": "check",
      "key_integrations": [
        "hubspotTrigger",
        "hubspot",
        "oneSimpleApi",
        "if",
        "slack"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.hubspotTrigger": 1,
        "n8n-nodes-base.hubspot": 1,
        "n8n-nodes-base.oneSimpleApi": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates check processes using hubspotTrigger, hubspot, oneSimpleApi",
      "analysis_timestamp": "2025-06-01T16:06:48.525653"
    },
    {
      "original_filename": "comm_2676_workflow_2676_automate_httprequest_webhook_webhook.json",
      "workflow_name": "comm_2676_workflow_2676_automate_httprequest_webhook_webhook",
      "suggested_filename": "comm_2676_workflow_2676_automate_httprequest_webhook_webhook.json",
      "category": "COMM",
      "business_function": "2676",
      "key_integrations": [
        "microsoftOutlookTrigger",
        "httpRequest",
        "code",
        "limit",
        "set",
        "if",
        "merge",
        "aggregate",
        "respondToWebhook",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 41,
      "complexity": "High",
      "total_nodes": 41,
      "node_types": {
        "n8n-nodes-base.microsoftOutlookTrigger": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.code": 4,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.set": 14,
        "n8n-nodes-base.if": 5,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates 2676 processes using microsoftOutlookTrigger, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:48.526170"
    },
    {
      "original_filename": "ai_blog_automate_n8nnodeslangchainchainllm_httprequest_cron_2.json",
      "workflow_name": "Blog Automation TEMPLATE",
      "suggested_filename": "ai_blog_automate_n8nnodeslangchainchainllm_httprequest_cron_2.json",
      "category": "AI",
      "business_function": "blog",
      "key_integrations": [
        "set",
        "scheduleTrigger",
        "manualTrigger",
        "googleSheets",
        "code",
        "@n8n/langchain.lmChatOpenAi",
        "if",
        "@n8n/langchain.chainLlm",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 35,
      "complexity": "High",
      "total_nodes": 35,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 6,
        "n8n-nodes-base.code": 5,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.if": 5,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 13
      },
      "business_value": "Automates blog processes using set, scheduleTrigger, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.526807"
    },
    {
      "original_filename": "ai_coinmarketcap_dexscan_agent_tool_automate_n8nnodeslangchainmemorybufferwindow.json",
      "workflow_name": "CoinMarketCap_DEXScan_Agent_Tool",
      "suggested_filename": "ai_coinmarketcap_dexscan_agent_tool_automate_n8nnodeslangchainmemorybufferwindow.json",
      "category": "AI",
      "business_function": "coinmarketcap",
      "key_integrations": [
        "executeWorkflowTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolHttpRequest",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 8,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates coinmarketcap processes using executeWorkflowTrigger, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.527586"
    },
    {
      "original_filename": "ai_building_ai_process_httprequest_extractfromfile_1.json",
      "workflow_name": "Building RAG Chatbot for Movie Recommendations with Qdrant and Open AI",
      "suggested_filename": "ai_building_ai_process_httprequest_extractfromfile_1.json",
      "category": "AI",
      "business_function": "building",
      "key_integrations": [
        "manualTrigger",
        "github",
        "extractFromFile",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterTokenSplitter",
        "@n8n/langchain.vectorStoreQdrant",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolWorkflow"
      ],
      "trigger_type": "chat",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.github": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates building processes using manualTrigger, github, extractFromFile",
      "analysis_timestamp": "2025-06-01T16:06:48.528151"
    },
    {
      "original_filename": "ai_openai_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvector_1.json",
      "workflow_name": "OpenAI Personal Shopper with RAG and WooCommerce",
      "suggested_filename": "ai_openai_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvector_1.json",
      "category": "AI",
      "business_function": "openai",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolCalculator",
        "set",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolVectorStore",
        "@n8n/langchain.vectorStoreQdrant",
        "@n8n/langchain.embeddingsOpenAi",
        "wooCommerceTool",
        "@n8n/langchain.informationExtractor"
      ],
      "trigger_type": "chat",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "n8n-nodes-base.wooCommerceTool": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.googleDrive": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates openai processes using @n8n/langchain.chatTrigger, @n8n/langchain.memoryBufferWindow, @n8n/langchain.toolCalculator",
      "analysis_timestamp": "2025-06-01T16:06:48.528618"
    },
    {
      "original_filename": "comm_2105_workflow_2105_automate_respondtowebhook_webhook_webhook.json",
      "workflow_name": "comm_2105_workflow_2105_automate_respondtowebhook_webhook_webhook",
      "suggested_filename": "comm_2105_workflow_2105_automate_respondtowebhook_webhook_webhook.json",
      "category": "COMM",
      "business_function": "2105",
      "key_integrations": [
        "manualTrigger",
        "googleSheets",
        "merge",
        "if",
        "filter",
        "discord",
        "stickyNote",
        "set",
        "webhook",
        "respondToWebhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.discord": 2,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1
      },
      "business_value": "Automates 2105 processes using manualTrigger, googleSheets, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.528987"
    },
    {
      "original_filename": "comm_server_monitor_gmail_httprequest_cron.json",
      "workflow_name": "Web Server Monitor.",
      "suggested_filename": "comm_server_monitor_gmail_httprequest_cron.json",
      "category": "COMM",
      "business_function": "server",
      "key_integrations": [
        "stickyNote",
        "scheduleTrigger",
        "googleSheets",
        "httpRequest",
        "gmail"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates server processes using stickyNote, scheduleTrigger, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.529301"
    },
    {
      "original_filename": "ai_vision_ai_process_n8nnodeslangchainoutputparserstructured_httprequest_1.json",
      "workflow_name": "Vision-Based AI Agent Scraper - with Google Sheets, ScrapingBee, and Gemini",
      "suggested_filename": "ai_vision_ai_process_n8nnodeslangchainoutputparserstructured_httprequest_1.json",
      "category": "AI",
      "business_function": "vision",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.lmChatGoogleGemini",
        "splitOut",
        "googleSheets",
        "stickyNote",
        "set",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.stickyNote": 15,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.markdown": 1
      },
      "business_value": "Automates vision processes using manualTrigger, httpRequest, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.529794"
    },
    {
      "original_filename": "ai_dashboard_ai_process_webhook_manual_webhook.json",
      "workflow_name": "Workflow dashboard with mermaid.js",
      "suggested_filename": "ai_dashboard_ai_process_webhook_manual_webhook.json",
      "category": "AI",
      "business_function": "dashboard",
      "key_integrations": [
        "manualTrigger",
        "respondToWebhook",
        "n8n",
        "aggregate",
        "switch",
        "set",
        "code",
        "stickyNote",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.n8n": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates dashboard processes using manualTrigger, respondToWebhook, n8n",
      "analysis_timestamp": "2025-06-01T16:06:48.530313"
    },
    {
      "original_filename": "util_3805_workflow_3805_automate_webhook_respondtowebhook_webhook.json",
      "workflow_name": "util_3805_workflow_3805_automate_webhook_respondtowebhook_webhook",
      "suggested_filename": "util_3805_workflow_3805_automate_webhook_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "3805",
      "key_integrations": [
        "webhook",
        "respondToWebhook",
        "set",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates 3805 processes using webhook, respondToWebhook, set",
      "analysis_timestamp": "2025-06-01T16:06:48.531023"
    },
    {
      "original_filename": "ai_genai_ai_process_n8nnodeslangchainmemorypostgreschat_httprequest_cron_2.json",
      "workflow_name": "RAG & GenAI App With WordPress Content",
      "suggested_filename": "ai_genai_ai_process_n8nnodeslangchainmemorypostgreschat_httprequest_cron_2.json",
      "category": "AI",
      "business_function": "genai",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterTokenSplitter",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryPostgresChat",
        "respondToWebhook",
        "set",
        "markdown",
        "postgres"
      ],
      "trigger_type": "chat",
      "complexity_score": 53,
      "complexity": "High",
      "total_nodes": 53,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 3,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 2,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryPostgresChat": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.markdown": 2,
        "n8n-nodes-base.postgres": 4,
        "n8n-nodes-base.aggregate": 4,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.wordpress": 2,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.supabase": 3,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase": 3,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates genai processes using manualTrigger, @n8n/langchain.embeddingsOpenAi, @n8n/langchain.documentDefaultDataLoader",
      "analysis_timestamp": "2025-06-01T16:06:48.531698"
    },
    {
      "original_filename": "ai_summarize_extract_httprequest_n8nnodeslangchainchainsummarization.json",
      "workflow_name": "Summarize Glassdoor Company Info with Google Gemini and Bright Data Web Scraper",
      "suggested_filename": "ai_summarize_extract_httprequest_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "summarize",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "if",
        "set",
        "stickyNote",
        "httpRequest",
        "wait",
        "@n8n/langchain.chainSummarization"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.wait": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1
      },
      "business_value": "Automates summarize processes using manualTrigger, @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.documentDefaultDataLoader",
      "analysis_timestamp": "2025-06-01T16:06:48.532084"
    },
    {
      "original_filename": "ai_extract_ai_process_n8nnodeslangchainchainllm_httprequest_2.json",
      "workflow_name": "Extract text from PDF and image using Vertex AI (Gemini) into CSV",
      "suggested_filename": "ai_extract_ai_process_n8nnodeslangchainchainllm_httprequest_2.json",
      "category": "AI",
      "business_function": "extract",
      "key_integrations": [
        "@n8n/langchain.lmChatGoogleGemini",
        "googleDriveTrigger",
        "switch",
        "googleDrive",
        "extractFromFile",
        "httpRequest",
        "convertToFile",
        "stickyNote",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.googleDrive": 4,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.convertToFile": 2,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates extract processes using @n8n/langchain.lmChatGoogleGemini, googleDriveTrigger, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.532470"
    },
    {
      "original_filename": "comm_analyze_crowdstrike_detections_search_for_iocs_in_virustotal_create_a_ticke.json",
      "workflow_name": "Analyze_Crowdstrike_Detections__search_for_IOCs_in_VirusTotal__create_a_ticket_in_Jira_and_post_a_message_in_Slack",
      "suggested_filename": "comm_analyze_crowdstrike_detections_search_for_iocs_in_virustotal_create_a_ticke.json",
      "category": "COMM",
      "business_function": "analyze",
      "key_integrations": [
        "scheduleTrigger",
        "itemLists",
        "httpRequest",
        "splitInBatches",
        "set",
        "jira",
        "slack",
        "stickyNote",
        "wait"
      ],
      "trigger_type": "cron",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.itemLists": 3,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.jira": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.wait": 1
      },
      "business_value": "Automates analyze processes using scheduleTrigger, itemLists, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.533405"
    },
    {
      "original_filename": "data_3218_workflow_3218_automate_httprequest_schedule_cron.json",
      "workflow_name": "data_3218_workflow_3218_automate_httprequest_schedule_cron",
      "suggested_filename": "data_3218_workflow_3218_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "3218",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "code",
        "splitOut",
        "googleSheets",
        "stickyNote",
        "scheduleTrigger",
        "set",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 3218 processes using manualTrigger, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:48.533824"
    },
    {
      "original_filename": "ai_load_automate_stopanderror_manual_2.json",
      "workflow_name": "Load Prompts from Github Repo and auto populate n8n expressions",
      "suggested_filename": "ai_load_automate_stopanderror_manual_2.json",
      "category": "AI",
      "business_function": "load",
      "key_integrations": [
        "manualTrigger",
        "github",
        "extractFromFile",
        "set",
        "code",
        "if",
        "stopAndError",
        "@n8n/langchain.agent",
        "stickyNote",
        "@n8n/langchain.lmChatOllama"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.github": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stopAndError": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 1
      },
      "business_value": "Automates load processes using manualTrigger, github, extractFromFile",
      "analysis_timestamp": "2025-06-01T16:06:48.534146"
    },
    {
      "original_filename": "ai_sheets_automate_postgres_n8nnodeslangchainmanualchat.json",
      "workflow_name": "SHEETS RAG",
      "suggested_filename": "ai_sheets_automate_postgres_n8nnodeslangchainmanualchat.json",
      "category": "AI",
      "business_function": "sheets",
      "key_integrations": [
        "code",
        "googleDriveTrigger",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.lmChatGoogleGemini",
        "set",
        "if",
        "postgres",
        "googleSheets",
        "executeWorkflowTrigger",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 2,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.postgres": 6,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.manualChatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates sheets processes using code, googleDriveTrigger, @n8n/langchain.toolWorkflow",
      "analysis_timestamp": "2025-06-01T16:06:48.534533"
    },
    {
      "original_filename": "ai_telegram_automate_n8nnodeslangchainchainretrievalqa_stopanderror_1.json",
      "workflow_name": "Telegram RAG pdf",
      "suggested_filename": "ai_telegram_automate_n8nnodeslangchainchainretrievalqa_stopanderror_1.json",
      "category": "AI",
      "business_function": "telegram",
      "key_integrations": [
        "telegramTrigger",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "stopAndError",
        "@n8n/langchain.chainRetrievalQa",
        "@n8n/langchain.retrieverVectorStore",
        "@n8n/langchain.vectorStorePinecone",
        "@n8n/langchain.lmChatGroq",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.stopAndError": 2,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 2,
        "@n8n/n8n-nodes-langchain.lmChatGroq": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.telegram": 3,
        "n8n-nodes-base.limit": 1
      },
      "business_value": "Automates telegram processes using telegramTrigger, @n8n/langchain.embeddingsOpenAi, @n8n/langchain.documentDefaultDataLoader",
      "analysis_timestamp": "2025-06-01T16:06:48.534848"
    },
    {
      "original_filename": "util_1826_workflow_1826_automate_spreadsheetfile_httprequest.json",
      "workflow_name": "util_1826_workflow_1826_automate_spreadsheetfile_httprequest",
      "suggested_filename": "util_1826_workflow_1826_automate_spreadsheetfile_httprequest.json",
      "category": "UTIL",
      "business_function": "1826",
      "key_integrations": [
        "stickyNote",
        "readBinaryFile",
        "manualTrigger",
        "writeBinaryFile",
        "googleDrive",
        "microsoftOneDrive",
        "httpRequest",
        "set",
        "ftp",
        "spreadsheetFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.stickyNote": 12,
        "n8n-nodes-base.readBinaryFile": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.writeBinaryFile": 1,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.microsoftOneDrive": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.ftp": 1,
        "n8n-nodes-base.spreadsheetFile": 2
      },
      "business_value": "Automates 1826 processes using stickyNote, readBinaryFile, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.535134"
    },
    {
      "original_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_8.json",
      "workflow_name": "AI Agent with charts capabilities using OpenAI Structured Output",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_8.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolWorkflow",
        "executeWorkflowTrigger",
        "httpRequest",
        "set",
        "stickyNote",
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1
      },
      "business_value": "Automates agent processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow, @n8n/langchain.toolWorkflow",
      "analysis_timestamp": "2025-06-01T16:06:48.535409"
    },
    {
      "original_filename": "data_anomaly_automate_httprequest_googlecloudstorage_1.json",
      "workflow_name": "[1/3 - anomaly detection] [1/2 - KNN classification] Batch upload dataset to Qdrant (crops dataset)",
      "suggested_filename": "data_anomaly_automate_httprequest_googlecloudstorage_1.json",
      "category": "DATA",
      "business_function": "anomaly",
      "key_integrations": [
        "manualTrigger",
        "googleCloudStorage",
        "set",
        "httpRequest",
        "code",
        "if",
        "stickyNote",
        "filter"
      ],
      "trigger_type": "manual",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleCloudStorage": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 12,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates anomaly processes using manualTrigger, googleCloudStorage, set",
      "analysis_timestamp": "2025-06-01T16:06:48.535756"
    },
    {
      "original_filename": "ai_daily_ai_process_gmail_httprequest_cron.json",
      "workflow_name": "ai_daily_ai_process_gmail_httprequest_cron",
      "suggested_filename": "ai_daily_ai_process_gmail_httprequest_cron.json",
      "category": "AI",
      "business_function": "daily",
      "key_integrations": [
        "gmail",
        "httpRequest",
        "set",
        "splitOut",
        "code",
        "html",
        "stickyNote",
        "openAi",
        "scheduleTrigger",
        "wait"
      ],
      "trigger_type": "cron",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.httpRequest": 6,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates daily processes using gmail, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.536071"
    },
    {
      "original_filename": "util_create_create_task_manual_zendesk.json",
      "workflow_name": "Create a ticket in Zendesk",
      "suggested_filename": "util_create_create_task_manual_zendesk.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "zendesk"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.zendesk": 1
      },
      "business_value": "Automates create processes using manualTrigger, zendesk",
      "analysis_timestamp": "2025-06-01T16:06:48.536272"
    },
    {
      "original_filename": "util_1418_workflow_1418_automate_itemlists_htmlextract_webhook.json",
      "workflow_name": "util_1418_workflow_1418_automate_itemlists_htmlextract_webhook",
      "suggested_filename": "util_1418_workflow_1418_automate_itemlists_htmlextract_webhook.json",
      "category": "UTIL",
      "business_function": "1418",
      "key_integrations": [
        "manualTrigger",
        "itemLists",
        "htmlExtract",
        "httpRequest",
        "set",
        "dateTime",
        "functionItem",
        "webhook",
        "respondToWebhook",
        "function"
      ],
      "trigger_type": "webhook",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.htmlExtract": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.function": 1
      },
      "business_value": "Automates 1418 processes using manualTrigger, itemLists, htmlExtract",
      "analysis_timestamp": "2025-06-01T16:06:48.536398"
    },
    {
      "original_filename": "biz_1794_workflow_1794_automate_spreadsheetfile_itemlists.json",
      "workflow_name": "biz_1794_workflow_1794_automate_spreadsheetfile_itemlists",
      "suggested_filename": "biz_1794_workflow_1794_automate_spreadsheetfile_itemlists.json",
      "category": "BIZ",
      "business_function": "1794",
      "key_integrations": [
        "manualTrigger",
        "salesforce",
        "merge",
        "if",
        "itemLists",
        "renameKeys",
        "set",
        "stickyNote",
        "httpRequest",
        "spreadsheetFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.salesforce": 3,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.renameKeys": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.spreadsheetFile": 1
      },
      "business_value": "Automates 1794 processes using manualTrigger, salesforce, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.536650"
    },
    {
      "original_filename": "data_syncro_sync_webhook_httprequest_webhook.json",
      "workflow_name": "Syncro Status Update Clockify",
      "suggested_filename": "data_syncro_sync_webhook_httprequest_webhook.json",
      "category": "DATA",
      "business_function": "syncro",
      "key_integrations": [
        "webhook",
        "clockify",
        "httpRequest",
        "if"
      ],
      "trigger_type": "webhook",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.clockify": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates syncro processes using webhook, clockify, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.536868"
    },
    {
      "original_filename": "ai_generate_generate_httprequest_n8nnodeslangchainchainsummarization.json",
      "workflow_name": "Generate Company Stories from LinkedIn with Bright Data & Google Gemini",
      "suggested_filename": "ai_generate_generate_httprequest_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "generate",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "if",
        "set",
        "httpRequest",
        "stickyNote",
        "@n8n/langchain.informationExtractor",
        "@n8n/langchain.chainSummarization"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.wait": 1
      },
      "business_value": "Automates generate processes using manualTrigger, @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.documentDefaultDataLoader",
      "analysis_timestamp": "2025-06-01T16:06:48.537230"
    },
    {
      "original_filename": "ai_yogiai_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainlm.json",
      "workflow_name": "YogiAI",
      "suggested_filename": "ai_yogiai_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainlm.json",
      "category": "AI",
      "business_function": "yogiai",
      "key_integrations": [
        "@n8n/langchain.lmChatAzureOpenAi",
        "googleSheets",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.agent",
        "googleSheetsTool",
        "splitOut",
        "scheduleTrigger",
        "@n8n/langchain.chainLlm",
        "code"
      ],
      "trigger_type": "chat",
      "complexity_score": 31,
      "complexity": "High",
      "total_nodes": 31,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi": 7,
        "n8n-nodes-base.googleSheets": 3,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.googleSheetsTool": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 4,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 6
      },
      "business_value": "Automates yogiai processes using @n8n/langchain.lmChatAzureOpenAi, googleSheets, @n8n/langchain.outputParserAutofixing",
      "analysis_timestamp": "2025-06-01T16:06:48.537607"
    },
    {
      "original_filename": "ai_1957_workflow_1957_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "workflow_name": "ai_1957_workflow_1957_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl",
      "suggested_filename": "ai_1957_workflow_1957_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "category": "AI",
      "business_function": "1957",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "@n8n/langchain.chainLlm",
        "set",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.outputParserStructured"
      ],
      "trigger_type": "chat",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1
      },
      "business_value": "Automates 1957 processes using manualTrigger, stickyNote, @n8n/langchain.chainLlm",
      "analysis_timestamp": "2025-06-01T16:06:48.537879"
    },
    {
      "original_filename": "ai_parents_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalcula.json",
      "workflow_name": "Parents smart bot",
      "suggested_filename": "ai_parents_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalcula.json",
      "category": "AI",
      "business_function": "parents",
      "key_integrations": [
        "telegramTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.toolHttpRequest",
        "telegram",
        "@n8n/langchain.openAi",
        "@n8n/langchain.toolCalculator",
        "set",
        "switch",
        "@n8n/langchain.toolWikipedia"
      ],
      "trigger_type": "chat",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 4,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1,
        "n8n-nodes-base.telegram": 3,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates parents processes using telegramTrigger, @n8n/langchain.agent, @n8n/langchain.toolWorkflow",
      "analysis_timestamp": "2025-06-01T16:06:48.538291"
    },
    {
      "original_filename": "ai_3634_workflow_3634_automate_n8nnodeslangchainmcp_n8nnodeslangchainworkflow.json",
      "workflow_name": "ai_3634_workflow_3634_automate_n8nnodeslangchainmcp_n8nnodeslangchainworkflow",
      "suggested_filename": "ai_3634_workflow_3634_automate_n8nnodeslangchainmcp_n8nnodeslangchainworkflow.json",
      "category": "AI",
      "business_function": "3634",
      "key_integrations": [
        "stickyNote",
        "executeWorkflowTrigger",
        "@n8n/langchain.mcpTrigger",
        "googleDrive",
        "switch",
        "extractFromFile",
        "set",
        "@n8n/langchain.toolWorkflow",
        "googleDriveTool",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.mcpTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.extractFromFile": 2,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.googleDriveTool": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2
      },
      "business_value": "Automates 3634 processes using stickyNote, executeWorkflowTrigger, @n8n/langchain.mcpTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.538636"
    },
    {
      "original_filename": "comm_positive_create_slack_googlecloudnaturallanguage.json",
      "workflow_name": "comm_positive_create_slack_googlecloudnaturallanguage",
      "suggested_filename": "comm_positive_create_slack_googlecloudnaturallanguage.json",
      "category": "COMM",
      "business_function": "positive",
      "key_integrations": [
        "typeformTrigger",
        "googleCloudNaturalLanguage",
        "if",
        "notion",
        "slack",
        "trello"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.googleCloudNaturalLanguage": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.trello": 1
      },
      "business_value": "Automates positive processes using typeformTrigger, googleCloudNaturalLanguage, if",
      "analysis_timestamp": "2025-06-01T16:06:48.538876"
    },
    {
      "original_filename": "ai_searchapi_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincha.json",
      "workflow_name": "SearchApi AI Agent",
      "suggested_filename": "ai_searchapi_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincha.json",
      "category": "AI",
      "business_function": "searchapi",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.agent",
        "stickyNote",
        "@searchapi/searchapi.searchApiTool",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 2,
        "@searchapi/n8n-nodes-searchapi.searchApiTool": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates searchapi processes using @n8n/langchain.chatTrigger, @n8n/langchain.memoryBufferWindow, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.539144"
    },
    {
      "original_filename": "data_2901_workflow_2901_automate_httprequest_notion.json",
      "workflow_name": "data_2901_workflow_2901_automate_httprequest_notion",
      "suggested_filename": "data_2901_workflow_2901_automate_httprequest_notion.json",
      "category": "DATA",
      "business_function": "2901",
      "key_integrations": [
        "notionTrigger",
        "notion",
        "code",
        "splitOut",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.notionTrigger": 1,
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates 2901 processes using notionTrigger, notion, code",
      "analysis_timestamp": "2025-06-01T16:06:48.539399"
    },
    {
      "original_filename": "ai_customer_extract_executeworkflow_httprequest.json",
      "workflow_name": "ai_customer_extract_executeworkflow_httprequest",
      "suggested_filename": "ai_customer_extract_executeworkflow_httprequest.json",
      "category": "AI",
      "business_function": "customer",
      "key_integrations": [
        "manualTrigger",
        "set",
        "html",
        "splitOut",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.embeddingsOpenAi",
        "httpRequest",
        "@n8n/langchain.lmChatOpenAi",
        "filter"
      ],
      "trigger_type": "chat",
      "complexity_score": 37,
      "complexity": "High",
      "total_nodes": 37,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.splitOut": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "n8n-nodes-base.httpRequest": 4,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 13,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 1,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1
      },
      "business_value": "Automates customer processes using manualTrigger, set, html",
      "analysis_timestamp": "2025-06-01T16:06:48.539876"
    },
    {
      "original_filename": "util_509_workflow_509_automate_awssns.json",
      "workflow_name": "util_509_workflow_509_automate_awssns",
      "suggested_filename": "util_509_workflow_509_automate_awssns.json",
      "category": "UTIL",
      "business_function": "509",
      "key_integrations": [
        "awsSnsTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.awsSnsTrigger": 1
      },
      "business_value": "Automates 509 processes using awsSnsTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.540129"
    },
    {
      "original_filename": "data_anomaly_automate_httprequest_executeworkflow_2.json",
      "workflow_name": "[3/3] Anomaly detection tool (crops dataset)",
      "suggested_filename": "data_anomaly_automate_httprequest_executeworkflow_2.json",
      "category": "DATA",
      "business_function": "anomaly",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "code",
        "set",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.executeWorkflowTrigger": 1
      },
      "business_value": "Automates anomaly processes using stickyNote, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:48.540406"
    },
    {
      "original_filename": "ai_whisper_automate_notion_googledrive_2.json",
      "workflow_name": "Whisper Transkription copy",
      "suggested_filename": "ai_whisper_automate_notion_googledrive_2.json",
      "category": "AI",
      "business_function": "whisper",
      "key_integrations": [
        "googleDriveTrigger",
        "googleDrive",
        "notion",
        "@n8n/langchain.openAi",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.notion": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates whisper processes using googleDriveTrigger, googleDrive, notion",
      "analysis_timestamp": "2025-06-01T16:06:48.540655"
    },
    {
      "original_filename": "ai_query_ai_process_httprequest_manual.json",
      "workflow_name": "ai_query_ai_process_httprequest_manual",
      "suggested_filename": "ai_query_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "query",
      "key_integrations": [
        "manualTrigger",
        "set",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates query processes using manualTrigger, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.540889"
    },
    {
      "original_filename": "util_creating_automate_zoom_manual.json",
      "workflow_name": "Creating a meeting with the Zoom node",
      "suggested_filename": "util_creating_automate_zoom_manual.json",
      "category": "UTIL",
      "business_function": "creating",
      "key_integrations": [
        "manualTrigger",
        "zoom"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.zoom": 1
      },
      "business_value": "Automates creating processes using manualTrigger, zoom",
      "analysis_timestamp": "2025-06-01T16:06:48.541073"
    },
    {
      "original_filename": "ai_send_ai_process_httprequest_telegram_cron.json",
      "workflow_name": "Send a cocktail recipe every day via a Telegram",
      "suggested_filename": "ai_send_ai_process_httprequest_telegram_cron.json",
      "category": "AI",
      "business_function": "send",
      "key_integrations": [
        "telegram",
        "cron",
        "httpRequest"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates send processes using telegram, cron, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.541261"
    },
    {
      "original_filename": "ai_handling_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserst.json",
      "workflow_name": "ai_handling_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserst",
      "suggested_filename": "ai_handling_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserst.json",
      "category": "AI",
      "business_function": "handling",
      "key_integrations": [
        "extractFromFile",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "formTrigger",
        "airtable",
        "@n8n/langchain.textClassifier",
        "httpRequest",
        "form",
        "stickyNote",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.formTrigger": 2,
        "n8n-nodes-base.airtable": 2,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.form": 4,
        "n8n-nodes-base.stickyNote": 8,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates handling processes using extractFromFile, @n8n/langchain.lmChatOpenAi, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.541675"
    },
    {
      "original_filename": "ai_2344_workflow_2344_automate_n8nnodeslangchainvectorstoreinmemory_n8nnodeslang.json",
      "workflow_name": "ai_2344_workflow_2344_automate_n8nnodeslangchainvectorstoreinmemory_n8nnodeslang",
      "suggested_filename": "ai_2344_workflow_2344_automate_n8nnodeslangchainvectorstoreinmemory_n8nnodeslang.json",
      "category": "AI",
      "business_function": "2344",
      "key_integrations": [
        "manualTrigger",
        "googleDrive",
        "editImage",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "stickyNote",
        "merge",
        "set",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.vectorStoreInMemory"
      ],
      "trigger_type": "manual",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.editImage": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates 2344 processes using manualTrigger, googleDrive, editImage",
      "analysis_timestamp": "2025-06-01T16:06:48.542089"
    },
    {
      "original_filename": "ai_customer_ai_process_whatsapp_n8nnodeslangchainmemorypostgreschat.json",
      "workflow_name": "AI Customer-Support Assistant · WhatsApp Ready · Works for Any Business",
      "suggested_filename": "ai_customer_ai_process_whatsapp_n8nnodeslangchainmemorypostgreschat.json",
      "category": "AI",
      "business_function": "customer",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.toolHttpRequest",
        "@n8n/langchain.lmChatOpenAi",
        "whatsAppTrigger",
        "code",
        "if",
        "whatsApp",
        "@n8n/langchain.memoryPostgresChat",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.whatsAppTrigger": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.whatsApp": 2,
        "@n8n/n8n-nodes-langchain.memoryPostgresChat": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates customer processes using @n8n/langchain.agent, @n8n/langchain.toolHttpRequest, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.542476"
    },
    {
      "original_filename": "ai_build_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "workflow_name": "Build an OpenAI Assistant with Google Drive Integration",
      "suggested_filename": "ai_build_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "category": "AI",
      "business_function": "build",
      "key_integrations": [
        "manualTrigger",
        "googleDrive",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.openAi",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.openAi": 4,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates build processes using manualTrigger, googleDrive, @n8n/langchain.chatTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.542782"
    },
    {
      "original_filename": "ai_agent_automate_n8nnodeslangchainmemorybufferwindow_airtable_1.json",
      "workflow_name": "DSP Agent",
      "suggested_filename": "ai_agent_automate_n8nnodeslangchainmemorybufferwindow_airtable_1.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "telegramTrigger",
        "switch",
        "set",
        "telegram",
        "@n8n/langchain.openAi",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.toolCalculator",
        "@n8n/langchain.toolWikipedia",
        "airtable"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.telegram": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.airtableTool": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1
      },
      "business_value": "Automates agent processes using telegramTrigger, switch, set",
      "analysis_timestamp": "2025-06-01T16:06:48.543137"
    },
    {
      "original_filename": "biz_3033_workflow_3033_automate_httprequest_salesforce.json",
      "workflow_name": "biz_3033_workflow_3033_automate_httprequest_salesforce",
      "suggested_filename": "biz_3033_workflow_3033_automate_httprequest_salesforce.json",
      "category": "BIZ",
      "business_function": "3033",
      "key_integrations": [
        "executeWorkflowTrigger",
        "httpRequest",
        "set",
        "code",
        "stickyNote",
        "salesforce",
        "splitOut",
        "merge",
        "aggregate"
      ],
      "trigger_type": "manual",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.salesforce": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.aggregate": 2
      },
      "business_value": "Automates 3033 processes using executeWorkflowTrigger, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.543530"
    },
    {
      "original_filename": "util_2153_workflow_2153_automate_webhook_httprequest_webhook.json",
      "workflow_name": "util_2153_workflow_2153_automate_webhook_httprequest_webhook",
      "suggested_filename": "util_2153_workflow_2153_automate_webhook_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "2153",
      "key_integrations": [
        "webhook",
        "httpRequest",
        "stickyNote",
        "set"
      ],
      "trigger_type": "webhook",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.set": 2
      },
      "business_value": "Automates 2153 processes using webhook, httpRequest, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.543799"
    },
    {
      "original_filename": "ai_integrating_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainc_2.json",
      "workflow_name": "Integrating AI with Open-Meteo API for Enhanced Weather Forecasting",
      "suggested_filename": "ai_integrating_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainc_2.json",
      "category": "AI",
      "business_function": "integrating",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "stickyNote",
        "@n8n/langchain.agent",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolHttpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.stickyNote": 6,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 2
      },
      "business_value": "Automates integrating processes using @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOpenAi, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.544084"
    },
    {
      "original_filename": "comm_telegram_automate_splitinbatches_rssfeedread_cron.json",
      "workflow_name": "rss-telegram",
      "suggested_filename": "comm_telegram_automate_splitinbatches_rssfeedread_cron.json",
      "category": "COMM",
      "business_function": "telegram",
      "key_integrations": [
        "splitInBatches",
        "function",
        "cron",
        "if",
        "telegram",
        "rssFeedRead",
        "manualTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.function": 4,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.telegram": 4,
        "n8n-nodes-base.rssFeedRead": 2,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates telegram processes using splitInBatches, function, cron",
      "analysis_timestamp": "2025-06-01T16:06:48.544384"
    },
    {
      "original_filename": "ai_extract_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr_2.json",
      "workflow_name": "Extract spend details (template)",
      "suggested_filename": "ai_extract_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr_2.json",
      "category": "AI",
      "business_function": "extract",
      "key_integrations": [
        "gmailTrigger",
        "extractFromFile",
        "html",
        "splitOut",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.lmChatGoogleGemini",
        "googleSheets",
        "set",
        "switch",
        "@n8n/langchain.lmChatGroq"
      ],
      "trigger_type": "chat",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 2,
        "n8n-nodes-base.extractFromFile": 2,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 2,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.lmChatGroq": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates extract processes using gmailTrigger, extractFromFile, html",
      "analysis_timestamp": "2025-06-01T16:06:48.544772"
    },
    {
      "original_filename": "data_1489_workflow_1489_automate_httprequest_webhook_webhook.json",
      "workflow_name": "data_1489_workflow_1489_automate_httprequest_webhook_webhook",
      "suggested_filename": "data_1489_workflow_1489_automate_httprequest_webhook_webhook.json",
      "category": "DATA",
      "business_function": "1489",
      "key_integrations": [
        "webhook",
        "set",
        "googleSheets",
        "if",
        "httpRequest"
      ],
      "trigger_type": "webhook",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 1489 processes using webhook, set, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.544907"
    },
    {
      "original_filename": "util_automate_httprequest_manual.json",
      "workflow_name": "My workflow 6",
      "suggested_filename": "util_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "key_integrations": [
        "manualTrigger",
        "@custom-js/pdf-toolkit.ExtractPages",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@custom-js/n8n-nodes-pdf-toolkit.ExtractPages": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates automate processes using manualTrigger, @custom-js/pdf-toolkit.ExtractPages, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.545130"
    },
    {
      "original_filename": "ai_agent_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalculato.json",
      "workflow_name": "Agent Access Control Template",
      "suggested_filename": "ai_agent_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalculato.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.code",
        "telegramTrigger",
        "set",
        "airtable",
        "executeWorkflowTrigger",
        "@n8n/langchain.toolCode",
        "@n8n/langchain.toolCalculator",
        "@n8n/langchain.toolWikipedia"
      ],
      "trigger_type": "chat",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.code": 2,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolCode": 2,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 2,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 13,
        "n8n-nodes-base.telegram": 2
      },
      "business_value": "Automates agent processes using @n8n/langchain.memoryBufferWindow, @n8n/langchain.lmChatOpenAi, @n8n/langchain.code",
      "analysis_timestamp": "2025-06-01T16:06:48.545456"
    },
    {
      "original_filename": "util_example_backup_movebinarydata_httprequest_cron.json",
      "workflow_name": "Example - Backup n8n to Nextcloud",
      "suggested_filename": "util_example_backup_movebinarydata_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "example",
      "key_integrations": [
        "manualTrigger",
        "cron",
        "merge",
        "moveBinaryData",
        "function",
        "httpRequest",
        "functionItem",
        "nextCloud"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.moveBinaryData": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.nextCloud": 1
      },
      "business_value": "Automates example processes using manualTrigger, cron, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.545696"
    },
    {
      "original_filename": "ai_scrape_ai_process_n8nnodeslangchainmemorybufferwindow_httprequest.json",
      "workflow_name": "Scrape Web Data with Bright Data, Google Gemini and MCP Automated AI Agent",
      "suggested_filename": "ai_scrape_ai_process_n8nnodeslangchainmemorybufferwindow_httprequest.json",
      "category": "AI",
      "business_function": "scrape",
      "key_integrations": [
        "@n8n/langchain.agent",
        "manualTrigger",
        "mcp.mcpClient",
        "stickyNote",
        "mcp.mcpClientTool",
        "httpRequest",
        "set",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.memoryBufferWindow",
        "function"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-mcp.mcpClient": 2,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-mcp.mcpClientTool": 3,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.readWriteFile": 1
      },
      "business_value": "Automates scrape processes using @n8n/langchain.agent, manualTrigger, mcp.mcpClient",
      "analysis_timestamp": "2025-06-01T16:06:48.545986"
    },
    {
      "original_filename": "comm_1999_workflow_1999_automate_telegram_n8n.json",
      "workflow_name": "comm_1999_workflow_1999_automate_telegram_n8n",
      "suggested_filename": "comm_1999_workflow_1999_automate_telegram_n8n.json",
      "category": "COMM",
      "business_function": "1999",
      "key_integrations": [
        "stickyNote",
        "filter",
        "n8n",
        "switch",
        "telegramTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.n8n": 4,
        "n8n-nodes-base.switch": 3,
        "n8n-nodes-base.telegramTrigger": 1
      },
      "business_value": "Automates 1999 processes using stickyNote, filter, n8n",
      "analysis_timestamp": "2025-06-01T16:06:48.546243"
    },
    {
      "original_filename": "ai_create_ai_process_mailchimp_airtable_cron.json",
      "workflow_name": "Create entry in Mailchimp from Airtable",
      "suggested_filename": "ai_create_ai_process_mailchimp_airtable_cron.json",
      "category": "AI",
      "business_function": "create",
      "key_integrations": [
        "cron",
        "airtable",
        "mailchimp"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.mailchimp": 1
      },
      "business_value": "Automates create processes using cron, airtable, mailchimp",
      "analysis_timestamp": "2025-06-01T16:06:48.546433"
    },
    {
      "original_filename": "util_backup_backup_splitinbatches_httprequest_cron_2.json",
      "workflow_name": "Backup workflows to git repository on Gitea",
      "suggested_filename": "util_backup_backup_splitinbatches_httprequest_cron_2.json",
      "category": "UTIL",
      "business_function": "backup",
      "key_integrations": [
        "set",
        "n8n",
        "scheduleTrigger",
        "stickyNote",
        "code",
        "if",
        "httpRequest",
        "splitInBatches"
      ],
      "trigger_type": "cron",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.splitInBatches": 1
      },
      "business_value": "Automates backup processes using set, n8n, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.546770"
    },
    {
      "original_filename": "ai_3790_workflow_3790_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_3790_workflow_3790_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_3790_workflow_3790_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "3790",
      "key_integrations": [
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.agent",
        "stickyNote",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.lmChatOpenAi",
        "html",
        "emailSend",
        "code",
        "@n8n/langchain.toolThink",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 45,
      "complexity": "High",
      "total_nodes": 45,
      "node_types": {
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 12,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.code": 6,
        "@n8n/n8n-nodes-langchain.toolThink": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.httpRequest": 6,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.merge": 2,
        "@n8n/n8n-nodes-langchain.openAi": 3,
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 2,
        "n8n-nodes-base.formTrigger": 1
      },
      "business_value": "Automates 3790 processes using @n8n/langchain.memoryBufferWindow, @n8n/langchain.agent, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.547429"
    },
    {
      "original_filename": "ai_essential_ai_process_splitinbatches_httprequest.json",
      "workflow_name": "💡🌐 Essential Multipage Website Scraper with Jina.ai",
      "suggested_filename": "ai_essential_ai_process_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "essential",
      "key_integrations": [
        "stickyNote",
        "manualTrigger",
        "splitInBatches",
        "wait",
        "limit",
        "httpRequest",
        "xml",
        "splitOut",
        "filter",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.xml": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates essential processes using stickyNote, manualTrigger, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.547771"
    },
    {
      "original_filename": "ai_create_ai_process_mailerlite_manual.json",
      "workflow_name": "Create, update and get a subscriber using the MailerLite node",
      "suggested_filename": "ai_create_ai_process_mailerlite_manual.json",
      "category": "AI",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "mailerLite"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.mailerLite": 3
      },
      "business_value": "Automates create processes using manualTrigger, mailerLite",
      "analysis_timestamp": "2025-06-01T16:06:48.547989"
    },
    {
      "original_filename": "biz_create_create_task_onfleet_quickbooks.json",
      "workflow_name": "Create a QuickBooks invoice on a new Onfleet Task creation",
      "suggested_filename": "biz_create_create_task_onfleet_quickbooks.json",
      "category": "BIZ",
      "business_function": "create",
      "key_integrations": [
        "onfleetTrigger",
        "quickbooks"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.onfleetTrigger": 1,
        "n8n-nodes-base.quickbooks": 1
      },
      "business_value": "Automates create processes using onfleetTrigger, quickbooks",
      "analysis_timestamp": "2025-06-01T16:06:48.548212"
    },
    {
      "original_filename": "comm_suspicious_login_detection_automate_postgres_slack_webhook.json",
      "workflow_name": "Suspicious_login_detection",
      "suggested_filename": "comm_suspicious_login_detection_automate_postgres_slack_webhook.json",
      "category": "COMM",
      "business_function": "suspicious",
      "key_integrations": [
        "set",
        "webhook",
        "if",
        "postgres",
        "httpRequest",
        "merge",
        "html",
        "gmail",
        "slack",
        "switch"
      ],
      "trigger_type": "webhook",
      "complexity_score": 43,
      "complexity": "High",
      "total_nodes": 43,
      "node_types": {
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.if": 6,
        "n8n-nodes-base.postgres": 2,
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.noOp": 6,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates suspicious processes using set, webhook, if",
      "analysis_timestamp": "2025-06-01T16:06:48.548791"
    },
    {
      "original_filename": "util_437_workflow_437_automate_httprequest_readbinaryfile.json",
      "workflow_name": "util_437_workflow_437_automate_httprequest_readbinaryfile",
      "suggested_filename": "util_437_workflow_437_automate_httprequest_readbinaryfile.json",
      "category": "UTIL",
      "business_function": "437",
      "key_integrations": [
        "readBinaryFile",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.readBinaryFile": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 437 processes using readBinaryFile, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.549077"
    },
    {
      "original_filename": "util_949_workflow_949_automate_quickbooks.json",
      "workflow_name": "util_949_workflow_949_automate_quickbooks",
      "suggested_filename": "util_949_workflow_949_automate_quickbooks.json",
      "category": "UTIL",
      "business_function": "949",
      "key_integrations": [
        "quickbooks"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.quickbooks": 3
      },
      "business_value": "Automates 949 processes using quickbooks",
      "analysis_timestamp": "2025-06-01T16:06:48.549278"
    },
    {
      "original_filename": "util_enhance_automate_httprequest_webhook_webhook_1.json",
      "workflow_name": "util_enhance_automate_httprequest_webhook_webhook_1",
      "suggested_filename": "util_enhance_automate_httprequest_webhook_webhook_1.json",
      "category": "UTIL",
      "business_function": "enhance",
      "key_integrations": [
        "set",
        "executeWorkflow",
        "httpRequest",
        "switch",
        "stickyNote",
        "respondToWebhook",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.executeWorkflow": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.respondToWebhook": 3,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates enhance processes using set, executeWorkflow, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.549709"
    },
    {
      "original_filename": "comm_send_automate_microsoftoutlook_telegram.json",
      "workflow_name": "send file to kindle through telegram bot",
      "suggested_filename": "comm_send_automate_microsoftoutlook_telegram.json",
      "category": "COMM",
      "business_function": "send",
      "key_integrations": [
        "telegramTrigger",
        "if",
        "telegram",
        "code",
        "microsoftOutlook",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.microsoftOutlook": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates send processes using telegramTrigger, if, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.549986"
    },
    {
      "original_filename": "ai_email_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchaintextsplittertoken_1.json",
      "workflow_name": "Email AI Auto-responder. Summerize and send email",
      "suggested_filename": "ai_email_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchaintextsplittertoken_1.json",
      "category": "AI",
      "business_function": "email",
      "key_integrations": [
        "emailReadImap",
        "markdown",
        "@n8n/langchain.lmChatOpenAi",
        "emailSend",
        "@n8n/langchain.vectorStoreQdrant",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.textClassifier",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.agent",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "email",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.markdown": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 4,
        "n8n-nodes-base.emailSend": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleDrive": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates email processes using emailReadImap, markdown, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.550379"
    },
    {
      "original_filename": "analytics_umami_automate_httprequest_schedule_cron_1.json",
      "workflow_name": "Umami analytics template",
      "suggested_filename": "analytics_umami_automate_httprequest_schedule_cron_1.json",
      "category": "ANALYTICS",
      "business_function": "umami",
      "key_integrations": [
        "manualTrigger",
        "scheduleTrigger",
        "httpRequest",
        "stickyNote",
        "code",
        "baserow"
      ],
      "trigger_type": "cron",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.baserow": 1
      },
      "business_value": "Automates umami processes using manualTrigger, scheduleTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.550690"
    },
    {
      "original_filename": "util_create_create_task_onfleet_googledrive.json",
      "workflow_name": "Create an Onfleet task when a file in Google Drive is updated",
      "suggested_filename": "util_create_create_task_onfleet_googledrive.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "googleDriveTrigger",
        "onfleet"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.onfleet": 1
      },
      "business_value": "Automates create processes using googleDriveTrigger, onfleet",
      "analysis_timestamp": "2025-06-01T16:06:48.550889"
    },
    {
      "original_filename": "ai_automate_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserst.json",
      "workflow_name": "ai_automate_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserst",
      "suggested_filename": "ai_automate_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserst.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.outputParserStructured",
        "set",
        "splitOut",
        "googleDrive",
        "editImage",
        "stickyNote",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatGoogleGemini"
      ],
      "trigger_type": "chat",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.editImage": 1,
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1
      },
      "business_value": "Automates automate processes using manualTrigger, @n8n/langchain.outputParserStructured, set",
      "analysis_timestamp": "2025-06-01T16:06:48.551152"
    },
    {
      "original_filename": "ai_email_ai_process_emailsend_n8nnodeslangchainchainsummarization_1.json",
      "workflow_name": "AI Email processing autoresponder with approval (Yes/No)",
      "suggested_filename": "ai_email_ai_process_emailsend_n8nnodeslangchainchainsummarization_1.json",
      "category": "AI",
      "business_function": "email",
      "key_integrations": [
        "emailReadImap",
        "markdown",
        "@n8n/langchain.lmChatOpenAi",
        "emailSend",
        "@n8n/langchain.vectorStoreQdrant",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.agent",
        "set",
        "if"
      ],
      "trigger_type": "email",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.markdown": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.emailSend": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates email processes using emailReadImap, markdown, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.551410"
    },
    {
      "original_filename": "ai_agent_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "workflow_name": "SQL agent with memory",
      "suggested_filename": "ai_agent_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.lmChatOpenAi",
        "manualTrigger",
        "httpRequest",
        "compression",
        "readWriteFile",
        "stickyNote",
        "set",
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.compression": 1,
        "n8n-nodes-base.readWriteFile": 2,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1
      },
      "business_value": "Automates agent processes using @n8n/langchain.memoryBufferWindow, @n8n/langchain.lmChatOpenAi, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.551687"
    },
    {
      "original_filename": "ai_2651_workflow_2651_automate_postgres_supabase_webhook.json",
      "workflow_name": "ai_2651_workflow_2651_automate_postgres_supabase_webhook",
      "suggested_filename": "ai_2651_workflow_2651_automate_postgres_supabase_webhook.json",
      "category": "AI",
      "business_function": "2651",
      "key_integrations": [
        "@n8n/langchain.openAi",
        "postgres",
        "postgresTool",
        "httpRequest",
        "supabase",
        "stickyNote",
        "set",
        "webhook",
        "if"
      ],
      "trigger_type": "webhook",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.postgres": 1,
        "n8n-nodes-base.postgresTool": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.supabase": 1,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 2651 processes using @n8n/langchain.openAi, postgres, postgresTool",
      "analysis_timestamp": "2025-06-01T16:06:48.552046"
    },
    {
      "original_filename": "comm_telegram_automate_openweathermap_telegram.json",
      "workflow_name": "Telegram Weather Workflow",
      "suggested_filename": "comm_telegram_automate_openweathermap_telegram.json",
      "category": "COMM",
      "business_function": "telegram",
      "key_integrations": [
        "telegramTrigger",
        "openWeatherMap",
        "telegram"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.openWeatherMap": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates telegram processes using telegramTrigger, openWeatherMap, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.552279"
    },
    {
      "original_filename": "ai_2323_workflow_2323_automate_slack_n8nnodeslangchainchainllm_cron.json",
      "workflow_name": "ai_2323_workflow_2323_automate_slack_n8nnodeslangchainchainllm_cron",
      "suggested_filename": "ai_2323_workflow_2323_automate_slack_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "2323",
      "key_integrations": [
        "slack",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "scheduleTrigger",
        "stickyNote",
        "set",
        "if",
        "linear",
        "@n8n/langchain.chainLlm",
        "merge"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.slack": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.linear": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.aggregate": 1
      },
      "business_value": "Automates 2323 processes using slack, @n8n/langchain.lmChatOpenAi, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.552627"
    },
    {
      "original_filename": "ai_neurochainai_ai_process_httprequest_telegram_2.json",
      "workflow_name": "NeurochainAI Basic API Integration",
      "suggested_filename": "ai_neurochainai_ai_process_httprequest_telegram_2.json",
      "category": "AI",
      "business_function": "neurochainai",
      "key_integrations": [
        "telegramTrigger",
        "code",
        "httpRequest",
        "telegram",
        "stickyNote",
        "switch"
      ],
      "trigger_type": "manual",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.telegram": 11,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.switch": 3
      },
      "business_value": "Automates neurochainai processes using telegramTrigger, code, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.553071"
    },
    {
      "original_filename": "ai_analyze_analyze_gmail_httprequest_3.json",
      "workflow_name": "🎥 Analyze YouTube Video for Summaries, Transcripts & Content + Google Gemini AI",
      "suggested_filename": "ai_analyze_analyze_gmail_httprequest_3.json",
      "category": "AI",
      "business_function": "analyze",
      "key_integrations": [
        "set",
        "stickyNote",
        "httpRequest",
        "code",
        "googleDrive",
        "gmail",
        "markdown",
        "form",
        "formTrigger",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 33,
      "complexity": "High",
      "total_nodes": 33,
      "node_types": {
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.stickyNote": 18,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.form": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates analyze processes using set, stickyNote, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.553560"
    },
    {
      "original_filename": "ai_learn_read_n8nnodeslangchainchainllm_emailsend.json",
      "workflow_name": "ai_learn_read_n8nnodeslangchainchainllm_emailsend",
      "suggested_filename": "ai_learn_read_n8nnodeslangchainchainllm_emailsend.json",
      "category": "AI",
      "business_function": "learn",
      "key_integrations": [
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.chainLlm",
        "hackerNews",
        "httpRequest",
        "aggregate",
        "splitOut",
        "formTrigger",
        "emailSend",
        "markdown"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.hackerNews": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates learn processes using @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.chainLlm, hackerNews",
      "analysis_timestamp": "2025-06-01T16:06:48.553866"
    },
    {
      "original_filename": "data_1930_workflow_1930_automate_manual_googlesheets.json",
      "workflow_name": "data_1930_workflow_1930_automate_manual_googlesheets",
      "suggested_filename": "data_1930_workflow_1930_automate_manual_googlesheets.json",
      "category": "DATA",
      "business_function": "1930",
      "key_integrations": [
        "postgresTrigger",
        "filter",
        "stickyNote",
        "manualTrigger",
        "code",
        "googleSheets"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.postgresTrigger": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates 1930 processes using postgresTrigger, filter, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.554146"
    },
    {
      "original_filename": "ai_create_ai_process_taiga_manual.json",
      "workflow_name": "Create, update, and get an issue on Taiga",
      "suggested_filename": "ai_create_ai_process_taiga_manual.json",
      "category": "AI",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "taiga"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.taiga": 3
      },
      "business_value": "Automates create processes using manualTrigger, taiga",
      "analysis_timestamp": "2025-06-01T16:06:48.554351"
    },
    {
      "original_filename": "biz_2610_workflow_2610_automate_splitinbatches_postgres_cron.json",
      "workflow_name": "biz_2610_workflow_2610_automate_splitinbatches_postgres_cron",
      "suggested_filename": "biz_2610_workflow_2610_automate_splitinbatches_postgres_cron.json",
      "category": "BIZ",
      "business_function": "2610",
      "key_integrations": [
        "httpRequest",
        "splitInBatches",
        "postgres",
        "merge",
        "code",
        "hubspot",
        "if",
        "scheduleTrigger",
        "stickyNote",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.postgres": 7,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.hubspot": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates 2610 processes using httpRequest, splitInBatches, postgres",
      "analysis_timestamp": "2025-06-01T16:06:48.554935"
    },
    {
      "original_filename": "util_thehive_automate_webhook_manual_webhook.json",
      "workflow_name": "TheHive",
      "suggested_filename": "util_thehive_automate_webhook_manual_webhook.json",
      "category": "UTIL",
      "business_function": "thehive",
      "key_integrations": [
        "theHive",
        "if",
        "signl4",
        "webhook",
        "manualTrigger"
      ],
      "trigger_type": "webhook",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.theHive": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.signl4": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates thehive processes using theHive, if, signl4",
      "analysis_timestamp": "2025-06-01T16:06:48.555227"
    },
    {
      "original_filename": "biz_1787_workflow_1787_automate_spreadsheetfile_pipedrive.json",
      "workflow_name": "biz_1787_workflow_1787_automate_spreadsheetfile_pipedrive",
      "suggested_filename": "biz_1787_workflow_1787_automate_spreadsheetfile_pipedrive.json",
      "category": "BIZ",
      "business_function": "1787",
      "key_integrations": [
        "googleDriveTrigger",
        "googleDrive",
        "spreadsheetFile",
        "pipedrive",
        "if",
        "merge",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.pipedrive": 6,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 1787 processes using googleDriveTrigger, googleDrive, spreadsheetFile",
      "analysis_timestamp": "2025-06-01T16:06:48.555527"
    },
    {
      "original_filename": "ai_gitlab_automate_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainoutp.json",
      "workflow_name": "GitLab MR Auto-Review & Risk Assessment",
      "suggested_filename": "ai_gitlab_automate_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainoutp.json",
      "category": "AI",
      "business_function": "gitlab",
      "key_integrations": [
        "httpRequest",
        "code",
        "if",
        "merge",
        "@n8n/langchain.agent",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.lmChatAnthropic",
        "stickyNote",
        "gitlabTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 2,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.gitlabTrigger": 3,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates gitlab processes using httpRequest, code, if",
      "analysis_timestamp": "2025-06-01T16:06:48.555986"
    },
    {
      "original_filename": "util_586_workflow_586_automate_spreadsheetfile_manual.json",
      "workflow_name": "util_586_workflow_586_automate_spreadsheetfile_manual",
      "suggested_filename": "util_586_workflow_586_automate_spreadsheetfile_manual.json",
      "category": "UTIL",
      "business_function": "586",
      "key_integrations": [
        "manualTrigger",
        "spreadsheetFile",
        "readBinaryFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.readBinaryFile": 1
      },
      "business_value": "Automates 586 processes using manualTrigger, spreadsheetFile, readBinaryFile",
      "analysis_timestamp": "2025-06-01T16:06:48.556251"
    },
    {
      "original_filename": "ai_google_extract_n8nnodeslangchainchainsummarization_httprequest.json",
      "workflow_name": "Google Search Engine Results Page Extraction with Bright Data",
      "suggested_filename": "ai_google_extract_n8nnodeslangchainchainsummarization_httprequest.json",
      "category": "AI",
      "business_function": "google",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.toolHttpRequest",
        "stickyNote",
        "@n8n/langchain.informationExtractor",
        "httpRequest",
        "@n8n/langchain.agent",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 3,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1,
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates google processes using manualTrigger, @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.chainSummarization",
      "analysis_timestamp": "2025-06-01T16:06:48.556531"
    },
    {
      "original_filename": "ai_intelligent_automate_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchai_1.json",
      "workflow_name": "Intelligent Web Query and Semantic Re-Ranking Flow",
      "suggested_filename": "ai_intelligent_automate_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchai_1.json",
      "category": "AI",
      "business_function": "intelligent",
      "key_integrations": [
        "stickyNote",
        "dateTime",
        "webhook",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.outputParserStructured",
        "code",
        "respondToWebhook",
        "@n8n/langchain.chainLlm",
        "httpRequest",
        "@n8n/langchain.lmChatAnthropic"
      ],
      "trigger_type": "webhook",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2
      },
      "business_value": "Automates intelligent processes using stickyNote, dateTime, webhook",
      "analysis_timestamp": "2025-06-01T16:06:48.556944"
    },
    {
      "original_filename": "comm_3204_workflow_3204_automate_googlesheets_gmail.json",
      "workflow_name": "comm_3204_workflow_3204_automate_googlesheets_gmail",
      "suggested_filename": "comm_3204_workflow_3204_automate_googlesheets_gmail.json",
      "category": "COMM",
      "business_function": "3204",
      "key_integrations": [
        "stickyNote",
        "telegramTrigger",
        "switch",
        "code",
        "telegram",
        "if",
        "set",
        "googleDrive",
        "gmail",
        "googleSheets"
      ],
      "trigger_type": "manual",
      "complexity_score": 37,
      "complexity": "High",
      "total_nodes": 37,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.code": 11,
        "n8n-nodes-base.telegram": 10,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates 3204 processes using stickyNote, telegramTrigger, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.557420"
    },
    {
      "original_filename": "util_only_read_htmlextract_rssfeedread_cron.json",
      "workflow_name": "Get only new RSS with Photo",
      "suggested_filename": "util_only_read_htmlextract_rssfeedread_cron.json",
      "category": "UTIL",
      "business_function": "only",
      "key_integrations": [
        "cron",
        "rssFeedRead",
        "htmlExtract",
        "set",
        "function"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.rssFeedRead": 1,
        "n8n-nodes-base.htmlExtract": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.function": 1
      },
      "business_value": "Automates only processes using cron, rssFeedRead, htmlExtract",
      "analysis_timestamp": "2025-06-01T16:06:48.557678"
    },
    {
      "original_filename": "ai_generate_generate_httprequest_manual.json",
      "workflow_name": "Generate Graphic Wallpaper with Midjourney, GPT-4o-mini and Canvas APIs",
      "suggested_filename": "ai_generate_generate_httprequest_manual.json",
      "category": "AI",
      "business_function": "generate",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "code",
        "wait",
        "if",
        "switch",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.set": 2
      },
      "business_value": "Automates generate processes using stickyNote, httpRequest, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.557959"
    },
    {
      "original_filename": "ai_instatest_automate_n8nnodeslangchainmemorybufferwindow_webhook_webhook_2.json",
      "workflow_name": "InstaTest",
      "suggested_filename": "ai_instatest_automate_n8nnodeslangchainmemorybufferwindow_webhook_webhook_2.json",
      "category": "AI",
      "business_function": "instatest",
      "key_integrations": [
        "set",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.lmChatOpenAi",
        "respondToWebhook",
        "stickyNote",
        "webhook",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates instatest processes using set, @n8n/langchain.memoryBufferWindow, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.558204"
    },
    {
      "original_filename": "data_update_update_coingecko_airtable_cron.json",
      "workflow_name": "Update Crypto Values",
      "suggested_filename": "data_update_update_coingecko_airtable_cron.json",
      "category": "DATA",
      "business_function": "update",
      "key_integrations": [
        "coinGecko",
        "airtable",
        "set",
        "cron",
        "function"
      ],
      "trigger_type": "cron",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.coinGecko": 1,
        "n8n-nodes-base.airtable": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.function": 1
      },
      "business_value": "Automates update processes using coinGecko, airtable, set",
      "analysis_timestamp": "2025-06-01T16:06:48.558359"
    },
    {
      "original_filename": "data_typeform_automate_googlesheets_typeform.json",
      "workflow_name": "typeform feedback workflow",
      "suggested_filename": "data_typeform_automate_googlesheets_typeform.json",
      "category": "DATA",
      "business_function": "typeform",
      "key_integrations": [
        "typeformTrigger",
        "if",
        "googleSheets",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates typeform processes using typeformTrigger, if, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.558531"
    },
    {
      "original_filename": "data_2613_workflow_2613_automate_httprequest_schedule_cron.json",
      "workflow_name": "data_2613_workflow_2613_automate_httprequest_schedule_cron",
      "suggested_filename": "data_2613_workflow_2613_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "2613",
      "key_integrations": [
        "splitOut",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "stickyNote",
        "googleSheets"
      ],
      "trigger_type": "cron",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.splitOut": 3,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.googleSheets": 3
      },
      "business_value": "Automates 2613 processes using splitOut, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.558891"
    },
    {
      "original_filename": "ai_chat_automate_n8nnodeslangchainchat_n8nnodeslangchainchainllm_2.json",
      "workflow_name": "Chat with local LLMs using n8n and Ollama",
      "suggested_filename": "ai_chat_automate_n8nnodeslangchainchat_n8nnodeslangchainchainllm_2.json",
      "category": "AI",
      "business_function": "chat",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOllama",
        "stickyNote",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 1,
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates chat processes using @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOllama, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.559145"
    },
    {
      "original_filename": "util_2469_workflow_2469_automate_splitinbatches_itemlists_cron.json",
      "workflow_name": "util_2469_workflow_2469_automate_splitinbatches_itemlists_cron",
      "suggested_filename": "util_2469_workflow_2469_automate_splitinbatches_itemlists_cron.json",
      "category": "UTIL",
      "business_function": "2469",
      "key_integrations": [
        "stickyNote",
        "moveBinaryData",
        "filter",
        "googleDrive",
        "code",
        "if",
        "merge",
        "itemLists",
        "splitInBatches",
        "n8n"
      ],
      "trigger_type": "cron",
      "complexity_score": 33,
      "complexity": "High",
      "total_nodes": 33,
      "node_types": {
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.moveBinaryData": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.googleDrive": 9,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.itemLists": 2,
        "n8n-nodes-base.splitInBatches": 3,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.scheduleTrigger": 2
      },
      "business_value": "Automates 2469 processes using stickyNote, moveBinaryData, filter",
      "analysis_timestamp": "2025-06-01T16:06:48.559551"
    },
    {
      "original_filename": "data_2661_workflow_2661_automate_httprequest_webhook_webhook.json",
      "workflow_name": "data_2661_workflow_2661_automate_httprequest_webhook_webhook",
      "suggested_filename": "data_2661_workflow_2661_automate_httprequest_webhook_webhook.json",
      "category": "DATA",
      "business_function": "2661",
      "key_integrations": [
        "googleDrive",
        "httpRequest",
        "googleDriveTrigger",
        "airtable",
        "set",
        "code",
        "webhook",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stickyNote": 9
      },
      "business_value": "Automates 2661 processes using googleDrive, httpRequest, googleDriveTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.559875"
    },
    {
      "original_filename": "data_sync_sync_odoo_shopify.json",
      "workflow_name": "Sync New Shopify Products to Odoo Product",
      "suggested_filename": "data_sync_sync_odoo_shopify.json",
      "category": "DATA",
      "business_function": "sync",
      "key_integrations": [
        "odoo",
        "filter",
        "shopifyTrigger",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.odoo": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.shopifyTrigger": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates sync processes using odoo, filter, shopifyTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.560100"
    },
    {
      "original_filename": "ai_ultimate_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalcul.json",
      "workflow_name": "Ultimate Personal Assistant",
      "suggested_filename": "ai_ultimate_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalcul.json",
      "category": "AI",
      "business_function": "ultimate",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolHttpRequest",
        "@n8n/langchain.toolCalculator",
        "telegramTrigger",
        "set",
        "switch",
        "telegram"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 4,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.telegram": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates ultimate processes using @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi, @n8n/langchain.toolWorkflow",
      "analysis_timestamp": "2025-06-01T16:06:48.560397"
    },
    {
      "original_filename": "ai_powered_ai_process_slack_n8nnodeslangchainchainllm_cron_1.json",
      "workflow_name": "AI-Powered Information Monitoring with OpenAI, Google Sheets, Jina AI and Slack",
      "suggested_filename": "ai_powered_ai_process_slack_n8nnodeslangchainchainllm_cron_1.json",
      "category": "AI",
      "business_function": "powered",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.chainLlm",
        "scheduleTrigger",
        "rssFeedRead",
        "@n8n/langchain.textClassifier",
        "stickyNote",
        "googleSheets",
        "slack",
        "code",
        "if"
      ],
      "trigger_type": "chat",
      "complexity_score": 31,
      "complexity": "High",
      "total_nodes": 31,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.rssFeedRead": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "n8n-nodes-base.stickyNote": 13,
        "n8n-nodes-base.googleSheets": 4,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 3
      },
      "business_value": "Automates powered processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.chainLlm, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.560853"
    },
    {
      "original_filename": "comm_1932_workflow_1932_automate_linear_slack.json",
      "workflow_name": "comm_1932_workflow_1932_automate_linear_slack",
      "suggested_filename": "comm_1932_workflow_1932_automate_linear_slack.json",
      "category": "COMM",
      "business_function": "1932",
      "key_integrations": [
        "stickyNote",
        "linearTrigger",
        "manualTrigger",
        "code",
        "filter",
        "set",
        "slack"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.linearTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates 1932 processes using stickyNote, linearTrigger, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.561162"
    },
    {
      "original_filename": "data_sync_sync_jira_notion.json",
      "workflow_name": "Sync Jira issues with subsequent comments to Notion database",
      "suggested_filename": "data_sync_sync_jira_notion.json",
      "category": "DATA",
      "business_function": "sync",
      "key_integrations": [
        "notion",
        "stickyNote",
        "switch",
        "if",
        "jiraTrigger",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.notion": 4,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.jiraTrigger": 1,
        "n8n-nodes-base.code": 2
      },
      "business_value": "Automates sync processes using notion, stickyNote, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.561413"
    },
    {
      "original_filename": "ai_2415_workflow_2415_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "workflow_name": "ai_2415_workflow_2415_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl",
      "suggested_filename": "ai_2415_workflow_2415_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "category": "AI",
      "business_function": "2415",
      "key_integrations": [
        "stickyNote",
        "notion",
        "set",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.lmChatAnthropic",
        "code",
        "@n8n/langchain.outputParserStructured",
        "switch",
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.set": 6,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 3,
        "n8n-nodes-base.code": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1
      },
      "business_value": "Automates 2415 processes using stickyNote, notion, set",
      "analysis_timestamp": "2025-06-01T16:06:48.561818"
    },
    {
      "original_filename": "comm_beehiiv_create_httprequest_telegram.json",
      "workflow_name": "2. Add Beehiiv newsletter subscribers from Gumroad sales",
      "suggested_filename": "comm_beehiiv_create_httprequest_telegram.json",
      "category": "COMM",
      "business_function": "beehiiv",
      "key_integrations": [
        "gumroadTrigger",
        "googleSheets",
        "stickyNote",
        "httpRequest",
        "telegram",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.gumroadTrigger": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates beehiiv processes using gumroadTrigger, googleSheets, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.562133"
    },
    {
      "original_filename": "ai_telegram_ai_process_n8nnodeslangchainmemorybufferwindow_httprequest_1.json",
      "workflow_name": "Telegram AI Langchain bot",
      "suggested_filename": "ai_telegram_ai_process_n8nnodeslangchainmemorybufferwindow_httprequest_1.json",
      "category": "AI",
      "business_function": "telegram",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "telegram",
        "executeWorkflowTrigger",
        "telegramTrigger",
        "set",
        "stickyNote",
        "@n8n/langchain.toolWorkflow",
        "httpRequest",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.telegram": 3,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates telegram processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.562415"
    },
    {
      "original_filename": "util_create_create_editimage_itemlists.json",
      "workflow_name": "util_create_create_editimage_itemlists",
      "suggested_filename": "util_create_create_editimage_itemlists.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "itemLists",
        "function",
        "merge",
        "editImage"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.editImage": 4
      },
      "business_value": "Automates create processes using manualTrigger, httpRequest, itemLists",
      "analysis_timestamp": "2025-06-01T16:06:48.562730"
    },
    {
      "original_filename": "content_1535_workflow_1535_automate_googlecloudnaturallanguage_interval_webhook.json",
      "workflow_name": "content_1535_workflow_1535_automate_googlecloudnaturallanguage_interval_webhook",
      "suggested_filename": "content_1535_workflow_1535_automate_googlecloudnaturallanguage_interval_webhook.json",
      "category": "CONTENT",
      "business_function": "1535",
      "key_integrations": [
        "set",
        "strapi",
        "interval",
        "if",
        "twitter",
        "webhook",
        "googleCloudNaturalLanguage",
        "merge"
      ],
      "trigger_type": "webhook",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.strapi": 2,
        "n8n-nodes-base.interval": 1,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.googleCloudNaturalLanguage": 2,
        "n8n-nodes-base.merge": 2
      },
      "business_value": "Automates 1535 processes using set, strapi, interval",
      "analysis_timestamp": "2025-06-01T16:06:48.562989"
    },
    {
      "original_filename": "util_generate_generate_httprequest_manual.json",
      "workflow_name": "Generate Image Workflow",
      "suggested_filename": "util_generate_generate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "generate",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates generate processes using manualTrigger, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.563214"
    },
    {
      "original_filename": "biz_1807_workflow_1807_automate_pipedrive_splitinbatches_cron.json",
      "workflow_name": "biz_1807_workflow_1807_automate_pipedrive_splitinbatches_cron",
      "suggested_filename": "biz_1807_workflow_1807_automate_pipedrive_splitinbatches_cron.json",
      "category": "BIZ",
      "business_function": "1807",
      "key_integrations": [
        "functionItem",
        "if",
        "httpRequest",
        "merge",
        "zendesk",
        "set",
        "pipedrive",
        "itemLists",
        "splitInBatches",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.noOp": 3,
        "n8n-nodes-base.functionItem": 2,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.zendesk": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.pipedrive": 2,
        "n8n-nodes-base.itemLists": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates 1807 processes using functionItem, if, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.563496"
    },
    {
      "original_filename": "ai_2513_workflow_2513_automate_httprequest_n8nnodeslangchainopenai.json",
      "workflow_name": "ai_2513_workflow_2513_automate_httprequest_n8nnodeslangchainopenai",
      "suggested_filename": "ai_2513_workflow_2513_automate_httprequest_n8nnodeslangchainopenai.json",
      "category": "AI",
      "business_function": "2513",
      "key_integrations": [
        "httpRequest",
        "stickyNote",
        "set",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 2513 processes using httpRequest, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:48.563829"
    },
    {
      "original_filename": "util_receive_update_thehive.json",
      "workflow_name": "Receive updates when an event occurs in TheHive",
      "suggested_filename": "util_receive_update_thehive.json",
      "category": "UTIL",
      "business_function": "receive",
      "key_integrations": [
        "theHiveTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.theHiveTrigger": 1
      },
      "business_value": "Automates receive processes using theHiveTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.564056"
    },
    {
      "original_filename": "util_541_workflow_541_automate_jotform.json",
      "workflow_name": "util_541_workflow_541_automate_jotform",
      "suggested_filename": "util_541_workflow_541_automate_jotform.json",
      "category": "UTIL",
      "business_function": "541",
      "key_integrations": [
        "jotFormTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.jotFormTrigger": 1
      },
      "business_value": "Automates 541 processes using jotFormTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.564276"
    },
    {
      "original_filename": "util_text_create_httprequest_editimage.json",
      "workflow_name": "Add text to an image downloaded from the internet",
      "suggested_filename": "util_text_create_httprequest_editimage.json",
      "category": "UTIL",
      "business_function": "text",
      "key_integrations": [
        "manualTrigger",
        "editImage",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.editImage": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates text processes using manualTrigger, editImage, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.564470"
    },
    {
      "original_filename": "ai_telegram_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchainl.json",
      "workflow_name": "Telegram ChatBot with multiple sessions",
      "suggested_filename": "ai_telegram_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchainl.json",
      "category": "AI",
      "business_function": "telegram",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "telegramTrigger",
        "switch",
        "googleSheets",
        "telegram",
        "stickyNote",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.chainLlm",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 38,
      "complexity": "High",
      "total_nodes": 38,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.googleSheets": 8,
        "n8n-nodes-base.telegram": 7,
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 4,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates telegram processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow, telegramTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.565207"
    },
    {
      "original_filename": "ai_3277_workflow_3277_automate_gmail_gmail.json",
      "workflow_name": "ai_3277_workflow_3277_automate_gmail_gmail",
      "suggested_filename": "ai_3277_workflow_3277_automate_gmail_gmail.json",
      "category": "AI",
      "business_function": "3277",
      "key_integrations": [
        "gmailTrigger",
        "@n8n/langchain.textClassifier",
        "@n8n/langchain.lmChatGoogleGemini",
        "emailSend",
        "gmail",
        "sendInBlue",
        "if",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.emailSend": 3,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.sendInBlue": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates 3277 processes using gmailTrigger, @n8n/langchain.textClassifier, @n8n/langchain.lmChatGoogleGemini",
      "analysis_timestamp": "2025-06-01T16:06:48.565627"
    },
    {
      "original_filename": "util_creating_automate_openweathermap_cron_cron.json",
      "workflow_name": "Creating your first workflow",
      "suggested_filename": "util_creating_automate_openweathermap_cron_cron.json",
      "category": "UTIL",
      "business_function": "creating",
      "key_integrations": [
        "cron",
        "openWeatherMap",
        "if",
        "twilio"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.openWeatherMap": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.twilio": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates creating processes using cron, openWeatherMap, if",
      "analysis_timestamp": "2025-06-01T16:06:48.565845"
    },
    {
      "original_filename": "ai_business_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvect.json",
      "workflow_name": "Business WhatsApp AI RAG Chatbot",
      "suggested_filename": "ai_business_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvect.json",
      "category": "AI",
      "business_function": "business",
      "key_integrations": [
        "respondToWebhook",
        "@n8n/langchain.agent",
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi",
        "manualTrigger",
        "@n8n/langchain.vectorStoreQdrant",
        "httpRequest",
        "googleDrive",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader"
      ],
      "trigger_type": "webhook",
      "complexity_score": 28,
      "complexity": "High",
      "total_nodes": 28,
      "node_types": {
        "n8n-nodes-base.respondToWebhook": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 6,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleDrive": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.webhook": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.whatsApp": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1
      },
      "business_value": "Automates business processes using respondToWebhook, @n8n/langchain.agent, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.566197"
    },
    {
      "original_filename": "ai_data_ai_process_splitinbatches_n8nnodeslangchainchainllm_webhook_1.json",
      "workflow_name": "ai_data_ai_process_splitinbatches_n8nnodeslangchainchainllm_webhook_1",
      "suggested_filename": "ai_data_ai_process_splitinbatches_n8nnodeslangchainchainllm_webhook_1.json",
      "category": "AI",
      "business_function": "data",
      "key_integrations": [
        "switch",
        "code",
        "httpRequest",
        "extractFromFile",
        "set",
        "splitInBatches",
        "@n8n/langchain.chainLlm",
        "filter",
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 51,
      "complexity": "High",
      "total_nodes": 51,
      "node_types": {
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.extractFromFile": 2,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.noOp": 4,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.stickyNote": 15,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.airtable": 6,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates data processes using switch, code, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.566711"
    },
    {
      "original_filename": "ai_openai_ai_process_gmail_googledrive.json",
      "workflow_name": "🦜✨Use OpenAI to Transcribe Audio + Summarize with AI + Save to Google Drive",
      "suggested_filename": "ai_openai_ai_process_gmail_googledrive.json",
      "category": "AI",
      "business_function": "openai",
      "key_integrations": [
        "gmail",
        "stickyNote",
        "set",
        "@n8n/langchain.openAi",
        "filter",
        "limit",
        "googleDrive",
        "telegram",
        "merge",
        "manualTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 33,
      "complexity": "High",
      "total_nodes": 33,
      "node_types": {
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.set": 5,
        "@n8n/n8n-nodes-langchain.openAi": 5,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.googleDrive": 7,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleDriveTrigger": 1
      },
      "business_value": "Automates openai processes using gmail, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:48.567194"
    },
    {
      "original_filename": "biz_generate_generate_splitinbatches_httprequest_cron.json",
      "workflow_name": "Generate Leads with Google Maps - AlexK1919",
      "suggested_filename": "biz_generate_generate_splitinbatches_httprequest_cron.json",
      "category": "BIZ",
      "business_function": "generate",
      "key_integrations": [
        "manualTrigger",
        "scheduleTrigger",
        "executeWorkflowTrigger",
        "if",
        "stopAndError",
        "httpRequest",
        "googleSheets",
        "set",
        "code",
        "removeDuplicates"
      ],
      "trigger_type": "cron",
      "complexity_score": 42,
      "complexity": "High",
      "total_nodes": 42,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.stopAndError": 3,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.googleSheets": 5,
        "n8n-nodes-base.set": 6,
        "n8n-nodes-base.code": 4,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.wait": 3,
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.splitOut": 1
      },
      "business_value": "Automates generate processes using manualTrigger, scheduleTrigger, executeWorkflowTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.567817"
    },
    {
      "original_filename": "ai_2197_workflow_2197_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "workflow_name": "ai_2197_workflow_2197_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput",
      "suggested_filename": "ai_2197_workflow_2197_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "2197",
      "key_integrations": [
        "stickyNote",
        "gmailTrigger",
        "gmail",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "set",
        "splitOut",
        "merge",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.gmail": 3,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.aggregate": 1
      },
      "business_value": "Automates 2197 processes using stickyNote, gmailTrigger, gmail",
      "analysis_timestamp": "2025-06-01T16:06:48.568248"
    },
    {
      "original_filename": "comm_receive_update_facebook_mattermost.json",
      "workflow_name": "Receive a Mattermost message when a user updates their profile on Facebook",
      "suggested_filename": "comm_receive_update_facebook_mattermost.json",
      "category": "COMM",
      "business_function": "receive",
      "key_integrations": [
        "facebookTrigger",
        "mattermost"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.facebookTrigger": 1,
        "n8n-nodes-base.mattermost": 1
      },
      "business_value": "Automates receive processes using facebookTrigger, mattermost",
      "analysis_timestamp": "2025-06-01T16:06:48.568470"
    },
    {
      "original_filename": "ai_obsidian_ai_process_httprequest_webhook_webhook.json",
      "workflow_name": "Obsidian Notes Read Aloud: Available as a Podcast Feed",
      "suggested_filename": "ai_obsidian_ai_process_httprequest_webhook_webhook.json",
      "category": "AI",
      "business_function": "obsidian",
      "key_integrations": [
        "@n8n/langchain.openAi",
        "stickyNote",
        "webhook",
        "httpRequest",
        "merge",
        "aggregate",
        "set",
        "respondToWebhook",
        "googleSheets",
        "code"
      ],
      "trigger_type": "webhook",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.webhook": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates obsidian processes using @n8n/langchain.openAi, stickyNote, webhook",
      "analysis_timestamp": "2025-06-01T16:06:48.568830"
    },
    {
      "original_filename": "util_location_by_ip_automate_awsses_uproc.json",
      "workflow_name": "location_by_ip",
      "suggested_filename": "util_location_by_ip_automate_awsses_uproc.json",
      "category": "UTIL",
      "business_function": "location",
      "key_integrations": [
        "manualTrigger",
        "uproc",
        "if",
        "functionItem",
        "awsSes"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.uproc": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.awsSes": 2
      },
      "business_value": "Automates location processes using manualTrigger, uproc, if",
      "analysis_timestamp": "2025-06-01T16:06:48.568973"
    },
    {
      "original_filename": "ai_generate_generate_webhook_n8nnodeslangchainopenai_webhook_1.json",
      "workflow_name": "Generate audio from text using OpenAI - text-to-speech Workflow",
      "suggested_filename": "ai_generate_generate_webhook_n8nnodeslangchainopenai_webhook_1.json",
      "category": "AI",
      "business_function": "generate",
      "key_integrations": [
        "respondToWebhook",
        "stickyNote",
        "webhook",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "webhook",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates generate processes using respondToWebhook, stickyNote, webhook",
      "analysis_timestamp": "2025-06-01T16:06:48.569174"
    },
    {
      "original_filename": "comm_2966_workflow_2966_automate_gmail_googledrive.json",
      "workflow_name": "comm_2966_workflow_2966_automate_gmail_googledrive",
      "suggested_filename": "comm_2966_workflow_2966_automate_gmail_googledrive.json",
      "category": "COMM",
      "business_function": "2966",
      "key_integrations": [
        "gmailTrigger",
        "googleDrive",
        "splitOut",
        "stickyNote",
        "switch"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.noOp": 2
      },
      "business_value": "Automates 2966 processes using gmailTrigger, googleDrive, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.569342"
    },
    {
      "original_filename": "data_2603_workflow_2603_automate_httprequest_form.json",
      "workflow_name": "data_2603_workflow_2603_automate_httprequest_form",
      "suggested_filename": "data_2603_workflow_2603_automate_httprequest_form.json",
      "category": "DATA",
      "business_function": "2603",
      "key_integrations": [
        "airtable",
        "formTrigger",
        "filter",
        "aggregate",
        "form",
        "code",
        "splitOut",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 34,
      "complexity": "High",
      "total_nodes": 34,
      "node_types": {
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.formTrigger": 2,
        "n8n-nodes-base.filter": 3,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.form": 4,
        "n8n-nodes-base.code": 7,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.stickyNote": 8
      },
      "business_value": "Automates 2603 processes using airtable, formTrigger, filter",
      "analysis_timestamp": "2025-06-01T16:06:48.569828"
    },
    {
      "original_filename": "comm_2160_workflow_2160_automate_error_gmail.json",
      "workflow_name": "comm_2160_workflow_2160_automate_error_gmail",
      "suggested_filename": "comm_2160_workflow_2160_automate_error_gmail.json",
      "category": "COMM",
      "business_function": "2160",
      "key_integrations": [
        "errorTrigger",
        "stickyNote",
        "gmail"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.errorTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates 2160 processes using errorTrigger, stickyNote, gmail",
      "analysis_timestamp": "2025-06-01T16:06:48.570111"
    },
    {
      "original_filename": "comm_2402_workflow_2402_automate_telegram_telegram.json",
      "workflow_name": "comm_2402_workflow_2402_automate_telegram_telegram",
      "suggested_filename": "comm_2402_workflow_2402_automate_telegram_telegram.json",
      "category": "COMM",
      "business_function": "2402",
      "key_integrations": [
        "telegramTrigger",
        "set",
        "telegram",
        "stickyNote",
        "switch",
        "if",
        "googleSheets",
        "executeWorkflow"
      ],
      "trigger_type": "manual",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.telegram": 6,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.switch": 4,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.executeWorkflow": 3
      },
      "business_value": "Automates 2402 processes using telegramTrigger, set, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.570468"
    },
    {
      "original_filename": "ops_docker_automate_ssh_webhook_webhook_2.json",
      "workflow_name": "puq-docker-minio-deploy",
      "suggested_filename": "ops_docker_automate_ssh_webhook_webhook_2.json",
      "category": "OPS",
      "business_function": "docker",
      "key_integrations": [
        "if",
        "set",
        "webhook",
        "respondToWebhook",
        "code",
        "ssh",
        "switch",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 33,
      "complexity": "High",
      "total_nodes": 33,
      "node_types": {
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.set": 21,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.ssh": 1,
        "n8n-nodes-base.switch": 4,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates docker processes using if, set, webhook",
      "analysis_timestamp": "2025-06-01T16:06:48.571249"
    },
    {
      "original_filename": "util_translate_automate_manual_googletranslate.json",
      "workflow_name": "Translate text from English to German",
      "suggested_filename": "util_translate_automate_manual_googletranslate.json",
      "category": "UTIL",
      "business_function": "translate",
      "key_integrations": [
        "manualTrigger",
        "googleTranslate"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleTranslate": 1
      },
      "business_value": "Automates translate processes using manualTrigger, googleTranslate",
      "analysis_timestamp": "2025-06-01T16:06:48.571526"
    },
    {
      "original_filename": "ai_coinmarketcap_crypto_agent_tool_automate_n8nnodeslangchainmemorybufferwindow.json",
      "workflow_name": "CoinMarketCap_Crypto_Agent_Tool",
      "suggested_filename": "ai_coinmarketcap_crypto_agent_tool_automate_n8nnodeslangchainmemorybufferwindow.json",
      "category": "AI",
      "business_function": "coinmarketcap",
      "key_integrations": [
        "executeWorkflowTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolHttpRequest",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 6,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates coinmarketcap processes using executeWorkflowTrigger, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.571922"
    },
    {
      "original_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_4.json",
      "workflow_name": "AI Agent : Google calendar assistant using OpenAI",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_4.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "googleCalendarTool",
        "stickyNote",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.googleCalendarTool": 2,
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates agent processes using @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.572303"
    },
    {
      "original_filename": "data_synchronize_sync_postgres_comparedatasets_cron.json",
      "workflow_name": "Synchronize your Google Sheets with Postgres",
      "suggested_filename": "data_synchronize_sync_postgres_comparedatasets_cron.json",
      "category": "DATA",
      "business_function": "synchronize",
      "key_integrations": [
        "scheduleTrigger",
        "compareDatasets",
        "splitOut",
        "googleSheets",
        "postgres",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.compareDatasets": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.postgres": 3,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates synchronize processes using scheduleTrigger, compareDatasets, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.572566"
    },
    {
      "original_filename": "util_3444_workflow_3444_automate_webhook_redis_webhook.json",
      "workflow_name": "util_3444_workflow_3444_automate_webhook_redis_webhook",
      "suggested_filename": "util_3444_workflow_3444_automate_webhook_redis_webhook.json",
      "category": "UTIL",
      "business_function": "3444",
      "key_integrations": [
        "set",
        "webhook",
        "code",
        "redis",
        "if",
        "wait",
        "stickyNote",
        "switch"
      ],
      "trigger_type": "webhook",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.redis": 3,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates 3444 processes using set, webhook, code",
      "analysis_timestamp": "2025-06-01T16:06:48.572904"
    },
    {
      "original_filename": "ai_angie_ai_process_n8nnodeslangchainmemorybufferwindow_baserow.json",
      "workflow_name": "ai_angie_ai_process_n8nnodeslangchainmemorybufferwindow_baserow",
      "suggested_filename": "ai_angie_ai_process_n8nnodeslangchainmemorybufferwindow_baserow.json",
      "category": "AI",
      "business_function": "angie",
      "key_integrations": [
        "googleCalendarTool",
        "@n8n/langchain.memoryBufferWindow",
        "gmailTool",
        "@n8n/langchain.lmChatOpenAi",
        "telegramTrigger",
        "telegram",
        "if",
        "@n8n/langchain.openAi",
        "set",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.googleCalendarTool": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.gmailTool": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.baserowTool": 2
      },
      "business_value": "Automates angie processes using googleCalendarTool, @n8n/langchain.memoryBufferWindow, gmailTool",
      "analysis_timestamp": "2025-06-01T16:06:48.573251"
    },
    {
      "original_filename": "ai_2618_workflow_2618_automate_n8nnodeslangchainmemorybufferwindow_executiondata.json",
      "workflow_name": "ai_2618_workflow_2618_automate_n8nnodeslangchainmemorybufferwindow_executiondata",
      "suggested_filename": "ai_2618_workflow_2618_automate_n8nnodeslangchainmemorybufferwindow_executiondata.json",
      "category": "AI",
      "business_function": "2618",
      "key_integrations": [
        "scheduleTrigger",
        "airtable",
        "gmail",
        "executeWorkflow",
        "set",
        "executeWorkflowTrigger",
        "formTrigger",
        "filter",
        "code",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 32,
      "complexity": "High",
      "total_nodes": 32,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.airtable": 6,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.formTrigger": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.executionData": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatGroq": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.editImage": 1
      },
      "business_value": "Automates 2618 processes using scheduleTrigger, airtable, gmail",
      "analysis_timestamp": "2025-06-01T16:06:48.573720"
    },
    {
      "original_filename": "ai_2420_workflow_2420_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "workflow_name": "ai_2420_workflow_2420_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput",
      "suggested_filename": "ai_2420_workflow_2420_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "2420",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.outputParserStructured",
        "set",
        "splitOut",
        "googleDrive",
        "editImage",
        "stickyNote",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatGoogleGemini"
      ],
      "trigger_type": "chat",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.editImage": 1,
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1
      },
      "business_value": "Automates 2420 processes using manualTrigger, @n8n/langchain.outputParserStructured, set",
      "analysis_timestamp": "2025-06-01T16:06:48.574075"
    },
    {
      "original_filename": "ai_post_automate_schedule_twitter_cron_2.json",
      "workflow_name": "Post New YouTube Videos to X",
      "suggested_filename": "ai_post_automate_schedule_twitter_cron_2.json",
      "category": "AI",
      "business_function": "post",
      "key_integrations": [
        "twitter",
        "stickyNote",
        "@n8n/langchain.openAi",
        "youTube",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.youTube": 1,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates post processes using twitter, stickyNote, @n8n/langchain.openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.574353"
    },
    {
      "original_filename": "data_structured_extract_httprequest_readwritefile.json",
      "workflow_name": "Structured Bulk Data Extract with Bright Data Web Scraper",
      "suggested_filename": "data_structured_extract_httprequest_readwritefile.json",
      "category": "DATA",
      "business_function": "structured",
      "key_integrations": [
        "manualTrigger",
        "if",
        "set",
        "httpRequest",
        "wait",
        "aggregate",
        "stickyNote",
        "function",
        "readWriteFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.readWriteFile": 1
      },
      "business_value": "Automates structured processes using manualTrigger, if, set",
      "analysis_timestamp": "2025-06-01T16:06:48.574699"
    },
    {
      "original_filename": "ai_2749_workflow_2749_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "workflow_name": "ai_2749_workflow_2749_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl",
      "suggested_filename": "ai_2749_workflow_2749_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "category": "AI",
      "business_function": "2749",
      "key_integrations": [
        "httpRequest",
        "@n8n/langchain.toolHttpRequest",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.outputParserStructured",
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "telegramTrigger",
        "gmailTrigger",
        "webhook"
      ],
      "trigger_type": "chat",
      "complexity_score": 35,
      "complexity": "High",
      "total_nodes": 35,
      "node_types": {
        "n8n-nodes-base.httpRequest": 5,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 3,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 3,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 8,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.merge": 2,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates 2749 processes using httpRequest, @n8n/langchain.toolHttpRequest, @n8n/langchain.outputParserAutofixing",
      "analysis_timestamp": "2025-06-01T16:06:48.575084"
    },
    {
      "original_filename": "comm_bash_automate_webhook_telegram_webhook.json",
      "workflow_name": "bash-dash telegram",
      "suggested_filename": "comm_bash_automate_webhook_telegram_webhook.json",
      "category": "COMM",
      "business_function": "bash",
      "key_integrations": [
        "webhook",
        "set",
        "telegram"
      ],
      "trigger_type": "webhook",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates bash processes using webhook, set, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.575308"
    },
    {
      "original_filename": "util_2195_workflow_2195_automate_httprequest_form.json",
      "workflow_name": "util_2195_workflow_2195_automate_httprequest_form",
      "suggested_filename": "util_2195_workflow_2195_automate_httprequest_form.json",
      "category": "UTIL",
      "business_function": "2195",
      "key_integrations": [
        "httpRequest",
        "set",
        "formTrigger",
        "stickyNote",
        "respondToWebhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.respondToWebhook": 1
      },
      "business_value": "Automates 2195 processes using httpRequest, set, formTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.575560"
    },
    {
      "original_filename": "ai_youtube_ai_process_rssfeedread_httprequest_1.json",
      "workflow_name": "YouTube Videos with AI Summaries on Discord",
      "suggested_filename": "ai_youtube_ai_process_rssfeedread_httprequest_1.json",
      "category": "AI",
      "business_function": "youtube",
      "key_integrations": [
        "rssFeedReadTrigger",
        "httpRequest",
        "extractFromFile",
        "@n8n/langchain.openAi",
        "discord",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.rssFeedReadTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.discord": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates youtube processes using rssFeedReadTrigger, httpRequest, extractFromFile",
      "analysis_timestamp": "2025-06-01T16:06:48.575796"
    },
    {
      "original_filename": "ai_3042_workflow_3042_automate_slack_schedule_cron.json",
      "workflow_name": "ai_3042_workflow_3042_automate_slack_schedule_cron",
      "suggested_filename": "ai_3042_workflow_3042_automate_slack_schedule_cron.json",
      "category": "AI",
      "business_function": "3042",
      "key_integrations": [
        "set",
        "@n8n/langchain.openAi",
        "scheduleTrigger",
        "limit",
        "googleSheets",
        "summarize",
        "merge",
        "if",
        "wait",
        "webhook"
      ],
      "trigger_type": "cron",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.set": 3,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.summarize": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.slack": 2
      },
      "business_value": "Automates 3042 processes using set, @n8n/langchain.openAi, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.576154"
    },
    {
      "original_filename": "ai_survey_extract_splitinbatches_executeworkflow.json",
      "workflow_name": "ai_survey_extract_splitinbatches_executeworkflow",
      "suggested_filename": "ai_survey_extract_splitinbatches_executeworkflow.json",
      "category": "AI",
      "business_function": "survey",
      "key_integrations": [
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "set",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "googleSheets",
        "splitOut",
        "httpRequest",
        "@n8n/langchain.lmChatOpenAi",
        "splitInBatches",
        "executeWorkflow"
      ],
      "trigger_type": "chat",
      "complexity_score": 42,
      "complexity": "High",
      "total_nodes": 42,
      "node_types": {
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "n8n-nodes-base.set": 6,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.googleSheets": 5,
        "n8n-nodes-base.splitOut": 3,
        "n8n-nodes-base.httpRequest": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 12,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1
      },
      "business_value": "Automates survey processes using @n8n/langchain.embeddingsOpenAi, @n8n/langchain.documentDefaultDataLoader, set",
      "analysis_timestamp": "2025-06-01T16:06:48.576612"
    },
    {
      "original_filename": "ai_2161_workflow_2161_automate_n8nnodeslangchainmemorybufferwindow_dhl_webhook.json",
      "workflow_name": "ai_2161_workflow_2161_automate_n8nnodeslangchainmemorybufferwindow_dhl_webhook",
      "suggested_filename": "ai_2161_workflow_2161_automate_n8nnodeslangchainmemorybufferwindow_dhl_webhook.json",
      "category": "AI",
      "business_function": "2161",
      "key_integrations": [
        "stickyNote",
        "set",
        "if",
        "merge",
        "splitOut",
        "aggregate",
        "@n8n/langchain.memoryBufferWindow",
        "executeWorkflowTrigger",
        "wooCommerce",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 40,
      "complexity": "High",
      "total_nodes": 40,
      "node_types": {
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.set": 8,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.wooCommerce": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.dhl": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.code": 3,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates 2161 processes using stickyNote, set, if",
      "analysis_timestamp": "2025-06-01T16:06:48.577015"
    },
    {
      "original_filename": "ai_2466_workflow_2466_automate_n8nnodeslangchainmemorybufferwindow_whatsapp.json",
      "workflow_name": "ai_2466_workflow_2466_automate_n8nnodeslangchainmemorybufferwindow_whatsapp",
      "suggested_filename": "ai_2466_workflow_2466_automate_n8nnodeslangchainmemorybufferwindow_whatsapp.json",
      "category": "AI",
      "business_function": "2466",
      "key_integrations": [
        "whatsAppTrigger",
        "whatsApp",
        "httpRequest",
        "@n8n/langchain.memoryBufferWindow",
        "set",
        "splitOut",
        "@n8n/langchain.toolWikipedia",
        "switch",
        "stickyNote",
        "wait"
      ],
      "trigger_type": "chat",
      "complexity_score": 35,
      "complexity": "High",
      "total_nodes": 35,
      "node_types": {
        "n8n-nodes-base.whatsAppTrigger": 1,
        "n8n-nodes-base.whatsApp": 4,
        "n8n-nodes-base.httpRequest": 5,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.stickyNote": 11,
        "n8n-nodes-base.wait": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 3,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates 2466 processes using whatsAppTrigger, whatsApp, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.577441"
    },
    {
      "original_filename": "comm_1891_workflow_1891_automate_hubspot_slack_webhook.json",
      "workflow_name": "comm_1891_workflow_1891_automate_hubspot_slack_webhook",
      "suggested_filename": "comm_1891_workflow_1891_automate_hubspot_slack_webhook.json",
      "category": "COMM",
      "business_function": "1891",
      "key_integrations": [
        "lemlist",
        "hubspot",
        "if",
        "webhook",
        "dropcontact",
        "slack"
      ],
      "trigger_type": "webhook",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.lemlist": 1,
        "n8n-nodes-base.hubspot": 7,
        "n8n-nodes-base.if": 6,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.dropcontact": 1,
        "n8n-nodes-base.slack": 2
      },
      "business_value": "Automates 1891 processes using lemlist, hubspot, if",
      "analysis_timestamp": "2025-06-01T16:06:48.577801"
    },
    {
      "original_filename": "ai_1956_workflow_1956_automate_gmail_n8nnodeslangchainchainsummarization.json",
      "workflow_name": "ai_1956_workflow_1956_automate_gmail_n8nnodeslangchainchainsummarization",
      "suggested_filename": "ai_1956_workflow_1956_automate_gmail_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "1956",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.agent",
        "@n8n/langchain.toolWikipedia",
        "code",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.informationExtractor"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "n8n-nodes-base.code": 2,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates 1956 processes using manualTrigger, stickyNote, @n8n/langchain.documentDefaultDataLoader",
      "analysis_timestamp": "2025-06-01T16:06:48.578174"
    },
    {
      "original_filename": "util_1357_workflow_1357_automate_editimage_itemlists.json",
      "workflow_name": "util_1357_workflow_1357_automate_editimage_itemlists",
      "suggested_filename": "util_1357_workflow_1357_automate_editimage_itemlists.json",
      "category": "UTIL",
      "business_function": "1357",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "itemLists",
        "function",
        "merge",
        "editImage"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.editImage": 4
      },
      "business_value": "Automates 1357 processes using manualTrigger, httpRequest, itemLists",
      "analysis_timestamp": "2025-06-01T16:06:48.578412"
    },
    {
      "original_filename": "ai_automate_slack_n8nnodeslangchainchainllm_webhook_2.json",
      "workflow_name": "My workflow 6",
      "suggested_filename": "ai_automate_slack_n8nnodeslangchainchainllm_webhook_2.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "stickyNote",
        "webhook",
        "switch",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatOpenAi",
        "slack"
      ],
      "trigger_type": "webhook",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates automate processes using stickyNote, webhook, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.578660"
    },
    {
      "original_filename": "comm_516_workflow_516_automate_mailchimp.json",
      "workflow_name": "comm_516_workflow_516_automate_mailchimp",
      "suggested_filename": "comm_516_workflow_516_automate_mailchimp.json",
      "category": "COMM",
      "business_function": "516",
      "key_integrations": [
        "mailchimpTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.mailchimpTrigger": 1
      },
      "business_value": "Automates 516 processes using mailchimpTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.578846"
    },
    {
      "original_filename": "ai_email_ai_process_gmail_googletasks.json",
      "workflow_name": "📦 New Email ➔ Create Google Task",
      "suggested_filename": "ai_email_ai_process_gmail_googletasks.json",
      "category": "AI",
      "business_function": "email",
      "key_integrations": [
        "gmailTrigger",
        "googleTasks",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.googleTasks": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates email processes using gmailTrigger, googleTasks, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.579050"
    },
    {
      "original_filename": "util_1940_workflow_1940_automate_httprequest_schedule_cron.json",
      "workflow_name": "util_1940_workflow_1940_automate_httprequest_schedule_cron",
      "suggested_filename": "util_1940_workflow_1940_automate_httprequest_schedule_cron.json",
      "category": "UTIL",
      "business_function": "1940",
      "key_integrations": [
        "httpRequest",
        "scheduleTrigger",
        "googleCalendar",
        "if",
        "set",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.googleCalendar": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 1940 processes using httpRequest, scheduleTrigger, googleCalendar",
      "analysis_timestamp": "2025-06-01T16:06:48.579327"
    },
    {
      "original_filename": "comm_event_update_slack_gmail_webhook.json",
      "workflow_name": "Get event triggered notifications / updates on preferred messaging channels with TwentyCRM",
      "suggested_filename": "comm_event_update_slack_gmail_webhook.json",
      "category": "COMM",
      "business_function": "event",
      "key_integrations": [
        "stickyNote",
        "set",
        "googleSheets",
        "if",
        "webhook",
        "gmail",
        "slack"
      ],
      "trigger_type": "webhook",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates event processes using stickyNote, set, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.579609"
    },
    {
      "original_filename": "comm_2708_workflow_2708_automate_webhook_telegram_webhook.json",
      "workflow_name": "comm_2708_workflow_2708_automate_webhook_telegram_webhook",
      "suggested_filename": "comm_2708_workflow_2708_automate_webhook_telegram_webhook.json",
      "category": "COMM",
      "business_function": "2708",
      "key_integrations": [
        "code",
        "if",
        "switch",
        "telegram",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.telegram": 3,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 2708 processes using code, if, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.579937"
    },
    {
      "original_filename": "ai_extract_ai_process_mindee_googlesheets.json",
      "workflow_name": "Extract expenses from emails and add to Google Sheet",
      "suggested_filename": "ai_extract_ai_process_mindee_googlesheets.json",
      "category": "AI",
      "business_function": "extract",
      "key_integrations": [
        "if",
        "set",
        "emailReadImap",
        "mindee",
        "googleSheets"
      ],
      "trigger_type": "email",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.mindee": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates extract processes using if, set, emailReadImap",
      "analysis_timestamp": "2025-06-01T16:06:48.580201"
    },
    {
      "original_filename": "ecommerce_1829_workflow_1829_automate_mautic_shopify.json",
      "workflow_name": "ecommerce_1829_workflow_1829_automate_mautic_shopify",
      "suggested_filename": "ecommerce_1829_workflow_1829_automate_mautic_shopify.json",
      "category": "ECOMMERCE",
      "business_function": "1829",
      "key_integrations": [
        "shopifyTrigger",
        "mautic",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.shopifyTrigger": 1,
        "n8n-nodes-base.mautic": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 1829 processes using shopifyTrigger, mautic, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.580429"
    },
    {
      "original_filename": "ai_email_ai_process_n8nnodeslangchainlmchatopenai_n8nnodeslangchainagent.json",
      "workflow_name": "🤖Email Agent",
      "suggested_filename": "ai_email_ai_process_n8nnodeslangchainlmchatopenai_n8nnodeslangchainagent.json",
      "category": "AI",
      "business_function": "email",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "@n8n/langchain.agent",
        "gmailTool",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.gmailTool": 7,
        "n8n-nodes-base.executeWorkflowTrigger": 1
      },
      "business_value": "Automates email processes using @n8n/langchain.lmChatOpenAi, set, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.580720"
    },
    {
      "original_filename": "ai_driven_ai_process_splitinbatches_woocommerce.json",
      "workflow_name": "AI-Driven WooCommerce Product Importer with SEO",
      "suggested_filename": "ai_driven_ai_process_splitinbatches_woocommerce.json",
      "category": "AI",
      "business_function": "driven",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatOpenRouter",
        "@n8n/langchain.chainLlm",
        "googleSheets",
        "code",
        "wooCommerce",
        "splitInBatches",
        "telegram",
        "@n8n/langchain.outputParserStructured",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.wooCommerce": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.telegram": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates driven processes using manualTrigger, @n8n/langchain.lmChatOpenRouter, @n8n/langchain.chainLlm",
      "analysis_timestamp": "2025-06-01T16:06:48.581092"
    },
    {
      "original_filename": "util_1048_workflow_1048_automate_webflow_manual.json",
      "workflow_name": "util_1048_workflow_1048_automate_webflow_manual",
      "suggested_filename": "util_1048_workflow_1048_automate_webflow_manual.json",
      "category": "UTIL",
      "business_function": "1048",
      "key_integrations": [
        "manualTrigger",
        "webflow"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.webflow": 3
      },
      "business_value": "Automates 1048 processes using manualTrigger, webflow",
      "analysis_timestamp": "2025-06-01T16:06:48.581305"
    },
    {
      "original_filename": "data_1325_workflow_1325_automate_dropcontact_calendly.json",
      "workflow_name": "data_1325_workflow_1325_automate_dropcontact_calendly",
      "suggested_filename": "data_1325_workflow_1325_automate_dropcontact_calendly.json",
      "category": "DATA",
      "business_function": "1325",
      "key_integrations": [
        "notion",
        "dropcontact",
        "calendlyTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.dropcontact": 1,
        "n8n-nodes-base.calendlyTrigger": 1
      },
      "business_value": "Automates 1325 processes using notion, dropcontact, calendlyTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.581523"
    },
    {
      "original_filename": "ai_contact_automate_n8nnodeslangchaintextclassifier_emailsend_2.json",
      "workflow_name": "Contact Form Text Classifier for eCommerce",
      "suggested_filename": "ai_contact_automate_n8nnodeslangchaintextclassifier_emailsend_2.json",
      "category": "AI",
      "business_function": "contact",
      "key_integrations": [
        "formTrigger",
        "@n8n/langchain.textClassifier",
        "@n8n/langchain.lmChatOpenAi",
        "emailSend",
        "googleSheets",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.emailSend": 5,
        "n8n-nodes-base.googleSheets": 5,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates contact processes using formTrigger, @n8n/langchain.textClassifier, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.581857"
    },
    {
      "original_filename": "ai_2006_workflow_2006_automate_n8nnodeslangchainchat_httprequest.json",
      "workflow_name": "ai_2006_workflow_2006_automate_n8nnodeslangchainchat_httprequest",
      "suggested_filename": "ai_2006_workflow_2006_automate_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "2006",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "executeWorkflowTrigger",
        "set",
        "httpRequest",
        "if",
        "markdown",
        "@n8n/langchain.toolWorkflow"
      ],
      "trigger_type": "chat",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.set": 7,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.markdown": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1
      },
      "business_value": "Automates 2006 processes using stickyNote, @n8n/langchain.chatTrigger, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.582193"
    },
    {
      "original_filename": "ai_hiring_extract_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstructu_2.json",
      "workflow_name": "HN Who is Hiring Scrape",
      "suggested_filename": "ai_hiring_extract_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstructu_2.json",
      "category": "AI",
      "business_function": "hiring",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "splitOut",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "httpRequest",
        "set",
        "filter",
        "@n8n/langchain.chainLlm",
        "code"
      ],
      "trigger_type": "chat",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.splitOut": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.filter": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.airtable": 1
      },
      "business_value": "Automates hiring processes using manualTrigger, stickyNote, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.582664"
    },
    {
      "original_filename": "util_1306_workflow_1306_automate_webhook_respondtowebhook_webhook.json",
      "workflow_name": "util_1306_workflow_1306_automate_webhook_respondtowebhook_webhook",
      "suggested_filename": "util_1306_workflow_1306_automate_webhook_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "1306",
      "key_integrations": [
        "respondToWebhook",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 1306 processes using respondToWebhook, webhook",
      "analysis_timestamp": "2025-06-01T16:06:48.582896"
    },
    {
      "original_filename": "comm_2120_workflow_2120_automate_gmail_httprequest.json",
      "workflow_name": "comm_2120_workflow_2120_automate_gmail_httprequest",
      "suggested_filename": "comm_2120_workflow_2120_automate_gmail_httprequest.json",
      "category": "COMM",
      "business_function": "2120",
      "key_integrations": [
        "formTrigger",
        "if",
        "stickyNote",
        "httpRequest",
        "hunter",
        "gmail"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.hunter": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates 2120 processes using formTrigger, if, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.583195"
    },
    {
      "original_filename": "util_1746_workflow_1746_automate_n8ntrainingcustomerdatastore_manual.json",
      "workflow_name": "util_1746_workflow_1746_automate_n8ntrainingcustomerdatastore_manual",
      "suggested_filename": "util_1746_workflow_1746_automate_n8ntrainingcustomerdatastore_manual.json",
      "category": "UTIL",
      "business_function": "1746",
      "key_integrations": [
        "manualTrigger",
        "n8nTrainingCustomerDatastore",
        "stickyNote",
        "if",
        "switch"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.n8nTrainingCustomerDatastore": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates 1746 processes using manualTrigger, n8nTrainingCustomerDatastore, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.583325"
    },
    {
      "original_filename": "comm_1605_workflow_1605_automate_spreadsheetfile_httprequest.json",
      "workflow_name": "comm_1605_workflow_1605_automate_spreadsheetfile_httprequest",
      "suggested_filename": "comm_1605_workflow_1605_automate_spreadsheetfile_httprequest.json",
      "category": "COMM",
      "business_function": "1605",
      "key_integrations": [
        "switch",
        "telegram",
        "telegramTrigger",
        "function",
        "httpRequest",
        "spreadsheetFile",
        "writeBinaryFile",
        "set",
        "if",
        "readBinaryFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.telegram": 6,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.writeBinaryFile": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.readBinaryFile": 1,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.executeCommand": 1
      },
      "business_value": "Automates 1605 processes using switch, telegram, telegramTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.583610"
    },
    {
      "original_filename": "ai_daily_ai_process_gmail_airtop_cron.json",
      "workflow_name": "PG&E Daily Cost Tracker",
      "suggested_filename": "ai_daily_ai_process_gmail_airtop_cron.json",
      "category": "AI",
      "business_function": "daily",
      "key_integrations": [
        "scheduleTrigger",
        "airtop",
        "set",
        "wait",
        "gmail",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.airtop": 10,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates daily processes using scheduleTrigger, airtop, set",
      "analysis_timestamp": "2025-06-01T16:06:48.583887"
    },
    {
      "original_filename": "ai_3446_workflow_3446_automate_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "workflow_name": "ai_3446_workflow_3446_automate_splitinbatches_n8nnodeslangchainchainllm_cron",
      "suggested_filename": "ai_3446_workflow_3446_automate_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "3446",
      "key_integrations": [
        "scheduleTrigger",
        "microsoftExcel",
        "set",
        "@n8n/langchain.lmChatOpenAi",
        "aggregate",
        "splitOut",
        "splitInBatches",
        "@n8n/langchain.chainLlm",
        "merge",
        "httpRequest"
      ],
      "trigger_type": "cron",
      "complexity_score": 33,
      "complexity": "High",
      "total_nodes": 33,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.microsoftExcel": 1,
        "n8n-nodes-base.set": 7,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.splitOut": 3,
        "n8n-nodes-base.splitInBatches": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.microsoftOutlook": 1,
        "n8n-nodes-base.stickyNote": 8
      },
      "business_value": "Automates 3446 processes using scheduleTrigger, microsoftExcel, set",
      "analysis_timestamp": "2025-06-01T16:06:48.584238"
    },
    {
      "original_filename": "ai_unsubscribe_ai_process_gmail_gmail.json",
      "workflow_name": "Unsubscribe Mautic contacts from automated unsubscribe emails",
      "suggested_filename": "ai_unsubscribe_ai_process_gmail_gmail.json",
      "category": "AI",
      "business_function": "unsubscribe",
      "key_integrations": [
        "gmailTrigger",
        "if",
        "mautic",
        "gmail",
        "code",
        "stickyNote",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.mautic": 4,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates unsubscribe processes using gmailTrigger, if, mautic",
      "analysis_timestamp": "2025-06-01T16:06:48.584522"
    },
    {
      "original_filename": "ai_2326_workflow_2326_automate_slack_n8nnodeslangchainoutputparserstructured_cro.json",
      "workflow_name": "ai_2326_workflow_2326_automate_slack_n8nnodeslangchainoutputparserstructured_cro",
      "suggested_filename": "ai_2326_workflow_2326_automate_slack_n8nnodeslangchainoutputparserstructured_cro.json",
      "category": "AI",
      "business_function": "2326",
      "key_integrations": [
        "splitOut",
        "slack",
        "code",
        "if",
        "googleCalendar",
        "set",
        "filter",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.toolSerpApi",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 33,
      "complexity": "High",
      "total_nodes": 33,
      "node_types": {
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.slack": 5,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.googleCalendar": 3,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.filter": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.toolSerpApi": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 11,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates 2326 processes using splitOut, slack, code",
      "analysis_timestamp": "2025-06-01T16:06:48.584926"
    },
    {
      "original_filename": "comm_realtime_sync_httprequest_comparedatasets_webhook.json",
      "workflow_name": "Realtime Notion Todoist 2-way Sync Template",
      "suggested_filename": "comm_realtime_sync_httprequest_comparedatasets_webhook.json",
      "category": "COMM",
      "business_function": "realtime",
      "key_integrations": [
        "httpRequest",
        "notion",
        "code",
        "form",
        "if",
        "crypto",
        "webhook",
        "respondToWebhook",
        "formTrigger",
        "todoist"
      ],
      "trigger_type": "webhook",
      "complexity_score": 246,
      "complexity": "High",
      "total_nodes": 246,
      "node_types": {
        "n8n-nodes-base.httpRequest": 12,
        "n8n-nodes-base.notion": 15,
        "n8n-nodes-base.code": 17,
        "n8n-nodes-base.form": 4,
        "n8n-nodes-base.if": 18,
        "n8n-nodes-base.crypto": 4,
        "n8n-nodes-base.webhook": 4,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.formTrigger": 2,
        "n8n-nodes-base.todoist": 12,
        "n8n-nodes-base.compareDatasets": 1,
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.set": 22,
        "n8n-nodes-base.redis": 11,
        "n8n-nodes-base.filter": 17,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.stickyNote": 72,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.noOp": 3,
        "n8n-nodes-base.switch": 3,
        "n8n-nodes-base.executionData": 7,
        "n8n-nodes-base.executeWorkflow": 2,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.stopAndError": 3,
        "n8n-nodes-base.wait": 3
      },
      "business_value": "Automates realtime processes using httpRequest, notion, code",
      "analysis_timestamp": "2025-06-01T16:06:48.586673"
    },
    {
      "original_filename": "ai_mails2notion_ai_process_n8nnodeslangchaincalculator_n8nnodeslangchainoutputpa_2.json",
      "workflow_name": "mails2notion V2",
      "suggested_filename": "ai_mails2notion_ai_process_n8nnodeslangchaincalculator_n8nnodeslangchainoutputpa_2.json",
      "category": "AI",
      "business_function": "mails2notion",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolCalculator",
        "@n8n/langchain.outputParserStructured",
        "gmail",
        "filter",
        "set",
        "airtable",
        "httpRequest",
        "gmailTrigger",
        "manualTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 38,
      "complexity": "High",
      "total_nodes": 38,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.toolCalculator": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 2,
        "n8n-nodes-base.gmail": 5,
        "n8n-nodes-base.filter": 3,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 13,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.agent": 2
      },
      "business_value": "Automates mails2notion processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.toolCalculator, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.587221"
    },
    {
      "original_filename": "util_tool_automate_httprequest_executeworkflow.json",
      "workflow_name": "util_tool_automate_httprequest_executeworkflow",
      "suggested_filename": "util_tool_automate_httprequest_executeworkflow.json",
      "category": "UTIL",
      "business_function": "tool",
      "key_integrations": [
        "executeWorkflowTrigger",
        "httpRequest",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates tool processes using executeWorkflowTrigger, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.587489"
    },
    {
      "original_filename": "util_1150_workflow_1150_automate_movebinarydata_httprequest_cron.json",
      "workflow_name": "util_1150_workflow_1150_automate_movebinarydata_httprequest_cron",
      "suggested_filename": "util_1150_workflow_1150_automate_movebinarydata_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "1150",
      "key_integrations": [
        "manualTrigger",
        "merge",
        "moveBinaryData",
        "function",
        "httpRequest",
        "functionItem",
        "googleDrive",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.moveBinaryData": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates 1150 processes using manualTrigger, merge, moveBinaryData",
      "analysis_timestamp": "2025-06-01T16:06:48.587611"
    },
    {
      "original_filename": "ai_3304_workflow_3304_automate_emailsend_form.json",
      "workflow_name": "ai_3304_workflow_3304_automate_emailsend_form",
      "suggested_filename": "ai_3304_workflow_3304_automate_emailsend_form.json",
      "category": "AI",
      "business_function": "3304",
      "key_integrations": [
        "brightdata.brightData",
        "document-generator.documentGenerator",
        "splitOut",
        "emailSend",
        "form",
        "html",
        "@n8n/langchain.openAi",
        "formTrigger"
      ],
      "trigger_type": "email",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-brightdata.brightData": 1,
        "n8n-nodes-document-generator.documentGenerator": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.form": 1,
        "n8n-nodes-base.html": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.formTrigger": 1
      },
      "business_value": "Automates 3304 processes using brightdata.brightData, document-generator.documentGenerator, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.587870"
    },
    {
      "original_filename": "util_2646_workflow_2646_automate_schedule_manual_cron.json",
      "workflow_name": "util_2646_workflow_2646_automate_schedule_manual_cron",
      "suggested_filename": "util_2646_workflow_2646_automate_schedule_manual_cron.json",
      "category": "UTIL",
      "business_function": "2646",
      "key_integrations": [
        "manualTrigger",
        "n8n",
        "if",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.n8n": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 2646 processes using manualTrigger, n8n, if",
      "analysis_timestamp": "2025-06-01T16:06:48.588092"
    },
    {
      "original_filename": "util_578_workflow_578_automate_readbinaryfiles_manual.json",
      "workflow_name": "util_578_workflow_578_automate_readbinaryfiles_manual",
      "suggested_filename": "util_578_workflow_578_automate_readbinaryfiles_manual.json",
      "category": "UTIL",
      "business_function": "578",
      "key_integrations": [
        "manualTrigger",
        "readBinaryFiles"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readBinaryFiles": 1
      },
      "business_value": "Automates 578 processes using manualTrigger, readBinaryFiles",
      "analysis_timestamp": "2025-06-01T16:06:48.588300"
    },
    {
      "original_filename": "ai_attachments_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparse.json",
      "workflow_name": "Attachments Gmail to drive and google sheets",
      "suggested_filename": "ai_attachments_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparse.json",
      "category": "AI",
      "business_function": "attachments",
      "key_integrations": [
        "stickyNote",
        "gmailTrigger",
        "set",
        "httpRequest",
        "googleDrive",
        "gmail",
        "extractFromFile",
        "@n8n/langchain.lmOpenAi",
        "@n8n/langchain.outputParserStructured",
        "googleSheets"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.googleDrive": 3,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.lmOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.googleSheets": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates attachments processes using stickyNote, gmailTrigger, set",
      "analysis_timestamp": "2025-06-01T16:06:48.588586"
    },
    {
      "original_filename": "comm_automate_gmail_hunter.json",
      "workflow_name": "My workflow",
      "suggested_filename": "comm_automate_gmail_hunter.json",
      "category": "COMM",
      "business_function": "automate",
      "key_integrations": [
        "formTrigger",
        "googleSheets",
        "gmail",
        "discord",
        "stickyNote",
        "if",
        "hunter"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.discord": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.hunter": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates automate processes using formTrigger, googleSheets, gmail",
      "analysis_timestamp": "2025-06-01T16:06:48.588921"
    },
    {
      "original_filename": "comm_1221_workflow_1221_automate_pipedrive_calendly.json",
      "workflow_name": "comm_1221_workflow_1221_automate_pipedrive_calendly",
      "suggested_filename": "comm_1221_workflow_1221_automate_pipedrive_calendly.json",
      "category": "COMM",
      "business_function": "1221",
      "key_integrations": [
        "calendlyTrigger",
        "pipedrive",
        "dateTime",
        "slack",
        "wait"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.calendlyTrigger": 1,
        "n8n-nodes-base.pipedrive": 1,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.wait": 1
      },
      "business_value": "Automates 1221 processes using calendlyTrigger, pipedrive, dateTime",
      "analysis_timestamp": "2025-06-01T16:06:48.589139"
    },
    {
      "original_filename": "util_1914_workflow_1914_automate_spreadsheetfile_microsoftsql.json",
      "workflow_name": "util_1914_workflow_1914_automate_spreadsheetfile_microsoftsql",
      "suggested_filename": "util_1914_workflow_1914_automate_spreadsheetfile_microsoftsql.json",
      "category": "UTIL",
      "business_function": "1914",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "set",
        "microsoftSql",
        "spreadsheetFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.microsoftSql": 1,
        "n8n-nodes-base.spreadsheetFile": 1
      },
      "business_value": "Automates 1914 processes using manualTrigger, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:48.589341"
    },
    {
      "original_filename": "comm_discord_automate_httprequest_discord.json",
      "workflow_name": "Discord MCP Server",
      "suggested_filename": "comm_discord_automate_httprequest_discord.json",
      "category": "COMM",
      "business_function": "discord",
      "key_integrations": [
        "discordTool",
        "@n8n/langchain.mcpTrigger",
        "httpRequestTool",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.discordTool": 8,
        "@n8n/n8n-nodes-langchain.mcpTrigger": 1,
        "n8n-nodes-base.httpRequestTool": 1,
        "n8n-nodes-base.stickyNote": 6
      },
      "business_value": "Automates discord processes using discordTool, @n8n/langchain.mcpTrigger, httpRequestTool",
      "analysis_timestamp": "2025-06-01T16:06:48.589610"
    },
    {
      "original_filename": "data_991_workflow_991_automate_autopilot_airtable.json",
      "workflow_name": "data_991_workflow_991_automate_autopilot_airtable",
      "suggested_filename": "data_991_workflow_991_automate_autopilot_airtable.json",
      "category": "DATA",
      "business_function": "991",
      "key_integrations": [
        "autopilotTrigger",
        "set",
        "airtable"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.autopilotTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtable": 1
      },
      "business_value": "Automates 991 processes using autopilotTrigger, set, airtable",
      "analysis_timestamp": "2025-06-01T16:06:48.589812"
    },
    {
      "original_filename": "util_100_workflow_100_automate_generic.json",
      "workflow_name": "util_100_workflow_100_automate_generic",
      "suggested_filename": "util_100_workflow_100_automate_generic.json",
      "category": "UTIL",
      "business_function": "100",
      "key_integrations": [
        "function",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.function": 4,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates 100 processes using function, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.589926"
    },
    {
      "original_filename": "comm_community_monitor_slack_emailsend_cron.json",
      "workflow_name": "n8n Community Topic Tracker by Keyword",
      "suggested_filename": "comm_community_monitor_slack_emailsend_cron.json",
      "category": "COMM",
      "business_function": "community",
      "key_integrations": [
        "googleSheets",
        "scheduleTrigger",
        "stickyNote",
        "splitOut",
        "httpRequest",
        "googleSheetsTrigger",
        "slack",
        "emailSend"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.googleSheetsTrigger": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.emailSend": 1
      },
      "business_value": "Automates community processes using googleSheets, scheduleTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.590163"
    },
    {
      "original_filename": "ai_openai_ai_process_httprequest_webhook_webhook_1.json",
      "workflow_name": "OpenAI Assistant for Hubspot Chat",
      "suggested_filename": "ai_openai_ai_process_httprequest_webhook_webhook_1.json",
      "category": "AI",
      "business_function": "openai",
      "key_integrations": [
        "httpRequest",
        "switch",
        "wait",
        "code",
        "if",
        "airtable",
        "stickyNote",
        "@n8n/langchain.openAi",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 34,
      "complexity": "High",
      "total_nodes": 34,
      "node_types": {
        "n8n-nodes-base.httpRequest": 11,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.wait": 4,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.stickyNote": 8,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates openai processes using httpRequest, switch, wait",
      "analysis_timestamp": "2025-06-01T16:06:48.590568"
    },
    {
      "original_filename": "util_2280_workflow_2280_automate_httprequest_manual.json",
      "workflow_name": "util_2280_workflow_2280_automate_httprequest_manual",
      "suggested_filename": "util_2280_workflow_2280_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "2280",
      "key_integrations": [
        "manualTrigger",
        "set",
        "httpRequest",
        "extractFromFile",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates 2280 processes using manualTrigger, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.590851"
    },
    {
      "original_filename": "util_getbible_read_httprequest_executeworkflow.json",
      "workflow_name": "getBible Query v1.0",
      "suggested_filename": "util_getbible_read_httprequest_executeworkflow.json",
      "category": "UTIL",
      "business_function": "getbible",
      "key_integrations": [
        "stickyNote",
        "executeWorkflowTrigger",
        "code",
        "httpRequest",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates getbible processes using stickyNote, executeWorkflowTrigger, code",
      "analysis_timestamp": "2025-06-01T16:06:48.591086"
    },
    {
      "original_filename": "biz_sync_sync_odoo_shopify.json",
      "workflow_name": "Sync New Shopify Customers to Odoo Contacts",
      "suggested_filename": "biz_sync_sync_odoo_shopify.json",
      "category": "BIZ",
      "business_function": "sync",
      "key_integrations": [
        "filter",
        "odoo",
        "shopifyTrigger",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.odoo": 2,
        "n8n-nodes-base.shopifyTrigger": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates sync processes using filter, odoo, shopifyTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.591301"
    },
    {
      "original_filename": "ai_chrome_ai_process_webhook_n8nnodeslangchainopenai_webhook_2.json",
      "workflow_name": "chrome extension backend with AI",
      "suggested_filename": "ai_chrome_ai_process_webhook_n8nnodeslangchainopenai_webhook_2.json",
      "category": "AI",
      "business_function": "chrome",
      "key_integrations": [
        "webhook",
        "@n8n/langchain.openAi",
        "respondToWebhook",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates chrome processes using webhook, @n8n/langchain.openAi, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:48.591512"
    },
    {
      "original_filename": "ai_openai_ai_process_n8nnodeslangchainopenaiassistant_n8nnodeslangchainmanualcha.json",
      "workflow_name": "OpenAI Assistant with custom n8n tools",
      "suggested_filename": "ai_openai_ai_process_n8nnodeslangchainopenaiassistant_n8nnodeslangchainmanualcha.json",
      "category": "AI",
      "business_function": "openai",
      "key_integrations": [
        "@n8n/langchain.manualChatTrigger",
        "@n8n/langchain.openAiAssistant",
        "executeWorkflowTrigger",
        "code",
        "if",
        "stickyNote",
        "set",
        "@n8n/langchain.toolWorkflow",
        "summarize",
        "merge"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "@n8n/n8n-nodes-langchain.manualChatTrigger": 1,
        "@n8n/n8n-nodes-langchain.openAiAssistant": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.summarize": 1,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.toolCode": 1
      },
      "business_value": "Automates openai processes using @n8n/langchain.manualChatTrigger, @n8n/langchain.openAiAssistant, executeWorkflowTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.591770"
    },
    {
      "original_filename": "data_1401_workflow_1401_automate_googlesheets_httprequest.json",
      "workflow_name": "data_1401_workflow_1401_automate_googlesheets_httprequest",
      "suggested_filename": "data_1401_workflow_1401_automate_googlesheets_httprequest.json",
      "category": "DATA",
      "business_function": "1401",
      "key_integrations": [
        "httpRequest",
        "awsRekognition",
        "googleSheets",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.awsRekognition": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 1401 processes using httpRequest, awsRekognition, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.591992"
    },
    {
      "original_filename": "ai_linechatbot_automate_httprequest_webhook_webhook.json",
      "workflow_name": "(G) LineChatBot + Google Sheets (as a memory)",
      "suggested_filename": "ai_linechatbot_automate_httprequest_webhook_webhook.json",
      "category": "AI",
      "business_function": "linechatbot",
      "key_integrations": [
        "webhook",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatGoogleGemini",
        "set",
        "httpRequest",
        "googleSheets",
        "stickyNote",
        "code"
      ],
      "trigger_type": "webhook",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates linechatbot processes using webhook, @n8n/langchain.agent, @n8n/langchain.lmChatGoogleGemini",
      "analysis_timestamp": "2025-06-01T16:06:48.592319"
    },
    {
      "original_filename": "util_1114_workflow_1114_automate_microsofttodo_manual.json",
      "workflow_name": "util_1114_workflow_1114_automate_microsofttodo_manual",
      "suggested_filename": "util_1114_workflow_1114_automate_microsofttodo_manual.json",
      "category": "UTIL",
      "business_function": "1114",
      "key_integrations": [
        "manualTrigger",
        "microsoftToDo"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.microsoftToDo": 3
      },
      "business_value": "Automates 1114 processes using manualTrigger, microsoftToDo",
      "analysis_timestamp": "2025-06-01T16:06:48.592529"
    },
    {
      "original_filename": "ai_pdf2blog_automate_n8nnodeslangchainoutputparserstructured_ghost.json",
      "workflow_name": "📄🛠️PDF2Blog",
      "suggested_filename": "ai_pdf2blog_automate_n8nnodeslangchainoutputparserstructured_ghost.json",
      "category": "AI",
      "business_function": "pdf2blog",
      "key_integrations": [
        "stickyNote",
        "formTrigger",
        "extractFromFile",
        "ghost",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "code",
        "if",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.ghost": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates pdf2blog processes using stickyNote, formTrigger, extractFromFile",
      "analysis_timestamp": "2025-06-01T16:06:48.592817"
    },
    {
      "original_filename": "ai_crypto_analyze_rssfeedread_n8nnodeslangchainlmchatopenai.json",
      "workflow_name": "Crypto News & Sentiment",
      "suggested_filename": "ai_crypto_analyze_rssfeedread_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "crypto",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "@n8n/langchain.agent",
        "rssFeedRead",
        "merge",
        "code",
        "stickyNote",
        "@n8n/langchain.openAi",
        "telegram",
        "telegramTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 30,
      "complexity": "High",
      "total_nodes": 30,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 3,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.rssFeedRead": 9,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.stickyNote": 10,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.telegramTrigger": 1
      },
      "business_value": "Automates crypto processes using @n8n/langchain.lmChatOpenAi, set, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.593164"
    },
    {
      "original_filename": "util_2417_workflow_2417_automate_respondtowebhook_httprequest.json",
      "workflow_name": "util_2417_workflow_2417_automate_respondtowebhook_httprequest",
      "suggested_filename": "util_2417_workflow_2417_automate_respondtowebhook_httprequest.json",
      "category": "UTIL",
      "business_function": "2417",
      "key_integrations": [
        "set",
        "respondToWebhook",
        "stickyNote",
        "s3",
        "formTrigger",
        "httpRequest",
        "switch"
      ],
      "trigger_type": "webhook",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.set": 6,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.s3": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates 2417 processes using set, respondToWebhook, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.593563"
    },
    {
      "original_filename": "ai_search_ai_process_schedule_httprequest_cron.json",
      "workflow_name": "Search news using Perplexity AI and post to X (Twitter)",
      "suggested_filename": "ai_search_ai_process_schedule_httprequest_cron.json",
      "category": "AI",
      "business_function": "search",
      "key_integrations": [
        "scheduleTrigger",
        "set",
        "httpRequest",
        "twitter"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.twitter": 1
      },
      "business_value": "Automates search processes using scheduleTrigger, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.593791"
    },
    {
      "original_filename": "ai_google_automate_n8nnodeslangchaincalculator_googledocs.json",
      "workflow_name": "Google Doc Summarizer to Google Sheets",
      "suggested_filename": "ai_google_automate_n8nnodeslangchaincalculator_googledocs.json",
      "category": "AI",
      "business_function": "google",
      "key_integrations": [
        "googleDocs",
        "@n8n/langchain.toolWikipedia",
        "@n8n/langchain.toolCalculator",
        "googleSheets",
        "stickyNote",
        "googleDriveTrigger",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.googleDocs": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates google processes using googleDocs, @n8n/langchain.toolWikipedia, @n8n/langchain.toolCalculator",
      "analysis_timestamp": "2025-06-01T16:06:48.594055"
    },
    {
      "original_filename": "ai_auto_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruct.json",
      "workflow_name": "ai_auto_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruct",
      "suggested_filename": "ai_auto_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruct.json",
      "category": "AI",
      "business_function": "auto",
      "key_integrations": [
        "gmailTrigger",
        "gmail",
        "set",
        "splitOut",
        "merge",
        "aggregate",
        "@n8n/langchain.chainLlm",
        "stickyNote",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.gmail": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.stickyNote": 8,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates auto processes using gmailTrigger, gmail, set",
      "analysis_timestamp": "2025-06-01T16:06:48.594348"
    },
    {
      "original_filename": "util_1690_workflow_1690_automate_itemlists_movebinarydata.json",
      "workflow_name": "util_1690_workflow_1690_automate_itemlists_movebinarydata",
      "suggested_filename": "util_1690_workflow_1690_automate_itemlists_movebinarydata.json",
      "category": "UTIL",
      "business_function": "1690",
      "key_integrations": [
        "manualTrigger",
        "itemLists",
        "markdown",
        "function",
        "emailSend",
        "httpRequest",
        "merge",
        "moveBinaryData"
      ],
      "trigger_type": "email",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.itemLists": 2,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.moveBinaryData": 1
      },
      "business_value": "Automates 1690 processes using manualTrigger, itemLists, markdown",
      "analysis_timestamp": "2025-06-01T16:06:48.594595"
    },
    {
      "original_filename": "util_2046_workflow_2046_automate_httprequest_manual.json",
      "workflow_name": "util_2046_workflow_2046_automate_httprequest_manual",
      "suggested_filename": "util_2046_workflow_2046_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "2046",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "set",
        "manualTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 47,
      "complexity": "High",
      "total_nodes": 47,
      "node_types": {
        "n8n-nodes-base.stickyNote": 16,
        "n8n-nodes-base.httpRequest": 20,
        "n8n-nodes-base.set": 10,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates 2046 processes using stickyNote, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.595076"
    },
    {
      "original_filename": "ai_split_automate_supabase_n8nnodeslangchainmemorypostgreschat.json",
      "workflow_name": "A/B Split Testing",
      "suggested_filename": "ai_split_automate_supabase_n8nnodeslangchainmemorypostgreschat.json",
      "category": "AI",
      "business_function": "split",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "supabase",
        "if",
        "set",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryPostgresChat",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.supabase": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryPostgresChat": 1,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates split processes using @n8n/langchain.chatTrigger, @n8n/langchain.agent, supabase",
      "analysis_timestamp": "2025-06-01T16:06:48.595407"
    },
    {
      "original_filename": "ai_2552_workflow_2552_automate_httprequest_n8nnodeslangchainlmchatopenai.json",
      "workflow_name": "ai_2552_workflow_2552_automate_httprequest_n8nnodeslangchainlmchatopenai",
      "suggested_filename": "ai_2552_workflow_2552_automate_httprequest_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "2552",
      "key_integrations": [
        "manualTrigger",
        "splitOut",
        "googleSheets",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.informationExtractor",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleSheets": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 2552 processes using manualTrigger, splitOut, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.595689"
    },
    {
      "original_filename": "biz_1776_workflow_1776_automate_pipedrive_itemlists_cron.json",
      "workflow_name": "biz_1776_workflow_1776_automate_pipedrive_itemlists_cron",
      "suggested_filename": "biz_1776_workflow_1776_automate_pipedrive_itemlists_cron.json",
      "category": "BIZ",
      "business_function": "1776",
      "key_integrations": [
        "stripe",
        "set",
        "merge",
        "pipedrive",
        "functionItem",
        "itemLists",
        "httpRequest",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.stripe": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.pipedrive": 2,
        "n8n-nodes-base.functionItem": 2,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates 1776 processes using stripe, set, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.595956"
    },
    {
      "original_filename": "ai_transcribing_ai_process_n8nnodeslangchainchainllm_httprequest.json",
      "workflow_name": "ai_transcribing_ai_process_n8nnodeslangchainchainllm_httprequest",
      "suggested_filename": "ai_transcribing_ai_process_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "transcribing",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "sort",
        "stickyNote",
        "googleDrive",
        "httpRequest",
        "compression",
        "code",
        "editImage",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.compression": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.editImage": 1,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates transcribing processes using manualTrigger, @n8n/langchain.lmChatGoogleGemini, sort",
      "analysis_timestamp": "2025-06-01T16:06:48.596290"
    },
    {
      "original_filename": "content_wordpress_automate_spreadsheetfile_writebinaryfile.json",
      "workflow_name": "Wordpress-to-csv",
      "suggested_filename": "content_wordpress_automate_spreadsheetfile_writebinaryfile.json",
      "category": "CONTENT",
      "business_function": "wordpress",
      "key_integrations": [
        "manualTrigger",
        "wordpress",
        "spreadsheetFile",
        "writeBinaryFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.writeBinaryFile": 1
      },
      "business_value": "Automates wordpress processes using manualTrigger, wordpress, spreadsheetFile",
      "analysis_timestamp": "2025-06-01T16:06:48.596498"
    },
    {
      "original_filename": "ai_store_ai_process_n8nnodeslangchaintextsplittertokensplitter_n8nnodeslangchain_1.json",
      "workflow_name": "Store Notion's Pages as Vector Documents into Supabase with OpenAI",
      "suggested_filename": "ai_store_ai_process_n8nnodeslangchaintextsplittertokensplitter_n8nnodeslangchain_1.json",
      "category": "AI",
      "business_function": "store",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.textSplitterTokenSplitter",
        "notionTrigger",
        "notion",
        "filter",
        "summarize",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.vectorStoreSupabase"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.stickyNote": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.notionTrigger": 1,
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.summarize": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase": 1
      },
      "business_value": "Automates store processes using stickyNote, @n8n/langchain.embeddingsOpenAi, @n8n/langchain.textSplitterTokenSplitter",
      "analysis_timestamp": "2025-06-01T16:06:48.596740"
    },
    {
      "original_filename": "comm_generate_generate_webhook_slack_webhook.json",
      "workflow_name": "Generate google meet links in slack",
      "suggested_filename": "comm_generate_generate_webhook_slack_webhook.json",
      "category": "COMM",
      "business_function": "generate",
      "key_integrations": [
        "webhook",
        "stickyNote",
        "googleCalendar",
        "slack"
      ],
      "trigger_type": "webhook",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.googleCalendar": 2,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates generate processes using webhook, stickyNote, googleCalendar",
      "analysis_timestamp": "2025-06-01T16:06:48.596977"
    },
    {
      "original_filename": "comm_680_workflow_680_automate_manual_microsoftteams.json",
      "workflow_name": "comm_680_workflow_680_automate_manual_microsoftteams",
      "suggested_filename": "comm_680_workflow_680_automate_manual_microsoftteams.json",
      "category": "COMM",
      "business_function": "680",
      "key_integrations": [
        "manualTrigger",
        "microsoftTeams"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.microsoftTeams": 3
      },
      "business_value": "Automates 680 processes using manualTrigger, microsoftTeams",
      "analysis_timestamp": "2025-06-01T16:06:48.597199"
    },
    {
      "original_filename": "util_standup_automate_writebinaryfile_movebinarydata_1.json",
      "workflow_name": "Standup Bot - Override Config",
      "suggested_filename": "util_standup_automate_writebinaryfile_movebinarydata_1.json",
      "category": "UTIL",
      "business_function": "standup",
      "key_integrations": [
        "manualTrigger",
        "writeBinaryFile",
        "moveBinaryData"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.writeBinaryFile": 1,
        "n8n-nodes-base.moveBinaryData": 1
      },
      "business_value": "Automates standup processes using manualTrigger, writeBinaryFile, moveBinaryData",
      "analysis_timestamp": "2025-06-01T16:06:48.597404"
    },
    {
      "original_filename": "util_913_workflow_913_automate_movebinarydata_executecommand.json",
      "workflow_name": "util_913_workflow_913_automate_movebinarydata_executecommand",
      "suggested_filename": "util_913_workflow_913_automate_movebinarydata_executecommand.json",
      "category": "UTIL",
      "business_function": "913",
      "key_integrations": [
        "manualTrigger",
        "readBinaryFile",
        "moveBinaryData",
        "function",
        "executeCommand",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readBinaryFile": 1,
        "n8n-nodes-base.moveBinaryData": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.executeCommand": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 913 processes using manualTrigger, readBinaryFile, moveBinaryData",
      "analysis_timestamp": "2025-06-01T16:06:48.597640"
    },
    {
      "original_filename": "ai_dynamically_generate_httprequest_webhook_webhook_2.json",
      "workflow_name": "Dynamically generate HTML page from user request using OpenAI Structured Output",
      "suggested_filename": "ai_dynamically_generate_httprequest_webhook_webhook_2.json",
      "category": "AI",
      "business_function": "dynamically",
      "key_integrations": [
        "respondToWebhook",
        "httpRequest",
        "@n8n/langchain.openAi",
        "html",
        "stickyNote",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates dynamically processes using respondToWebhook, httpRequest, @n8n/langchain.openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.597879"
    },
    {
      "original_filename": "data_2151_workflow_2151_automate_httprequest_notion_cron.json",
      "workflow_name": "data_2151_workflow_2151_automate_httprequest_notion_cron",
      "suggested_filename": "data_2151_workflow_2151_automate_httprequest_notion_cron.json",
      "category": "DATA",
      "business_function": "2151",
      "key_integrations": [
        "scheduleTrigger",
        "n8n",
        "set",
        "httpRequest",
        "if",
        "notion",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.notion": 2,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 2151 processes using scheduleTrigger, n8n, set",
      "analysis_timestamp": "2025-06-01T16:06:48.598202"
    },
    {
      "original_filename": "ai_3057_workflow_3057_automate_n8nnodeslangchainserpapi_n8nnodeslangchainoutputp.json",
      "workflow_name": "ai_3057_workflow_3057_automate_n8nnodeslangchainserpapi_n8nnodeslangchainoutputp",
      "suggested_filename": "ai_3057_workflow_3057_automate_n8nnodeslangchainserpapi_n8nnodeslangchainoutputp.json",
      "category": "AI",
      "business_function": "3057",
      "key_integrations": [
        "telegramTrigger",
        "switch",
        "telegram",
        "@n8n/langchain.openAi",
        "set",
        "stickyNote",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolSerpApi",
        "@n8n/langchain.outputParserStructured"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.telegram": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolSerpApi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 3057 processes using telegramTrigger, switch, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.598562"
    },
    {
      "original_filename": "content_upload_create_manual_readbinaryfile.json",
      "workflow_name": "Upload video, create playlist and add video to playlist",
      "suggested_filename": "content_upload_create_manual_readbinaryfile.json",
      "category": "CONTENT",
      "business_function": "upload",
      "key_integrations": [
        "manualTrigger",
        "youTube",
        "readBinaryFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.youTube": 3,
        "n8n-nodes-base.readBinaryFile": 1
      },
      "business_value": "Automates upload processes using manualTrigger, youTube, readBinaryFile",
      "analysis_timestamp": "2025-06-01T16:06:48.598769"
    },
    {
      "original_filename": "ai_automated_automate_extractfromfile_googledrive.json",
      "workflow_name": "Automated Image Metadata Tagging",
      "suggested_filename": "ai_automated_automate_extractfromfile_googledrive.json",
      "category": "AI",
      "business_function": "automated",
      "key_integrations": [
        "extractFromFile",
        "convertToFile",
        "@n8n/langchain.openAi",
        "googleDrive",
        "googleDriveTrigger",
        "code",
        "stickyNote",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.convertToFile": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates automated processes using extractFromFile, convertToFile, @n8n/langchain.openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.599026"
    },
    {
      "original_filename": "ai_microsoft_ai_process_splitinbatches_n8nnodeslangchainoutputparserstructured_c_2.json",
      "workflow_name": "Microsoft Outlook AI Email Assistant",
      "suggested_filename": "ai_microsoft_ai_process_splitinbatches_n8nnodeslangchainoutputparserstructured_c_2.json",
      "category": "AI",
      "business_function": "microsoft",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "microsoftOutlook",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "if",
        "@n8n/langchain.agent",
        "scheduleTrigger",
        "mondayCom",
        "airtable"
      ],
      "trigger_type": "chat",
      "complexity_score": 28,
      "complexity": "High",
      "total_nodes": 28,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.microsoftOutlook": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.scheduleTrigger": 2,
        "n8n-nodes-base.mondayCom": 1,
        "n8n-nodes-base.airtable": 5,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates microsoft processes using manualTrigger, stickyNote, microsoftOutlook",
      "analysis_timestamp": "2025-06-01T16:06:48.599399"
    },
    {
      "original_filename": "ai_3640_workflow_3640_automate_splitinbatches_httprequest.json",
      "workflow_name": "ai_3640_workflow_3640_automate_splitinbatches_httprequest",
      "suggested_filename": "ai_3640_workflow_3640_automate_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "3640",
      "key_integrations": [
        "stickyNote",
        "manualTrigger",
        "splitInBatches",
        "set",
        "googleSheets",
        "if",
        "limit",
        "@n8n/langchain.openAi",
        "httpRequest",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.limit": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates 3640 processes using stickyNote, manualTrigger, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.599723"
    },
    {
      "original_filename": "util_2304_workflow_2304_automate_readwritefile_httprequest.json",
      "workflow_name": "util_2304_workflow_2304_automate_readwritefile_httprequest",
      "suggested_filename": "util_2304_workflow_2304_automate_readwritefile_httprequest.json",
      "category": "UTIL",
      "business_function": "2304",
      "key_integrations": [
        "manualTrigger",
        "readWriteFile",
        "stickyNote",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.httpRequest": 2
      },
      "business_value": "Automates 2304 processes using manualTrigger, readWriteFile, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.599971"
    },
    {
      "original_filename": "ai_open_ai_process_splitinbatches_n8nnodeslangchainmemorybufferwindow_1.json",
      "workflow_name": "Open Deep Research - AI-Powered Autonomous Research Workflow",
      "suggested_filename": "ai_open_ai_process_splitinbatches_n8nnodeslangchainmemorybufferwindow_1.json",
      "category": "AI",
      "business_function": "open",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatOpenRouter",
        "code",
        "httpRequest",
        "@n8n/langchain.agent",
        "splitInBatches",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolWikipedia",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "n8n-nodes-base.splitInBatches": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 2,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates open processes using @n8n/langchain.chatTrigger, @n8n/langchain.chainLlm, @n8n/langchain.lmChatOpenRouter",
      "analysis_timestamp": "2025-06-01T16:06:48.600253"
    },
    {
      "original_filename": "ai_store_ai_process_phantombuster_manual.json",
      "workflow_name": "Store the output of a phantom in Airtable",
      "suggested_filename": "ai_store_ai_process_phantombuster_manual.json",
      "category": "AI",
      "business_function": "store",
      "key_integrations": [
        "manualTrigger",
        "phantombuster",
        "set",
        "airtable"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.phantombuster": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtable": 1
      },
      "business_value": "Automates store processes using manualTrigger, phantombuster, set",
      "analysis_timestamp": "2025-06-01T16:06:48.600454"
    },
    {
      "original_filename": "util_user_automate_typeform_clickup.json",
      "workflow_name": "User Request Management",
      "suggested_filename": "util_user_automate_typeform_clickup.json",
      "category": "UTIL",
      "business_function": "user",
      "key_integrations": [
        "clickUp",
        "typeformTrigger",
        "set",
        "switch"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.clickUp": 1,
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates user processes using clickUp, typeformTrigger, set",
      "analysis_timestamp": "2025-06-01T16:06:48.600583"
    },
    {
      "original_filename": "util_create_create_affinity_manual.json",
      "workflow_name": "Create an organization in Affinity",
      "suggested_filename": "util_create_create_affinity_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "affinity"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.affinity": 1
      },
      "business_value": "Automates create processes using manualTrigger, affinity",
      "analysis_timestamp": "2025-06-01T16:06:48.600810"
    },
    {
      "original_filename": "ai_classify_classify_slack_n8nnodeslangchainchainllm.json",
      "workflow_name": "ai_classify_classify_slack_n8nnodeslangchainchainllm",
      "suggested_filename": "ai_classify_classify_slack_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "classify",
      "key_integrations": [
        "markdown",
        "lemlistTrigger",
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "slack",
        "lemlist",
        "httpRequest",
        "@n8n/langchain.chainLlm",
        "merge"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.lemlistTrigger": 1,
        "n8n-nodes-base.stickyNote": 8,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.lemlist": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates classify processes using markdown, lemlistTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.601187"
    },
    {
      "original_filename": "data_1236_workflow_1236_automate_webhook_airtable_webhook.json",
      "workflow_name": "data_1236_workflow_1236_automate_webhook_airtable_webhook",
      "suggested_filename": "data_1236_workflow_1236_automate_webhook_airtable_webhook.json",
      "category": "DATA",
      "business_function": "1236",
      "key_integrations": [
        "airtable",
        "redis",
        "set",
        "webhook",
        "function",
        "if"
      ],
      "trigger_type": "webhook",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.redis": 2,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.if": 2
      },
      "business_value": "Automates 1236 processes using airtable, redis, set",
      "analysis_timestamp": "2025-06-01T16:06:48.601446"
    },
    {
      "original_filename": "util_2317_workflow_2317_automate_readwritefile_httprequest.json",
      "workflow_name": "util_2317_workflow_2317_automate_readwritefile_httprequest",
      "suggested_filename": "util_2317_workflow_2317_automate_readwritefile_httprequest.json",
      "category": "UTIL",
      "business_function": "2317",
      "key_integrations": [
        "manualTrigger",
        "readWriteFile",
        "stickyNote",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.httpRequest": 2
      },
      "business_value": "Automates 2317 processes using manualTrigger, readWriteFile, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.601713"
    },
    {
      "original_filename": "ai_publish_automate_httprequest_manual.json",
      "workflow_name": "Publish Videos & Images - Blotato",
      "suggested_filename": "ai_publish_automate_httprequest_manual.json",
      "category": "AI",
      "business_function": "publish",
      "key_integrations": [
        "httpRequest",
        "stickyNote",
        "set",
        "airtable",
        "@n8n/langchain.openAi",
        "manualTrigger",
        "formTrigger",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 30,
      "complexity": "High",
      "total_nodes": 30,
      "node_types": {
        "n8n-nodes-base.httpRequest": 12,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.airtable": 3,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates publish processes using httpRequest, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:48.602356"
    },
    {
      "original_filename": "ai_contact_automate_airtable_n8nnodeslangchainlmchatopenai.json",
      "workflow_name": "🤖Contact Agent",
      "suggested_filename": "ai_contact_automate_airtable_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "contact",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "airtableTool",
        "@n8n/langchain.agent",
        "set",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.airtableTool": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1
      },
      "business_value": "Automates contact processes using @n8n/langchain.lmChatOpenAi, airtableTool, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.602710"
    },
    {
      "original_filename": "ai_airflow_ai_process_httprequest_stopanderror.json",
      "workflow_name": "airflow dag_run",
      "suggested_filename": "ai_airflow_ai_process_httprequest_stopanderror.json",
      "category": "AI",
      "business_function": "airflow",
      "key_integrations": [
        "httpRequest",
        "code",
        "stopAndError",
        "if",
        "switch",
        "executeWorkflowTrigger",
        "wait",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stopAndError": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates airflow processes using httpRequest, code, stopAndError",
      "analysis_timestamp": "2025-06-01T16:06:48.602999"
    },
    {
      "original_filename": "biz_1789_workflow_1789_automate_pipedrive_github.json",
      "workflow_name": "biz_1789_workflow_1789_automate_pipedrive_github",
      "suggested_filename": "biz_1789_workflow_1789_automate_pipedrive_github.json",
      "category": "BIZ",
      "business_function": "1789",
      "key_integrations": [
        "httpRequest",
        "pipedrive",
        "if",
        "githubTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.pipedrive": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.githubTrigger": 1
      },
      "business_value": "Automates 1789 processes using httpRequest, pipedrive, if",
      "analysis_timestamp": "2025-06-01T16:06:48.603222"
    },
    {
      "original_filename": "comm_1207_workflow_1207_automate_slack_shopify_cron.json",
      "workflow_name": "comm_1207_workflow_1207_automate_slack_shopify_cron",
      "suggested_filename": "comm_1207_workflow_1207_automate_slack_shopify_cron.json",
      "category": "COMM",
      "business_function": "1207",
      "key_integrations": [
        "cron",
        "shopify",
        "function",
        "googleSheets",
        "slack",
        "dateTime",
        "if",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.shopify": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 1207 processes using cron, shopify, function",
      "analysis_timestamp": "2025-06-01T16:06:48.603349"
    },
    {
      "original_filename": "ai_mcp_supabase_agent_automate_n8nnodeslangchainvectorstoresupabase_n8nnodeslang.json",
      "workflow_name": "MCP_SUPABASE_AGENT",
      "suggested_filename": "ai_mcp_supabase_agent_automate_n8nnodeslangchainvectorstoresupabase_n8nnodeslang.json",
      "category": "AI",
      "business_function": "mcp",
      "key_integrations": [
        "@n8n/langchain.mcpTrigger",
        "@n8n/langchain.vectorStoreSupabase",
        "@n8n/langchain.embeddingsOpenAi",
        "stickyNote",
        "supabaseTool"
      ],
      "trigger_type": "manual",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "@n8n/n8n-nodes-langchain.mcpTrigger": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.supabaseTool": 20
      },
      "business_value": "Automates mcp processes using @n8n/langchain.mcpTrigger, @n8n/langchain.vectorStoreSupabase, @n8n/langchain.embeddingsOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.603641"
    },
    {
      "original_filename": "ai_social_ai_process_wordpress_n8nnodeslangchainchainllm.json",
      "workflow_name": "AI Social Media Publisher from WordPress",
      "suggested_filename": "ai_social_ai_process_wordpress_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "social",
      "key_integrations": [
        "manualTrigger",
        "googleSheets",
        "@n8n/langchain.lmChatOpenRouter",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.openAi",
        "@n8n/langchain.chainLlm",
        "stickyNote",
        "wordpress",
        "twitter",
        "linkedIn"
      ],
      "trigger_type": "chat",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 5,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.linkedIn": 1,
        "n8n-nodes-base.facebookGraphApi": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates social processes using manualTrigger, googleSheets, @n8n/langchain.lmChatOpenRouter",
      "analysis_timestamp": "2025-06-01T16:06:48.604035"
    },
    {
      "original_filename": "util_sell_automate_airtop_manual.json",
      "workflow_name": "Sell a Used Car",
      "suggested_filename": "util_sell_automate_airtop_manual.json",
      "category": "UTIL",
      "business_function": "sell",
      "key_integrations": [
        "manualTrigger",
        "set",
        "wait",
        "code",
        "switch",
        "airtop"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.airtop": 8
      },
      "business_value": "Automates sell processes using manualTrigger, set, wait",
      "analysis_timestamp": "2025-06-01T16:06:48.604363"
    },
    {
      "original_filename": "ai_social_ai_process_httprequest_linkedin_cron_1.json",
      "workflow_name": "Social Media AI Agent - Telegram",
      "suggested_filename": "ai_social_ai_process_httprequest_linkedin_cron_1.json",
      "category": "AI",
      "business_function": "social",
      "key_integrations": [
        "httpRequest",
        "code",
        "markdown",
        "filter",
        "airtable",
        "linkedIn",
        "twitter",
        "scheduleTrigger",
        "merge",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "cron",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.airtable": 4,
        "n8n-nodes-base.linkedIn": 1,
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.wait": 1
      },
      "business_value": "Automates social processes using httpRequest, code, markdown",
      "analysis_timestamp": "2025-06-01T16:06:48.604822"
    },
    {
      "original_filename": "ai_send_ai_process_openweathermap_pushcut_cron.json",
      "workflow_name": "Send daily weather updates via a push notification using the Pushcut node",
      "suggested_filename": "ai_send_ai_process_openweathermap_pushcut_cron.json",
      "category": "AI",
      "business_function": "send",
      "key_integrations": [
        "pushcut",
        "openWeatherMap",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.pushcut": 1,
        "n8n-nodes-base.openWeatherMap": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates send processes using pushcut, openWeatherMap, cron",
      "analysis_timestamp": "2025-06-01T16:06:48.605066"
    },
    {
      "original_filename": "util_3145_workflow_3145_automate_httprequest_googledrive.json",
      "workflow_name": "util_3145_workflow_3145_automate_httprequest_googledrive",
      "suggested_filename": "util_3145_workflow_3145_automate_httprequest_googledrive.json",
      "category": "UTIL",
      "business_function": "3145",
      "key_integrations": [
        "formTrigger",
        "stickyNote",
        "googleDrive",
        "code",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 3145 processes using formTrigger, stickyNote, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.605362"
    },
    {
      "original_filename": "util_helper_automate_n8n_manual.json",
      "workflow_name": "v1 helper - Find params with affected expressions",
      "suggested_filename": "util_helper_automate_n8n_manual.json",
      "category": "UTIL",
      "business_function": "helper",
      "key_integrations": [
        "manualTrigger",
        "n8n",
        "code",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates helper processes using manualTrigger, n8n, code",
      "analysis_timestamp": "2025-06-01T16:06:48.605611"
    },
    {
      "original_filename": "ai_3052_workflow_3052_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "workflow_name": "ai_3052_workflow_3052_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput",
      "suggested_filename": "ai_3052_workflow_3052_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "3052",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.chainLlm",
        "telegramTrigger",
        "switch",
        "telegram",
        "@n8n/langchain.openAi",
        "set",
        "@n8n/langchain.outputParserStructured",
        "todoist",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.telegram": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.todoist": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates 3052 processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.chainLlm, telegramTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.605899"
    },
    {
      "original_filename": "ai_organise_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserst.json",
      "workflow_name": "ai_organise_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserst",
      "suggested_filename": "ai_organise_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserst.json",
      "category": "AI",
      "business_function": "organise",
      "key_integrations": [
        "localFileTrigger",
        "executeCommand",
        "set",
        "@n8n/langchain.lmChatMistralCloud",
        "@n8n/langchain.outputParserStructured",
        "stickyNote",
        "if",
        "splitOut",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.localFileTrigger": 1,
        "n8n-nodes-base.executeCommand": 2,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates organise processes using localFileTrigger, executeCommand, set",
      "analysis_timestamp": "2025-06-01T16:06:48.606192"
    },
    {
      "original_filename": "ai_3636_workflow_3636_automate_httprequest_n8nnodeslangchainmcp.json",
      "workflow_name": "ai_3636_workflow_3636_automate_httprequest_n8nnodeslangchainmcp",
      "suggested_filename": "ai_3636_workflow_3636_automate_httprequest_n8nnodeslangchainmcp.json",
      "category": "AI",
      "business_function": "3636",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.mcpTrigger",
        "executeWorkflowTrigger",
        "switch",
        "httpRequest",
        "code",
        "aggregate",
        "if",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 44,
      "complexity": "High",
      "total_nodes": 44,
      "node_types": {
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 5,
        "@n8n/n8n-nodes-langchain.mcpTrigger": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.httpRequest": 7,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.aggregate": 5,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.set": 5,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates 3636 processes using stickyNote, @n8n/langchain.toolWorkflow, @n8n/langchain.mcpTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.606764"
    },
    {
      "original_filename": "comm_2112_workflow_2112_automate_hubspot_gmail_cron.json",
      "workflow_name": "comm_2112_workflow_2112_automate_hubspot_gmail_cron",
      "suggested_filename": "comm_2112_workflow_2112_automate_hubspot_gmail_cron.json",
      "category": "COMM",
      "business_function": "2112",
      "key_integrations": [
        "gmail",
        "hubspot",
        "scheduleTrigger",
        "stickyNote",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.hubspot": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 2112 processes using gmail, hubspot, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.607049"
    },
    {
      "original_filename": "ai_building_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvector_1.json",
      "workflow_name": "ai_building_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvector_1",
      "suggested_filename": "ai_building_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvector_1.json",
      "category": "AI",
      "business_function": "building",
      "key_integrations": [
        "whatsAppTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolVectorStore",
        "@n8n/langchain.embeddingsOpenAi",
        "manualTrigger",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "extractFromFile",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 28,
      "complexity": "High",
      "total_nodes": 28,
      "node_types": {
        "n8n-nodes-base.whatsAppTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.whatsApp": 2,
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory": 2,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates building processes using whatsAppTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.607385"
    },
    {
      "original_filename": "ai_dynamically_generate_httprequest_webhook_webhook_3.json",
      "workflow_name": "Dynamically generate HTML page from user request using OpenAI Structured Output",
      "suggested_filename": "ai_dynamically_generate_httprequest_webhook_webhook_3.json",
      "category": "AI",
      "business_function": "dynamically",
      "key_integrations": [
        "respondToWebhook",
        "httpRequest",
        "@n8n/langchain.openAi",
        "html",
        "stickyNote",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates dynamically processes using respondToWebhook, httpRequest, @n8n/langchain.openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.607659"
    },
    {
      "original_filename": "data_shopify_sync_graphql_schedule_cron.json",
      "workflow_name": "Shopify to Google Sheets Product Sync Automation",
      "suggested_filename": "data_shopify_sync_graphql_schedule_cron.json",
      "category": "DATA",
      "business_function": "shopify",
      "key_integrations": [
        "wait",
        "graphql",
        "code",
        "if",
        "googleSheets",
        "set",
        "scheduleTrigger",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.graphql": 2,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.googleSheets": 4,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 9
      },
      "business_value": "Automates shopify processes using wait, graphql, code",
      "analysis_timestamp": "2025-06-01T16:06:48.608017"
    },
    {
      "original_filename": "ai_1978_workflow_1978_automate_emailsend_httprequest.json",
      "workflow_name": "ai_1978_workflow_1978_automate_emailsend_httprequest",
      "suggested_filename": "ai_1978_workflow_1978_automate_emailsend_httprequest.json",
      "category": "AI",
      "business_function": "1978",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "extractFromFile",
        "set",
        "@n8n/langchain.informationExtractor",
        "@n8n/langchain.lmChatOpenAi",
        "stopAndError",
        "httpRequest",
        "merge",
        "if"
      ],
      "trigger_type": "chat",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.stopAndError": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.emailSend": 1
      },
      "business_value": "Automates 1978 processes using manualTrigger, stickyNote, extractFromFile",
      "analysis_timestamp": "2025-06-01T16:06:48.608363"
    },
    {
      "original_filename": "util_send_update_httprequest_kafka_cron.json",
      "workflow_name": "Send updates about the position of the ISS every minute to a topic in Kafka",
      "suggested_filename": "util_send_update_httprequest_kafka_cron.json",
      "category": "UTIL",
      "business_function": "send",
      "key_integrations": [
        "cron",
        "httpRequest",
        "set",
        "kafka"
      ],
      "trigger_type": "cron",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.kafka": 1
      },
      "business_value": "Automates send processes using cron, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.608566"
    },
    {
      "original_filename": "comm_send_automate_webflow_discord.json",
      "workflow_name": "Send Discord message from Webflow form submission",
      "suggested_filename": "comm_send_automate_webflow_discord.json",
      "category": "COMM",
      "business_function": "send",
      "key_integrations": [
        "if",
        "set",
        "webflowTrigger",
        "code",
        "discord",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.webflowTrigger": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.discord": 4,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates send processes using if, set, webflowTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.608822"
    },
    {
      "original_filename": "ai_private_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "workflow_name": "🔐🦙🤖 Private & Local Ollama Self-Hosted LLM Router",
      "suggested_filename": "ai_private_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "private",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "stickyNote",
        "@n8n/langchain.lmChatOllama",
        "@n8n/langchain.agent",
        "@n8n/langchain.memoryBufferWindow"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.stickyNote": 9,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 2,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 2
      },
      "business_value": "Automates private processes using @n8n/langchain.chatTrigger, stickyNote, @n8n/langchain.lmChatOllama",
      "analysis_timestamp": "2025-06-01T16:06:48.609116"
    },
    {
      "original_filename": "comm_telegram_automate_telegram_telegram.json",
      "workflow_name": "Telegram echo-bot",
      "suggested_filename": "comm_telegram_automate_telegram_telegram.json",
      "category": "COMM",
      "business_function": "telegram",
      "key_integrations": [
        "stickyNote",
        "telegramTrigger",
        "telegram"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates telegram processes using stickyNote, telegramTrigger, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.609329"
    },
    {
      "original_filename": "util_2499_workflow_2499_automate_filemaker_crypto_webhook.json",
      "workflow_name": "util_2499_workflow_2499_automate_filemaker_crypto_webhook",
      "suggested_filename": "util_2499_workflow_2499_automate_filemaker_crypto_webhook.json",
      "category": "UTIL",
      "business_function": "2499",
      "key_integrations": [
        "crypto",
        "moveBinaryData",
        "set",
        "if",
        "respondToWebhook",
        "filemaker",
        "stickyNote",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.crypto": 1,
        "n8n-nodes-base.moveBinaryData": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.filemaker": 2,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 2499 processes using crypto, moveBinaryData, set",
      "analysis_timestamp": "2025-06-01T16:06:48.609556"
    },
    {
      "original_filename": "ai_2321_workflow_2321_automate_splitinbatches_slack_webhook.json",
      "workflow_name": "ai_2321_workflow_2321_automate_splitinbatches_slack_webhook",
      "suggested_filename": "ai_2321_workflow_2321_automate_splitinbatches_slack_webhook.json",
      "category": "AI",
      "business_function": "2321",
      "key_integrations": [
        "extractFromFile",
        "@n8n/langchain.outputParserItemList",
        "splitInBatches",
        "stickyNote",
        "set",
        "googleDocs",
        "@n8n/langchain.lmChatOpenAi",
        "slack",
        "gmail",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.outputParserItemList": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleDocs": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.gmail": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates 2321 processes using extractFromFile, @n8n/langchain.outputParserItemList, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.609872"
    },
    {
      "original_filename": "ai_2095_workflow_2095_automate_n8nnodeslangchainmemorybufferwindow_slack.json",
      "workflow_name": "ai_2095_workflow_2095_automate_n8nnodeslangchainmemorybufferwindow_slack",
      "suggested_filename": "ai_2095_workflow_2095_automate_n8nnodeslangchainmemorybufferwindow_slack.json",
      "category": "AI",
      "business_function": "2095",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "executeWorkflowTrigger",
        "if",
        "slack",
        "code",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.code": 2,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates 2095 processes using stickyNote, @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.610140"
    },
    {
      "original_filename": "util_3696_workflow_3696_automate_converttofile_httprequest.json",
      "workflow_name": "util_3696_workflow_3696_automate_converttofile_httprequest",
      "suggested_filename": "util_3696_workflow_3696_automate_converttofile_httprequest.json",
      "category": "UTIL",
      "business_function": "3696",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "convertToFile",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.convertToFile": 2,
        "n8n-nodes-base.stickyNote": 6
      },
      "business_value": "Automates 3696 processes using manualTrigger, httpRequest, convertToFile",
      "analysis_timestamp": "2025-06-01T16:06:48.610432"
    },
    {
      "original_filename": "util_928_workflow_928_automate_manual_reddit.json",
      "workflow_name": "util_928_workflow_928_automate_manual_reddit",
      "suggested_filename": "util_928_workflow_928_automate_manual_reddit.json",
      "category": "UTIL",
      "business_function": "928",
      "key_integrations": [
        "manualTrigger",
        "reddit"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.reddit": 3
      },
      "business_value": "Automates 928 processes using manualTrigger, reddit",
      "analysis_timestamp": "2025-06-01T16:06:48.610637"
    },
    {
      "original_filename": "util_basic_automate_readwritefile_webhook_webhook.json",
      "workflow_name": "Basic PDF Digital Sign Service",
      "suggested_filename": "util_basic_automate_readwritefile_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "basic",
      "key_integrations": [
        "code",
        "set",
        "switch",
        "convertToFile",
        "readWriteFile",
        "if",
        "webhook",
        "respondToWebhook",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 32,
      "complexity": "High",
      "total_nodes": 32,
      "node_types": {
        "n8n-nodes-base.code": 6,
        "n8n-nodes-base.set": 6,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.convertToFile": 2,
        "n8n-nodes-base.readWriteFile": 5,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.webhook": 2,
        "n8n-nodes-base.respondToWebhook": 3,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates basic processes using code, set, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.610994"
    },
    {
      "original_filename": "data_993_workflow_993_automate_wise_wise.json",
      "workflow_name": "data_993_workflow_993_automate_wise_wise",
      "suggested_filename": "data_993_workflow_993_automate_wise_wise.json",
      "category": "DATA",
      "business_function": "993",
      "key_integrations": [
        "wiseTrigger",
        "wise",
        "set",
        "airtable"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.wiseTrigger": 1,
        "n8n-nodes-base.wise": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtable": 1
      },
      "business_value": "Automates 993 processes using wiseTrigger, wise, set",
      "analysis_timestamp": "2025-06-01T16:06:48.611278"
    },
    {
      "original_filename": "comm_coffee_automate_cron_googlecalendar_cron.json",
      "workflow_name": "Coffee Bot (Mattermost)",
      "suggested_filename": "comm_coffee_automate_cron_googlecalendar_cron.json",
      "category": "COMM",
      "business_function": "coffee",
      "key_integrations": [
        "function",
        "mattermost",
        "cron",
        "googleCalendar"
      ],
      "trigger_type": "cron",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.mattermost": 3,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.googleCalendar": 1
      },
      "business_value": "Automates coffee processes using function, mattermost, cron",
      "analysis_timestamp": "2025-06-01T16:06:48.611483"
    },
    {
      "original_filename": "comm_ticket_notify_httprequest_schedule_cron.json",
      "workflow_name": "New Ticket Alerts to Teams",
      "suggested_filename": "comm_ticket_notify_httprequest_schedule_cron.json",
      "category": "COMM",
      "business_function": "ticket",
      "key_integrations": [
        "scheduleTrigger",
        "code",
        "redis",
        "merge",
        "httpRequest",
        "microsoftTeams"
      ],
      "trigger_type": "cron",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.redis": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.microsoftTeams": 1
      },
      "business_value": "Automates ticket processes using scheduleTrigger, code, redis",
      "analysis_timestamp": "2025-06-01T16:06:48.611723"
    },
    {
      "original_filename": "comm_368_workflow_368_automate_freshdesk_telegram.json",
      "workflow_name": "comm_368_workflow_368_automate_freshdesk_telegram",
      "suggested_filename": "comm_368_workflow_368_automate_freshdesk_telegram.json",
      "category": "COMM",
      "business_function": "368",
      "key_integrations": [
        "telegramTrigger",
        "mondayCom",
        "telegram",
        "if",
        "freshdesk"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.mondayCom": 2,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.freshdesk": 2
      },
      "business_value": "Automates 368 processes using telegramTrigger, mondayCom, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.611982"
    },
    {
      "original_filename": "util_2727_workflow_2727_automate_webhook_servicenow_webhook.json",
      "workflow_name": "util_2727_workflow_2727_automate_webhook_servicenow_webhook",
      "suggested_filename": "util_2727_workflow_2727_automate_webhook_servicenow_webhook.json",
      "category": "UTIL",
      "business_function": "2727",
      "key_integrations": [
        "webhook",
        "set",
        "serviceNow",
        "respondToWebhook",
        "stickyNote",
        "switch"
      ],
      "trigger_type": "webhook",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.serviceNow": 1,
        "n8n-nodes-base.respondToWebhook": 3,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates 2727 processes using webhook, set, serviceNow",
      "analysis_timestamp": "2025-06-01T16:06:48.612241"
    },
    {
      "original_filename": "util_write_automate_writebinaryfile_httprequest.json",
      "workflow_name": "Write a file to the host machine",
      "suggested_filename": "util_write_automate_writebinaryfile_httprequest.json",
      "category": "UTIL",
      "business_function": "write",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "writeBinaryFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.writeBinaryFile": 1
      },
      "business_value": "Automates write processes using manualTrigger, httpRequest, writeBinaryFile",
      "analysis_timestamp": "2025-06-01T16:06:48.612425"
    },
    {
      "original_filename": "data_entra_sync_httprequest_comparedatasets_2.json",
      "workflow_name": "Entra User to Zammad User Sync",
      "suggested_filename": "data_entra_sync_httprequest_comparedatasets_2.json",
      "category": "DATA",
      "business_function": "entra",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "httpRequest",
        "splitOut",
        "if",
        "set",
        "zammad",
        "merge",
        "compareDatasets"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.zammad": 4,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.compareDatasets": 2
      },
      "business_value": "Automates entra processes using manualTrigger, stickyNote, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.612729"
    },
    {
      "original_filename": "ai_qualify_ai_process_openai_googlesheets_2.json",
      "workflow_name": "Qualify new leads in Google Sheets via OpenAI's GPT-4",
      "suggested_filename": "ai_qualify_ai_process_openai_googlesheets_2.json",
      "category": "AI",
      "business_function": "qualify",
      "key_integrations": [
        "merge",
        "stickyNote",
        "googleSheets",
        "set",
        "openAi",
        "googleSheetsTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.googleSheetsTrigger": 1
      },
      "business_value": "Automates qualify processes using merge, stickyNote, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.612984"
    },
    {
      "original_filename": "comm_send_automate_slack_webflow.json",
      "workflow_name": "Send Slack message from Webflow form submission",
      "suggested_filename": "comm_send_automate_slack_webflow.json",
      "category": "COMM",
      "business_function": "send",
      "key_integrations": [
        "if",
        "slack",
        "set",
        "webflowTrigger",
        "code",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.webflowTrigger": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates send processes using if, slack, set",
      "analysis_timestamp": "2025-06-01T16:06:48.613276"
    },
    {
      "original_filename": "ai_mail_ai_process_splitinbatches_n8nnodeslangchainmemorybufferwindow.json",
      "workflow_name": "e-mail Chatbot with both semantic and structured RAG, using Telegram and Pgvector",
      "suggested_filename": "ai_mail_ai_process_splitinbatches_n8nnodeslangchainmemorybufferwindow.json",
      "category": "AI",
      "business_function": "mail",
      "key_integrations": [
        "telegramTrigger",
        "splitInBatches",
        "if",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.vectorStorePGVector",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.embeddingsOllama",
        "set",
        "code",
        "telegram"
      ],
      "trigger_type": "chat",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePGVector": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOllama": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates mail processes using telegramTrigger, splitInBatches, if",
      "analysis_timestamp": "2025-06-01T16:06:48.613623"
    },
    {
      "original_filename": "ai_convert_process_gmail_httprequest.json",
      "workflow_name": "Convert YouTube Videos into SEO Blog Posts",
      "suggested_filename": "ai_convert_process_gmail_httprequest.json",
      "category": "AI",
      "business_function": "convert",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "stickyNote",
        "set",
        "@n8n/langchain.openAi",
        "gmail",
        "markdown"
      ],
      "trigger_type": "manual",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.markdown": 1
      },
      "business_value": "Automates convert processes using manualTrigger, httpRequest, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.613966"
    },
    {
      "original_filename": "comm_automate_automate_whatsapp_asana.json",
      "workflow_name": "Automate Your Customer Service With WhatsApp Business Cloud & Asana",
      "suggested_filename": "comm_automate_automate_whatsapp_asana.json",
      "category": "COMM",
      "business_function": "automate",
      "key_integrations": [
        "formTrigger",
        "whatsApp",
        "stickyNote",
        "asana"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.whatsApp": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.asana": 1
      },
      "business_value": "Automates automate processes using formTrigger, whatsApp, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.614220"
    },
    {
      "original_filename": "content_twitterworkflow_automate_rocketchat_manual_cron.json",
      "workflow_name": "TwitterWorkflow",
      "suggested_filename": "content_twitterworkflow_automate_rocketchat_manual_cron.json",
      "category": "CONTENT",
      "business_function": "twitterworkflow",
      "key_integrations": [
        "manualTrigger",
        "set",
        "function",
        "twitter",
        "rocketchat",
        "cron"
      ],
      "trigger_type": "chat",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.rocketchat": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates twitterworkflow processes using manualTrigger, set, function",
      "analysis_timestamp": "2025-06-01T16:06:48.614345"
    },
    {
      "original_filename": "data_auto_automate_httprequest_schedule_cron.json",
      "workflow_name": "💥workflow n8n d'Auto-Post sur les réseaux sociaux - vide",
      "suggested_filename": "data_auto_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "auto",
      "key_integrations": [
        "scheduleTrigger",
        "set",
        "googleSheets",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.httpRequest": 10,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates auto processes using scheduleTrigger, set, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.614658"
    },
    {
      "original_filename": "ai_2354_workflow_2354_automate_splitinbatches_n8nnodeslangchainoutputparserstruc.json",
      "workflow_name": "ai_2354_workflow_2354_automate_splitinbatches_n8nnodeslangchainoutputparserstruc",
      "suggested_filename": "ai_2354_workflow_2354_automate_splitinbatches_n8nnodeslangchainoutputparserstruc.json",
      "category": "AI",
      "business_function": "2354",
      "key_integrations": [
        "stickyNote",
        "manualTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolHttpRequest",
        "@n8n/langchain.outputParserStructured",
        "removeDuplicates",
        "set",
        "splitOut",
        "notion",
        "limit"
      ],
      "trigger_type": "chat",
      "complexity_score": 39,
      "complexity": "High",
      "total_nodes": 39,
      "node_types": {
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 10,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 3,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.wait": 1,
        "@n8n/n8n-nodes-langchain.agent": 3
      },
      "business_value": "Automates 2354 processes using stickyNote, manualTrigger, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.615232"
    },
    {
      "original_filename": "ai_build_automate_n8nnodeslangchainvectorstore_n8nnodeslangchainchainllm_webhook.json",
      "workflow_name": "Build a Chatbot, Voice Agent and Phone Agent with Voiceflow, Google Calendar and RAG",
      "suggested_filename": "ai_build_automate_n8nnodeslangchainvectorstore_n8nnodeslangchainchainllm_webhook.json",
      "category": "AI",
      "business_function": "build",
      "key_integrations": [
        "webhook",
        "googleCalendar",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.vectorStoreQdrant",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.toolVectorStore",
        "@n8n/langchain.agent",
        "set",
        "respondToWebhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 34,
      "complexity": "High",
      "total_nodes": 34,
      "node_types": {
        "n8n-nodes-base.webhook": 3,
        "n8n-nodes-base.googleCalendar": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.respondToWebhook": 3,
        "n8n-nodes-base.httpRequest": 3,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleDrive": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1
      },
      "business_value": "Automates build processes using webhook, googleCalendar, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.615684"
    },
    {
      "original_filename": "ai_automated_ai_process_schedule_httprequest_cron.json",
      "workflow_name": "Automated Daily Weather Data Fetcher and Storage",
      "suggested_filename": "ai_automated_ai_process_schedule_httprequest_cron.json",
      "category": "AI",
      "business_function": "automated",
      "key_integrations": [
        "scheduleTrigger",
        "airtable",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates automated processes using scheduleTrigger, airtable, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.615947"
    },
    {
      "original_filename": "ai_3035_workflow_3035_automate_n8nnodeslangchainlmchatazureopenai_n8nnodeslangch.json",
      "workflow_name": "ai_3035_workflow_3035_automate_n8nnodeslangchainlmchatazureopenai_n8nnodeslangch",
      "suggested_filename": "ai_3035_workflow_3035_automate_n8nnodeslangchainlmchatazureopenai_n8nnodeslangch.json",
      "category": "AI",
      "business_function": "3035",
      "key_integrations": [
        "executeWorkflowTrigger",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.agent",
        "executeWorkflow",
        "set",
        "@n8n/langchain.lmChatAzureOpenAi",
        "stickyNote",
        "merge",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 3,
        "@n8n/n8n-nodes-langchain.agent": 3,
        "n8n-nodes-base.executeWorkflow": 4,
        "n8n-nodes-base.set": 5,
        "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi": 3,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.aggregate": 1
      },
      "business_value": "Automates 3035 processes using executeWorkflowTrigger, @n8n/langchain.outputParserStructured, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.616449"
    },
    {
      "original_filename": "ai_2434_workflow_2434_automate_splitinbatches_strapi.json",
      "workflow_name": "ai_2434_workflow_2434_automate_splitinbatches_strapi",
      "suggested_filename": "ai_2434_workflow_2434_automate_splitinbatches_strapi.json",
      "category": "AI",
      "business_function": "2434",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "splitInBatches",
        "splitOut",
        "aggregate",
        "googleDrive",
        "googleSheets",
        "executeWorkflowTrigger",
        "executeWorkflow"
      ],
      "trigger_type": "chat",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 8,
        "n8n-nodes-base.splitInBatches": 3,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.strapi": 1,
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.webflow": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates 2434 processes using manualTrigger, @n8n/langchain.lmChatOpenAi, set",
      "analysis_timestamp": "2025-06-01T16:06:48.616990"
    },
    {
      "original_filename": "util_2824_workflow_2824_automate_httprequest_manual.json",
      "workflow_name": "util_2824_workflow_2824_automate_httprequest_manual",
      "suggested_filename": "util_2824_workflow_2824_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "2824",
      "key_integrations": [
        "manualTrigger",
        "set",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 2824 processes using manualTrigger, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.617283"
    },
    {
      "original_filename": "ai_calendar_automate_googlecalendar_n8nnodeslangchainlmchatopenai.json",
      "workflow_name": "🤖Calendar Agent",
      "suggested_filename": "ai_calendar_automate_googlecalendar_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "calendar",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "@n8n/langchain.agent",
        "googleCalendarTool",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.googleCalendarTool": 5,
        "n8n-nodes-base.executeWorkflowTrigger": 1
      },
      "business_value": "Automates calendar processes using @n8n/langchain.lmChatOpenAi, set, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.617593"
    },
    {
      "original_filename": "data_expense_monitor_httprequest_mindee.json",
      "workflow_name": "Expense Tracker App",
      "suggested_filename": "data_expense_monitor_httprequest_mindee.json",
      "category": "DATA",
      "business_function": "expense",
      "key_integrations": [
        "typeformTrigger",
        "httpRequest",
        "mindee",
        "set",
        "airtable"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.mindee": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtable": 1
      },
      "business_value": "Automates expense processes using typeformTrigger, httpRequest, mindee",
      "analysis_timestamp": "2025-06-01T16:06:48.617819"
    },
    {
      "original_filename": "data_medoids_automate_httprequest_manual_2.json",
      "workflow_name": "[2/3] Set up medoids (2 types) for anomaly detection (crops dataset)",
      "suggested_filename": "data_medoids_automate_httprequest_manual_2.json",
      "category": "DATA",
      "business_function": "medoids",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "code",
        "set",
        "splitOut",
        "merge",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 48,
      "complexity": "High",
      "total_nodes": 48,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 12,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 9,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.stickyNote": 22
      },
      "business_value": "Automates medoids processes using manualTrigger, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:48.618250"
    },
    {
      "original_filename": "ai_receive_ai_process_httprequest_telegram.json",
      "workflow_name": "Receive updates from Telegram and send an image of a cocktail",
      "suggested_filename": "ai_receive_ai_process_httprequest_telegram.json",
      "category": "AI",
      "business_function": "receive",
      "key_integrations": [
        "telegramTrigger",
        "httpRequest",
        "telegram"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates receive processes using telegramTrigger, httpRequest, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.618549"
    },
    {
      "original_filename": "util_español_automate_manual_executecommand.json",
      "workflow_name": "N8N Español - Ejemplos",
      "suggested_filename": "util_español_automate_manual_executecommand.json",
      "category": "UTIL",
      "business_function": "español",
      "key_integrations": [
        "manualTrigger",
        "executeCommand",
        "set",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.executeCommand": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.merge": 2
      },
      "business_value": "Automates español processes using manualTrigger, executeCommand, set",
      "analysis_timestamp": "2025-06-01T16:06:48.618703"
    },
    {
      "original_filename": "comm_expiry_notify_gmail_httprequest_cron.json",
      "workflow_name": "SSL Expiry Alert",
      "suggested_filename": "comm_expiry_notify_gmail_httprequest_cron.json",
      "category": "COMM",
      "business_function": "expiry",
      "key_integrations": [
        "googleSheets",
        "scheduleTrigger",
        "httpRequest",
        "if",
        "gmail",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.stickyNote": 6
      },
      "business_value": "Automates expiry processes using googleSheets, scheduleTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.618950"
    },
    {
      "original_filename": "ai_3195_workflow_3195_automate_n8nnodeslangchainoutputparserstructured_httpreque.json",
      "workflow_name": "ai_3195_workflow_3195_automate_n8nnodeslangchainoutputparserstructured_httpreque",
      "suggested_filename": "ai_3195_workflow_3195_automate_n8nnodeslangchainoutputparserstructured_httpreque.json",
      "category": "AI",
      "business_function": "3195",
      "key_integrations": [
        "stickyNote",
        "googleTranslate",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "merge",
        "googleSheetsTrigger",
        "googleDrive",
        "httpRequest",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.googleTranslate": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.googleSheetsTrigger": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates 3195 processes using stickyNote, googleTranslate, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.619317"
    },
    {
      "original_filename": "util_2339_workflow_2339_automate_n8nnodeslangchainchainretrievalqa_extractfromfi.json",
      "workflow_name": "util_2339_workflow_2339_automate_n8nnodeslangchainchainretrievalqa_extractfromfi",
      "suggested_filename": "util_2339_workflow_2339_automate_n8nnodeslangchainchainretrievalqa_extractfromfi.json",
      "category": "UTIL",
      "business_function": "2339",
      "key_integrations": [
        "localFileTrigger",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.embeddingsMistralCloud",
        "@n8n/langchain.lmChatMistralCloud",
        "set",
        "merge",
        "splitOut",
        "splitInBatches",
        "@n8n/langchain.outputParserItemList"
      ],
      "trigger_type": "chat",
      "complexity_score": 42,
      "complexity": "High",
      "total_nodes": 42,
      "node_types": {
        "n8n-nodes-base.localFileTrigger": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud": 2,
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud": 4,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "@n8n/n8n-nodes-langchain.outputParserItemList": 1,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "n8n-nodes-base.wait": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.readWriteFile": 2,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.extractFromFile": 3,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates 2339 processes using localFileTrigger, @n8n/langchain.documentDefaultDataLoader, @n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
      "analysis_timestamp": "2025-06-01T16:06:48.619775"
    },
    {
      "original_filename": "ai_complete_automate_n8nnodeslangchainmemorybufferwindow_splitinbatches_2.json",
      "workflow_name": "Complete Youtube",
      "suggested_filename": "ai_complete_automate_n8nnodeslangchainmemorybufferwindow_splitinbatches_2.json",
      "category": "AI",
      "business_function": "complete",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "stickyNote",
        "httpRequest",
        "youTube",
        "set",
        "code"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.youTube": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates complete processes using @n8n/langchain.agent, @n8n/langchain.chatTrigger, @n8n/langchain.toolWorkflow",
      "analysis_timestamp": "2025-06-01T16:06:48.620076"
    },
    {
      "original_filename": "util_1440_workflow_1440_automate_webhook_crypto_webhook.json",
      "workflow_name": "util_1440_workflow_1440_automate_webhook_crypto_webhook",
      "suggested_filename": "util_1440_workflow_1440_automate_webhook_crypto_webhook.json",
      "category": "UTIL",
      "business_function": "1440",
      "key_integrations": [
        "webhook",
        "crypto",
        "set"
      ],
      "trigger_type": "webhook",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.crypto": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 1440 processes using webhook, crypto, set",
      "analysis_timestamp": "2025-06-01T16:06:48.620258"
    },
    {
      "original_filename": "util_automate_spreadsheetfile_splitinbatches.json",
      "workflow_name": "My workflow",
      "suggested_filename": "util_automate_spreadsheetfile_splitinbatches.json",
      "category": "UTIL",
      "business_function": "automate",
      "key_integrations": [
        "manualTrigger",
        "emailSend",
        "readBinaryFile",
        "spreadsheetFile",
        "splitInBatches"
      ],
      "trigger_type": "email",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.readBinaryFile": 2,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.splitInBatches": 1
      },
      "business_value": "Automates automate processes using manualTrigger, emailSend, readBinaryFile",
      "analysis_timestamp": "2025-06-01T16:06:48.620460"
    },
    {
      "original_filename": "data_automate_googlesheets_httprequest.json",
      "workflow_name": "n8n-農產品",
      "suggested_filename": "data_automate_googlesheets_httprequest.json",
      "category": "DATA",
      "business_function": "automate",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "splitOut",
        "googleSheets"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates automate processes using manualTrigger, httpRequest, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.620682"
    },
    {
      "original_filename": "ai_3115_workflow_3115_automate_executiondata_n8nnodeslangchaintextclassifier.json",
      "workflow_name": "ai_3115_workflow_3115_automate_executiondata_n8nnodeslangchaintextclassifier",
      "suggested_filename": "ai_3115_workflow_3115_automate_executiondata_n8nnodeslangchaintextclassifier.json",
      "category": "AI",
      "business_function": "3115",
      "key_integrations": [
        "telegramTrigger",
        "telegram",
        "if",
        "redis",
        "googleSheets",
        "set",
        "switch",
        "@n8n/langchain.memoryRedisChat",
        "@n8n/langchain.memoryManager",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 40,
      "complexity": "High",
      "total_nodes": 40,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.telegram": 5,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.redis": 5,
        "n8n-nodes-base.googleSheets": 4,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.switch": 2,
        "@n8n/n8n-nodes-langchain.memoryRedisChat": 2,
        "@n8n/n8n-nodes-langchain.memoryManager": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "n8n-nodes-base.executionData": 1,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates 3115 processes using telegramTrigger, telegram, if",
      "analysis_timestamp": "2025-06-01T16:06:48.621179"
    },
    {
      "original_filename": "comm_2581_workflow_2581_automate_slack_form.json",
      "workflow_name": "comm_2581_workflow_2581_automate_slack_form",
      "suggested_filename": "comm_2581_workflow_2581_automate_slack_form.json",
      "category": "COMM",
      "business_function": "2581",
      "key_integrations": [
        "form",
        "formTrigger",
        "googleSheets",
        "stickyNote",
        "slack"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.form": 4,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates 2581 processes using form, formTrigger, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.621543"
    },
    {
      "original_filename": "comm_29_workflow_29_automate_slack_emailsend.json",
      "workflow_name": "comm_29_workflow_29_automate_slack_emailsend",
      "suggested_filename": "comm_29_workflow_29_automate_slack_emailsend.json",
      "category": "COMM",
      "business_function": "29",
      "key_integrations": [
        "typeformTrigger",
        "if",
        "googleSheets",
        "emailSend",
        "slack"
      ],
      "trigger_type": "email",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates 29 processes using typeformTrigger, if, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.621661"
    },
    {
      "original_filename": "util_create_create_contact_googlecontacts_manual.json",
      "workflow_name": "Create, update and get a contact in Google Contacts",
      "suggested_filename": "util_create_create_contact_googlecontacts_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "googleContacts"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleContacts": 3
      },
      "business_value": "Automates create processes using manualTrigger, googleContacts",
      "analysis_timestamp": "2025-06-01T16:06:48.621860"
    },
    {
      "original_filename": "ops_1349_workflow_1349_automate_gitlab_github_cron.json",
      "workflow_name": "ops_1349_workflow_1349_automate_gitlab_github_cron",
      "suggested_filename": "ops_1349_workflow_1349_automate_gitlab_github_cron.json",
      "category": "OPS",
      "business_function": "1349",
      "key_integrations": [
        "github",
        "cron",
        "merge",
        "function",
        "gitlab"
      ],
      "trigger_type": "cron",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.github": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.gitlab": 2
      },
      "business_value": "Automates 1349 processes using github, cron, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.621964"
    },
    {
      "original_filename": "comm_automate_gmail_rssfeedread_cron.json",
      "workflow_name": "My workflow 4",
      "suggested_filename": "comm_automate_gmail_rssfeedread_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "key_integrations": [
        "rssFeedRead",
        "gmail",
        "todoist",
        "code",
        "scheduleTrigger",
        "merge"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.rssFeedRead": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.todoist": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates automate processes using rssFeedRead, gmail, todoist",
      "analysis_timestamp": "2025-06-01T16:06:48.622203"
    },
    {
      "original_filename": "util_1111_workflow_1111_automate_awss3_manual.json",
      "workflow_name": "util_1111_workflow_1111_automate_awss3_manual",
      "suggested_filename": "util_1111_workflow_1111_automate_awss3_manual.json",
      "category": "UTIL",
      "business_function": "1111",
      "key_integrations": [
        "manualTrigger",
        "awsTranscribe",
        "awsS3"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.awsTranscribe": 1,
        "n8n-nodes-base.awsS3": 1
      },
      "business_value": "Automates 1111 processes using manualTrigger, awsTranscribe, awsS3",
      "analysis_timestamp": "2025-06-01T16:06:48.622404"
    },
    {
      "original_filename": "ai_make_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "workflow_name": "Make OpenAI Citation for File Retrieval RAG",
      "suggested_filename": "ai_make_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "category": "AI",
      "business_function": "make",
      "key_integrations": [
        "aggregate",
        "@n8n/langchain.memoryBufferWindow",
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.openAi",
        "httpRequest",
        "splitOut",
        "set",
        "markdown",
        "code"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.splitOut": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates make processes using aggregate, @n8n/langchain.memoryBufferWindow, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.622676"
    },
    {
      "original_filename": "ai_news_extract_nocodb_itemlists_cron_1.json",
      "workflow_name": "News Extraction",
      "suggested_filename": "ai_news_extract_nocodb_itemlists_cron_1.json",
      "category": "AI",
      "business_function": "news",
      "key_integrations": [
        "html",
        "openAi",
        "set",
        "merge",
        "code",
        "httpRequest",
        "stickyNote",
        "scheduleTrigger",
        "nocoDb",
        "itemLists"
      ],
      "trigger_type": "cron",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "n8n-nodes-base.html": 3,
        "n8n-nodes-base.openAi": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.merge": 4,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 18,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.nocoDb": 1,
        "n8n-nodes-base.itemLists": 2
      },
      "business_value": "Automates news processes using html, openAi, set",
      "analysis_timestamp": "2025-06-01T16:06:48.623006"
    },
    {
      "original_filename": "comm_signl4_notify_movebinarydata_cron_cron.json",
      "workflow_name": "SIGNL4 Alert",
      "suggested_filename": "comm_signl4_notify_movebinarydata_cron_cron.json",
      "category": "COMM",
      "business_function": "signl4",
      "key_integrations": [
        "cron",
        "writeBinaryFile",
        "readBinaryFile",
        "moveBinaryData",
        "function",
        "if",
        "signl4"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.writeBinaryFile": 1,
        "n8n-nodes-base.readBinaryFile": 1,
        "n8n-nodes-base.moveBinaryData": 2,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.signl4": 2
      },
      "business_value": "Automates signl4 processes using cron, writeBinaryFile, readBinaryFile",
      "analysis_timestamp": "2025-06-01T16:06:48.623237"
    },
    {
      "original_filename": "util_525_workflow_525_automate_manual_hackernews.json",
      "workflow_name": "util_525_workflow_525_automate_manual_hackernews",
      "suggested_filename": "util_525_workflow_525_automate_manual_hackernews.json",
      "category": "UTIL",
      "business_function": "525",
      "key_integrations": [
        "manualTrigger",
        "hackerNews"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.hackerNews": 1
      },
      "business_value": "Automates 525 processes using manualTrigger, hackerNews",
      "analysis_timestamp": "2025-06-01T16:06:48.623339"
    },
    {
      "original_filename": "ai_extract_extract_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruct.json",
      "workflow_name": "Extract & Summarize Yelp Business Review with Bright Data and Google Gemini",
      "suggested_filename": "ai_extract_extract_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruct.json",
      "category": "AI",
      "business_function": "extract",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "set",
        "httpRequest",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.chainSummarization",
        "merge",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates extract processes using manualTrigger, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:48.623589"
    },
    {
      "original_filename": "util_1497_workflow_1497_automate_manual.json",
      "workflow_name": "util_1497_workflow_1497_automate_manual",
      "suggested_filename": "util_1497_workflow_1497_automate_manual.json",
      "category": "UTIL",
      "business_function": "1497",
      "key_integrations": [
        "manualTrigger",
        "function"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.function": 2
      },
      "business_value": "Automates 1497 processes using manualTrigger, function",
      "analysis_timestamp": "2025-06-01T16:06:48.623789"
    },
    {
      "original_filename": "ai_2338_workflow_2338_automate_n8nnodeslangchainoutputparserstructured_readwrite.json",
      "workflow_name": "ai_2338_workflow_2338_automate_n8nnodeslangchainoutputparserstructured_readwrite",
      "suggested_filename": "ai_2338_workflow_2338_automate_n8nnodeslangchainoutputparserstructured_readwrite.json",
      "category": "AI",
      "business_function": "2338",
      "key_integrations": [
        "localFileTrigger",
        "@n8n/langchain.toolCode",
        "@n8n/langchain.outputParserStructured",
        "readWriteFile",
        "extractFromFile",
        "splitOut",
        "stickyNote",
        "set",
        "code",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.localFileTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolCode": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates 2338 processes using localFileTrigger, @n8n/langchain.toolCode, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.624085"
    },
    {
      "original_filename": "ai_very_ai_process_emailsend_n8nnodeslangchainchainsummarization_2.json",
      "workflow_name": "Very simple Human in the loop system email with AI e IMAP",
      "suggested_filename": "ai_very_ai_process_emailsend_n8nnodeslangchainchainsummarization_2.json",
      "category": "AI",
      "business_function": "very",
      "key_integrations": [
        "emailReadImap",
        "markdown",
        "emailSend",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "stickyNote",
        "set",
        "if"
      ],
      "trigger_type": "email",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.emailSend": 2,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates very processes using emailReadImap, markdown, emailSend",
      "analysis_timestamp": "2025-06-01T16:06:48.624352"
    },
    {
      "original_filename": "comm_1425_workflow_1425_automate_cron_httprequest_cron.json",
      "workflow_name": "comm_1425_workflow_1425_automate_cron_httprequest_cron",
      "suggested_filename": "comm_1425_workflow_1425_automate_cron_httprequest_cron.json",
      "category": "COMM",
      "business_function": "1425",
      "key_integrations": [
        "cron",
        "airtable",
        "set",
        "telegram",
        "if",
        "httpRequest",
        "telegramTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.airtable": 3,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.telegram": 5,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.telegramTrigger": 1
      },
      "business_value": "Automates 1425 processes using cron, airtable, set",
      "analysis_timestamp": "2025-06-01T16:06:48.624625"
    },
    {
      "original_filename": "ai_extract_extract_n8nnodeslangchainchainllm_httprequest.json",
      "workflow_name": "Extract & Summarize Indeed Company Info with Bright Data and Google Gemini",
      "suggested_filename": "ai_extract_extract_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "extract",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "stickyNote",
        "set",
        "httpRequest",
        "@n8n/langchain.agent",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.chainSummarization",
        "markdown",
        "@n8n/langchain.toolHttpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 3,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 3,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.markdown": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1
      },
      "business_value": "Automates extract processes using manualTrigger, @n8n/langchain.lmChatGoogleGemini, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.624956"
    },
    {
      "original_filename": "ai_telegram_ai_process_n8nnodeslangchainmemorybufferwindow_telegram_1.json",
      "workflow_name": "Telegram AI multi-format chatbot",
      "suggested_filename": "ai_telegram_ai_process_n8nnodeslangchainmemorybufferwindow_telegram_1.json",
      "category": "AI",
      "business_function": "telegram",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "telegram",
        "telegramTrigger",
        "set",
        "@n8n/langchain.openAi",
        "stickyNote",
        "@n8n/langchain.agent",
        "switch"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.telegram": 5,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates telegram processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.625294"
    },
    {
      "original_filename": "ai_chat_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvectorst.json",
      "workflow_name": "Chat with GitHub OpenAPI Specification using RAG (Pinecone and OpenAI)",
      "suggested_filename": "ai_chat_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvectorst.json",
      "category": "AI",
      "business_function": "chat",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "@n8n/langchain.vectorStorePinecone",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolVectorStore"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2
      },
      "business_value": "Automates chat processes using manualTrigger, httpRequest, @n8n/langchain.vectorStorePinecone",
      "analysis_timestamp": "2025-06-01T16:06:48.625556"
    },
    {
      "original_filename": "util_perplexity_automate_httprequest_executeworkflow.json",
      "workflow_name": "Perplexity Researcher",
      "suggested_filename": "util_perplexity_automate_httprequest_executeworkflow.json",
      "category": "UTIL",
      "business_function": "perplexity",
      "key_integrations": [
        "executeWorkflowTrigger",
        "set",
        "stickyNote",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates perplexity processes using executeWorkflowTrigger, set, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.625779"
    },
    {
      "original_filename": "comm_minibear_automate_n8nnodeslangchainoutputparserstructured_httprequest_webho.json",
      "workflow_name": "MiniBear Webhook",
      "suggested_filename": "comm_minibear_automate_n8nnodeslangchainoutputparserstructured_httprequest_webho.json",
      "category": "COMM",
      "business_function": "minibear",
      "key_integrations": [
        "webhook",
        "httpRequest",
        "stickyNote",
        "switch",
        "@n8n/langchain.lmChatOpenRouter",
        "@n8n/langchain.agent",
        "microsoftTeams",
        "microsoftToDo",
        "if",
        "microsoftOneDrive"
      ],
      "trigger_type": "webhook",
      "complexity_score": 45,
      "complexity": "High",
      "total_nodes": 45,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 11,
        "n8n-nodes-base.stickyNote": 18,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 3,
        "@n8n/n8n-nodes-langchain.agent": 3,
        "n8n-nodes-base.microsoftTeams": 2,
        "n8n-nodes-base.microsoftToDo": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.microsoftOneDrive": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1
      },
      "business_value": "Automates minibear processes using webhook, httpRequest, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.626235"
    },
    {
      "original_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_5.json",
      "workflow_name": "🌐🪛 AI Agent Chatbot with Jina.ai Webpage Scraper",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_5.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "stickyNote",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolHttpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1
      },
      "business_value": "Automates agent processes using @n8n/langchain.chatTrigger, stickyNote, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.626571"
    },
    {
      "original_filename": "data_2148_workflow_2148_automate_graphql_schedule_cron.json",
      "workflow_name": "data_2148_workflow_2148_automate_graphql_schedule_cron",
      "suggested_filename": "data_2148_workflow_2148_automate_graphql_schedule_cron.json",
      "category": "DATA",
      "business_function": "2148",
      "key_integrations": [
        "scheduleTrigger",
        "graphql",
        "stickyNote",
        "if",
        "set",
        "splitOut",
        "googleSheets",
        "code"
      ],
      "trigger_type": "cron",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.graphql": 2,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates 2148 processes using scheduleTrigger, graphql, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.626917"
    },
    {
      "original_filename": "data_bubble_automate_httprequest_manual.json",
      "workflow_name": "Bubble Data Access",
      "suggested_filename": "data_bubble_automate_httprequest_manual.json",
      "category": "DATA",
      "business_function": "bubble",
      "key_integrations": [
        "manualTrigger",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates bubble processes using manualTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.627124"
    },
    {
      "original_filename": "ai_flux_ai_process_respondtowebhook_httprequest.json",
      "workflow_name": "ai_flux_ai_process_respondtowebhook_httprequest",
      "suggested_filename": "ai_flux_ai_process_respondtowebhook_httprequest.json",
      "category": "AI",
      "business_function": "flux",
      "key_integrations": [
        "set",
        "respondToWebhook",
        "stickyNote",
        "s3",
        "formTrigger",
        "httpRequest",
        "switch"
      ],
      "trigger_type": "webhook",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.set": 6,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.s3": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates flux processes using set, respondToWebhook, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.627531"
    },
    {
      "original_filename": "biz_create_create_googleslides_googledrive.json",
      "workflow_name": "Create Custom Presentations per Lead",
      "suggested_filename": "biz_create_create_googleslides_googledrive.json",
      "category": "BIZ",
      "business_function": "create",
      "key_integrations": [
        "googleDrive",
        "googleSheets",
        "googleDriveTrigger",
        "switch",
        "merge",
        "googleSlides",
        "stickyNote",
        "extractFromFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.googleDrive": 3,
        "n8n-nodes-base.googleSheets": 4,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.googleSlides": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.extractFromFile": 1
      },
      "business_value": "Automates create processes using googleDrive, googleSheets, googleDriveTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.627955"
    },
    {
      "original_filename": "data_googlesheets_automate_comparedatasets_schedule_cron.json",
      "workflow_name": "GoogleSheets MySQL Integration",
      "suggested_filename": "data_googlesheets_automate_comparedatasets_schedule_cron.json",
      "category": "DATA",
      "business_function": "googlesheets",
      "key_integrations": [
        "manualTrigger",
        "compareDatasets",
        "scheduleTrigger",
        "googleSheets",
        "mySql",
        "set",
        "if",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.compareDatasets": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.mySql": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates googlesheets processes using manualTrigger, compareDatasets, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.628416"
    },
    {
      "original_filename": "ai_supabase_create_n8nnodeslangchainchainretrievalqa_supabase.json",
      "workflow_name": "ai_supabase_create_n8nnodeslangchainchainretrievalqa_supabase",
      "suggested_filename": "ai_supabase_create_n8nnodeslangchainchainretrievalqa_supabase.json",
      "category": "AI",
      "business_function": "supabase",
      "key_integrations": [
        "googleDrive",
        "@n8n/langchain.documentDefaultDataLoader",
        "stickyNote",
        "@n8n/langchain.chainRetrievalQa",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.retrieverVectorStore",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "set",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.vectorStoreSupabase"
      ],
      "trigger_type": "chat",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase": 3,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 3,
        "n8n-nodes-base.supabase": 1
      },
      "business_value": "Automates supabase processes using googleDrive, @n8n/langchain.documentDefaultDataLoader, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.628806"
    },
    {
      "original_filename": "ai_2165_workflow_2165_automate_n8nnodeslangchainchat_n8nnodeslangchainembeddings.json",
      "workflow_name": "ai_2165_workflow_2165_automate_n8nnodeslangchainchat_n8nnodeslangchainembeddings",
      "suggested_filename": "ai_2165_workflow_2165_automate_n8nnodeslangchainchat_n8nnodeslangchainembeddings.json",
      "category": "AI",
      "business_function": "2165",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "@n8n/langchain.vectorStorePinecone",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "googleDrive",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "trigger_type": "chat",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1
      },
      "business_value": "Automates 2165 processes using manualTrigger, stickyNote, @n8n/langchain.vectorStorePinecone",
      "analysis_timestamp": "2025-06-01T16:06:48.629102"
    },
    {
      "original_filename": "ai_reddit_ai_process_reddit_manual.json",
      "workflow_name": "ai_reddit_ai_process_reddit_manual",
      "suggested_filename": "ai_reddit_ai_process_reddit_manual.json",
      "category": "AI",
      "business_function": "reddit",
      "key_integrations": [
        "manualTrigger",
        "reddit",
        "stickyNote",
        "set",
        "if",
        "merge",
        "openAi"
      ],
      "trigger_type": "manual",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.reddit": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.openAi": 3
      },
      "business_value": "Automates reddit processes using manualTrigger, reddit, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.629401"
    },
    {
      "original_filename": "ops_docker_automate_ssh_webhook_webhook_3.json",
      "workflow_name": "puq-docker-n8n-deploy",
      "suggested_filename": "ops_docker_automate_ssh_webhook_webhook_3.json",
      "category": "OPS",
      "business_function": "docker",
      "key_integrations": [
        "if",
        "set",
        "webhook",
        "respondToWebhook",
        "code",
        "ssh",
        "switch",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 34,
      "complexity": "High",
      "total_nodes": 34,
      "node_types": {
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.set": 22,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.ssh": 1,
        "n8n-nodes-base.switch": 4,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates docker processes using if, set, webhook",
      "analysis_timestamp": "2025-06-01T16:06:48.630142"
    },
    {
      "original_filename": "content_published_automate_httprequest_manual.json",
      "workflow_name": "(Not published) Three-View Orthographic Projection to Dynamic Video Conversion",
      "suggested_filename": "content_published_automate_httprequest_manual.json",
      "category": "CONTENT",
      "business_function": "published",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "if",
        "code",
        "wait",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates published processes using manualTrigger, httpRequest, if",
      "analysis_timestamp": "2025-06-01T16:06:48.630519"
    },
    {
      "original_filename": "comm_3034_workflow_3034_automate_splitinbatches_slack.json",
      "workflow_name": "comm_3034_workflow_3034_automate_splitinbatches_slack",
      "suggested_filename": "comm_3034_workflow_3034_automate_splitinbatches_slack.json",
      "category": "COMM",
      "business_function": "3034",
      "key_integrations": [
        "executeWorkflowTrigger",
        "notion",
        "stickyNote",
        "slack",
        "executeWorkflow",
        "merge",
        "aggregate",
        "set",
        "compareDatasets",
        "splitInBatches"
      ],
      "trigger_type": "manual",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.notion": 2,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.slack": 3,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.aggregate": 5,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.compareDatasets": 1,
        "n8n-nodes-base.splitInBatches": 1
      },
      "business_value": "Automates 3034 processes using executeWorkflowTrigger, notion, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.630885"
    },
    {
      "original_filename": "data_2796_workflow_2796_automate_httprequest_webhook_webhook.json",
      "workflow_name": "data_2796_workflow_2796_automate_httprequest_webhook_webhook",
      "suggested_filename": "data_2796_workflow_2796_automate_httprequest_webhook_webhook.json",
      "category": "DATA",
      "business_function": "2796",
      "key_integrations": [
        "stickyNote",
        "if",
        "httpRequest",
        "respondToWebhook",
        "webhook",
        "set",
        "airtable",
        "googleSheets",
        "googleCalendar"
      ],
      "trigger_type": "webhook",
      "complexity_score": 33,
      "complexity": "High",
      "total_nodes": 33,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.respondToWebhook": 7,
        "n8n-nodes-base.webhook": 4,
        "n8n-nodes-base.set": 8,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.googleCalendar": 2
      },
      "business_value": "Automates 2796 processes using stickyNote, if, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.631234"
    },
    {
      "original_filename": "util_image_automate_n8nnodeslangchainchainllm_form_1.json",
      "workflow_name": "Image to license plate number",
      "suggested_filename": "util_image_automate_n8nnodeslangchainchainllm_form_1.json",
      "category": "UTIL",
      "business_function": "image",
      "key_integrations": [
        "@n8n/langchain.chainLlm",
        "form",
        "@n8n/langchain.lmChatOpenRouter",
        "set",
        "formTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.form": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.formTrigger": 1
      },
      "business_value": "Automates image processes using @n8n/langchain.chainLlm, form, @n8n/langchain.lmChatOpenRouter",
      "analysis_timestamp": "2025-06-01T16:06:48.631474"
    },
    {
      "original_filename": "comm_weather_automate_webhook_httprequest_webhook.json",
      "workflow_name": "Weather via Slack",
      "suggested_filename": "comm_weather_automate_webhook_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "weather",
      "key_integrations": [
        "webhook",
        "slack",
        "httpRequest"
      ],
      "trigger_type": "webhook",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.httpRequest": 3
      },
      "business_value": "Automates weather processes using webhook, slack, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.631754"
    },
    {
      "original_filename": "util_1254_workflow_1254_automate_webhook_netlify_webhook.json",
      "workflow_name": "util_1254_workflow_1254_automate_webhook_netlify_webhook",
      "suggested_filename": "util_1254_workflow_1254_automate_webhook_netlify_webhook.json",
      "category": "UTIL",
      "business_function": "1254",
      "key_integrations": [
        "webhook",
        "netlify"
      ],
      "trigger_type": "webhook",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.netlify": 1
      },
      "business_value": "Automates 1254 processes using webhook, netlify",
      "analysis_timestamp": "2025-06-01T16:06:48.631917"
    },
    {
      "original_filename": "ai_airquality_ai_process_n8nnodeslangchainthink_httprequest_cron.json",
      "workflow_name": "AirQuality Scheduler",
      "suggested_filename": "ai_airquality_ai_process_n8nnodeslangchainthink_httprequest_cron.json",
      "category": "AI",
      "business_function": "airquality",
      "key_integrations": [
        "httpRequest",
        "@n8n/langchain.agent",
        "@n8n/langchain.toolThink",
        "@n8n/langchain.lmChatOpenAi",
        "gmailTool",
        "scheduleTrigger",
        "stickyNote",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.toolThink": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.gmailTool": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.set": 2
      },
      "business_value": "Automates airquality processes using httpRequest, @n8n/langchain.agent, @n8n/langchain.toolThink",
      "analysis_timestamp": "2025-06-01T16:06:48.632233"
    },
    {
      "original_filename": "ai_your_automate_wordpress_n8nnodeslangchainoutputparserstructured.json",
      "workflow_name": "✍️🌄 Your First Wordpress Content Creator - Quick Start",
      "suggested_filename": "ai_your_automate_wordpress_n8nnodeslangchainoutputparserstructured.json",
      "category": "AI",
      "business_function": "your",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "code",
        "if",
        "@n8n/langchain.agent",
        "stickyNote",
        "googleDrive",
        "set",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 39,
      "complexity": "High",
      "total_nodes": 39,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 5,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 4,
        "@n8n/n8n-nodes-langchain.agent": 4,
        "n8n-nodes-base.stickyNote": 11,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.telegram": 5
      },
      "business_value": "Automates your processes using manualTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.632727"
    },
    {
      "original_filename": "util_501_workflow_501_automate_awssns_manual.json",
      "workflow_name": "util_501_workflow_501_automate_awssns_manual",
      "suggested_filename": "util_501_workflow_501_automate_awssns_manual.json",
      "category": "UTIL",
      "business_function": "501",
      "key_integrations": [
        "manualTrigger",
        "awsSns"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.awsSns": 1
      },
      "business_value": "Automates 501 processes using manualTrigger, awsSns",
      "analysis_timestamp": "2025-06-01T16:06:48.632856"
    },
    {
      "original_filename": "ai_powered_ai_process_n8nnodeslangchainmemorybufferwindow_dhl_webhook.json",
      "workflow_name": "ai_powered_ai_process_n8nnodeslangchainmemorybufferwindow_dhl_webhook",
      "suggested_filename": "ai_powered_ai_process_n8nnodeslangchainmemorybufferwindow_dhl_webhook.json",
      "category": "AI",
      "business_function": "powered",
      "key_integrations": [
        "stickyNote",
        "set",
        "if",
        "merge",
        "splitOut",
        "aggregate",
        "@n8n/langchain.memoryBufferWindow",
        "executeWorkflowTrigger",
        "wooCommerce",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 40,
      "complexity": "High",
      "total_nodes": 40,
      "node_types": {
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.set": 8,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.wooCommerce": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.dhl": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.code": 3,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates powered processes using stickyNote, set, if",
      "analysis_timestamp": "2025-06-01T16:06:48.633273"
    },
    {
      "original_filename": "ai_text_ai_process_httprequest_manual_2.json",
      "workflow_name": "Text to Speech (OpenAI)",
      "suggested_filename": "ai_text_ai_process_httprequest_manual_2.json",
      "category": "AI",
      "business_function": "text",
      "key_integrations": [
        "manualTrigger",
        "set",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates text processes using manualTrigger, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.633451"
    },
    {
      "original_filename": "util_2448_workflow_2448_automate_httprequest_webhook_webhook.json",
      "workflow_name": "util_2448_workflow_2448_automate_httprequest_webhook_webhook",
      "suggested_filename": "util_2448_workflow_2448_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "2448",
      "key_integrations": [
        "httpRequest",
        "respondToWebhook",
        "switch",
        "set",
        "html",
        "webhook",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 2448 processes using httpRequest, respondToWebhook, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.633794"
    },
    {
      "original_filename": "content_post_automate_httprequest_manual_cron.json",
      "workflow_name": "post to wallabag",
      "suggested_filename": "content_post_automate_httprequest_manual_cron.json",
      "category": "CONTENT",
      "business_function": "post",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "cron",
        "function",
        "if",
        "merge"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates post processes using manualTrigger, httpRequest, cron",
      "analysis_timestamp": "2025-06-01T16:06:48.634048"
    },
    {
      "original_filename": "ai_2473_workflow_2473_automate_n8nnodeslangchainlmchatanthropic_n8nnodeslangchai.json",
      "workflow_name": "ai_2473_workflow_2473_automate_n8nnodeslangchainlmchatanthropic_n8nnodeslangchai",
      "suggested_filename": "ai_2473_workflow_2473_automate_n8nnodeslangchainlmchatanthropic_n8nnodeslangchai.json",
      "category": "AI",
      "business_function": "2473",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.lmChatAnthropic",
        "splitOut",
        "set",
        "aggregate",
        "@n8n/langchain.agent",
        "manualTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.stickyNote": 8,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates 2473 processes using stickyNote, @n8n/langchain.lmChatAnthropic, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.634327"
    },
    {
      "original_filename": "ai_company_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvectors_2.json",
      "workflow_name": "RAG Workflow For Company Documents stored in Google Drive",
      "suggested_filename": "ai_company_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvectors_2.json",
      "category": "AI",
      "business_function": "company",
      "key_integrations": [
        "@n8n/langchain.vectorStorePinecone",
        "@n8n/langchain.embeddingsGoogleGemini",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.agent",
        "@n8n/langchain.toolVectorStore",
        "googleDrive",
        "stickyNote",
        "googleDriveTrigger",
        "@n8n/langchain.memoryBufferWindow"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 2,
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.googleDriveTrigger": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2
      },
      "business_value": "Automates company processes using @n8n/langchain.vectorStorePinecone, @n8n/langchain.embeddingsGoogleGemini, @n8n/langchain.documentDefaultDataLoader",
      "analysis_timestamp": "2025-06-01T16:06:48.634593"
    },
    {
      "original_filename": "ai_2373_workflow_2373_automate_executeworkflow_httprequest.json",
      "workflow_name": "ai_2373_workflow_2373_automate_executeworkflow_httprequest",
      "suggested_filename": "ai_2373_workflow_2373_automate_executeworkflow_httprequest.json",
      "category": "AI",
      "business_function": "2373",
      "key_integrations": [
        "manualTrigger",
        "set",
        "html",
        "splitOut",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.embeddingsOpenAi",
        "httpRequest",
        "@n8n/langchain.lmChatOpenAi",
        "filter"
      ],
      "trigger_type": "chat",
      "complexity_score": 37,
      "complexity": "High",
      "total_nodes": 37,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.splitOut": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "n8n-nodes-base.httpRequest": 4,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 13,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 1,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1
      },
      "business_value": "Automates 2373 processes using manualTrigger, set, html",
      "analysis_timestamp": "2025-06-01T16:06:48.635129"
    },
    {
      "original_filename": "content_post_automate_httprequest_rssfeedread_cron.json",
      "workflow_name": "post to mattermost v2",
      "suggested_filename": "content_post_automate_httprequest_rssfeedread_cron.json",
      "category": "CONTENT",
      "business_function": "post",
      "key_integrations": [
        "rssFeedRead",
        "httpRequest",
        "cron",
        "function",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.rssFeedRead": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates post processes using rssFeedRead, httpRequest, cron",
      "analysis_timestamp": "2025-06-01T16:06:48.635407"
    },
    {
      "original_filename": "ai_enhance_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainmemorym.json",
      "workflow_name": "ai_enhance_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainmemorym",
      "suggested_filename": "ai_enhance_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainmemorym.json",
      "category": "AI",
      "business_function": "enhance",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "redis",
        "if",
        "@n8n/langchain.memoryBufferWindow",
        "twilioTrigger",
        "stickyNote",
        "twilio",
        "wait",
        "@n8n/langchain.memoryManager",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.redis": 2,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 2,
        "n8n-nodes-base.twilioTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.twilio": 1,
        "n8n-nodes-base.wait": 1,
        "@n8n/n8n-nodes-langchain.memoryManager": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates enhance processes using @n8n/langchain.lmChatOpenAi, redis, if",
      "analysis_timestamp": "2025-06-01T16:06:48.635674"
    },
    {
      "original_filename": "content_automatically_create_splitinbatches_manual.json",
      "workflow_name": "Automatically Update YouTube Video Descriptions with Inserted Text",
      "suggested_filename": "content_automatically_create_splitinbatches_manual.json",
      "category": "CONTENT",
      "business_function": "automatically",
      "key_integrations": [
        "youTube",
        "manualTrigger",
        "stickyNote",
        "set",
        "splitInBatches",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.youTube": 3,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates automatically processes using youTube, manualTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.635931"
    },
    {
      "original_filename": "ai_customer_analyze_openai_googlesheets.json",
      "workflow_name": "ai_customer_analyze_openai_googlesheets",
      "suggested_filename": "ai_customer_analyze_openai_googlesheets.json",
      "category": "AI",
      "business_function": "customer",
      "key_integrations": [
        "stickyNote",
        "googleSheets",
        "merge",
        "openAi",
        "formTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.formTrigger": 1
      },
      "business_value": "Automates customer processes using stickyNote, googleSheets, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.636223"
    },
    {
      "original_filename": "ai_2324_workflow_2324_automate_splitinbatches_n8nnodeslangchainoutputparserstruc.json",
      "workflow_name": "ai_2324_workflow_2324_automate_splitinbatches_n8nnodeslangchainoutputparserstruc",
      "suggested_filename": "ai_2324_workflow_2324_automate_splitinbatches_n8nnodeslangchainoutputparserstruc.json",
      "category": "AI",
      "business_function": "2324",
      "key_integrations": [
        "manualTrigger",
        "set",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.toolSerpApi",
        "@n8n/langchain.outputParserStructured",
        "splitInBatches",
        "googleSheets",
        "merge",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 2,
        "@n8n/n8n-nodes-langchain.toolSerpApi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates 2324 processes using manualTrigger, set, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.636553"
    },
    {
      "original_filename": "ai_calendar_scheduling_automate_itemlists_n8nnodeslangchainchainllm.json",
      "workflow_name": "Calendar_scheduling",
      "suggested_filename": "ai_calendar_scheduling_automate_itemlists_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "calendar",
      "key_integrations": [
        "gmailTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolWorkflow",
        "stickyNote",
        "googleCalendar",
        "executeWorkflowTrigger",
        "itemLists",
        "set",
        "filter",
        "if"
      ],
      "trigger_type": "chat",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.googleCalendar": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.itemLists": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.gmail": 2,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates calendar processes using gmailTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.toolWorkflow",
      "analysis_timestamp": "2025-06-01T16:06:48.636889"
    },
    {
      "original_filename": "ai_3545_workflow_3545_automate_n8nnodeslangchaintextclassifier_microsoftoutlook.json",
      "workflow_name": "ai_3545_workflow_3545_automate_n8nnodeslangchaintextclassifier_microsoftoutlook",
      "suggested_filename": "ai_3545_workflow_3545_automate_n8nnodeslangchaintextclassifier_microsoftoutlook.json",
      "category": "AI",
      "business_function": "3545",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.informationExtractor",
        "if",
        "set",
        "extractFromFile",
        "code",
        "@n8n/langchain.lmChatOpenAi",
        "microsoftOutlook",
        "microsoftOutlookTrigger",
        "@n8n/langchain.textClassifier"
      ],
      "trigger_type": "chat",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.stickyNote": 6,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.microsoftOutlook": 3,
        "n8n-nodes-base.microsoftOutlookTrigger": 1,
        "n8n-nodes-base.noOp": 2,
        "@n8n/n8n-nodes-langchain.textClassifier": 1
      },
      "business_value": "Automates 3545 processes using stickyNote, @n8n/langchain.informationExtractor, if",
      "analysis_timestamp": "2025-06-01T16:06:48.637218"
    },
    {
      "original_filename": "util_automate_unleashedsoftware_manual.json",
      "workflow_name": "",
      "suggested_filename": "util_automate_unleashedsoftware_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "key_integrations": [
        "manualTrigger",
        "unleashedSoftware"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.unleashedSoftware": 1
      },
      "business_value": "Automates automate processes using manualTrigger, unleashedSoftware",
      "analysis_timestamp": "2025-06-01T16:06:48.637415"
    },
    {
      "original_filename": "data_2199_workflow_2199_automate_schedule_googlesheets_cron.json",
      "workflow_name": "data_2199_workflow_2199_automate_schedule_googlesheets_cron",
      "suggested_filename": "data_2199_workflow_2199_automate_schedule_googlesheets_cron.json",
      "category": "DATA",
      "business_function": "2199",
      "key_integrations": [
        "scheduleTrigger",
        "googleSheets",
        "twitter",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 2199 processes using scheduleTrigger, googleSheets, twitter",
      "analysis_timestamp": "2025-06-01T16:06:48.637648"
    },
    {
      "original_filename": "ecommerce_1808_workflow_1808_automate_shopify_zendesk.json",
      "workflow_name": "ecommerce_1808_workflow_1808_automate_shopify_zendesk",
      "suggested_filename": "ecommerce_1808_workflow_1808_automate_shopify_zendesk.json",
      "category": "ECOMMERCE",
      "business_function": "1808",
      "key_integrations": [
        "set",
        "if",
        "merge",
        "shopifyTrigger",
        "zendesk"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.shopifyTrigger": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.zendesk": 3
      },
      "business_value": "Automates 1808 processes using set, if, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.637873"
    },
    {
      "original_filename": "comm_2704_workflow_2704_automate_slack_datetime_cron.json",
      "workflow_name": "comm_2704_workflow_2704_automate_slack_datetime_cron",
      "suggested_filename": "comm_2704_workflow_2704_automate_slack_datetime_cron.json",
      "category": "COMM",
      "business_function": "2704",
      "key_integrations": [
        "manualTrigger",
        "scheduleTrigger",
        "dateTime",
        "serviceNow",
        "if",
        "slack",
        "sort",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.serviceNow": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 2,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates 2704 processes using manualTrigger, scheduleTrigger, dateTime",
      "analysis_timestamp": "2025-06-01T16:06:48.638167"
    },
    {
      "original_filename": "ai_2559_workflow_2559_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_2559_workflow_2559_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_2559_workflow_2559_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "2559",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "httpRequest",
        "set",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.memoryBufferWindow",
        "stickyNote",
        "@n8n/langchain.textClassifier"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 4,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1
      },
      "business_value": "Automates 2559 processes using @n8n/langchain.lmChatOpenAi, executeWorkflow, executeWorkflowTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.638551"
    },
    {
      "original_filename": "util_prevent_automate_redis_stopanderror.json",
      "workflow_name": "Prevent concurrent workflow runs using Redis",
      "suggested_filename": "util_prevent_automate_redis_stopanderror.json",
      "category": "UTIL",
      "business_function": "prevent",
      "key_integrations": [
        "executeWorkflowTrigger",
        "switch",
        "manualTrigger",
        "if",
        "stickyNote",
        "executeWorkflow",
        "redis",
        "set",
        "stopAndError",
        "wait"
      ],
      "trigger_type": "manual",
      "complexity_score": 43,
      "complexity": "High",
      "total_nodes": 43,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.stickyNote": 12,
        "n8n-nodes-base.executeWorkflow": 12,
        "n8n-nodes-base.redis": 3,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.stopAndError": 2,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.wait": 4
      },
      "business_value": "Automates prevent processes using executeWorkflowTrigger, switch, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.639122"
    },
    {
      "original_filename": "util_format_automate_executeworkflow.json",
      "workflow_name": "Format US Phone Number",
      "suggested_filename": "util_format_automate_executeworkflow.json",
      "category": "UTIL",
      "business_function": "format",
      "key_integrations": [
        "executeWorkflowTrigger",
        "if",
        "set",
        "switch"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates format processes using executeWorkflowTrigger, if, set",
      "analysis_timestamp": "2025-06-01T16:06:48.639479"
    },
    {
      "original_filename": "content_post_automate_airtop_executeworkflow.json",
      "workflow_name": "Post on X",
      "suggested_filename": "content_post_automate_airtop_executeworkflow.json",
      "category": "CONTENT",
      "business_function": "post",
      "key_integrations": [
        "airtop",
        "executeWorkflowTrigger",
        "stickyNote",
        "formTrigger",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.airtop": 5,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates post processes using airtop, executeWorkflowTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.639747"
    },
    {
      "original_filename": "biz_create_create_contact_agilecrm_manual.json",
      "workflow_name": "Create a new contact in Agile CRM",
      "suggested_filename": "biz_create_create_contact_agilecrm_manual.json",
      "category": "BIZ",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "agileCrm"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.agileCrm": 1
      },
      "business_value": "Automates create processes using manualTrigger, agileCrm",
      "analysis_timestamp": "2025-06-01T16:06:48.639863"
    },
    {
      "original_filename": "util_create_create_strava_manual.json",
      "workflow_name": "Create, update, and get activity in Strava",
      "suggested_filename": "util_create_create_strava_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "strava"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.strava": 3
      },
      "business_value": "Automates create processes using manualTrigger, strava",
      "analysis_timestamp": "2025-06-01T16:06:48.639973"
    },
    {
      "original_filename": "ai_automating_ai_process_httprequest_schedule_cron.json",
      "workflow_name": "Automating Betting Data Retrieval with TheOddsAPI and Airtable",
      "suggested_filename": "ai_automating_ai_process_httprequest_schedule_cron.json",
      "category": "AI",
      "business_function": "automating",
      "key_integrations": [
        "stickyNote",
        "scheduleTrigger",
        "httpRequest",
        "airtable",
        "merge"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.scheduleTrigger": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates automating processes using stickyNote, scheduleTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.640250"
    },
    {
      "original_filename": "util_namecheap_automate_httprequest_cron_cron.json",
      "workflow_name": "NameCheap Dynamic DNS (DDNS)",
      "suggested_filename": "util_namecheap_automate_httprequest_cron_cron.json",
      "category": "UTIL",
      "business_function": "namecheap",
      "key_integrations": [
        "cron",
        "function",
        "httpRequest",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.function": 3,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates namecheap processes using cron, function, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.640476"
    },
    {
      "original_filename": "util_582_workflow_582_automate_renamekeys_manual.json",
      "workflow_name": "util_582_workflow_582_automate_renamekeys_manual",
      "suggested_filename": "util_582_workflow_582_automate_renamekeys_manual.json",
      "category": "UTIL",
      "business_function": "582",
      "key_integrations": [
        "manualTrigger",
        "set",
        "renameKeys"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.renameKeys": 1
      },
      "business_value": "Automates 582 processes using manualTrigger, set, renameKeys",
      "analysis_timestamp": "2025-06-01T16:06:48.640573"
    },
    {
      "original_filename": "ai_handling_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchain.json",
      "workflow_name": "ai_handling_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchain",
      "suggested_filename": "ai_handling_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchain.json",
      "category": "AI",
      "business_function": "handling",
      "key_integrations": [
        "twilioTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "airtable",
        "twilio",
        "stickyNote",
        "scheduleTrigger",
        "switch",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "n8n-nodes-base.twilioTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "n8n-nodes-base.airtable": 5,
        "n8n-nodes-base.twilio": 3,
        "n8n-nodes-base.stickyNote": 12,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 6,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates handling processes using twilioTrigger, @n8n/langchain.lmChatOpenAi, airtable",
      "analysis_timestamp": "2025-06-01T16:06:48.641144"
    },
    {
      "original_filename": "ai_image_automate_webhook_n8nnodeslangchainopenai_webhook_2.json",
      "workflow_name": "Image Generation API",
      "suggested_filename": "ai_image_automate_webhook_n8nnodeslangchainopenai_webhook_2.json",
      "category": "AI",
      "business_function": "image",
      "key_integrations": [
        "webhook",
        "respondToWebhook",
        "stickyNote",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "webhook",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates image processes using webhook, respondToWebhook, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.641286"
    },
    {
      "original_filename": "util_time_read_toggl.json",
      "workflow_name": "Get new time entries from Toggl",
      "suggested_filename": "util_time_read_toggl.json",
      "category": "UTIL",
      "business_function": "time",
      "key_integrations": [
        "togglTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.togglTrigger": 1
      },
      "business_value": "Automates time processes using togglTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.641453"
    },
    {
      "original_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_10.json",
      "workflow_name": "🔥📈🤖 AI Agent for n8n Creators Leaderboard - Find Popular Workflows",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_10.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "httpRequest",
        "set",
        "limit",
        "aggregate",
        "filter",
        "@n8n/langchain.lmChatOpenAi",
        "executeWorkflowTrigger",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.toolWorkflow",
        "convertToFile"
      ],
      "trigger_type": "chat",
      "complexity_score": 43,
      "complexity": "High",
      "total_nodes": 43,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 7,
        "n8n-nodes-base.limit": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.filter": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.convertToFile": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.stickyNote": 16,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.sort": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1
      },
      "business_value": "Automates agent processes using httpRequest, set, limit",
      "analysis_timestamp": "2025-06-01T16:06:48.641921"
    },
    {
      "original_filename": "ai_generate_generate_n8nnodeslangchaintextclassifier_converttofile.json",
      "workflow_name": "Generate AI-Ready llms.txt Files from Screaming Frog Website Crawls",
      "suggested_filename": "ai_generate_generate_n8nnodeslangchaintextclassifier_converttofile.json",
      "category": "AI",
      "business_function": "generate",
      "key_integrations": [
        "stickyNote",
        "set",
        "@n8n/langchain.textClassifier",
        "@n8n/langchain.lmChatOpenAi",
        "filter",
        "summarize",
        "formTrigger",
        "extractFromFile",
        "convertToFile"
      ],
      "trigger_type": "chat",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.stickyNote": 11,
        "n8n-nodes-base.set": 3,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.summarize": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.convertToFile": 1
      },
      "business_value": "Automates generate processes using stickyNote, set, @n8n/langchain.textClassifier",
      "analysis_timestamp": "2025-06-01T16:06:48.642333"
    },
    {
      "original_filename": "util_1994_workflow_1994_automate_splitinbatches_stopanderror_webhook.json",
      "workflow_name": "util_1994_workflow_1994_automate_splitinbatches_stopanderror_webhook",
      "suggested_filename": "util_1994_workflow_1994_automate_splitinbatches_stopanderror_webhook.json",
      "category": "UTIL",
      "business_function": "1994",
      "key_integrations": [
        "manualTrigger",
        "if",
        "set",
        "stickyNote",
        "code",
        "webhook",
        "executeWorkflowTrigger",
        "nextCloud",
        "splitInBatches",
        "stopAndError"
      ],
      "trigger_type": "webhook",
      "complexity_score": 32,
      "complexity": "High",
      "total_nodes": 32,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.nextCloud": 6,
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.stopAndError": 2
      },
      "business_value": "Automates 1994 processes using manualTrigger, if, set",
      "analysis_timestamp": "2025-06-01T16:06:48.642649"
    },
    {
      "original_filename": "ai_2090_workflow_2090_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_2090_workflow_2090_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_2090_workflow_2090_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "2090",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "postgresTool",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.postgresTool": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates 2090 processes using stickyNote, @n8n/langchain.chatTrigger, postgresTool",
      "analysis_timestamp": "2025-06-01T16:06:48.642892"
    },
    {
      "original_filename": "ai_agent_ai_process_postgres_supabase_webhook.json",
      "workflow_name": "ai_agent_ai_process_postgres_supabase_webhook",
      "suggested_filename": "ai_agent_ai_process_postgres_supabase_webhook.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "@n8n/langchain.openAi",
        "postgres",
        "postgresTool",
        "httpRequest",
        "supabase",
        "stickyNote",
        "set",
        "webhook",
        "if"
      ],
      "trigger_type": "webhook",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.postgres": 1,
        "n8n-nodes-base.postgresTool": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.supabase": 1,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates agent processes using @n8n/langchain.openAi, postgres, postgresTool",
      "analysis_timestamp": "2025-06-01T16:06:48.643209"
    },
    {
      "original_filename": "ai_2648_workflow_2648_automate_wordpress_n8nnodeslangchainchainllm.json",
      "workflow_name": "ai_2648_workflow_2648_automate_wordpress_n8nnodeslangchainchainllm",
      "suggested_filename": "ai_2648_workflow_2648_automate_wordpress_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "2648",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.informationExtractor",
        "httpRequest",
        "html",
        "splitOut",
        "limit",
        "aggregate",
        "merge",
        "wordpress"
      ],
      "trigger_type": "chat",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "@n8n/n8n-nodes-langchain.informationExtractor": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.stickyNote": 9,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 2648 processes using manualTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.informationExtractor",
      "analysis_timestamp": "2025-06-01T16:06:48.643535"
    },
    {
      "original_filename": "ai_streamline_automate_gmail_httprequest.json",
      "workflow_name": "Streamline Your Zoom Meetings with Secure, Automated Stripe Payments",
      "suggested_filename": "ai_streamline_automate_gmail_httprequest.json",
      "category": "AI",
      "business_function": "streamline",
      "key_integrations": [
        "zoom",
        "httpRequest",
        "set",
        "gmail",
        "googleSheets",
        "formTrigger",
        "stripeTrigger",
        "stickyNote",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.zoom": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.gmail": 3,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.stripeTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates streamline processes using zoom, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.643965"
    },
    {
      "original_filename": "data_scrape_extract_httprequest_schedule_cron.json",
      "workflow_name": "Scrape Trustpilot Reviews to Google Sheets",
      "suggested_filename": "data_scrape_extract_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "scrape",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "httpRequest",
        "set",
        "code",
        "splitOut",
        "googleSheets",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates scrape processes using manualTrigger, stickyNote, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.644350"
    },
    {
      "original_filename": "ops_dashboard_report_httprequest_github_cron.json",
      "workflow_name": "Dashboard",
      "suggested_filename": "ops_dashboard_report_httprequest_github_cron.json",
      "category": "OPS",
      "business_function": "dashboard",
      "key_integrations": [
        "cron",
        "set",
        "httpRequest",
        "github",
        "function"
      ],
      "trigger_type": "cron",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 17,
        "n8n-nodes-base.github": 1,
        "n8n-nodes-base.function": 4
      },
      "business_value": "Automates dashboard processes using cron, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.644671"
    },
    {
      "original_filename": "ai_3893_workflow_3893_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "workflow_name": "ai_3893_workflow_3893_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput",
      "suggested_filename": "ai_3893_workflow_3893_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "3893",
      "key_integrations": [
        "scheduleTrigger",
        "microsoftOutlook",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "stickyNote",
        "markdown",
        "jira",
        "removeDuplicates",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "cron",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.microsoftOutlook": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.jira": 1,
        "n8n-nodes-base.removeDuplicates": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates 3893 processes using scheduleTrigger, microsoftOutlook, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.644941"
    },
    {
      "original_filename": "ai_openai_ai_process_httprequest_functionitem.json",
      "workflow_name": "ai_openai_ai_process_httprequest_functionitem",
      "suggested_filename": "ai_openai_ai_process_httprequest_functionitem.json",
      "category": "AI",
      "business_function": "openai",
      "key_integrations": [
        "manualTrigger",
        "functionItem",
        "httpRequest",
        "airtable",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates openai processes using manualTrigger, functionItem, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.645064"
    },
    {
      "original_filename": "ai_3969_workflow_3969_automate_splitinbatches_slack_cron.json",
      "workflow_name": "ai_3969_workflow_3969_automate_splitinbatches_slack_cron",
      "suggested_filename": "ai_3969_workflow_3969_automate_splitinbatches_slack_cron.json",
      "category": "AI",
      "business_function": "3969",
      "key_integrations": [
        "slack",
        "set",
        "code",
        "splitOut",
        "aggregate",
        "filter",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.chainLlm",
        "splitInBatches",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 47,
      "complexity": "High",
      "total_nodes": 47,
      "node_types": {
        "n8n-nodes-base.slack": 5,
        "n8n-nodes-base.set": 8,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.splitOut": 3,
        "n8n-nodes-base.aggregate": 5,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.noOp": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 3,
        "@n8n/n8n-nodes-langchain.chainLlm": 3,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.executeWorkflow": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates 3969 processes using slack, set, code",
      "analysis_timestamp": "2025-06-01T16:06:48.645503"
    },
    {
      "original_filename": "ai_3161_workflow_3161_automate_googlesheets_twitter.json",
      "workflow_name": "ai_3161_workflow_3161_automate_googlesheets_twitter",
      "suggested_filename": "ai_3161_workflow_3161_automate_googlesheets_twitter.json",
      "category": "AI",
      "business_function": "3161",
      "key_integrations": [
        "googleSheets",
        "openAi",
        "if",
        "twitter"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.twitter": 1
      },
      "business_value": "Automates 3161 processes using googleSheets, openAi, if",
      "analysis_timestamp": "2025-06-01T16:06:48.645630"
    },
    {
      "original_filename": "util_pinger_automate_schedule_httprequest_cron.json",
      "workflow_name": "URL Pinger",
      "suggested_filename": "util_pinger_automate_schedule_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "pinger",
      "key_integrations": [
        "splitOut",
        "scheduleTrigger",
        "httpRequest",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates pinger processes using splitOut, scheduleTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.645724"
    },
    {
      "original_filename": "ai_analyze_analyze_gmail_httprequest_2.json",
      "workflow_name": "ai_analyze_analyze_gmail_httprequest_2",
      "suggested_filename": "ai_analyze_analyze_gmail_httprequest_2.json",
      "category": "AI",
      "business_function": "analyze",
      "key_integrations": [
        "gmailTrigger",
        "microsoftOutlookTrigger",
        "httpRequest",
        "set",
        "code",
        "@n8n/langchain.openAi",
        "jira",
        "convertToFile",
        "stickyNote",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.microsoftOutlookTrigger": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.code": 3,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.jira": 4,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates analyze processes using gmailTrigger, microsoftOutlookTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.646074"
    },
    {
      "original_filename": "comm_864_workflow_864_automate_googlesheets_interval.json",
      "workflow_name": "comm_864_workflow_864_automate_googlesheets_interval",
      "suggested_filename": "comm_864_workflow_864_automate_googlesheets_interval.json",
      "category": "COMM",
      "business_function": "864",
      "key_integrations": [
        "mattermost",
        "function",
        "googleSheets",
        "interval"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.mattermost": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.interval": 1
      },
      "business_value": "Automates 864 processes using mattermost, function, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.646190"
    },
    {
      "original_filename": "util_663_workflow_663_automate_ftp_httprequest.json",
      "workflow_name": "util_663_workflow_663_automate_ftp_httprequest",
      "suggested_filename": "util_663_workflow_663_automate_ftp_httprequest.json",
      "category": "UTIL",
      "business_function": "663",
      "key_integrations": [
        "manualTrigger",
        "ftp",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.ftp": 2,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 663 processes using manualTrigger, ftp, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.646375"
    },
    {
      "original_filename": "util_chinese_automate_httprequest_webhook_webhook.json",
      "workflow_name": "Chinese Translator",
      "suggested_filename": "util_chinese_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "chinese",
      "key_integrations": [
        "webhook",
        "httpRequest",
        "stickyNote",
        "switch",
        "extractFromFile"
      ],
      "trigger_type": "webhook",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 8,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.extractFromFile": 1
      },
      "business_value": "Automates chinese processes using webhook, httpRequest, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.646661"
    },
    {
      "original_filename": "ai_2446_workflow_2446_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_2446_workflow_2446_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_2446_workflow_2446_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "2446",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "respondToWebhook",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.memoryBufferWindow",
        "set",
        "@n8n/langchain.agent",
        "@n8n/langchain.toolHttpRequest",
        "stickyNote",
        "webhook"
      ],
      "trigger_type": "chat",
      "complexity_score": 28,
      "complexity": "High",
      "total_nodes": 28,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "n8n-nodes-base.respondToWebhook": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 3,
        "n8n-nodes-base.set": 7,
        "@n8n/n8n-nodes-langchain.agent": 3,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 3,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 2446 processes using @n8n/langchain.lmChatOpenAi, respondToWebhook, @n8n/langchain.toolWorkflow",
      "analysis_timestamp": "2025-06-01T16:06:48.647045"
    },
    {
      "original_filename": "util_scrape_extract_httprequest_manual_1.json",
      "workflow_name": "Scrape Latest 20 TechCrunch Articles",
      "suggested_filename": "util_scrape_extract_httprequest_manual_1.json",
      "category": "UTIL",
      "business_function": "scrape",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "html",
        "splitOut",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.html": 4,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates scrape processes using manualTrigger, httpRequest, html",
      "analysis_timestamp": "2025-06-01T16:06:48.647303"
    },
    {
      "original_filename": "ai_2138_workflow_2138_automate_splitinbatches_respondtowebhook.json",
      "workflow_name": "ai_2138_workflow_2138_automate_splitinbatches_respondtowebhook",
      "suggested_filename": "ai_2138_workflow_2138_automate_splitinbatches_respondtowebhook.json",
      "category": "AI",
      "business_function": "2138",
      "key_integrations": [
        "splitInBatches",
        "graphql",
        "notion",
        "aggregate",
        "set",
        "linear",
        "code",
        "if",
        "httpRequest",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "webhook",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.graphql": 2,
        "n8n-nodes-base.notion": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.linear": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.respondToWebhook": 2
      },
      "business_value": "Automates 2138 processes using splitInBatches, graphql, notion",
      "analysis_timestamp": "2025-06-01T16:06:48.647662"
    },
    {
      "original_filename": "ops_817_workflow_817_automate_splitinbatches_httprequest_cron.json",
      "workflow_name": "ops_817_workflow_817_automate_splitinbatches_httprequest_cron",
      "suggested_filename": "ops_817_workflow_817_automate_splitinbatches_httprequest_cron.json",
      "category": "OPS",
      "business_function": "817",
      "key_integrations": [
        "manualTrigger",
        "function",
        "httpRequest",
        "github",
        "merge",
        "switch",
        "cron",
        "splitInBatches",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.github": 3,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.noOp": 3,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 817 processes using manualTrigger, function, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.647933"
    },
    {
      "original_filename": "util_subworkflow_automate_splitinbatches_respondtowebhook_cron.json",
      "workflow_name": "n8n Subworkflow Dependency Graph & Auto-Tagging",
      "suggested_filename": "util_subworkflow_automate_splitinbatches_respondtowebhook_cron.json",
      "category": "UTIL",
      "business_function": "subworkflow",
      "key_integrations": [
        "httpRequest",
        "n8n",
        "code",
        "filter",
        "scheduleTrigger",
        "n8nTrigger",
        "set",
        "splitInBatches",
        "if",
        "splitOut"
      ],
      "trigger_type": "cron",
      "complexity_score": 40,
      "complexity": "High",
      "total_nodes": 40,
      "node_types": {
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.n8n": 2,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.n8nTrigger": 1,
        "n8n-nodes-base.set": 6,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.quickChart": 1,
        "n8n-nodes-base.stickyNote": 13,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1
      },
      "business_value": "Automates subworkflow processes using httpRequest, n8n, code",
      "analysis_timestamp": "2025-06-01T16:06:48.648314"
    },
    {
      "original_filename": "util_contacts_update_getresponse_manual.json",
      "workflow_name": "Get all the contacts from GetResponse and update them",
      "suggested_filename": "util_contacts_update_getresponse_manual.json",
      "category": "UTIL",
      "business_function": "contacts",
      "key_integrations": [
        "manualTrigger",
        "getResponse",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.getResponse": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates contacts processes using manualTrigger, getResponse, if",
      "analysis_timestamp": "2025-06-01T16:06:48.648531"
    },
    {
      "original_filename": "util_2586_workflow_2586_automate_httprequest_schedule_cron.json",
      "workflow_name": "util_2586_workflow_2586_automate_httprequest_schedule_cron",
      "suggested_filename": "util_2586_workflow_2586_automate_httprequest_schedule_cron.json",
      "category": "UTIL",
      "business_function": "2586",
      "key_integrations": [
        "scheduleTrigger",
        "httpRequest",
        "manualTrigger",
        "set",
        "code",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates 2586 processes using scheduleTrigger, httpRequest, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.648846"
    },
    {
      "original_filename": "ai_cocktail_ai_process_rocketchat_httprequest_cron.json",
      "workflow_name": "Cocktail Recipe Sharing",
      "suggested_filename": "ai_cocktail_ai_process_rocketchat_httprequest_cron.json",
      "category": "AI",
      "business_function": "cocktail",
      "key_integrations": [
        "bannerbear",
        "httpRequest",
        "cron",
        "rocketchat"
      ],
      "trigger_type": "cron",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.bannerbear": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.rocketchat": 1
      },
      "business_value": "Automates cocktail processes using bannerbear, httpRequest, cron",
      "analysis_timestamp": "2025-06-01T16:06:48.648970"
    },
    {
      "original_filename": "ops_backup_backup_splitinbatches_schedule_cron.json",
      "workflow_name": "Backup workflows to git repository",
      "suggested_filename": "ops_backup_backup_splitinbatches_schedule_cron.json",
      "category": "OPS",
      "business_function": "backup",
      "key_integrations": [
        "github",
        "set",
        "n8n",
        "splitInBatches",
        "if",
        "code",
        "scheduleTrigger",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.github": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates backup processes using github, set, n8n",
      "analysis_timestamp": "2025-06-01T16:06:48.649245"
    },
    {
      "original_filename": "ai_mongodb_automate_n8nnodeslangchainmemorybufferwindow_mongodb_2.json",
      "workflow_name": "MongoDB Agent",
      "suggested_filename": "ai_mongodb_automate_n8nnodeslangchainmemorybufferwindow_mongodb_2.json",
      "category": "AI",
      "business_function": "mongodb",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "mongoDbTool",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.agent",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.mongoDbTool": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates mongodb processes using @n8n/langchain.lmChatOpenAi, mongoDbTool, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.649468"
    },
    {
      "original_filename": "ai_scrape_analyze_httprequest_manual_1.json",
      "workflow_name": "Scrape Trustpilot Reviews with DeepSeek, Analyze Sentiment with OpenAI",
      "suggested_filename": "ai_scrape_analyze_httprequest_manual_1.json",
      "category": "AI",
      "business_function": "scrape",
      "key_integrations": [
        "splitOut",
        "@n8n/langchain.informationExtractor",
        "if",
        "manualTrigger",
        "limit",
        "stickyNote",
        "set",
        "httpRequest",
        "html",
        "googleSheets"
      ],
      "trigger_type": "chat",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.googleSheets": 3,
        "@n8n/n8n-nodes-langchain.sentimentAnalysis": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2
      },
      "business_value": "Automates scrape processes using splitOut, @n8n/langchain.informationExtractor, if",
      "analysis_timestamp": "2025-06-01T16:06:48.649852"
    },
    {
      "original_filename": "util_execute_automate_microsoftsql_manual.json",
      "workflow_name": "Execute an SQL query in Microsoft SQL",
      "suggested_filename": "util_execute_automate_microsoftsql_manual.json",
      "category": "UTIL",
      "business_function": "execute",
      "key_integrations": [
        "manualTrigger",
        "microsoftSql"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.microsoftSql": 1
      },
      "business_value": "Automates execute processes using manualTrigger, microsoftSql",
      "analysis_timestamp": "2025-06-01T16:06:48.649983"
    },
    {
      "original_filename": "util_1283_workflow_1283_automate_emailsend_googledrive.json",
      "workflow_name": "util_1283_workflow_1283_automate_emailsend_googledrive",
      "suggested_filename": "util_1283_workflow_1283_automate_emailsend_googledrive.json",
      "category": "UTIL",
      "business_function": "1283",
      "key_integrations": [
        "googleDriveTrigger",
        "emailSend"
      ],
      "trigger_type": "email",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.emailSend": 1
      },
      "business_value": "Automates 1283 processes using googleDriveTrigger, emailSend",
      "analysis_timestamp": "2025-06-01T16:06:48.650174"
    },
    {
      "original_filename": "util_3970_workflow_3970_automate_webhook_respondtowebhook_webhook.json",
      "workflow_name": "util_3970_workflow_3970_automate_webhook_respondtowebhook_webhook",
      "suggested_filename": "util_3970_workflow_3970_automate_webhook_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "3970",
      "key_integrations": [
        "if",
        "respondToWebhook",
        "set",
        "webhook",
        "code",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.respondToWebhook": 3,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 3970 processes using if, respondToWebhook, set",
      "analysis_timestamp": "2025-06-01T16:06:48.650508"
    },
    {
      "original_filename": "ai_langchain_ai_process_n8nnodeslangchainchainretrievalqa_n8nnodeslangchainlmcha.json",
      "workflow_name": "LangChain - Example - Workflow Retriever",
      "suggested_filename": "ai_langchain_ai_process_n8nnodeslangchainchainretrievalqa_n8nnodeslangchainlmcha.json",
      "category": "AI",
      "business_function": "langchain",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.retrieverWorkflow",
        "@n8n/langchain.chainRetrievalQa",
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.retrieverWorkflow": 1,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates langchain processes using manualTrigger, @n8n/langchain.retrieverWorkflow, @n8n/langchain.chainRetrievalQa",
      "analysis_timestamp": "2025-06-01T16:06:48.650629"
    },
    {
      "original_filename": "ai_powered_ai_process_n8nnodeslangchainoutputparserstructured_httprequest.json",
      "workflow_name": "⚡AI-Powered YouTube Playlist & Video Summarization and Analysis v2",
      "suggested_filename": "ai_powered_ai_process_n8nnodeslangchainoutputparserstructured_httprequest.json",
      "category": "AI",
      "business_function": "powered",
      "key_integrations": [
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.agent",
        "splitOut",
        "@n8n/langchain.chainLlm",
        "summarize",
        "limit",
        "@n8n/langchain.vectorStoreQdrant",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.embeddingsGoogleGemini",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 72,
      "complexity": "High",
      "total_nodes": 72,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 7,
        "@n8n/n8n-nodes-langchain.agent": 4,
        "n8n-nodes-base.splitOut": 4,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.summarize": 4,
        "n8n-nodes-base.limit": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 4,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini": 4,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 3,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 4,
        "n8n-nodes-base.stickyNote": 12,
        "n8n-nodes-youtube-transcription-dmr.youtubeTranscripter": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.redis": 4,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.code": 6,
        "n8n-nodes-base.if": 2,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 2
      },
      "business_value": "Automates powered processes using @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.agent, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.651355"
    },
    {
      "original_filename": "util_536_workflow_536_automate_clockify.json",
      "workflow_name": "util_536_workflow_536_automate_clockify",
      "suggested_filename": "util_536_workflow_536_automate_clockify.json",
      "category": "UTIL",
      "business_function": "536",
      "key_integrations": [
        "clockifyTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.clockifyTrigger": 1
      },
      "business_value": "Automates 536 processes using clockifyTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.651495"
    },
    {
      "original_filename": "ai_human_automate_n8nnodeslangchainmemorybufferwindow_slack.json",
      "workflow_name": "Ask a human",
      "suggested_filename": "ai_human_automate_n8nnodeslangchainmemorybufferwindow_slack.json",
      "category": "AI",
      "business_function": "human",
      "key_integrations": [
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolWorkflow",
        "executeWorkflowTrigger",
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "code",
        "@n8n/langchain.agent",
        "if",
        "slack",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.code": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates human processes using @n8n/langchain.memoryBufferWindow, @n8n/langchain.toolWorkflow, executeWorkflowTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.651719"
    },
    {
      "original_filename": "ecommerce_548_workflow_548_automate_manual_shopify.json",
      "workflow_name": "ecommerce_548_workflow_548_automate_manual_shopify",
      "suggested_filename": "ecommerce_548_workflow_548_automate_manual_shopify.json",
      "category": "ECOMMERCE",
      "business_function": "548",
      "key_integrations": [
        "manualTrigger",
        "shopify"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.shopify": 1
      },
      "business_value": "Automates 548 processes using manualTrigger, shopify",
      "analysis_timestamp": "2025-06-01T16:06:48.651822"
    },
    {
      "original_filename": "data_2281_workflow_2281_automate_wordpress_httprequest_cron.json",
      "workflow_name": "data_2281_workflow_2281_automate_wordpress_httprequest_cron",
      "suggested_filename": "data_2281_workflow_2281_automate_wordpress_httprequest_cron.json",
      "category": "DATA",
      "business_function": "2281",
      "key_integrations": [
        "wordpress",
        "httpRequest",
        "set",
        "airtable",
        "filter",
        "markdown",
        "stickyNote",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates 2281 processes using wordpress, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.652100"
    },
    {
      "original_filename": "ai_send_ai_process_httprequest_schedule_cron.json",
      "workflow_name": "ai_send_ai_process_httprequest_schedule_cron",
      "suggested_filename": "ai_send_ai_process_httprequest_schedule_cron.json",
      "category": "AI",
      "business_function": "send",
      "key_integrations": [
        "stickyNote",
        "scheduleTrigger",
        "@n8n/langchain.openAi",
        "set",
        "discord",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.informationExtractor",
        "httpRequest"
      ],
      "trigger_type": "cron",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.discord": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates send processes using stickyNote, scheduleTrigger, @n8n/langchain.openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.652362"
    },
    {
      "original_filename": "util_address_create_httprequest_webhook_webhook.json",
      "workflow_name": "address validation",
      "suggested_filename": "util_address_create_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "address",
      "key_integrations": [
        "httpRequest",
        "splitOut",
        "set",
        "wait",
        "if",
        "stickyNote",
        "filter",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 31,
      "complexity": "High",
      "total_nodes": 31,
      "node_types": {
        "n8n-nodes-base.httpRequest": 6,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.wait": 2,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates address processes using httpRequest, splitOut, set",
      "analysis_timestamp": "2025-06-01T16:06:48.652745"
    },
    {
      "original_filename": "comm_355_workflow_355_automate_pagerduty_webhook_webhook.json",
      "workflow_name": "comm_355_workflow_355_automate_pagerduty_webhook_webhook",
      "suggested_filename": "comm_355_workflow_355_automate_pagerduty_webhook_webhook.json",
      "category": "COMM",
      "business_function": "355",
      "key_integrations": [
        "mattermost",
        "jira",
        "pagerDuty",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.mattermost": 2,
        "n8n-nodes-base.jira": 1,
        "n8n-nodes-base.pagerDuty": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 355 processes using mattermost, jira, pagerDuty",
      "analysis_timestamp": "2025-06-01T16:06:48.652880"
    },
    {
      "original_filename": "ai_1954_workflow_1954_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_1954_workflow_1954_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_1954_workflow_1954_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "1954",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolSerpApi",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolSerpApi": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates 1954 processes using @n8n/langchain.chatTrigger, @n8n/langchain.memoryBufferWindow, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.653078"
    },
    {
      "original_filename": "ai_3027_workflow_3027_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "workflow_name": "ai_3027_workflow_3027_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl",
      "suggested_filename": "ai_3027_workflow_3027_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "category": "AI",
      "business_function": "3027",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.outputParserStructured",
        "set",
        "@n8n/langchain.chainLlm",
        "airtable"
      ],
      "trigger_type": "chat",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.set": 3,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "n8n-nodes-base.airtable": 1
      },
      "business_value": "Automates 3027 processes using @n8n/langchain.chatTrigger, @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.outputParserAutofixing",
      "analysis_timestamp": "2025-06-01T16:06:48.653353"
    },
    {
      "original_filename": "ai_insert_create_n8nnodeslangchainchat_httprequest.json",
      "workflow_name": "Insert and retrieve documents",
      "suggested_filename": "ai_insert_create_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "insert",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "html",
        "splitOut",
        "limit",
        "stickyNote",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "set",
        "@n8n/langchain.informationExtractor",
        "code"
      ],
      "trigger_type": "chat",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.set": 3,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreMilvus": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates insert processes using manualTrigger, httpRequest, html",
      "analysis_timestamp": "2025-06-01T16:06:48.653642"
    },
    {
      "original_filename": "util_2314_workflow_2314_automate_httprequest_readwritefile.json",
      "workflow_name": "util_2314_workflow_2314_automate_httprequest_readwritefile",
      "suggested_filename": "util_2314_workflow_2314_automate_httprequest_readwritefile.json",
      "category": "UTIL",
      "business_function": "2314",
      "key_integrations": [
        "manualTrigger",
        "readWriteFile",
        "stickyNote",
        "set",
        "code",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 2314 processes using manualTrigger, readWriteFile, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.653865"
    },
    {
      "original_filename": "ai_google_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "workflow_name": "Google Maps FULL",
      "suggested_filename": "ai_google_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "google",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.toolSerpApi",
        "stickyNote",
        "executeWorkflowTrigger",
        "httpRequest",
        "googleSheets"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 2,
        "@n8n/n8n-nodes-langchain.toolSerpApi": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.aggregate": 2
      },
      "business_value": "Automates google processes using @n8n/langchain.chatTrigger, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.654217"
    },
    {
      "original_filename": "util_scans_automate_schedule_nextcloud_cron.json",
      "workflow_name": "Scans von PDF zu Nextcloud",
      "suggested_filename": "util_scans_automate_schedule_nextcloud_cron.json",
      "category": "UTIL",
      "business_function": "scans",
      "key_integrations": [
        "httpRequest",
        "nextCloud",
        "scheduleTrigger",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.nextCloud": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates scans processes using httpRequest, nextCloud, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.654422"
    },
    {
      "original_filename": "util_what_automate_emailsend_httprequest_cron.json",
      "workflow_name": "What To Eat",
      "suggested_filename": "util_what_automate_emailsend_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "what",
      "key_integrations": [
        "cron",
        "set",
        "function",
        "httpRequest",
        "emailSend"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.function": 3,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.emailSend": 1
      },
      "business_value": "Automates what processes using cron, set, function",
      "analysis_timestamp": "2025-06-01T16:06:48.654665"
    },
    {
      "original_filename": "ai_extract_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr_3.json",
      "workflow_name": "Extract spend details (template)",
      "suggested_filename": "ai_extract_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr_3.json",
      "category": "AI",
      "business_function": "extract",
      "key_integrations": [
        "gmailTrigger",
        "extractFromFile",
        "html",
        "splitOut",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.lmChatGoogleGemini",
        "googleSheets",
        "set",
        "switch",
        "@n8n/langchain.lmChatGroq"
      ],
      "trigger_type": "chat",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 2,
        "n8n-nodes-base.extractFromFile": 2,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 2,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.lmChatGroq": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates extract processes using gmailTrigger, extractFromFile, html",
      "analysis_timestamp": "2025-06-01T16:06:48.655040"
    },
    {
      "original_filename": "ai_luma_ai_process_executiondata_webhook_webhook.json",
      "workflow_name": "Luma AI - Webhook Response v1 - AK",
      "suggested_filename": "ai_luma_ai_process_executiondata_webhook_webhook.json",
      "category": "AI",
      "business_function": "luma",
      "key_integrations": [
        "webhook",
        "set",
        "executionData",
        "if",
        "stickyNote",
        "airtable"
      ],
      "trigger_type": "webhook",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.executionData": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.airtable": 1
      },
      "business_value": "Automates luma processes using webhook, set, executionData",
      "analysis_timestamp": "2025-06-01T16:06:48.655298"
    },
    {
      "original_filename": "content_fully_automate_httprequest_manual.json",
      "workflow_name": "Fully automated Video Captions generation with json2video",
      "suggested_filename": "content_fully_automate_httprequest_manual.json",
      "category": "CONTENT",
      "business_function": "fully",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "set",
        "wait",
        "if",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates fully processes using manualTrigger, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.655602"
    },
    {
      "original_filename": "util_620_workflow_620_automate_nextcloud_httprequest.json",
      "workflow_name": "util_620_workflow_620_automate_nextcloud_httprequest",
      "suggested_filename": "util_620_workflow_620_automate_nextcloud_httprequest.json",
      "category": "UTIL",
      "business_function": "620",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "nextCloud"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.nextCloud": 3
      },
      "business_value": "Automates 620 processes using manualTrigger, httpRequest, nextCloud",
      "analysis_timestamp": "2025-06-01T16:06:48.655792"
    },
    {
      "original_filename": "content_comments_read_manual_facebookgraphapi.json",
      "workflow_name": "Get Comments from Facebook Page",
      "suggested_filename": "content_comments_read_manual_facebookgraphapi.json",
      "category": "CONTENT",
      "business_function": "comments",
      "key_integrations": [
        "manualTrigger",
        "splitOut",
        "filter",
        "set",
        "facebookGraphApi",
        "merge",
        "code",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.facebookGraphApi": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates comments processes using manualTrigger, splitOut, filter",
      "analysis_timestamp": "2025-06-01T16:06:48.656051"
    },
    {
      "original_filename": "ai_multi_ai_process_n8nnodeslangchainmemorypostgreschat_n8nnodeslangchainoutputp.json",
      "workflow_name": "✨📊Multi-AI Agent Chatbot for Postgres/Supabase DB and QuickCharts + Tool Router",
      "suggested_filename": "ai_multi_ai_process_n8nnodeslangchainmemorypostgreschat_n8nnodeslangchainoutputp.json",
      "category": "AI",
      "business_function": "multi",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "postgresTool",
        "executeWorkflowTrigger",
        "@n8n/langchain.toolWorkflow",
        "httpRequest",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.lmChatOpenAi",
        "stickyNote",
        "@n8n/langchain.agent",
        "switch"
      ],
      "trigger_type": "chat",
      "complexity_score": 40,
      "complexity": "High",
      "total_nodes": 40,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.postgresTool": 3,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 2,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "n8n-nodes-base.stickyNote": 21,
        "@n8n/n8n-nodes-langchain.agent": 3,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.memoryPostgresChat": 1,
        "n8n-nodes-base.set": 2
      },
      "business_value": "Automates multi processes using @n8n/langchain.chatTrigger, postgresTool, executeWorkflowTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.656563"
    },
    {
      "original_filename": "ai_build_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_3.json",
      "workflow_name": "Build Custom AI Agent with LangChain & Gemini (Self-Hosted)",
      "suggested_filename": "ai_build_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_3.json",
      "category": "AI",
      "business_function": "build",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "stickyNote",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.code"
      ],
      "trigger_type": "chat",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.code": 1
      },
      "business_value": "Automates build processes using @n8n/langchain.chatTrigger, @n8n/langchain.lmChatGoogleGemini, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.656885"
    },
    {
      "original_filename": "util_519_workflow_519_automate_hunter_manual.json",
      "workflow_name": "util_519_workflow_519_automate_hunter_manual",
      "suggested_filename": "util_519_workflow_519_automate_hunter_manual.json",
      "category": "UTIL",
      "business_function": "519",
      "key_integrations": [
        "manualTrigger",
        "hunter"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.hunter": 1
      },
      "business_value": "Automates 519 processes using manualTrigger, hunter",
      "analysis_timestamp": "2025-06-01T16:06:48.656989"
    },
    {
      "original_filename": "util_597_workflow_597_automate_manual_cratedb.json",
      "workflow_name": "util_597_workflow_597_automate_manual_cratedb",
      "suggested_filename": "util_597_workflow_597_automate_manual_cratedb.json",
      "category": "UTIL",
      "business_function": "597",
      "key_integrations": [
        "manualTrigger",
        "crateDb",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.crateDb": 2,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 597 processes using manualTrigger, crateDb, set",
      "analysis_timestamp": "2025-06-01T16:06:48.657082"
    },
    {
      "original_filename": "content_automate_automate_googlecloudnaturallanguage_interval_webhook.json",
      "workflow_name": "content_automate_automate_googlecloudnaturallanguage_interval_webhook",
      "suggested_filename": "content_automate_automate_googlecloudnaturallanguage_interval_webhook.json",
      "category": "CONTENT",
      "business_function": "automate",
      "key_integrations": [
        "set",
        "strapi",
        "interval",
        "if",
        "twitter",
        "webhook",
        "googleCloudNaturalLanguage",
        "merge"
      ],
      "trigger_type": "webhook",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.strapi": 2,
        "n8n-nodes-base.interval": 1,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.googleCloudNaturalLanguage": 2,
        "n8n-nodes-base.merge": 2
      },
      "business_value": "Automates automate processes using set, strapi, interval",
      "analysis_timestamp": "2025-06-01T16:06:48.657325"
    },
    {
      "original_filename": "ai_telegram_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "workflow_name": "Telegram-bot AI Da Nang",
      "suggested_filename": "ai_telegram_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "category": "AI",
      "business_function": "telegram",
      "key_integrations": [
        "telegram",
        "set",
        "googleSheets",
        "code",
        "@n8n/langchain.agent",
        "telegramTrigger",
        "@n8n/langchain.chatTrigger",
        "switch",
        "@n8n/langchain.lmChatOpenRouter",
        "@n8n/langchain.memoryBufferWindow"
      ],
      "trigger_type": "chat",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.noOp": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.stickyNote": 8
      },
      "business_value": "Automates telegram processes using telegram, set, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.657649"
    },
    {
      "original_filename": "util_event_create_googlecalendar_manual.json",
      "workflow_name": "Add a event to Calender",
      "suggested_filename": "util_event_create_googlecalendar_manual.json",
      "category": "UTIL",
      "business_function": "event",
      "key_integrations": [
        "manualTrigger",
        "googleCalendar"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleCalendar": 1
      },
      "business_value": "Automates event processes using manualTrigger, googleCalendar",
      "analysis_timestamp": "2025-06-01T16:06:48.657840"
    },
    {
      "original_filename": "ai_email_ai_process_emailreadimap_cortex.json",
      "workflow_name": "Email",
      "suggested_filename": "ai_email_ai_process_emailreadimap_cortex.json",
      "category": "AI",
      "business_function": "email",
      "key_integrations": [
        "emailReadImap",
        "theHive",
        "cortex",
        "if",
        "wait"
      ],
      "trigger_type": "email",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.theHive": 11,
        "n8n-nodes-base.cortex": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.wait": 1
      },
      "business_value": "Automates email processes using emailReadImap, theHive, cortex",
      "analysis_timestamp": "2025-06-01T16:06:48.658079"
    },
    {
      "original_filename": "comm_scrape_extract_slack_datetime_cron.json",
      "workflow_name": "Scrape Twitter for mentions of company",
      "suggested_filename": "comm_scrape_extract_slack_datetime_cron.json",
      "category": "COMM",
      "business_function": "scrape",
      "key_integrations": [
        "set",
        "cron",
        "dateTime",
        "twitter",
        "if",
        "slack"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates scrape processes using set, cron, dateTime",
      "analysis_timestamp": "2025-06-01T16:06:48.658306"
    },
    {
      "original_filename": "data_anomaly_automate_httprequest_executeworkflow_3.json",
      "workflow_name": "[3/3] Anomaly detection tool (crops dataset)",
      "suggested_filename": "data_anomaly_automate_httprequest_executeworkflow_3.json",
      "category": "DATA",
      "business_function": "anomaly",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "code",
        "set",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.executeWorkflowTrigger": 1
      },
      "business_value": "Automates anomaly processes using stickyNote, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:48.658578"
    },
    {
      "original_filename": "comm_n8n_check_validate_awsses_rssfeedread_cron.json",
      "workflow_name": "n8n_check",
      "suggested_filename": "comm_n8n_check_validate_awsses_rssfeedread_cron.json",
      "category": "COMM",
      "business_function": "n8n",
      "key_integrations": [
        "manualTrigger",
        "rssFeedRead",
        "if",
        "cron",
        "function",
        "telegram",
        "awsSes"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.rssFeedRead": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.awsSes": 1
      },
      "business_value": "Automates n8n processes using manualTrigger, rssFeedRead, if",
      "analysis_timestamp": "2025-06-01T16:06:48.658793"
    },
    {
      "original_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_9.json",
      "workflow_name": "🔥📈🤖 AI Agent  for n8n Creators Leaderboard - Find Popular Workflows",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_9.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "httpRequest",
        "set",
        "limit",
        "aggregate",
        "filter",
        "@n8n/langchain.lmChatOpenAi",
        "executeWorkflowTrigger",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.toolWorkflow",
        "convertToFile"
      ],
      "trigger_type": "chat",
      "complexity_score": 43,
      "complexity": "High",
      "total_nodes": 43,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 7,
        "n8n-nodes-base.limit": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.filter": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.convertToFile": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.stickyNote": 16,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.sort": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1
      },
      "business_value": "Automates agent processes using httpRequest, set, limit",
      "analysis_timestamp": "2025-06-01T16:06:48.659244"
    },
    {
      "original_filename": "util_522_workflow_522_automate_manual_mailgun.json",
      "workflow_name": "util_522_workflow_522_automate_manual_mailgun",
      "suggested_filename": "util_522_workflow_522_automate_manual_mailgun.json",
      "category": "UTIL",
      "business_function": "522",
      "key_integrations": [
        "manualTrigger",
        "mailgun"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.mailgun": 1
      },
      "business_value": "Automates 522 processes using manualTrigger, mailgun",
      "analysis_timestamp": "2025-06-01T16:06:48.659360"
    },
    {
      "original_filename": "comm_外送記帳_automate_splitinbatches_slack.json",
      "workflow_name": "外送記帳",
      "suggested_filename": "comm_外送記帳_automate_splitinbatches_slack.json",
      "category": "COMM",
      "business_function": "外送記帳",
      "key_integrations": [
        "splitInBatches",
        "manualTrigger",
        "gmail",
        "gmailTrigger",
        "set",
        "slack"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates 外送記帳 processes using splitInBatches, manualTrigger, gmail",
      "analysis_timestamp": "2025-06-01T16:06:48.659500"
    },
    {
      "original_filename": "util_2444_workflow_2444_automate_httprequest_manual.json",
      "workflow_name": "util_2444_workflow_2444_automate_httprequest_manual",
      "suggested_filename": "util_2444_workflow_2444_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "2444",
      "key_integrations": [
        "manualTrigger",
        "set",
        "if",
        "httpRequest",
        "filter",
        "stickyNote",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates 2444 processes using manualTrigger, set, if",
      "analysis_timestamp": "2025-06-01T16:06:48.659773"
    },
    {
      "original_filename": "ai_sentiment_analyze_splitinbatches_removeduplicates_cron_2.json",
      "workflow_name": "ai_sentiment_analyze_splitinbatches_removeduplicates_cron_2",
      "suggested_filename": "ai_sentiment_analyze_splitinbatches_removeduplicates_cron_2.json",
      "category": "AI",
      "business_function": "sentiment",
      "key_integrations": [
        "splitOut",
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "@n8n/langchain.informationExtractor",
        "splitInBatches",
        "airtable",
        "airtableTrigger",
        "switch",
        "graphql",
        "scheduleTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.airtableTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.graphql": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates sentiment processes using splitOut, @n8n/langchain.lmChatOpenAi, set",
      "analysis_timestamp": "2025-06-01T16:06:48.660125"
    },
    {
      "original_filename": "util_coffee_automate_matrix_cron_cron.json",
      "workflow_name": "Coffee Bot (Matrix)",
      "suggested_filename": "util_coffee_automate_matrix_cron_cron.json",
      "category": "UTIL",
      "business_function": "coffee",
      "key_integrations": [
        "matrix",
        "cron",
        "function"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.matrix": 3,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.function": 1
      },
      "business_value": "Automates coffee processes using matrix, cron, function",
      "analysis_timestamp": "2025-06-01T16:06:48.660385"
    },
    {
      "original_filename": "ai_extract_ai_process_n8nnodeslangchainchainllm_httprequest_3.json",
      "workflow_name": "Extract text from PDF and image using Vertex AI (Gemini) into CSV",
      "suggested_filename": "ai_extract_ai_process_n8nnodeslangchainchainllm_httprequest_3.json",
      "category": "AI",
      "business_function": "extract",
      "key_integrations": [
        "@n8n/langchain.lmChatGoogleGemini",
        "googleDriveTrigger",
        "switch",
        "googleDrive",
        "extractFromFile",
        "httpRequest",
        "convertToFile",
        "stickyNote",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.googleDrive": 4,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.convertToFile": 2,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates extract processes using @n8n/langchain.lmChatGoogleGemini, googleDriveTrigger, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.660683"
    },
    {
      "original_filename": "util_tools_backup_cron_manual_cron.json",
      "workflow_name": "Tools / Backup Gitlab",
      "suggested_filename": "util_tools_backup_cron_manual_cron.json",
      "category": "UTIL",
      "business_function": "tools",
      "key_integrations": [
        "manualTrigger",
        "executeCommand",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.executeCommand": 5,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates tools processes using manualTrigger, executeCommand, cron",
      "analysis_timestamp": "2025-06-01T16:06:48.660873"
    },
    {
      "original_filename": "ai_2341_workflow_2341_automate_httprequest_extractfromfile.json",
      "workflow_name": "ai_2341_workflow_2341_automate_httprequest_extractfromfile",
      "suggested_filename": "ai_2341_workflow_2341_automate_httprequest_extractfromfile.json",
      "category": "AI",
      "business_function": "2341",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.embeddingsMistralCloud",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "httpRequest",
        "compression",
        "splitOut",
        "extractFromFile",
        "set",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 38,
      "complexity": "High",
      "total_nodes": 38,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.compression": 1,
        "n8n-nodes-base.splitOut": 3,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.wait": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 2,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates 2341 processes using manualTrigger, @n8n/langchain.embeddingsMistralCloud, @n8n/langchain.documentDefaultDataLoader",
      "analysis_timestamp": "2025-06-01T16:06:48.661435"
    },
    {
      "original_filename": "ai_generate_generate_n8nnodeslangchainchainretrievalqa_n8nnodeslangchainoutputpa.json",
      "workflow_name": "Generate Exam Questions",
      "suggested_filename": "ai_generate_generate_n8nnodeslangchainchainretrievalqa_n8nnodeslangchainoutputpa.json",
      "category": "AI",
      "business_function": "generate",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.vectorStoreQdrant",
        "httpRequest",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterTokenSplitter",
        "stickyNote",
        "code",
        "googleDocs",
        "@n8n/langchain.retrieverVectorStore"
      ],
      "trigger_type": "chat",
      "complexity_score": 37,
      "complexity": "High",
      "total_nodes": 37,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 3,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 3,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.googleDocs": 1,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "n8n-nodes-base.convertToFile": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 5,
        "@n8n/n8n-nodes-langchain.outputParserItemList": 2,
        "n8n-nodes-base.splitInBatches": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.googleSheets": 2
      },
      "business_value": "Automates generate processes using manualTrigger, @n8n/langchain.vectorStoreQdrant, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.661917"
    },
    {
      "original_filename": "analytics_google_automate_googleanalytics_httprequest_cron_1.json",
      "workflow_name": "Google analytics template",
      "suggested_filename": "analytics_google_automate_googleanalytics_httprequest_cron_1.json",
      "category": "ANALYTICS",
      "business_function": "google",
      "key_integrations": [
        "scheduleTrigger",
        "manualTrigger",
        "stickyNote",
        "googleAnalytics",
        "code",
        "httpRequest",
        "baserow"
      ],
      "trigger_type": "cron",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.googleAnalytics": 6,
        "n8n-nodes-base.code": 6,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.baserow": 1
      },
      "business_value": "Automates google processes using scheduleTrigger, manualTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.662320"
    },
    {
      "original_filename": "util_2443_workflow_2443_automate_httprequest_schedule_cron.json",
      "workflow_name": "util_2443_workflow_2443_automate_httprequest_schedule_cron",
      "suggested_filename": "util_2443_workflow_2443_automate_httprequest_schedule_cron.json",
      "category": "UTIL",
      "business_function": "2443",
      "key_integrations": [
        "scheduleTrigger",
        "httpRequest",
        "code",
        "merge",
        "set",
        "stickyNote",
        "@horka.tv/storage-kv.keyValueStorage",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@horka.tv/n8n-nodes-storage-kv.keyValueStorage": 4,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 2443 processes using scheduleTrigger, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:48.662645"
    },
    {
      "original_filename": "ai_messages_ai_process_gmail_manual.json",
      "workflow_name": "Get messages with a certain label, remove the label, and add a new one",
      "suggested_filename": "ai_messages_ai_process_gmail_manual.json",
      "category": "AI",
      "business_function": "messages",
      "key_integrations": [
        "manualTrigger",
        "gmail"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.gmail": 3
      },
      "business_value": "Automates messages processes using manualTrigger, gmail",
      "analysis_timestamp": "2025-06-01T16:06:48.662841"
    },
    {
      "original_filename": "comm_404_workflow_404_automate_slack_emailsend.json",
      "workflow_name": "comm_404_workflow_404_automate_slack_emailsend",
      "suggested_filename": "comm_404_workflow_404_automate_slack_emailsend.json",
      "category": "COMM",
      "business_function": "404",
      "key_integrations": [
        "typeformTrigger",
        "if",
        "googleSheets",
        "emailSend",
        "slack"
      ],
      "trigger_type": "email",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates 404 processes using typeformTrigger, if, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.662941"
    },
    {
      "original_filename": "ai_bamboohr_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchain_2.json",
      "workflow_name": "BambooHR AI-Powered Company Policies and Benefits Chatbot",
      "suggested_filename": "ai_bamboohr_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchain_2.json",
      "category": "AI",
      "business_function": "bamboohr",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolVectorStore",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.outputParserStructured"
      ],
      "trigger_type": "chat",
      "complexity_score": 50,
      "complexity": "High",
      "total_nodes": 50,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 6,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 11,
        "n8n-nodes-base.bambooHr": 5,
        "n8n-nodes-base.filter": 4,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.aggregate": 2,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates bamboohr processes using manualTrigger, @n8n/langchain.documentDefaultDataLoader, @n8n/langchain.embeddingsOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.663371"
    },
    {
      "original_filename": "ai_send_ai_process_error_twilio.json",
      "workflow_name": "Send an SMS when a workflow fails",
      "suggested_filename": "ai_send_ai_process_error_twilio.json",
      "category": "AI",
      "business_function": "send",
      "key_integrations": [
        "errorTrigger",
        "twilio"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.errorTrigger": 1,
        "n8n-nodes-base.twilio": 1
      },
      "business_value": "Automates send processes using errorTrigger, twilio",
      "analysis_timestamp": "2025-06-01T16:06:48.663482"
    },
    {
      "original_filename": "comm_632_workflow_632_automate_spreadsheetfile_slack.json",
      "workflow_name": "comm_632_workflow_632_automate_spreadsheetfile_slack",
      "suggested_filename": "comm_632_workflow_632_automate_spreadsheetfile_slack.json",
      "category": "COMM",
      "business_function": "632",
      "key_integrations": [
        "emailReadImap",
        "switch",
        "readBinaryFile",
        "spreadsheetFile",
        "function",
        "merge",
        "emailSend",
        "slack"
      ],
      "trigger_type": "email",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.readBinaryFile": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.slack": 2
      },
      "business_value": "Automates 632 processes using emailReadImap, switch, readBinaryFile",
      "analysis_timestamp": "2025-06-01T16:06:48.663712"
    },
    {
      "original_filename": "ai_conversion_automate_n8nnodeslangchainlmchatopenai_httprequest.json",
      "workflow_name": "🤓 Conversion Rate Optimizer",
      "suggested_filename": "ai_conversion_automate_n8nnodeslangchainlmchatopenai_httprequest.json",
      "category": "AI",
      "business_function": "conversion",
      "key_integrations": [
        "formTrigger",
        "httpRequest",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates conversion processes using formTrigger, httpRequest, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.663872"
    },
    {
      "original_filename": "comm_standup_automate_cron_httprequest_webhook.json",
      "workflow_name": "Standup Bot - Worker",
      "suggested_filename": "comm_standup_automate_cron_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "standup",
      "key_integrations": [
        "mattermost",
        "httpRequest",
        "if",
        "webhook",
        "function",
        "switch",
        "executeWorkflow",
        "cron"
      ],
      "trigger_type": "webhook",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.mattermost": 3,
        "n8n-nodes-base.httpRequest": 7,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.webhook": 2,
        "n8n-nodes-base.function": 7,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.executeWorkflow": 4,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates standup processes using mattermost, httpRequest, if",
      "analysis_timestamp": "2025-06-01T16:06:48.664220"
    },
    {
      "original_filename": "ai_host_ai_process_generic.json",
      "workflow_name": "ai_host_ai_process_generic",
      "suggested_filename": "ai_host_ai_process_generic.json",
      "category": "AI",
      "business_function": "host",
      "key_integrations": [],
      "trigger_type": "manual",
      "complexity_score": 0,
      "complexity": "Low",
      "total_nodes": 0,
      "node_types": {},
      "business_value": "Automates host processes using ",
      "analysis_timestamp": "2025-06-01T16:06:48.664499"
    },
    {
      "original_filename": "ai_2560_workflow_2560_automate_httprequest_schedule_cron.json",
      "workflow_name": "ai_2560_workflow_2560_automate_httprequest_schedule_cron",
      "suggested_filename": "ai_2560_workflow_2560_automate_httprequest_schedule_cron.json",
      "category": "AI",
      "business_function": "2560",
      "key_integrations": [
        "stickyNote",
        "scheduleTrigger",
        "@n8n/langchain.openAi",
        "set",
        "discord",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.informationExtractor",
        "httpRequest"
      ],
      "trigger_type": "cron",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.discord": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 2560 processes using stickyNote, scheduleTrigger, @n8n/langchain.openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.664767"
    },
    {
      "original_filename": "util_multiple_automate_compression_executeworkflow.json",
      "workflow_name": "Zip multiple files",
      "suggested_filename": "util_multiple_automate_compression_executeworkflow.json",
      "category": "UTIL",
      "business_function": "multiple",
      "key_integrations": [
        "executeWorkflowTrigger",
        "compression",
        "stickyNote",
        "set",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.compression": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates multiple processes using executeWorkflowTrigger, compression, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.664885"
    },
    {
      "original_filename": "ops_2376_workflow_2376_automate_gitlab_schedule_cron.json",
      "workflow_name": "ops_2376_workflow_2376_automate_gitlab_schedule_cron",
      "suggested_filename": "ops_2376_workflow_2376_automate_gitlab_schedule_cron.json",
      "category": "OPS",
      "business_function": "2376",
      "key_integrations": [
        "manualTrigger",
        "n8n",
        "set",
        "gitlab",
        "stickyNote",
        "filter",
        "scheduleTrigger",
        "aggregate",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.gitlab": 4,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 2376 processes using manualTrigger, n8n, set",
      "analysis_timestamp": "2025-06-01T16:06:48.665174"
    },
    {
      "original_filename": "ai_shirt_ai_process_n8nnodeslangchainchat_httprequest.json",
      "workflow_name": "AI T-Shirt Redesign Workflow from any Mockup Image",
      "suggested_filename": "ai_shirt_ai_process_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "shirt",
      "key_integrations": [
        "httpRequest",
        "convertToFile",
        "splitOut",
        "@n8n/langchain.agent",
        "@n8n/langchain.openAi",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.chatTrigger",
        "if",
        "code",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates shirt processes using httpRequest, convertToFile, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.665461"
    },
    {
      "original_filename": "comm_2050_workflow_2050_automate_itemlists_htmlextract_cron.json",
      "workflow_name": "comm_2050_workflow_2050_automate_itemlists_htmlextract_cron",
      "suggested_filename": "comm_2050_workflow_2050_automate_itemlists_htmlextract_cron.json",
      "category": "COMM",
      "business_function": "2050",
      "key_integrations": [
        "httpRequest",
        "if",
        "htmlExtract",
        "itemLists",
        "wait",
        "code",
        "scheduleTrigger",
        "set",
        "gmail",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.htmlExtract": 2,
        "n8n-nodes-base.itemLists": 2,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates 2050 processes using httpRequest, if, htmlExtract",
      "analysis_timestamp": "2025-06-01T16:06:48.665745"
    },
    {
      "original_filename": "ai_3770_workflow_3770_automate_n8nnodeslangchainmemorybufferwindow_redis.json",
      "workflow_name": "ai_3770_workflow_3770_automate_n8nnodeslangchainmemorybufferwindow_redis",
      "suggested_filename": "ai_3770_workflow_3770_automate_n8nnodeslangchainmemorybufferwindow_redis.json",
      "category": "AI",
      "business_function": "3770",
      "key_integrations": [
        "set",
        "executeWorkflowTrigger",
        "switch",
        "n8n",
        "filter",
        "redis",
        "splitOut",
        "aggregate",
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 46,
      "complexity": "High",
      "total_nodes": 46,
      "node_types": {
        "n8n-nodes-base.set": 10,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.n8n": 2,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.redis": 4,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.aggregate": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.mcpClientTool": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.if": 3,
        "@n8n/n8n-nodes-langchain.mcpTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 5,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.executeWorkflow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates 3770 processes using set, executeWorkflowTrigger, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.666317"
    },
    {
      "original_filename": "util_2649_workflow_2649_automate_httprequest_manual.json",
      "workflow_name": "util_2649_workflow_2649_automate_httprequest_manual",
      "suggested_filename": "util_2649_workflow_2649_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "2649",
      "key_integrations": [
        "manualTrigger",
        "set",
        "httpRequest",
        "code",
        "editImage",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.editImage": 2,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates 2649 processes using manualTrigger, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.666671"
    },
    {
      "original_filename": "util_youtube_automate_httprequest_form.json",
      "workflow_name": "[n8n] YouTube Channel Advanced RSS Feeds Generator",
      "suggested_filename": "util_youtube_automate_httprequest_form.json",
      "category": "UTIL",
      "business_function": "youtube",
      "key_integrations": [
        "formTrigger",
        "httpRequest",
        "set",
        "aggregate",
        "respondToWebhook",
        "stickyNote",
        "switch",
        "code",
        "merge"
      ],
      "trigger_type": "webhook",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.set": 7,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates youtube processes using formTrigger, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.667034"
    },
    {
      "original_filename": "data_3785_workflow_3785_automate_httprequest_form.json",
      "workflow_name": "data_3785_workflow_3785_automate_httprequest_form",
      "suggested_filename": "data_3785_workflow_3785_automate_httprequest_form.json",
      "category": "DATA",
      "business_function": "3785",
      "key_integrations": [
        "splitOut",
        "httpRequest",
        "code",
        "googleSheets",
        "stickyNote",
        "set",
        "manualTrigger",
        "formTrigger",
        "extractFromFile",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "n8n-nodes-base.splitOut": 3,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.code": 6,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.extractFromFile": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.form": 2,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates 3785 processes using splitOut, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:48.667441"
    },
    {
      "original_filename": "ai_line_ai_process_n8nnodeslangchainmemorybufferwindow_httprequest_webhook_2.json",
      "workflow_name": "LINE Assistant with Google Calendar and Gmail Integration",
      "suggested_filename": "ai_line_ai_process_n8nnodeslangchainmemorybufferwindow_httprequest_webhook_2.json",
      "category": "AI",
      "business_function": "line",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolWikipedia",
        "@n8n/langchain.openAi",
        "switch",
        "webhook",
        "set",
        "httpRequest",
        "googleCalendarTool"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleCalendarTool": 2,
        "n8n-nodes-base.gmailTool": 1
      },
      "business_value": "Automates line processes using @n8n/langchain.agent, @n8n/langchain.memoryBufferWindow, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.667751"
    },
    {
      "original_filename": "util_737_workflow_737_automate_webhook_openweathermap_webhook.json",
      "workflow_name": "util_737_workflow_737_automate_webhook_openweathermap_webhook",
      "suggested_filename": "util_737_workflow_737_automate_webhook_openweathermap_webhook.json",
      "category": "UTIL",
      "business_function": "737",
      "key_integrations": [
        "set",
        "openWeatherMap",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.openWeatherMap": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 737 processes using set, openWeatherMap, webhook",
      "analysis_timestamp": "2025-06-01T16:06:48.667953"
    },
    {
      "original_filename": "util_long_read_httprequest_manual.json",
      "workflow_name": "Get Long Lived Facebook User or Page Access Token",
      "suggested_filename": "util_long_read_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "long",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "stickyNote",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates long processes using manualTrigger, httpRequest, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.668080"
    },
    {
      "original_filename": "ai_1962_workflow_1962_automate_n8nnodeslangchaintextsplittertokensplitter_n8nnod.json",
      "workflow_name": "ai_1962_workflow_1962_automate_n8nnodeslangchaintextsplittertokensplitter_n8nnod",
      "suggested_filename": "ai_1962_workflow_1962_automate_n8nnodeslangchaintextsplittertokensplitter_n8nnod.json",
      "category": "AI",
      "business_function": "1962",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterTokenSplitter",
        "googleDrive",
        "@n8n/langchain.chainSummarization"
      ],
      "trigger_type": "chat",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1
      },
      "business_value": "Automates 1962 processes using manualTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.documentDefaultDataLoader",
      "analysis_timestamp": "2025-06-01T16:06:48.668292"
    },
    {
      "original_filename": "data_sync_sync_httprequest_manual.json",
      "workflow_name": "Sync Youtube Video Urls with Google Sheets",
      "suggested_filename": "data_sync_sync_httprequest_manual.json",
      "category": "DATA",
      "business_function": "sync",
      "key_integrations": [
        "splitOut",
        "manualTrigger",
        "googleSheets",
        "httpRequest",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates sync processes using splitOut, manualTrigger, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.668559"
    },
    {
      "original_filename": "ai_summarize_automate_n8nnodeslangchainchainsummarization_httprequest.json",
      "workflow_name": "ai_summarize_automate_n8nnodeslangchainchainsummarization_httprequest",
      "suggested_filename": "ai_summarize_automate_n8nnodeslangchainchainsummarization_httprequest.json",
      "category": "AI",
      "business_function": "summarize",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "@n8n/langchain.chainSummarization",
        "formTrigger",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.noOp": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.formTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates summarize processes using stickyNote, httpRequest, @n8n/langchain.chainSummarization",
      "analysis_timestamp": "2025-06-01T16:06:48.668792"
    },
    {
      "original_filename": "ai_2167_workflow_2167_automate_n8nnodeslangchainchainllm_httprequest_webhook.json",
      "workflow_name": "ai_2167_workflow_2167_automate_n8nnodeslangchainchainllm_httprequest_webhook",
      "suggested_filename": "ai_2167_workflow_2167_automate_n8nnodeslangchainchainllm_httprequest_webhook.json",
      "category": "AI",
      "business_function": "2167",
      "key_integrations": [
        "stickyNote",
        "if",
        "httpRequest",
        "splitOut",
        "code",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatOpenAi",
        "webhook"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.code": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 2167 processes using stickyNote, if, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.669066"
    },
    {
      "original_filename": "ai_notion_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainou.json",
      "workflow_name": "ai_notion_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainou",
      "suggested_filename": "ai_notion_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainou.json",
      "category": "AI",
      "business_function": "notion",
      "key_integrations": [
        "stickyNote",
        "notion",
        "set",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.lmChatAnthropic",
        "code",
        "@n8n/langchain.outputParserStructured",
        "switch",
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.set": 6,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 3,
        "n8n-nodes-base.code": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1
      },
      "business_value": "Automates notion processes using stickyNote, notion, set",
      "analysis_timestamp": "2025-06-01T16:06:48.669480"
    },
    {
      "original_filename": "comm_965_workflow_965_automate_awscomprehend_mattermost.json",
      "workflow_name": "comm_965_workflow_965_automate_awscomprehend_mattermost",
      "suggested_filename": "comm_965_workflow_965_automate_awscomprehend_mattermost.json",
      "category": "COMM",
      "business_function": "965",
      "key_integrations": [
        "mattermost",
        "if",
        "awsComprehend",
        "typeformTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.mattermost": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.awsComprehend": 1,
        "n8n-nodes-base.typeformTrigger": 1
      },
      "business_value": "Automates 965 processes using mattermost, if, awsComprehend",
      "analysis_timestamp": "2025-06-01T16:06:48.669597"
    },
    {
      "original_filename": "ai_2456_workflow_2456_automate_webhook_n8nnodeslangchainopenai_webhook.json",
      "workflow_name": "ai_2456_workflow_2456_automate_webhook_n8nnodeslangchainopenai_webhook",
      "suggested_filename": "ai_2456_workflow_2456_automate_webhook_n8nnodeslangchainopenai_webhook.json",
      "category": "AI",
      "business_function": "2456",
      "key_integrations": [
        "stickyNote",
        "switch",
        "respondToWebhook",
        "webhook",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "webhook",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.openAi": 5
      },
      "business_value": "Automates 2456 processes using stickyNote, switch, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:48.669848"
    },
    {
      "original_filename": "comm_3979_workflow_3979_automate_supabase_itemlists_webhook.json",
      "workflow_name": "comm_3979_workflow_3979_automate_supabase_itemlists_webhook",
      "suggested_filename": "comm_3979_workflow_3979_automate_supabase_itemlists_webhook.json",
      "category": "COMM",
      "business_function": "3979",
      "key_integrations": [
        "googleSheets",
        "webhook",
        "set",
        "code",
        "gmail",
        "supabase",
        "merge",
        "stickyNote",
        "itemLists",
        "if"
      ],
      "trigger_type": "webhook",
      "complexity_score": 51,
      "complexity": "High",
      "total_nodes": 51,
      "node_types": {
        "n8n-nodes-base.googleSheets": 12,
        "n8n-nodes-base.webhook": 3,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.code": 10,
        "n8n-nodes-base.gmail": 3,
        "n8n-nodes-base.supabase": 9,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.if": 4
      },
      "business_value": "Automates 3979 processes using googleSheets, webhook, set",
      "analysis_timestamp": "2025-06-01T16:06:48.670592"
    },
    {
      "original_filename": "data_smart_automate_amqp_interval.json",
      "workflow_name": "Smart Factory Data Generator",
      "suggested_filename": "data_smart_automate_amqp_interval.json",
      "category": "DATA",
      "business_function": "smart",
      "key_integrations": [
        "set",
        "interval",
        "amqp"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.interval": 1,
        "n8n-nodes-base.amqp": 1
      },
      "business_value": "Automates smart processes using set, interval, amqp",
      "analysis_timestamp": "2025-06-01T16:06:48.670865"
    },
    {
      "original_filename": "comm_2293_workflow_2293_automate_splitinbatches_slack_cron.json",
      "workflow_name": "comm_2293_workflow_2293_automate_splitinbatches_slack_cron",
      "suggested_filename": "comm_2293_workflow_2293_automate_splitinbatches_slack_cron.json",
      "category": "COMM",
      "business_function": "2293",
      "key_integrations": [
        "stickyNote",
        "notion",
        "set",
        "merge",
        "filter",
        "splitInBatches",
        "webflow",
        "code",
        "slack",
        "compareDatasets"
      ],
      "trigger_type": "cron",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.notion": 6,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.webflow": 3,
        "n8n-nodes-base.code": 4,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.compareDatasets": 1,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates 2293 processes using stickyNote, notion, set",
      "analysis_timestamp": "2025-06-01T16:06:48.671218"
    },
    {
      "original_filename": "ai_2758_workflow_2758_automate_googlesheets_httprequest_webhook.json",
      "workflow_name": "ai_2758_workflow_2758_automate_googlesheets_httprequest_webhook",
      "suggested_filename": "ai_2758_workflow_2758_automate_googlesheets_httprequest_webhook.json",
      "category": "AI",
      "business_function": "2758",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "googleSheetsTool",
        "set",
        "if",
        "microsoftOutlook",
        "code",
        "googleDocsTool",
        "stickyNote",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.googleSheetsTool": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.microsoftOutlook": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.googleDocsTool": 2,
        "n8n-nodes-base.stickyNote": 11,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 2758 processes using @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi, googleSheetsTool",
      "analysis_timestamp": "2025-06-01T16:06:48.671603"
    },
    {
      "original_filename": "comm_772_workflow_772_automate_splitinbatches_manual.json",
      "workflow_name": "comm_772_workflow_772_automate_splitinbatches_manual",
      "suggested_filename": "comm_772_workflow_772_automate_splitinbatches_manual.json",
      "category": "COMM",
      "business_function": "772",
      "key_integrations": [
        "manualTrigger",
        "telegram",
        "googleSheets",
        "splitInBatches",
        "wait"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.wait": 1
      },
      "business_value": "Automates 772 processes using manualTrigger, telegram, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.671830"
    },
    {
      "original_filename": "ai_scrape_ai_process_httprequest_n8nnodeslangchainchainsummarization.json",
      "workflow_name": "ai_scrape_ai_process_httprequest_n8nnodeslangchainchainsummarization",
      "suggested_filename": "ai_scrape_ai_process_httprequest_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "scrape",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "html",
        "set",
        "stickyNote",
        "splitOut",
        "limit",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.limit": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1
      },
      "business_value": "Automates scrape processes using manualTrigger, httpRequest, html",
      "analysis_timestamp": "2025-06-01T16:06:48.672060"
    },
    {
      "original_filename": "ops_2868_workflow_2868_automate_splitinbatches_httprequest_cron.json",
      "workflow_name": "ops_2868_workflow_2868_automate_splitinbatches_httprequest_cron",
      "suggested_filename": "ops_2868_workflow_2868_automate_splitinbatches_httprequest_cron.json",
      "category": "OPS",
      "business_function": "2868",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "n8n",
        "set",
        "httpRequest",
        "if",
        "merge",
        "code",
        "switch",
        "github"
      ],
      "trigger_type": "cron",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.noOp": 3,
        "n8n-nodes-base.github": 3,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.executeWorkflow": 1
      },
      "business_value": "Automates 2868 processes using manualTrigger, stickyNote, n8n",
      "analysis_timestamp": "2025-06-01T16:06:48.672400"
    },
    {
      "original_filename": "comm_1416_workflow_1416_automate_httprequest_functionitem_cron.json",
      "workflow_name": "comm_1416_workflow_1416_automate_httprequest_functionitem_cron",
      "suggested_filename": "comm_1416_workflow_1416_automate_httprequest_functionitem_cron.json",
      "category": "COMM",
      "business_function": "1416",
      "key_integrations": [
        "manualTrigger",
        "writeBinaryFile",
        "readBinaryFile",
        "httpRequest",
        "telegram",
        "moveBinaryData",
        "functionItem",
        "function",
        "cron",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.writeBinaryFile": 1,
        "n8n-nodes-base.readBinaryFile": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.moveBinaryData": 2,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 1416 processes using manualTrigger, writeBinaryFile, readBinaryFile",
      "analysis_timestamp": "2025-06-01T16:06:48.672535"
    },
    {
      "original_filename": "comm_create_create_microsoftoutlook_httprequest.json",
      "workflow_name": "Create, add an attachment, and send a draft using the Microsoft Outlook node",
      "suggested_filename": "comm_create_create_microsoftoutlook_httprequest.json",
      "category": "COMM",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "microsoftOutlook",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.microsoftOutlook": 3,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates create processes using manualTrigger, microsoftOutlook, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.672731"
    },
    {
      "original_filename": "util_importer_transfer_httprequest_executecommand.json",
      "workflow_name": "Workflow Importer",
      "suggested_filename": "util_importer_transfer_httprequest_executecommand.json",
      "category": "UTIL",
      "business_function": "importer",
      "key_integrations": [
        "extractFromFile",
        "executeCommand",
        "readWriteFile",
        "merge",
        "set",
        "code",
        "httpRequest",
        "if",
        "stickyNote",
        "form"
      ],
      "trigger_type": "manual",
      "complexity_score": 58,
      "complexity": "High",
      "total_nodes": 58,
      "node_types": {
        "n8n-nodes-base.extractFromFile": 2,
        "n8n-nodes-base.executeCommand": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.code": 8,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 21,
        "n8n-nodes-base.form": 7,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.renameKeys": 1,
        "n8n-nodes-base.n8n": 2,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.removeDuplicates": 1
      },
      "business_value": "Automates importer processes using extractFromFile, executeCommand, readWriteFile",
      "analysis_timestamp": "2025-06-01T16:06:48.673193"
    },
    {
      "original_filename": "ai_selenium_extract_httprequest_webhook_webhook_1.json",
      "workflow_name": "Selenium Ultimate Scraper Workflow",
      "suggested_filename": "ai_selenium_extract_httprequest_webhook_webhook_1.json",
      "category": "AI",
      "business_function": "selenium",
      "key_integrations": [
        "html",
        "@n8n/langchain.lmChatOpenAi",
        "httpRequest",
        "if",
        "limit",
        "respondToWebhook",
        "code",
        "@n8n/langchain.informationExtractor",
        "convertToFile",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 63,
      "complexity": "High",
      "total_nodes": 63,
      "node_types": {
        "n8n-nodes-base.html": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "n8n-nodes-base.httpRequest": 23,
        "n8n-nodes-base.if": 8,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.respondToWebhook": 9,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 3,
        "n8n-nodes-base.convertToFile": 3,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates selenium processes using html, @n8n/langchain.lmChatOpenAi, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.673789"
    },
    {
      "original_filename": "comm_2453_workflow_2453_automate_supabase_httprequest.json",
      "workflow_name": "comm_2453_workflow_2453_automate_supabase_httprequest",
      "suggested_filename": "comm_2453_workflow_2453_automate_supabase_httprequest.json",
      "category": "COMM",
      "business_function": "2453",
      "key_integrations": [
        "telegramTrigger",
        "httpRequest",
        "supabase",
        "merge",
        "telegram",
        "if",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.supabase": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates 2453 processes using telegramTrigger, httpRequest, supabase",
      "analysis_timestamp": "2025-06-01T16:06:48.674185"
    },
    {
      "original_filename": "ai_opensea_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainhttpreq_2.json",
      "workflow_name": "OpenSea NFT Agent Tool",
      "suggested_filename": "ai_opensea_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainhttpreq_2.json",
      "category": "AI",
      "business_function": "opensea",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.agent",
        "executeWorkflowTrigger",
        "@n8n/langchain.toolHttpRequest",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 10,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates opensea processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.674551"
    },
    {
      "original_filename": "util_995_workflow_995_automate_splitinbatches_manual.json",
      "workflow_name": "util_995_workflow_995_automate_splitinbatches_manual",
      "suggested_filename": "util_995_workflow_995_automate_splitinbatches_manual.json",
      "category": "UTIL",
      "business_function": "995",
      "key_integrations": [
        "manualTrigger",
        "function",
        "splitInBatches",
        "if",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 995 processes using manualTrigger, function, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.674658"
    },
    {
      "original_filename": "ai_generating_automate_n8nnodeslangchainvectorstoreinmemory_n8nnodeslangchainemb.json",
      "workflow_name": "ai_generating_automate_n8nnodeslangchainvectorstoreinmemory_n8nnodeslangchainemb",
      "suggested_filename": "ai_generating_automate_n8nnodeslangchainvectorstoreinmemory_n8nnodeslangchainemb.json",
      "category": "AI",
      "business_function": "generating",
      "key_integrations": [
        "manualTrigger",
        "googleDrive",
        "editImage",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "stickyNote",
        "merge",
        "set",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "manual",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.editImage": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory": 2
      },
      "business_value": "Automates generating processes using manualTrigger, googleDrive, editImage",
      "analysis_timestamp": "2025-06-01T16:06:48.674953"
    },
    {
      "original_filename": "ai_3830_workflow_3830_automate_splitinbatches_slack_cron.json",
      "workflow_name": "ai_3830_workflow_3830_automate_splitinbatches_slack_cron",
      "suggested_filename": "ai_3830_workflow_3830_automate_splitinbatches_slack_cron.json",
      "category": "AI",
      "business_function": "3830",
      "key_integrations": [
        "googleSheetsTrigger",
        "httpRequest",
        "code",
        "splitInBatches",
        "googleSheets",
        "@n8n/langchain.openAi",
        "slack",
        "filter",
        "if",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 35,
      "complexity": "High",
      "total_nodes": 35,
      "node_types": {
        "n8n-nodes-base.googleSheetsTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.googleSheets": 5,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.slack": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates 3830 processes using googleSheetsTrigger, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:48.675899"
    },
    {
      "original_filename": "ai_logo_ai_process_splitinbatches_crypto_2.json",
      "workflow_name": "AI Logo Sheet Extractor to Airtable",
      "suggested_filename": "ai_logo_ai_process_splitinbatches_crypto_2.json",
      "category": "AI",
      "business_function": "logo",
      "key_integrations": [
        "formTrigger",
        "@n8n/langchain.agent",
        "set",
        "@n8n/langchain.outputParserStructured",
        "airtable",
        "merge",
        "splitInBatches",
        "code",
        "stickyNote",
        "splitOut"
      ],
      "trigger_type": "chat",
      "complexity_score": 44,
      "complexity": "High",
      "total_nodes": 44,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.set": 6,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.airtable": 5,
        "n8n-nodes-base.merge": 5,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.code": 4,
        "n8n-nodes-base.stickyNote": 11,
        "n8n-nodes-base.splitOut": 3,
        "n8n-nodes-base.crypto": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.html": 1
      },
      "business_value": "Automates logo processes using formTrigger, @n8n/langchain.agent, set",
      "analysis_timestamp": "2025-06-01T16:06:48.676776"
    },
    {
      "original_filename": "ai_dynamically_automate_n8nnodeslangchainchainllm_n8nnodeslangchainchat.json",
      "workflow_name": "Dynamically switch between LLMs Template",
      "suggested_filename": "ai_dynamically_automate_n8nnodeslangchainchainllm_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "dynamically",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.code",
        "set",
        "if",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.sentimentAnalysis",
        "@n8n/langchain.chainLlm",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.code": 1,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 4,
        "@n8n/n8n-nodes-langchain.sentimentAnalysis": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates dynamically processes using @n8n/langchain.chatTrigger, @n8n/langchain.code, set",
      "analysis_timestamp": "2025-06-01T16:06:48.677201"
    },
    {
      "original_filename": "ai_automated_automate_googledrive_n8nnodeslangchainopenai.json",
      "workflow_name": "Automated Image Metadata Tagging (Community Node)",
      "suggested_filename": "ai_automated_automate_googledrive_n8nnodeslangchainopenai.json",
      "category": "AI",
      "business_function": "automated",
      "key_integrations": [
        "googleDriveTrigger",
        "googleDrive",
        "@n8n/langchain.openAi",
        "merge",
        "exif-data.exifData",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.googleDrive": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-exif-data.exifData": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates automated processes using googleDriveTrigger, googleDrive, @n8n/langchain.openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.677434"
    },
    {
      "original_filename": "ai_automate_n8nnodeslangchainchainretrievalqa_httprequest.json",
      "workflow_name": "My workflow 3",
      "suggested_filename": "ai_automate_n8nnodeslangchainchainretrievalqa_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "formTrigger",
        "splitInBatches",
        "if",
        "aggregate",
        "@n8n/langchain.lmChatGoogleGemini",
        "code",
        "httpRequest",
        "markdown",
        "gmail",
        "convertToFile"
      ],
      "trigger_type": "chat",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 6,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.convertToFile": 2,
        "@n8n/n8n-nodes-langchain.agent": 4,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 2,
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates automate processes using formTrigger, splitInBatches, if",
      "analysis_timestamp": "2025-06-01T16:06:48.677827"
    },
    {
      "original_filename": "ai_ultimate_ai_process_wordpress_n8nnodeslangchainchainllm.json",
      "workflow_name": "The Ultimate Guide to Optimize WordPress Blog Posts with AI",
      "suggested_filename": "ai_ultimate_ai_process_wordpress_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "ultimate",
      "key_integrations": [
        "manualTrigger",
        "googleSheets",
        "set",
        "@n8n/langchain.openAi",
        "wordpress",
        "httpRequest",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatOpenRouter",
        "@n8n/langchain.outputParserStructured",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.openAi": 3,
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.httpRequest": 3,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 6
      },
      "business_value": "Automates ultimate processes using manualTrigger, googleSheets, set",
      "analysis_timestamp": "2025-06-01T16:06:48.678234"
    },
    {
      "original_filename": "ai_effortless_ai_process_n8nnodeslangchainlmchatdeepseek_n8nnodeslangchaintextsp_1.json",
      "workflow_name": "Effortless Email Management with AI",
      "suggested_filename": "ai_effortless_ai_process_n8nnodeslangchainlmchatdeepseek_n8nnodeslangchaintextsp_1.json",
      "category": "AI",
      "business_function": "effortless",
      "key_integrations": [
        "emailReadImap",
        "markdown",
        "emailSend",
        "@n8n/langchain.vectorStoreQdrant",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "gmail",
        "@n8n/langchain.textClassifier"
      ],
      "trigger_type": "email",
      "complexity_score": 31,
      "complexity": "High",
      "total_nodes": 31,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.emailSend": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.gmail": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleDrive": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.stickyNote": 9,
        "@n8n/n8n-nodes-langchain.lmChatDeepSeek": 1
      },
      "business_value": "Automates effortless processes using emailReadImap, markdown, emailSend",
      "analysis_timestamp": "2025-06-01T16:06:48.678594"
    },
    {
      "original_filename": "ai_email_ai_process_functionitem_manual.json",
      "workflow_name": "Email body parser by aprenden8n.com",
      "suggested_filename": "ai_email_ai_process_functionitem_manual.json",
      "category": "AI",
      "business_function": "email",
      "key_integrations": [
        "manualTrigger",
        "functionItem",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates email processes using manualTrigger, functionItem, set",
      "analysis_timestamp": "2025-06-01T16:06:48.678712"
    },
    {
      "original_filename": "ai_agent_ai_process_n8nnodeslangchainlmchatgroq_googlesheets.json",
      "workflow_name": "AI Agent - Cv Resume - Automated Screening , Sorting , Rating and Tracker System",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainlmchatgroq_googlesheets.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "googleDocs",
        "googleDriveTrigger",
        "googleDrive",
        "@n8n/langchain.agent",
        "extractFromFile",
        "gmailTool",
        "stickyNote",
        "googleDriveTool",
        "googleSheetsTool",
        "@n8n/langchain.lmChatGroq"
      ],
      "trigger_type": "chat",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.googleDocs": 1,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.gmailTool": 1,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.googleDriveTool": 3,
        "n8n-nodes-base.googleSheetsTool": 1,
        "@n8n/n8n-nodes-langchain.lmChatGroq": 1
      },
      "business_value": "Automates agent processes using googleDocs, googleDriveTrigger, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.679058"
    },
    {
      "original_filename": "ai_3498_workflow_3498_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_3498_workflow_3498_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_3498_workflow_3498_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "3498",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "httpRequest",
        "set",
        "splitOut",
        "if",
        "aggregate",
        "@n8n/langchain.toolWorkflow",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1
      },
      "business_value": "Automates 3498 processes using @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.679331"
    },
    {
      "original_filename": "ai_3517_workflow_3517_automate_splitinbatches_n8nnodeslangchainlmchatopenai.json",
      "workflow_name": "ai_3517_workflow_3517_automate_splitinbatches_n8nnodeslangchainlmchatopenai",
      "suggested_filename": "ai_3517_workflow_3517_automate_splitinbatches_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "3517",
      "key_integrations": [
        "manualTrigger",
        "extractFromFile",
        "if",
        "@n8n/langchain.lmChatOpenAi",
        "filter",
        "stickyNote",
        "googleDrive",
        "splitInBatches",
        "@n8n/langchain.agent",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.if": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates 3517 processes using manualTrigger, extractFromFile, if",
      "analysis_timestamp": "2025-06-01T16:06:48.679630"
    },
    {
      "original_filename": "util_extract_extract_mindee_httprequest.json",
      "workflow_name": "Extract information from an image of a receipt",
      "suggested_filename": "util_extract_extract_mindee_httprequest.json",
      "category": "UTIL",
      "business_function": "extract",
      "key_integrations": [
        "manualTrigger",
        "mindee",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.mindee": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates extract processes using manualTrigger, mindee, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.679847"
    },
    {
      "original_filename": "data_1304_workflow_1304_automate_googlesheets_dropcontact.json",
      "workflow_name": "data_1304_workflow_1304_automate_googlesheets_dropcontact",
      "suggested_filename": "data_1304_workflow_1304_automate_googlesheets_dropcontact.json",
      "category": "DATA",
      "business_function": "1304",
      "key_integrations": [
        "manualTrigger",
        "dropcontact",
        "googleSheets",
        "lemlist"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.dropcontact": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.lemlist": 1
      },
      "business_value": "Automates 1304 processes using manualTrigger, dropcontact, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.680048"
    },
    {
      "original_filename": "ai_discord_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "workflow_name": "Discord Agent",
      "suggested_filename": "ai_discord_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "discord",
      "key_integrations": [
        "executeWorkflowTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.memoryBufferWindow",
        "stickyNote",
        "discordTool"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.discordTool": 3
      },
      "business_value": "Automates discord processes using executeWorkflowTrigger, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.680332"
    },
    {
      "original_filename": "ai_high_report_splitinbatches_n8nnodeslangchainchainllm.json",
      "workflow_name": "High-Level Service Page SEO Blueprint Report",
      "suggested_filename": "ai_high_report_splitinbatches_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "high",
      "key_integrations": [
        "code",
        "formTrigger",
        "splitInBatches",
        "httpRequest",
        "set",
        "@n8n/langchain.lmChatGoogleGemini",
        "wait",
        "@n8n/langchain.chainLlm",
        "convertToFile",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 33,
      "complexity": "High",
      "total_nodes": 33,
      "node_types": {
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 9,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 6,
        "n8n-nodes-base.wait": 4,
        "@n8n/n8n-nodes-langchain.chainLlm": 6,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates high processes using code, formTrigger, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.680803"
    },
    {
      "original_filename": "ops_docker_automate_ssh_webhook_webhook_4.json",
      "workflow_name": "puq-docker-influxdb-deploy",
      "suggested_filename": "ops_docker_automate_ssh_webhook_webhook_4.json",
      "category": "OPS",
      "business_function": "docker",
      "key_integrations": [
        "if",
        "set",
        "webhook",
        "respondToWebhook",
        "code",
        "ssh",
        "switch",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 33,
      "complexity": "High",
      "total_nodes": 33,
      "node_types": {
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.set": 21,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.ssh": 1,
        "n8n-nodes-base.switch": 4,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates docker processes using if, set, webhook",
      "analysis_timestamp": "2025-06-01T16:06:48.681689"
    },
    {
      "original_filename": "data_fetch_extract_httprequest_schedule_cron.json",
      "workflow_name": "Fetch Squarespace Blog & Event Collections to Google Sheets  ",
      "suggested_filename": "data_fetch_extract_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "fetch",
      "key_integrations": [
        "scheduleTrigger",
        "manualTrigger",
        "httpRequest",
        "stickyNote",
        "splitOut",
        "googleSheets"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates fetch processes using scheduleTrigger, manualTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.682038"
    },
    {
      "original_filename": "ai_imapemail_ai_process_httprequest_xml.json",
      "workflow_name": "ImapEmail, XmlToJson, POST-HTTP-Request",
      "suggested_filename": "ai_imapemail_ai_process_httprequest_xml.json",
      "category": "AI",
      "business_function": "imapemail",
      "key_integrations": [
        "emailReadImap",
        "moveBinaryData",
        "xml",
        "httpRequest",
        "set"
      ],
      "trigger_type": "email",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.moveBinaryData": 1,
        "n8n-nodes-base.xml": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates imapemail processes using emailReadImap, moveBinaryData, xml",
      "analysis_timestamp": "2025-06-01T16:06:48.682239"
    },
    {
      "original_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "workflow_name": "🤖🧠 AI Agent Chatbot + LONG TERM Memory + Note Storage + Telegram",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "@n8n/langchain.memoryBufferWindow",
        "googleDocsTool",
        "googleDocs",
        "telegram",
        "@n8n/langchain.agent",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.stickyNote": 8,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.googleDocsTool": 2,
        "n8n-nodes-base.googleDocs": 2,
        "n8n-nodes-base.telegram": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates agent processes using @n8n/langchain.chatTrigger, stickyNote, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.682552"
    },
    {
      "original_filename": "data_3280_workflow_3280_automate_httprequest_schedule_cron.json",
      "workflow_name": "data_3280_workflow_3280_automate_httprequest_schedule_cron",
      "suggested_filename": "data_3280_workflow_3280_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "3280",
      "key_integrations": [
        "manualTrigger",
        "code",
        "stickyNote",
        "scheduleTrigger",
        "set",
        "if",
        "httpRequest",
        "splitOut",
        "googleSheets",
        "convertToFile"
      ],
      "trigger_type": "cron",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.convertToFile": 1
      },
      "business_value": "Automates 3280 processes using manualTrigger, code, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.682854"
    },
    {
      "original_filename": "ai_2757_workflow_2757_automate_httprequest_microsoftoutlook_webhook.json",
      "workflow_name": "ai_2757_workflow_2757_automate_httprequest_microsoftoutlook_webhook",
      "suggested_filename": "ai_2757_workflow_2757_automate_httprequest_microsoftoutlook_webhook.json",
      "category": "AI",
      "business_function": "2757",
      "key_integrations": [
        "stickyNote",
        "code",
        "set",
        "erpNext",
        "if",
        "@n8n/langchain.lmChatGoogleGemini",
        "httpRequest",
        "webhook",
        "switch",
        "extractFromFile"
      ],
      "trigger_type": "chat",
      "complexity_score": 39,
      "complexity": "High",
      "total_nodes": 39,
      "node_types": {
        "n8n-nodes-base.stickyNote": 16,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.erpNext": 3,
        "n8n-nodes-base.if": 3,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.extractFromFile": 2,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.microsoftOutlook": 1,
        "n8n-nodes-base.whatsApp": 1
      },
      "business_value": "Automates 2757 processes using stickyNote, code, set",
      "analysis_timestamp": "2025-06-01T16:06:48.683286"
    },
    {
      "original_filename": "util_540_workflow_540_automate_calendly.json",
      "workflow_name": "util_540_workflow_540_automate_calendly",
      "suggested_filename": "util_540_workflow_540_automate_calendly.json",
      "category": "UTIL",
      "business_function": "540",
      "key_integrations": [
        "calendlyTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.calendlyTrigger": 1
      },
      "business_value": "Automates 540 processes using calendlyTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.683413"
    },
    {
      "original_filename": "comm_gender_automate_webhook_mattermost_webhook.json",
      "workflow_name": "Gender Inclusive Language",
      "suggested_filename": "comm_gender_automate_webhook_mattermost_webhook.json",
      "category": "COMM",
      "business_function": "gender",
      "key_integrations": [
        "webhook",
        "mattermost",
        "if"
      ],
      "trigger_type": "webhook",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.mattermost": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates gender processes using webhook, mattermost, if",
      "analysis_timestamp": "2025-06-01T16:06:48.683623"
    },
    {
      "original_filename": "data_1093_workflow_1093_automate_crypto_webhook_webhook.json",
      "workflow_name": "data_1093_workflow_1093_automate_crypto_webhook_webhook",
      "suggested_filename": "data_1093_workflow_1093_automate_crypto_webhook_webhook.json",
      "category": "DATA",
      "business_function": "1093",
      "key_integrations": [
        "webhook",
        "set",
        "if",
        "crypto",
        "airtable",
        "function"
      ],
      "trigger_type": "webhook",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "n8n-nodes-base.webhook": 3,
        "n8n-nodes-base.set": 12,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.crypto": 1,
        "n8n-nodes-base.airtable": 5,
        "n8n-nodes-base.function": 1
      },
      "business_value": "Automates 1093 processes using webhook, set, if",
      "analysis_timestamp": "2025-06-01T16:06:48.683947"
    },
    {
      "original_filename": "comm_2577_workflow_2577_automate_slack_httprequest_webhook.json",
      "workflow_name": "comm_2577_workflow_2577_automate_slack_httprequest_webhook",
      "suggested_filename": "comm_2577_workflow_2577_automate_slack_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "2577",
      "key_integrations": [
        "theHiveProjectTrigger",
        "stickyNote",
        "set",
        "httpRequest",
        "if",
        "theHiveProject",
        "slack",
        "respondToWebhook",
        "switch",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 63,
      "complexity": "High",
      "total_nodes": 63,
      "node_types": {
        "n8n-nodes-base.theHiveProjectTrigger": 1,
        "n8n-nodes-base.stickyNote": 18,
        "n8n-nodes-base.set": 17,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.theHiveProject": 7,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.slack": 3,
        "n8n-nodes-base.respondToWebhook": 10,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 2577 processes using theHiveProjectTrigger, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:48.686016"
    },
    {
      "original_filename": "biz_convert_process_splitinbatches_webhook_webhook.json",
      "workflow_name": "Convert Squarespace Profiles to Shopify Customers in Google Sheets",
      "suggested_filename": "biz_convert_process_splitinbatches_webhook_webhook.json",
      "category": "BIZ",
      "business_function": "convert",
      "key_integrations": [
        "webhook",
        "googleSheets",
        "splitInBatches",
        "stickyNote",
        "extractFromFile",
        "manualTrigger"
      ],
      "trigger_type": "webhook",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates convert processes using webhook, googleSheets, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.686509"
    },
    {
      "original_filename": "util_3293_workflow_3293_automate_executecommand_schedule_cron.json",
      "workflow_name": "util_3293_workflow_3293_automate_executecommand_schedule_cron",
      "suggested_filename": "util_3293_workflow_3293_automate_executecommand_schedule_cron.json",
      "category": "UTIL",
      "business_function": "3293",
      "key_integrations": [
        "set",
        "manualTrigger",
        "splitOut",
        "executeCommand",
        "scheduleTrigger",
        "n8nTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.executeCommand": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.n8nTrigger": 1
      },
      "business_value": "Automates 3293 processes using set, manualTrigger, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.686763"
    },
    {
      "original_filename": "data_1752_workflow_1752_automate_googlesheets_mysql_cron.json",
      "workflow_name": "data_1752_workflow_1752_automate_googlesheets_mysql_cron",
      "suggested_filename": "data_1752_workflow_1752_automate_googlesheets_mysql_cron.json",
      "category": "DATA",
      "business_function": "1752",
      "key_integrations": [
        "cron",
        "mySql",
        "googleSheets"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.mySql": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates 1752 processes using cron, mySql, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.686960"
    },
    {
      "original_filename": "util_receive_automate_openweathermap_webhook_webhook.json",
      "workflow_name": "Receive the weather information of any city",
      "suggested_filename": "util_receive_automate_openweathermap_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "receive",
      "key_integrations": [
        "webhook",
        "openWeatherMap",
        "set"
      ],
      "trigger_type": "webhook",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.openWeatherMap": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates receive processes using webhook, openWeatherMap, set",
      "analysis_timestamp": "2025-06-01T16:06:48.687198"
    },
    {
      "original_filename": "ecommerce_create_create_woocommerce_manual.json",
      "workflow_name": "Create, update and get a product from WooCommerce",
      "suggested_filename": "ecommerce_create_create_woocommerce_manual.json",
      "category": "ECOMMERCE",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "wooCommerce"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.wooCommerce": 3
      },
      "business_value": "Automates create processes using manualTrigger, wooCommerce",
      "analysis_timestamp": "2025-06-01T16:06:48.687441"
    },
    {
      "original_filename": "data_3036_workflow_3036_automate_httprequest_notion.json",
      "workflow_name": "data_3036_workflow_3036_automate_httprequest_notion",
      "suggested_filename": "data_3036_workflow_3036_automate_httprequest_notion.json",
      "category": "DATA",
      "business_function": "3036",
      "key_integrations": [
        "if",
        "executeWorkflowTrigger",
        "notion",
        "stickyNote",
        "splitOut",
        "set",
        "aggregate",
        "httpRequest",
        "wait"
      ],
      "trigger_type": "manual",
      "complexity_score": 37,
      "complexity": "High",
      "total_nodes": 37,
      "node_types": {
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.notion": 5,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.splitOut": 4,
        "n8n-nodes-base.set": 6,
        "n8n-nodes-base.aggregate": 4,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.wait": 5
      },
      "business_value": "Automates 3036 processes using if, executeWorkflowTrigger, notion",
      "analysis_timestamp": "2025-06-01T16:06:48.687885"
    },
    {
      "original_filename": "ai_send_ai_process_openweathermap_gotify_cron.json",
      "workflow_name": "Send daily weather updates via a message using the Gotify node",
      "suggested_filename": "ai_send_ai_process_openweathermap_gotify_cron.json",
      "category": "AI",
      "business_function": "send",
      "key_integrations": [
        "cron",
        "openWeatherMap",
        "gotify"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.openWeatherMap": 1,
        "n8n-nodes-base.gotify": 1
      },
      "business_value": "Automates send processes using cron, openWeatherMap, gotify",
      "analysis_timestamp": "2025-06-01T16:06:48.688148"
    },
    {
      "original_filename": "ai_dynamic_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr.json",
      "workflow_name": "Dynamic Form with AI",
      "suggested_filename": "ai_dynamic_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr.json",
      "category": "AI",
      "business_function": "dynamic",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "form",
        "formTrigger",
        "@n8n/langchain.outputParserStructured",
        "filter",
        "@n8n/langchain.chainLlm",
        "splitOut",
        "set",
        "aggregate",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.form": 3,
        "n8n-nodes-base.formTrigger": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.filter": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.stickyNote": 8
      },
      "business_value": "Automates dynamic processes using @n8n/langchain.lmChatOpenAi, form, formTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.688434"
    },
    {
      "original_filename": "ai_2372_workflow_2372_automate_splitinbatches_executeworkflow.json",
      "workflow_name": "ai_2372_workflow_2372_automate_splitinbatches_executeworkflow",
      "suggested_filename": "ai_2372_workflow_2372_automate_splitinbatches_executeworkflow.json",
      "category": "AI",
      "business_function": "2372",
      "key_integrations": [
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "set",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "googleSheets",
        "splitOut",
        "httpRequest",
        "@n8n/langchain.lmChatOpenAi",
        "splitInBatches",
        "executeWorkflow"
      ],
      "trigger_type": "chat",
      "complexity_score": 42,
      "complexity": "High",
      "total_nodes": 42,
      "node_types": {
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "n8n-nodes-base.set": 6,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.googleSheets": 5,
        "n8n-nodes-base.splitOut": 3,
        "n8n-nodes-base.httpRequest": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 12,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1
      },
      "business_value": "Automates 2372 processes using @n8n/langchain.embeddingsOpenAi, @n8n/langchain.documentDefaultDataLoader, set",
      "analysis_timestamp": "2025-06-01T16:06:48.688904"
    },
    {
      "original_filename": "util_2244_workflow_2244_automate_httprequest_webhook_webhook.json",
      "workflow_name": "util_2244_workflow_2244_automate_httprequest_webhook_webhook",
      "suggested_filename": "util_2244_workflow_2244_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "2244",
      "key_integrations": [
        "httpRequest",
        "respondToWebhook",
        "stickyNote",
        "webhook",
        "code",
        "if"
      ],
      "trigger_type": "webhook",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 2244 processes using httpRequest, respondToWebhook, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.689237"
    },
    {
      "original_filename": "comm_1734_workflow_1734_automate_spreadsheetfile_gmail.json",
      "workflow_name": "comm_1734_workflow_1734_automate_spreadsheetfile_gmail",
      "suggested_filename": "comm_1734_workflow_1734_automate_spreadsheetfile_gmail.json",
      "category": "COMM",
      "business_function": "1734",
      "key_integrations": [
        "gmail",
        "spreadsheetFile",
        "moveBinaryData",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.moveBinaryData": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 1734 processes using gmail, spreadsheetFile, moveBinaryData",
      "analysis_timestamp": "2025-06-01T16:06:48.689341"
    },
    {
      "original_filename": "comm_2728_workflow_2728_automate_splitinbatches_slack_webhook.json",
      "workflow_name": "comm_2728_workflow_2728_automate_splitinbatches_slack_webhook",
      "suggested_filename": "comm_2728_workflow_2728_automate_splitinbatches_slack_webhook.json",
      "category": "COMM",
      "business_function": "2728",
      "key_integrations": [
        "set",
        "respondToWebhook",
        "switch",
        "httpRequest",
        "webhook",
        "serviceNow",
        "slack",
        "if",
        "sort",
        "limit"
      ],
      "trigger_type": "webhook",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.respondToWebhook": 3,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.serviceNow": 1,
        "n8n-nodes-base.slack": 4,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.summarize": 1,
        "n8n-nodes-base.stickyNote": 8
      },
      "business_value": "Automates 2728 processes using set, respondToWebhook, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.689793"
    },
    {
      "original_filename": "util_telegram_read_httprequest_schedule_cron.json",
      "workflow_name": "Telegram channel to Readeck & Hoarder",
      "suggested_filename": "util_telegram_read_httprequest_schedule_cron.json",
      "category": "UTIL",
      "business_function": "telegram",
      "key_integrations": [
        "scheduleTrigger",
        "splitOut",
        "stickyNote",
        "code",
        "set",
        "httpRequest"
      ],
      "trigger_type": "cron",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 5
      },
      "business_value": "Automates telegram processes using scheduleTrigger, splitOut, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.690077"
    },
    {
      "original_filename": "content_social_automate_httprequest_form.json",
      "workflow_name": "Social Media Publisher",
      "suggested_filename": "content_social_automate_httprequest_form.json",
      "category": "CONTENT",
      "business_function": "social",
      "key_integrations": [
        "formTrigger",
        "httpRequest",
        "form",
        "if",
        "set",
        "switch",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.form": 4,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates social processes using formTrigger, httpRequest, form",
      "analysis_timestamp": "2025-06-01T16:06:48.690381"
    },
    {
      "original_filename": "util_create_create_task_todoist_manual.json",
      "workflow_name": "Create a new task in Todoist",
      "suggested_filename": "util_create_create_task_todoist_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "todoist"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.todoist": 1
      },
      "business_value": "Automates create processes using manualTrigger, todoist",
      "analysis_timestamp": "2025-06-01T16:06:48.690587"
    },
    {
      "original_filename": "util_521_workflow_521_automate_mailjet.json",
      "workflow_name": "util_521_workflow_521_automate_mailjet",
      "suggested_filename": "util_521_workflow_521_automate_mailjet.json",
      "category": "UTIL",
      "business_function": "521",
      "key_integrations": [
        "mailjetTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.mailjetTrigger": 1
      },
      "business_value": "Automates 521 processes using mailjetTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.690695"
    },
    {
      "original_filename": "util_119_workflow_119_automate_webhook_xml_webhook.json",
      "workflow_name": "util_119_workflow_119_automate_webhook_xml_webhook",
      "suggested_filename": "util_119_workflow_119_automate_webhook_xml_webhook.json",
      "category": "UTIL",
      "business_function": "119",
      "key_integrations": [
        "xml",
        "set",
        "respondToWebhook",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.xml": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 119 processes using xml, set, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:48.690942"
    },
    {
      "original_filename": "util_1112_workflow_1112_automate_uptimerobot.json",
      "workflow_name": "util_1112_workflow_1112_automate_uptimerobot",
      "suggested_filename": "util_1112_workflow_1112_automate_uptimerobot.json",
      "category": "UTIL",
      "business_function": "1112",
      "key_integrations": [
        "uptimeRobot"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.uptimeRobot": 3
      },
      "business_value": "Automates 1112 processes using uptimeRobot",
      "analysis_timestamp": "2025-06-01T16:06:48.691245"
    },
    {
      "original_filename": "ai_details_ai_process_disqus_manual.json",
      "workflow_name": "Get details of a forum in Disqus",
      "suggested_filename": "ai_details_ai_process_disqus_manual.json",
      "category": "AI",
      "business_function": "details",
      "key_integrations": [
        "manualTrigger",
        "disqus"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.disqus": 1
      },
      "business_value": "Automates details processes using manualTrigger, disqus",
      "analysis_timestamp": "2025-06-01T16:06:48.691376"
    },
    {
      "original_filename": "ai_perform_ai_process_httprequest_manual_2.json",
      "workflow_name": "Perform an email search with Icypeas (single)",
      "suggested_filename": "ai_perform_ai_process_httprequest_manual_2.json",
      "category": "AI",
      "business_function": "perform",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "code",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates perform processes using manualTrigger, stickyNote, code",
      "analysis_timestamp": "2025-06-01T16:06:48.691658"
    },
    {
      "original_filename": "comm_analyze_analyze_googlecloudnaturallanguage_mattermost_1.json",
      "workflow_name": "Analyze the sentiment of feedback and send a message on Mattermost",
      "suggested_filename": "comm_analyze_analyze_googlecloudnaturallanguage_mattermost_1.json",
      "category": "COMM",
      "business_function": "analyze",
      "key_integrations": [
        "typeformTrigger",
        "googleCloudNaturalLanguage",
        "if",
        "mattermost"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.googleCloudNaturalLanguage": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.mattermost": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates analyze processes using typeformTrigger, googleCloudNaturalLanguage, if",
      "analysis_timestamp": "2025-06-01T16:06:48.691798"
    },
    {
      "original_filename": "ai_search_ai_process_splitinbatches_httprequest_2.json",
      "workflow_name": "Search LinkedIn companies and add them to Airtable CRM",
      "suggested_filename": "ai_search_ai_process_splitinbatches_httprequest_2.json",
      "category": "AI",
      "business_function": "search",
      "key_integrations": [
        "manualTrigger",
        "splitInBatches",
        "httpRequest",
        "if",
        "airtable",
        "stickyNote",
        "set",
        "splitOut"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.splitOut": 1
      },
      "business_value": "Automates search processes using manualTrigger, splitInBatches, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.692278"
    },
    {
      "original_filename": "ai_graphic_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruc.json",
      "workflow_name": "n8n Graphic Design Team",
      "suggested_filename": "ai_graphic_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruc.json",
      "category": "AI",
      "business_function": "graphic",
      "key_integrations": [
        "googleSheets",
        "set",
        "googleDrive",
        "httpRequest",
        "@n8n/langchain.outputParserStructured",
        "switch",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatOpenAi",
        "gmail",
        "manualTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 37,
      "complexity": "High",
      "total_nodes": 37,
      "node_types": {
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.set": 8,
        "n8n-nodes-base.googleDrive": 5,
        "n8n-nodes-base.httpRequest": 6,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.formTrigger": 1
      },
      "business_value": "Automates graphic processes using googleSheets, set, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.692926"
    },
    {
      "original_filename": "data_2016_workflow_2016_automate_httprequest_manual.json",
      "workflow_name": "data_2016_workflow_2016_automate_httprequest_manual",
      "suggested_filename": "data_2016_workflow_2016_automate_httprequest_manual.json",
      "category": "DATA",
      "business_function": "2016",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "code",
        "googleSheets",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 2016 processes using manualTrigger, stickyNote, code",
      "analysis_timestamp": "2025-06-01T16:06:48.693258"
    },
    {
      "original_filename": "util_2299_workflow_2299_automate_schedule_httprequest_cron.json",
      "workflow_name": "util_2299_workflow_2299_automate_schedule_httprequest_cron",
      "suggested_filename": "util_2299_workflow_2299_automate_schedule_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "2299",
      "key_integrations": [
        "scheduleTrigger",
        "set",
        "stickyNote",
        "httpRequest"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 2299 processes using scheduleTrigger, set, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.693474"
    },
    {
      "original_filename": "comm_731_workflow_731_automate_googlesheets_mattermost_cron.json",
      "workflow_name": "comm_731_workflow_731_automate_googlesheets_mattermost_cron",
      "suggested_filename": "comm_731_workflow_731_automate_googlesheets_mattermost_cron.json",
      "category": "COMM",
      "business_function": "731",
      "key_integrations": [
        "cron",
        "googleSheets",
        "mattermost"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.mattermost": 1
      },
      "business_value": "Automates 731 processes using cron, googleSheets, mattermost",
      "analysis_timestamp": "2025-06-01T16:06:48.693661"
    },
    {
      "original_filename": "comm_2135_workflow_2135_automate_pipedrive_slack_cron.json",
      "workflow_name": "comm_2135_workflow_2135_automate_pipedrive_slack_cron",
      "suggested_filename": "comm_2135_workflow_2135_automate_pipedrive_slack_cron.json",
      "category": "COMM",
      "business_function": "2135",
      "key_integrations": [
        "stickyNote",
        "clearbit",
        "pipedrive",
        "set",
        "filter",
        "scheduleTrigger",
        "slack",
        "merge",
        "httpRequest",
        "splitOut"
      ],
      "trigger_type": "cron",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.clearbit": 1,
        "n8n-nodes-base.pipedrive": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.filter": 3,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.splitOut": 2
      },
      "business_value": "Automates 2135 processes using stickyNote, clearbit, pipedrive",
      "analysis_timestamp": "2025-06-01T16:06:48.694053"
    },
    {
      "original_filename": "biz_664_workflow_664_automate_manual_salesforce.json",
      "workflow_name": "biz_664_workflow_664_automate_manual_salesforce",
      "suggested_filename": "biz_664_workflow_664_automate_manual_salesforce.json",
      "category": "BIZ",
      "business_function": "664",
      "key_integrations": [
        "manualTrigger",
        "salesforce"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.salesforce": 3
      },
      "business_value": "Automates 664 processes using manualTrigger, salesforce",
      "analysis_timestamp": "2025-06-01T16:06:48.694272"
    },
    {
      "original_filename": "util_2858_workflow_2858_automate_splitinbatches_httprequest_cron.json",
      "workflow_name": "util_2858_workflow_2858_automate_splitinbatches_httprequest_cron",
      "suggested_filename": "util_2858_workflow_2858_automate_splitinbatches_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "2858",
      "key_integrations": [
        "httpRequest",
        "if",
        "splitInBatches",
        "wait",
        "set",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates 2858 processes using httpRequest, if, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.694529"
    },
    {
      "original_filename": "util_create_create_quickbase_manual.json",
      "workflow_name": "Create, update and get records in Quick Base",
      "suggested_filename": "util_create_create_quickbase_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "quickbase",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.quickbase": 3,
        "n8n-nodes-base.set": 2
      },
      "business_value": "Automates create processes using manualTrigger, quickbase, set",
      "analysis_timestamp": "2025-06-01T16:06:48.694780"
    },
    {
      "original_filename": "comm_cheems_automate_discord_cron_cron.json",
      "workflow_name": "cheems",
      "suggested_filename": "comm_cheems_automate_discord_cron_cron.json",
      "category": "COMM",
      "business_function": "cheems",
      "key_integrations": [
        "cron",
        "discord"
      ],
      "trigger_type": "cron",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.cron": 3,
        "n8n-nodes-base.discord": 3
      },
      "business_value": "Automates cheems processes using cron, discord",
      "analysis_timestamp": "2025-06-01T16:06:48.694902"
    },
    {
      "original_filename": "util_create_create_manual_egoi.json",
      "workflow_name": "Create, update, and get a subscriber using the e-goi node",
      "suggested_filename": "util_create_create_manual_egoi.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "egoi"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.egoi": 3
      },
      "business_value": "Automates create processes using manualTrigger, egoi",
      "analysis_timestamp": "2025-06-01T16:06:48.695023"
    },
    {
      "original_filename": "util_merge_automate_readwritefile_httprequest_1.json",
      "workflow_name": "Merge PDFs",
      "suggested_filename": "util_merge_automate_readwritefile_httprequest_1.json",
      "category": "UTIL",
      "business_function": "merge",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "merge",
        "@custom-js/pdf-toolkit.mergePdfs",
        "readWriteFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.merge": 1,
        "@custom-js/n8n-nodes-pdf-toolkit.mergePdfs": 1,
        "n8n-nodes-base.readWriteFile": 2
      },
      "business_value": "Automates merge processes using manualTrigger, httpRequest, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.695260"
    },
    {
      "original_filename": "ai_zoom_ai_process_clickup_httprequest_1.json",
      "workflow_name": "Zoom AI Meeting Assistant",
      "suggested_filename": "ai_zoom_ai_process_clickup_httprequest_1.json",
      "category": "AI",
      "business_function": "zoom",
      "key_integrations": [
        "manualTrigger",
        "stopAndError",
        "zoom",
        "set",
        "splitInBatches",
        "httpRequest",
        "extractFromFile",
        "code",
        "emailSend",
        "@n8n/langchain.toolWorkflow"
      ],
      "trigger_type": "email",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stopAndError": 1,
        "n8n-nodes-base.zoom": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.emailSend": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "n8n-nodes-base.microsoftOutlookTool": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.clickUp": 1,
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 1,
        "@n8n/n8n-nodes-langchain.toolThink": 1
      },
      "business_value": "Automates zoom processes using manualTrigger, stopAndError, zoom",
      "analysis_timestamp": "2025-06-01T16:06:48.695628"
    },
    {
      "original_filename": "ai_1963_workflow_1963_automate_n8nnodeslangchainchat_n8nnodeslangchainlmchatopen.json",
      "workflow_name": "ai_1963_workflow_1963_automate_n8nnodeslangchainchat_n8nnodeslangchainlmchatopen",
      "suggested_filename": "ai_1963_workflow_1963_automate_n8nnodeslangchainchat_n8nnodeslangchainlmchatopen.json",
      "category": "AI",
      "business_function": "1963",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "set",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolCode"
      ],
      "trigger_type": "chat",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolCode": 1
      },
      "business_value": "Automates 1963 processes using manualTrigger, @n8n/langchain.chatTrigger, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.695860"
    },
    {
      "original_filename": "ai_maia_ai_process_httprequest_schedule_cron.json",
      "workflow_name": "MAIA - Health Check",
      "suggested_filename": "ai_maia_ai_process_httprequest_schedule_cron.json",
      "category": "AI",
      "business_function": "maia",
      "key_integrations": [
        "telegram",
        "scheduleTrigger",
        "googleSheets",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates maia processes using telegram, scheduleTrigger, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.696105"
    },
    {
      "original_filename": "ai_automate_ai_process_linkedin_httprequest_cron_2.json",
      "workflow_name": "Automate LinkedIn Posts with AI",
      "suggested_filename": "ai_automate_ai_process_linkedin_httprequest_cron_2.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "scheduleTrigger",
        "stickyNote",
        "notion",
        "linkedIn",
        "merge",
        "httpRequest",
        "@n8n/langchain.openAi",
        "aggregate"
      ],
      "trigger_type": "cron",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.notion": 3,
        "n8n-nodes-base.linkedIn": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.aggregate": 1
      },
      "business_value": "Automates automate processes using scheduleTrigger, stickyNote, notion",
      "analysis_timestamp": "2025-06-01T16:06:48.696362"
    },
    {
      "original_filename": "util_571_workflow_571_automate_manual_mandrill.json",
      "workflow_name": "util_571_workflow_571_automate_manual_mandrill",
      "suggested_filename": "util_571_workflow_571_automate_manual_mandrill.json",
      "category": "UTIL",
      "business_function": "571",
      "key_integrations": [
        "manualTrigger",
        "mandrill"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.mandrill": 1
      },
      "business_value": "Automates 571 processes using manualTrigger, mandrill",
      "analysis_timestamp": "2025-06-01T16:06:48.696473"
    },
    {
      "original_filename": "util_1913_workflow_1913_automate_manual_n8ntrainingcustomerdatastore.json",
      "workflow_name": "util_1913_workflow_1913_automate_manual_n8ntrainingcustomerdatastore",
      "suggested_filename": "util_1913_workflow_1913_automate_manual_n8ntrainingcustomerdatastore.json",
      "category": "UTIL",
      "business_function": "1913",
      "key_integrations": [
        "manualTrigger",
        "n8nTrainingCustomerDatastore",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.n8nTrainingCustomerDatastore": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 1913 processes using manualTrigger, n8nTrainingCustomerDatastore, set",
      "analysis_timestamp": "2025-06-01T16:06:48.696584"
    },
    {
      "original_filename": "util_543_workflow_543_automate_xero_manual.json",
      "workflow_name": "util_543_workflow_543_automate_xero_manual",
      "suggested_filename": "util_543_workflow_543_automate_xero_manual.json",
      "category": "UTIL",
      "business_function": "543",
      "key_integrations": [
        "manualTrigger",
        "xero"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.xero": 1
      },
      "business_value": "Automates 543 processes using manualTrigger, xero",
      "analysis_timestamp": "2025-06-01T16:06:48.696689"
    },
    {
      "original_filename": "comm_1041_workflow_1041_automate_emelia_mattermost.json",
      "workflow_name": "comm_1041_workflow_1041_automate_emelia_mattermost",
      "suggested_filename": "comm_1041_workflow_1041_automate_emelia_mattermost.json",
      "category": "COMM",
      "business_function": "1041",
      "key_integrations": [
        "mattermost",
        "emeliaTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.mattermost": 1,
        "n8n-nodes-base.emeliaTrigger": 1
      },
      "business_value": "Automates 1041 processes using mattermost, emeliaTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.696790"
    },
    {
      "original_filename": "ai_supabase_automate_supabase_n8nnodeslangchainmemorypostgreschat.json",
      "workflow_name": "Supabase Setup Postgres",
      "suggested_filename": "ai_supabase_automate_supabase_n8nnodeslangchainmemorypostgreschat.json",
      "category": "AI",
      "business_function": "supabase",
      "key_integrations": [
        "manualTrigger",
        "set",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.memoryPostgresChat",
        "supabase",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.memoryPostgresChat": 1,
        "n8n-nodes-base.supabase": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates supabase processes using manualTrigger, set, @n8n/langchain.lmChatGoogleGemini",
      "analysis_timestamp": "2025-06-01T16:06:48.696919"
    },
    {
      "original_filename": "util_2403_workflow_2403_automate_datetime_httprequest_cron.json",
      "workflow_name": "util_2403_workflow_2403_automate_datetime_httprequest_cron",
      "suggested_filename": "util_2403_workflow_2403_automate_datetime_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "2403",
      "key_integrations": [
        "set",
        "scheduleTrigger",
        "manualTrigger",
        "stickyNote",
        "httpRequest",
        "splitOut",
        "merge",
        "dateTime",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.httpRequest": 12,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.dateTime": 2,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 2403 processes using set, scheduleTrigger, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.697382"
    },
    {
      "original_filename": "ai_build_ai_process_elasticsearch_httprequest.json",
      "workflow_name": "ai_build_ai_process_elasticsearch_httprequest",
      "suggested_filename": "ai_build_ai_process_elasticsearch_httprequest.json",
      "category": "AI",
      "business_function": "build",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "splitOut",
        "filter",
        "editImage",
        "set",
        "elasticsearch",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.editImage": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.elasticsearch": 1,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates build processes using manualTrigger, httpRequest, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.697734"
    },
    {
      "original_filename": "comm_1059_workflow_1059_automate_webhook_workflow_webhook.json",
      "workflow_name": "comm_1059_workflow_1059_automate_webhook_workflow_webhook",
      "suggested_filename": "comm_1059_workflow_1059_automate_webhook_workflow_webhook.json",
      "category": "COMM",
      "business_function": "1059",
      "key_integrations": [
        "webhook",
        "set",
        "mattermost",
        "workflowTrigger"
      ],
      "trigger_type": "webhook",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.mattermost": 1,
        "n8n-nodes-base.workflowTrigger": 1
      },
      "business_value": "Automates 1059 processes using webhook, set, mattermost",
      "analysis_timestamp": "2025-06-01T16:06:48.697862"
    },
    {
      "original_filename": "util_create_create_manual_sentryio.json",
      "workflow_name": "Create a release and get all releases",
      "suggested_filename": "util_create_create_manual_sentryio.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "sentryIo"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.sentryIo": 2
      },
      "business_value": "Automates create processes using manualTrigger, sentryIo",
      "analysis_timestamp": "2025-06-01T16:06:48.697971"
    },
    {
      "original_filename": "util_1396_workflow_1396_automate_awss3_googledrive.json",
      "workflow_name": "util_1396_workflow_1396_automate_awss3_googledrive",
      "suggested_filename": "util_1396_workflow_1396_automate_awss3_googledrive.json",
      "category": "UTIL",
      "business_function": "1396",
      "key_integrations": [
        "googleDriveTrigger",
        "merge",
        "awsS3"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.awsS3": 2
      },
      "business_value": "Automates 1396 processes using googleDriveTrigger, merge, awsS3",
      "analysis_timestamp": "2025-06-01T16:06:48.698089"
    },
    {
      "original_filename": "comm_1109_workflow_1109_automate_slack_googlecloudnaturallanguage.json",
      "workflow_name": "comm_1109_workflow_1109_automate_slack_googlecloudnaturallanguage",
      "suggested_filename": "comm_1109_workflow_1109_automate_slack_googlecloudnaturallanguage.json",
      "category": "COMM",
      "business_function": "1109",
      "key_integrations": [
        "typeformTrigger",
        "googleCloudNaturalLanguage",
        "if",
        "notion",
        "slack",
        "trello"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.googleCloudNaturalLanguage": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.trello": 1
      },
      "business_value": "Automates 1109 processes using typeformTrigger, googleCloudNaturalLanguage, if",
      "analysis_timestamp": "2025-06-01T16:06:48.698330"
    },
    {
      "original_filename": "data_2267_workflow_2267_automate_httprequest_manual.json",
      "workflow_name": "data_2267_workflow_2267_automate_httprequest_manual",
      "suggested_filename": "data_2267_workflow_2267_automate_httprequest_manual.json",
      "category": "DATA",
      "business_function": "2267",
      "key_integrations": [
        "manualTrigger",
        "airtable",
        "httpRequest",
        "html",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 2267 processes using manualTrigger, airtable, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.698577"
    },
    {
      "original_filename": "util_1074_workflow_1074_automate_nocodb_splitinbatches_cron.json",
      "workflow_name": "util_1074_workflow_1074_automate_nocodb_splitinbatches_cron",
      "suggested_filename": "util_1074_workflow_1074_automate_nocodb_splitinbatches_cron.json",
      "category": "UTIL",
      "business_function": "1074",
      "key_integrations": [
        "code",
        "stickyNote",
        "spotify",
        "nocoDb",
        "if",
        "filter",
        "merge",
        "splitInBatches",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 30,
      "complexity": "High",
      "total_nodes": 30,
      "node_types": {
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.spotify": 5,
        "n8n-nodes-base.nocoDb": 7,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.noOp": 4,
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates 1074 processes using code, stickyNote, spotify",
      "analysis_timestamp": "2025-06-01T16:06:48.698950"
    },
    {
      "original_filename": "ai_2502_workflow_2502_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "workflow_name": "ai_2502_workflow_2502_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput",
      "suggested_filename": "ai_2502_workflow_2502_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "2502",
      "key_integrations": [
        "set",
        "code",
        "httpRequest",
        "splitOut",
        "@n8n/langchain.lmChatAnthropic",
        "spotify",
        "@n8n/langchain.outputParserStructured",
        "filter",
        "merge",
        "limit"
      ],
      "trigger_type": "chat",
      "complexity_score": 37,
      "complexity": "High",
      "total_nodes": 37,
      "node_types": {
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 3,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 1,
        "n8n-nodes-base.spotify": 3,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.merge": 4,
        "n8n-nodes-base.limit": 2,
        "n8n-nodes-base.googleSheets": 4,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.noOp": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates 2502 processes using set, code, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.699498"
    },
    {
      "original_filename": "ai_linkedin_automate_httprequest_readwritefile.json",
      "workflow_name": "LinkedIn Web Scraping with Bright Data MCP Server & Google Gemini",
      "suggested_filename": "ai_linkedin_automate_httprequest_readwritefile.json",
      "category": "AI",
      "business_function": "linkedin",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "set",
        "mcp.mcpClient",
        "httpRequest",
        "@n8n/langchain.informationExtractor",
        "@n8n/langchain.lmChatGoogleGemini",
        "code",
        "merge",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-mcp.mcpClient": 4,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.readWriteFile": 2
      },
      "business_value": "Automates linkedin processes using manualTrigger, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:48.699866"
    },
    {
      "original_filename": "ai_2026_workflow_2026_automate_n8nnodeslangchainchat_executeworkflow.json",
      "workflow_name": "ai_2026_workflow_2026_automate_n8nnodeslangchainchat_executeworkflow",
      "suggested_filename": "ai_2026_workflow_2026_automate_n8nnodeslangchainchat_executeworkflow.json",
      "category": "AI",
      "business_function": "2026",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.toolWorkflow",
        "executeWorkflowTrigger",
        "hackerNews",
        "set",
        "code",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.hackerNews": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates 2026 processes using stickyNote, @n8n/langchain.chatTrigger, @n8n/langchain.toolWorkflow",
      "analysis_timestamp": "2025-06-01T16:06:48.700126"
    },
    {
      "original_filename": "ai_google_automate_n8nnodeslangchainchat_n8nnodeslangchainembeddingsgooglegemini.json",
      "workflow_name": "Google Drive Automation",
      "suggested_filename": "ai_google_automate_n8nnodeslangchainchat_n8nnodeslangchainembeddingsgooglegemini.json",
      "category": "AI",
      "business_function": "google",
      "key_integrations": [
        "@n8n/langchain.agent",
        "googleDriveTrigger",
        "googleDrive",
        "extractFromFile",
        "@n8n/langchain.vectorStorePinecone",
        "@n8n/langchain.embeddingsGoogleGemini",
        "code",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 2,
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini": 2,
        "n8n-nodes-base.code": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 1
      },
      "business_value": "Automates google processes using @n8n/langchain.agent, googleDriveTrigger, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.700424"
    },
    {
      "original_filename": "util_533_workflow_533_automate_acuityscheduling.json",
      "workflow_name": "util_533_workflow_533_automate_acuityscheduling",
      "suggested_filename": "util_533_workflow_533_automate_acuityscheduling.json",
      "category": "UTIL",
      "business_function": "533",
      "key_integrations": [
        "acuitySchedulingTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.acuitySchedulingTrigger": 1
      },
      "business_value": "Automates 533 processes using acuitySchedulingTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.700545"
    },
    {
      "original_filename": "ai_automate_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "workflow_name": "My workflow",
      "suggested_filename": "ai_automate_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "code",
        "reddit",
        "if",
        "set",
        "splitInBatches",
        "httpRequest",
        "convertToFile",
        "compression",
        "googleDrive",
        "aggregate"
      ],
      "trigger_type": "cron",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.code": 6,
        "n8n-nodes-base.reddit": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.compression": 1,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 3,
        "n8n-nodes-base.stickyNote": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 3
      },
      "business_value": "Automates automate processes using code, reddit, if",
      "analysis_timestamp": "2025-06-01T16:06:48.701072"
    },
    {
      "original_filename": "util_generate_generate_httprequest_webhook_webhook.json",
      "workflow_name": "util_generate_generate_httprequest_webhook_webhook",
      "suggested_filename": "util_generate_generate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "generate",
      "key_integrations": [
        "if",
        "respondToWebhook",
        "webhook",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates generate processes using if, respondToWebhook, webhook",
      "analysis_timestamp": "2025-06-01T16:06:48.701223"
    },
    {
      "original_filename": "ai_flux_ai_process_httprequest_manual_1.json",
      "workflow_name": "Flux Dev Image Generation Fal.ai",
      "suggested_filename": "ai_flux_ai_process_httprequest_manual_1.json",
      "category": "AI",
      "business_function": "flux",
      "key_integrations": [
        "httpRequest",
        "googleDrive",
        "manualTrigger",
        "stickyNote",
        "wait",
        "if",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates flux processes using httpRequest, googleDrive, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.701507"
    },
    {
      "original_filename": "util_create_create_task_manual_asana.json",
      "workflow_name": "Create a new task in Asana",
      "suggested_filename": "util_create_create_task_manual_asana.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "asana"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.asana": 1
      },
      "business_value": "Automates create processes using manualTrigger, asana",
      "analysis_timestamp": "2025-06-01T16:06:48.701731"
    },
    {
      "original_filename": "ai_travel_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_w.json",
      "workflow_name": "Travel Planning Agent with Couchbase Vector Search, Gemini 2.0 Flash and OpenAI",
      "suggested_filename": "ai_travel_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_w.json",
      "category": "AI",
      "business_function": "travel",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "stickyNote",
        "webhook",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.agent",
        "couchbase.vectorStoreCouchbaseSearch",
        "@n8n/langchain.embeddingsOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-couchbase.vectorStoreCouchbaseSearch": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2
      },
      "business_value": "Automates travel processes using @n8n/langchain.chatTrigger, @n8n/langchain.lmChatGoogleGemini, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.702022"
    },
    {
      "original_filename": "ai_automate_notify_n8nnodeslangchainmemorybufferwindow_splitinbatches.json",
      "workflow_name": "ai_automate_notify_n8nnodeslangchainmemorybufferwindow_splitinbatches",
      "suggested_filename": "ai_automate_notify_n8nnodeslangchainmemorybufferwindow_splitinbatches.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "splitOut",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterTokenSplitter",
        "@n8n/langchain.memoryBufferWindow",
        "extractFromFile",
        "manualTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 3,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 3,
        "n8n-nodes-base.zendesk": 2,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates automate processes using @n8n/langchain.chatTrigger, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.702385"
    },
    {
      "original_filename": "data_3037_workflow_3037_automate_notion_executeworkflow.json",
      "workflow_name": "data_3037_workflow_3037_automate_notion_executeworkflow",
      "suggested_filename": "data_3037_workflow_3037_automate_notion_executeworkflow.json",
      "category": "DATA",
      "business_function": "3037",
      "key_integrations": [
        "executeWorkflowTrigger",
        "notion",
        "stickyNote",
        "if",
        "wait",
        "splitOut",
        "aggregate",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.notion": 3,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.wait": 3,
        "n8n-nodes-base.splitOut": 3,
        "n8n-nodes-base.aggregate": 3,
        "n8n-nodes-base.set": 3
      },
      "business_value": "Automates 3037 processes using executeWorkflowTrigger, notion, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.702752"
    },
    {
      "original_filename": "ai_email_ai_process_httprequest_manual.json",
      "workflow_name": "Email verification with Icypeas (single)",
      "suggested_filename": "ai_email_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "email",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "stickyNote",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates email processes using manualTrigger, httpRequest, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.702908"
    },
    {
      "original_filename": "util_1920_workflow_1920_automate_webhook_httprequest_webhook.json",
      "workflow_name": "util_1920_workflow_1920_automate_webhook_httprequest_webhook",
      "suggested_filename": "util_1920_workflow_1920_automate_webhook_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "1920",
      "key_integrations": [
        "webhook",
        "httpRequest",
        "respondToWebhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.respondToWebhook": 1
      },
      "business_value": "Automates 1920 processes using webhook, httpRequest, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:48.703012"
    },
    {
      "original_filename": "ai_test_automate_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainoutput.json",
      "workflow_name": "Test Webhooks in n8n Without Changing WEBHOOK_URL (PostBin & BambooHR Example)",
      "suggested_filename": "ai_test_automate_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "test",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "merge",
        "httpRequest",
        "postBin",
        "set",
        "splitOut",
        "aggregate",
        "debugHelper",
        "filter"
      ],
      "trigger_type": "chat",
      "complexity_score": 58,
      "complexity": "High",
      "total_nodes": 58,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 24,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.httpRequest": 6,
        "n8n-nodes-base.postBin": 5,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.debugHelper": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.bambooHr": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.renameKeys": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.wait": 1
      },
      "business_value": "Automates test processes using manualTrigger, stickyNote, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.703482"
    },
    {
      "original_filename": "ai_github_automate_splitinbatches_slack_cron.json",
      "workflow_name": "Github Releases",
      "suggested_filename": "ai_github_automate_splitinbatches_slack_cron.json",
      "category": "AI",
      "business_function": "github",
      "key_integrations": [
        "limit",
        "splitInBatches",
        "set",
        "scheduleTrigger",
        "code",
        "if",
        "slack",
        "dateTime",
        "@n8n/langchain.informationExtractor",
        "@n8n/langchain.lmChatGoogleGemini"
      ],
      "trigger_type": "cron",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.slack": 2,
        "n8n-nodes-base.dateTime": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.redis": 2,
        "n8n-nodes-base.rssFeedRead": 1
      },
      "business_value": "Automates github processes using limit, splitInBatches, set",
      "analysis_timestamp": "2025-06-01T16:06:48.703910"
    },
    {
      "original_filename": "ai_searchapi_automate_n8nnodeslangchainchainsummarization_manual.json",
      "workflow_name": "SearchApi Youtube Video Summary",
      "suggested_filename": "ai_searchapi_automate_n8nnodeslangchainchainsummarization_manual.json",
      "category": "AI",
      "business_function": "searchapi",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "splitOut",
        "summarize",
        "stickyNote",
        "@searchapi/searchapi.searchApi",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.summarize": 1,
        "n8n-nodes-base.stickyNote": 2,
        "@searchapi/n8n-nodes-searchapi.searchApi": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates searchapi processes using manualTrigger, @n8n/langchain.chainSummarization, @n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
      "analysis_timestamp": "2025-06-01T16:06:48.704189"
    },
    {
      "original_filename": "ai_deepseek_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchainl_2.json",
      "workflow_name": "🐋DeepSeek V3 Chat & R1 Reasoning Quick Start",
      "suggested_filename": "ai_deepseek_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchainl_2.json",
      "category": "AI",
      "business_function": "deepseek",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.chainLlm",
        "stickyNote",
        "@n8n/langchain.lmChatOllama",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 1,
        "n8n-nodes-base.httpRequest": 2
      },
      "business_value": "Automates deepseek processes using @n8n/langchain.chatTrigger, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.704478"
    },
    {
      "original_filename": "util_receive_update_clickup.json",
      "workflow_name": "Receive updates for events in ClickUp",
      "suggested_filename": "util_receive_update_clickup.json",
      "category": "UTIL",
      "business_function": "receive",
      "key_integrations": [
        "clickUpTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.clickUpTrigger": 1
      },
      "business_value": "Automates receive processes using clickUpTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.704572"
    },
    {
      "original_filename": "ai_automated_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparsers.json",
      "workflow_name": "Automated Resume Review System Using OpenAI + Google Sheets",
      "suggested_filename": "ai_automated_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparsers.json",
      "category": "AI",
      "business_function": "automated",
      "key_integrations": [
        "formTrigger",
        "merge",
        "@n8n/langchain.outputParserStructured",
        "googleSheets",
        "@n8n/langchain.informationExtractor",
        "@n8n/langchain.chainLlm",
        "stickyNote",
        "googleDrive",
        "extractFromFile",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.googleSheets": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates automated processes using formTrigger, merge, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.704905"
    },
    {
      "original_filename": "ai_agentic_ai_process_n8nnodeslangchainmemorybufferwindow_telegram_2.json",
      "workflow_name": "Agentic Telegram AI bot with LangChain nodes and new tools",
      "suggested_filename": "ai_agentic_ai_process_n8nnodeslangchainmemorybufferwindow_telegram_2.json",
      "category": "AI",
      "business_function": "agentic",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "telegramTrigger",
        "stickyNote",
        "telegram",
        "telegramTool",
        "@n8n/langchain.toolHttpRequest",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.telegramTool": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates agentic processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow, telegramTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.705154"
    },
    {
      "original_filename": "ai_convert_read_splitinbatches_httprequest.json",
      "workflow_name": "ai_convert_read_splitinbatches_httprequest",
      "suggested_filename": "ai_convert_read_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "convert",
      "key_integrations": [
        "manualTrigger",
        "wait",
        "stickyNote",
        "set",
        "limit",
        "splitInBatches",
        "splitOut",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates convert processes using manualTrigger, wait, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.705446"
    },
    {
      "original_filename": "util_mcp_calendar_automate_n8nnodeslangchainmcp_googlecalendar.json",
      "workflow_name": "MCP_CALENDAR",
      "suggested_filename": "util_mcp_calendar_automate_n8nnodeslangchainmcp_googlecalendar.json",
      "category": "UTIL",
      "business_function": "mcp",
      "key_integrations": [
        "@n8n/langchain.mcpTrigger",
        "googleCalendarTool"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "@n8n/n8n-nodes-langchain.mcpTrigger": 1,
        "n8n-nodes-base.googleCalendarTool": 6
      },
      "business_value": "Automates mcp processes using @n8n/langchain.mcpTrigger, googleCalendarTool",
      "analysis_timestamp": "2025-06-01T16:06:48.705687"
    },
    {
      "original_filename": "ai_play_automate_telegram_telegram_2.json",
      "workflow_name": "Play with Spotify from Telegram",
      "suggested_filename": "ai_play_automate_telegram_telegram_2.json",
      "category": "AI",
      "business_function": "play",
      "key_integrations": [
        "telegramTrigger",
        "@n8n/langchain.openAi",
        "spotify",
        "stickyNote",
        "merge",
        "if",
        "set",
        "telegram"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.spotify": 5,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates play processes using telegramTrigger, @n8n/langchain.openAi, spotify",
      "analysis_timestamp": "2025-06-01T16:06:48.705948"
    },
    {
      "original_filename": "util_587_workflow_587_automate_emailreadimap.json",
      "workflow_name": "util_587_workflow_587_automate_emailreadimap",
      "suggested_filename": "util_587_workflow_587_automate_emailreadimap.json",
      "category": "UTIL",
      "business_function": "587",
      "key_integrations": [
        "emailReadImap"
      ],
      "trigger_type": "email",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1
      },
      "business_value": "Automates 587 processes using emailReadImap",
      "analysis_timestamp": "2025-06-01T16:06:48.706044"
    },
    {
      "original_filename": "util_slack_validate_crypto_stopanderror.json",
      "workflow_name": "Slack Webhook - Verify Signature",
      "suggested_filename": "util_slack_validate_crypto_stopanderror.json",
      "category": "UTIL",
      "business_function": "slack",
      "key_integrations": [
        "code",
        "crypto",
        "if",
        "stopAndError",
        "executeWorkflowTrigger",
        "stickyNote",
        "set",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.crypto": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stopAndError": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates slack processes using code, crypto, if",
      "analysis_timestamp": "2025-06-01T16:06:48.706278"
    },
    {
      "original_filename": "ai_helpdesk_automate_n8nnodeslangchainvectorstore_n8nnodeslangchainmemorypostgre_1.json",
      "workflow_name": "HR & IT Helpdesk Chatbot with Audio Transcription",
      "suggested_filename": "ai_helpdesk_automate_n8nnodeslangchainvectorstore_n8nnodeslangchainmemorypostgre_1.json",
      "category": "AI",
      "business_function": "helpdesk",
      "key_integrations": [
        "stickyNote",
        "manualTrigger",
        "httpRequest",
        "extractFromFile",
        "@n8n/langchain.vectorStorePGVector",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "telegramTrigger",
        "switch"
      ],
      "trigger_type": "chat",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePGVector": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.telegram": 3,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.memoryPostgresChat": 1,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates helpdesk processes using stickyNote, manualTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.706604"
    },
    {
      "original_filename": "ai_receive_ai_process_taiga.json",
      "workflow_name": "Receive updates when an event occurs in Taiga",
      "suggested_filename": "ai_receive_ai_process_taiga.json",
      "category": "AI",
      "business_function": "receive",
      "key_integrations": [
        "taigaTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.taigaTrigger": 1
      },
      "business_value": "Automates receive processes using taigaTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.706795"
    },
    {
      "original_filename": "ai_2683_workflow_2683_automate_httprequest_googlecalendar_webhook.json",
      "workflow_name": "ai_2683_workflow_2683_automate_httprequest_googlecalendar_webhook",
      "suggested_filename": "ai_2683_workflow_2683_automate_httprequest_googlecalendar_webhook.json",
      "category": "AI",
      "business_function": "2683",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolWorkflow",
        "gmailTool",
        "executeWorkflowTrigger",
        "splitOut",
        "airtable",
        "googleCalendarTool",
        "webhook",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.gmailTool": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.googleCalendarTool": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 8
      },
      "business_value": "Automates 2683 processes using @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi, @n8n/langchain.toolWorkflow",
      "analysis_timestamp": "2025-06-01T16:06:48.707078"
    },
    {
      "original_filename": "comm_certificate_read_uproc_functionitem.json",
      "workflow_name": "Get SSL Certificate",
      "suggested_filename": "comm_certificate_read_uproc_functionitem.json",
      "category": "COMM",
      "business_function": "certificate",
      "key_integrations": [
        "manualTrigger",
        "functionItem",
        "uproc",
        "telegram",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.uproc": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates certificate processes using manualTrigger, functionItem, uproc",
      "analysis_timestamp": "2025-06-01T16:06:48.707195"
    },
    {
      "original_filename": "ai_automate_extract_httprequest_manual.json",
      "workflow_name": "Automate PDF Image Extraction & Analysis with GPT-4o and Google Drive",
      "suggested_filename": "ai_automate_extract_httprequest_manual.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "googleDrive",
        "set",
        "@n8n/langchain.openAi",
        "httpRequest",
        "splitOut",
        "code",
        "convertToFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.convertToFile": 1
      },
      "business_value": "Automates automate processes using manualTrigger, stickyNote, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.707481"
    },
    {
      "original_filename": "ai_posting_ai_process_airtable_n8nnodeslangchainoutputparserstructured_2.json",
      "workflow_name": "HR Job Posting and Evaluation with AI",
      "suggested_filename": "ai_posting_ai_process_airtable_n8nnodeslangchainoutputparserstructured_2.json",
      "category": "AI",
      "business_function": "posting",
      "key_integrations": [
        "formTrigger",
        "airtable",
        "googleDrive",
        "set",
        "stickyNote",
        "extractFromFile",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "airtableTool",
        "@n8n/langchain.outputParserStructured"
      ],
      "trigger_type": "chat",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.airtable": 6,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.airtableTool": 6,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.openAi": 4,
        "n8n-nodes-base.form": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.googleCalendarTool": 1
      },
      "business_value": "Automates posting processes using formTrigger, airtable, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.708258"
    },
    {
      "original_filename": "biz_1793_workflow_1793_automate_itemlists_renamekeys.json",
      "workflow_name": "biz_1793_workflow_1793_automate_itemlists_renamekeys",
      "suggested_filename": "biz_1793_workflow_1793_automate_itemlists_renamekeys.json",
      "category": "BIZ",
      "business_function": "1793",
      "key_integrations": [
        "manualTrigger",
        "salesforce",
        "merge",
        "if",
        "itemLists",
        "renameKeys",
        "set",
        "microsoftExcel"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.salesforce": 3,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.renameKeys": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.microsoftExcel": 1
      },
      "business_value": "Automates 1793 processes using manualTrigger, salesforce, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.708609"
    },
    {
      "original_filename": "util_837_workflow_837_automate_htmlextract_emailsend_cron.json",
      "workflow_name": "util_837_workflow_837_automate_htmlextract_emailsend_cron",
      "suggested_filename": "util_837_workflow_837_automate_htmlextract_emailsend_cron.json",
      "category": "UTIL",
      "business_function": "837",
      "key_integrations": [
        "htmlExtract",
        "cron",
        "functionItem",
        "httpRequest",
        "writeBinaryFile",
        "moveBinaryData",
        "if",
        "executeCommand",
        "readBinaryFile",
        "emailSend"
      ],
      "trigger_type": "cron",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "n8n-nodes-base.htmlExtract": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.functionItem": 7,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.writeBinaryFile": 2,
        "n8n-nodes-base.moveBinaryData": 3,
        "n8n-nodes-base.if": 5,
        "n8n-nodes-base.executeCommand": 2,
        "n8n-nodes-base.readBinaryFile": 1,
        "n8n-nodes-base.emailSend": 2
      },
      "business_value": "Automates 837 processes using htmlExtract, cron, functionItem",
      "analysis_timestamp": "2025-06-01T16:06:48.708944"
    },
    {
      "original_filename": "util_179_workflow_179_automate_spreadsheetfile_typeform.json",
      "workflow_name": "util_179_workflow_179_automate_spreadsheetfile_typeform",
      "suggested_filename": "util_179_workflow_179_automate_spreadsheetfile_typeform.json",
      "category": "UTIL",
      "business_function": "179",
      "key_integrations": [
        "typeformTrigger",
        "nextCloud",
        "spreadsheetFile",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.nextCloud": 2,
        "n8n-nodes-base.spreadsheetFile": 2,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates 179 processes using typeformTrigger, nextCloud, spreadsheetFile",
      "analysis_timestamp": "2025-06-01T16:06:48.709130"
    },
    {
      "original_filename": "data_automatically_transfer_spreadsheetfile_postgres.json",
      "workflow_name": "How to automatically import CSV files into postgres",
      "suggested_filename": "data_automatically_transfer_spreadsheetfile_postgres.json",
      "category": "DATA",
      "business_function": "automatically",
      "key_integrations": [
        "manualTrigger",
        "readBinaryFile",
        "spreadsheetFile",
        "postgres"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readBinaryFile": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.postgres": 1
      },
      "business_value": "Automates automatically processes using manualTrigger, readBinaryFile, spreadsheetFile",
      "analysis_timestamp": "2025-06-01T16:06:48.709399"
    },
    {
      "original_filename": "data_1753_workflow_1753_automate_googlesheets_mysql_cron.json",
      "workflow_name": "data_1753_workflow_1753_automate_googlesheets_mysql_cron",
      "suggested_filename": "data_1753_workflow_1753_automate_googlesheets_mysql_cron.json",
      "category": "DATA",
      "business_function": "1753",
      "key_integrations": [
        "cron",
        "mySql",
        "googleSheets"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.mySql": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates 1753 processes using cron, mySql, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.709532"
    },
    {
      "original_filename": "util_3054_workflow_3054_automate_httprequest_manual.json",
      "workflow_name": "util_3054_workflow_3054_automate_httprequest_manual",
      "suggested_filename": "util_3054_workflow_3054_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "3054",
      "key_integrations": [
        "manualTrigger",
        "wait",
        "set",
        "stickyNote",
        "if",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.httpRequest": 2
      },
      "business_value": "Automates 3054 processes using manualTrigger, wait, set",
      "analysis_timestamp": "2025-06-01T16:06:48.709811"
    },
    {
      "original_filename": "comm_1770_workflow_1770_automate_hubspot_mailchimp_cron.json",
      "workflow_name": "comm_1770_workflow_1770_automate_hubspot_mailchimp_cron",
      "suggested_filename": "comm_1770_workflow_1770_automate_hubspot_mailchimp_cron.json",
      "category": "COMM",
      "business_function": "1770",
      "key_integrations": [
        "cron",
        "hubspot",
        "mailchimp"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.hubspot": 1,
        "n8n-nodes-base.mailchimp": 1
      },
      "business_value": "Automates 1770 processes using cron, hubspot, mailchimp",
      "analysis_timestamp": "2025-06-01T16:06:48.709942"
    },
    {
      "original_filename": "ai_piepdrive_automate_pipedrive_pipedrive_2.json",
      "workflow_name": "piepdrive-test",
      "suggested_filename": "ai_piepdrive_automate_pipedrive_pipedrive_2.json",
      "category": "AI",
      "business_function": "piepdrive",
      "key_integrations": [
        "pipedriveTrigger",
        "stickyNote",
        "pipedrive",
        "code",
        "httpRequest",
        "markdown",
        "slack",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.pipedriveTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.pipedrive": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.slack": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates piepdrive processes using pipedriveTrigger, stickyNote, pipedrive",
      "analysis_timestamp": "2025-06-01T16:06:48.710252"
    },
    {
      "original_filename": "ai_create_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstru.json",
      "workflow_name": "Create AI-Ready Vector Datasets for LLMs with Bright Data, Gemini & Pinecone",
      "suggested_filename": "ai_create_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstru.json",
      "category": "AI",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.vectorStorePinecone",
        "@n8n/langchain.embeddingsGoogleGemini",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.outputParserStructured",
        "stickyNote",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 1,
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 3,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 3,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1
      },
      "business_value": "Automates create processes using manualTrigger, @n8n/langchain.agent, @n8n/langchain.vectorStorePinecone",
      "analysis_timestamp": "2025-06-01T16:06:48.710607"
    },
    {
      "original_filename": "ai_2154_workflow_2154_automate_linear_slack.json",
      "workflow_name": "ai_2154_workflow_2154_automate_linear_slack",
      "suggested_filename": "ai_2154_workflow_2154_automate_linear_slack.json",
      "category": "AI",
      "business_function": "2154",
      "key_integrations": [
        "linearTrigger",
        "filter",
        "stickyNote",
        "linear",
        "httpRequest",
        "set",
        "if",
        "slack",
        "merge",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.linearTrigger": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.linear": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates 2154 processes using linearTrigger, filter, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.710988"
    },
    {
      "original_filename": "ai_3305_workflow_3305_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_3305_workflow_3305_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_3305_workflow_3305_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "3305",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.agent",
        "stickyNote",
        "@n8n/langchain.toolWorkflow",
        "googleBigQuery",
        "executeWorkflowTrigger",
        "code",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.googleBigQuery": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1
      },
      "business_value": "Automates 3305 processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.agent, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.711283"
    },
    {
      "original_filename": "util_receive_update_mautic_twilio.json",
      "workflow_name": "Receive updates when a form is submitted in Mautic, and send a confirmation SMS",
      "suggested_filename": "util_receive_update_mautic_twilio.json",
      "category": "UTIL",
      "business_function": "receive",
      "key_integrations": [
        "mauticTrigger",
        "twilio"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.mauticTrigger": 1,
        "n8n-nodes-base.twilio": 1
      },
      "business_value": "Automates receive processes using mauticTrigger, twilio",
      "analysis_timestamp": "2025-06-01T16:06:48.711404"
    },
    {
      "original_filename": "ai_3561_workflow_3561_automate_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "workflow_name": "ai_3561_workflow_3561_automate_splitinbatches_n8nnodeslangchainchainllm_cron",
      "suggested_filename": "ai_3561_workflow_3561_automate_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "3561",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "googleSheets",
        "@n8n/langchain.lmChatAnthropic",
        "@n8n/langchain.chainLlm",
        "httpRequest",
        "set",
        "wait",
        "if",
        "scheduleTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.googleSheets": 3,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1
      },
      "business_value": "Automates 3561 processes using manualTrigger, stickyNote, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.711793"
    },
    {
      "original_filename": "ai_perplexity_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserst.json",
      "workflow_name": "🔍🛠️Perplexity Researcher to HTML Web Page",
      "suggested_filename": "ai_perplexity_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserst.json",
      "category": "AI",
      "business_function": "perplexity",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "webhook",
        "respondToWebhook",
        "telegram",
        "@n8n/langchain.chainLlm",
        "if",
        "set",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 47,
      "complexity": "High",
      "total_nodes": 47,
      "node_types": {
        "n8n-nodes-base.stickyNote": 9,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 5,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.telegram": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "n8n-nodes-base.noOp": 6,
        "n8n-nodes-base.if": 6,
        "n8n-nodes-base.set": 8,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 3,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates perplexity processes using stickyNote, @n8n/langchain.lmChatOpenAi, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.712418"
    },
    {
      "original_filename": "comm_automate_report_gmail_googleanalytics_cron.json",
      "workflow_name": "Automate Google Analytics Reporting - AlexK1919",
      "suggested_filename": "comm_automate_report_gmail_googleanalytics_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "googleAnalytics",
        "code",
        "set",
        "gmail",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.googleAnalytics": 6,
        "n8n-nodes-base.code": 9,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates automate processes using manualTrigger, stickyNote, googleAnalytics",
      "analysis_timestamp": "2025-06-01T16:06:48.712930"
    },
    {
      "original_filename": "ai_3050_workflow_3050_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_3050_workflow_3050_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_3050_workflow_3050_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "3050",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolCalculator",
        "code",
        "executeWorkflowTrigger",
        "@n8n/langchain.toolWorkflow",
        "aggregate",
        "stickyNote",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 30,
      "complexity": "High",
      "total_nodes": 30,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.stickyNote": 16,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.googleSheetsTool": 3,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates 3050 processes using @n8n/langchain.chatTrigger, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.713387"
    },
    {
      "original_filename": "ai_hugging_automate_splitinbatches_httprequest_cron_2.json",
      "workflow_name": "Hugging Face to Notion",
      "suggested_filename": "ai_hugging_automate_splitinbatches_httprequest_cron_2.json",
      "category": "AI",
      "business_function": "hugging",
      "key_integrations": [
        "scheduleTrigger",
        "if",
        "splitInBatches",
        "splitOut",
        "httpRequest",
        "html",
        "notion",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "cron",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.notion": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates hugging processes using scheduleTrigger, if, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.713757"
    },
    {
      "original_filename": "ai_forward_ai_process_gmail_telegram.json",
      "workflow_name": "Forward Filtered Gmail Notifications to Telegram Chat",
      "suggested_filename": "ai_forward_ai_process_gmail_telegram.json",
      "category": "AI",
      "business_function": "forward",
      "key_integrations": [
        "stickyNote",
        "gmailTrigger",
        "if",
        "telegram"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates forward processes using stickyNote, gmailTrigger, if",
      "analysis_timestamp": "2025-06-01T16:06:48.713918"
    },
    {
      "original_filename": "util_3281_workflow_3281_automate_httprequest_readwritefile.json",
      "workflow_name": "util_3281_workflow_3281_automate_httprequest_readwritefile",
      "suggested_filename": "util_3281_workflow_3281_automate_httprequest_readwritefile.json",
      "category": "UTIL",
      "business_function": "3281",
      "key_integrations": [
        "splitOut",
        "httpRequest",
        "readWriteFile",
        "manualTrigger",
        "code",
        "@custom-js/pdf-toolkit.mergePdfs"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.readWriteFile": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 1,
        "@custom-js/n8n-nodes-pdf-toolkit.mergePdfs": 1
      },
      "business_value": "Automates 3281 processes using splitOut, httpRequest, readWriteFile",
      "analysis_timestamp": "2025-06-01T16:06:48.714171"
    },
    {
      "original_filename": "comm_1225_workflow_1225_automate_hubspot_googleslides.json",
      "workflow_name": "comm_1225_workflow_1225_automate_hubspot_googleslides",
      "suggested_filename": "comm_1225_workflow_1225_automate_hubspot_googleslides.json",
      "category": "COMM",
      "business_function": "1225",
      "key_integrations": [
        "set",
        "switch",
        "if",
        "hubspot",
        "slack",
        "airtable",
        "googleSlides",
        "hubspotTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.hubspot": 3,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.googleSlides": 1,
        "n8n-nodes-base.hubspotTrigger": 1
      },
      "business_value": "Automates 1225 processes using set, switch, if",
      "analysis_timestamp": "2025-06-01T16:06:48.714419"
    },
    {
      "original_filename": "ops_restore_automate_manual_github.json",
      "workflow_name": "[OPS] Restore workflows from GitHub to n8n",
      "suggested_filename": "ops_restore_automate_manual_github.json",
      "category": "OPS",
      "business_function": "restore",
      "key_integrations": [
        "manualTrigger",
        "set",
        "stickyNote",
        "if",
        "github",
        "n8n",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.github": 2,
        "n8n-nodes-base.n8n": 2,
        "n8n-nodes-base.merge": 2
      },
      "business_value": "Automates restore processes using manualTrigger, set, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.714699"
    },
    {
      "original_filename": "ai_automated_ai_process_airtable_form.json",
      "workflow_name": "Automated Form Submission Data Storage in Airtable",
      "suggested_filename": "ai_automated_ai_process_airtable_form.json",
      "category": "AI",
      "business_function": "automated",
      "key_integrations": [
        "formTrigger",
        "airtable",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates automated processes using formTrigger, airtable, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.714949"
    },
    {
      "original_filename": "util_export_transfer_httprequest_manual.json",
      "workflow_name": "Export Zammad Objects Users, Roles, Groups and Organizations to Excel",
      "suggested_filename": "util_export_transfer_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "export",
      "key_integrations": [
        "manualTrigger",
        "set",
        "zammad",
        "httpRequest",
        "convertToFile",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.zammad": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.convertToFile": 4,
        "n8n-nodes-base.if": 4
      },
      "business_value": "Automates export processes using manualTrigger, set, zammad",
      "analysis_timestamp": "2025-06-01T16:06:48.715256"
    },
    {
      "original_filename": "ai_2039_workflow_2039_automate_pipedrive_gmail.json",
      "workflow_name": "ai_2039_workflow_2039_automate_pipedrive_gmail",
      "suggested_filename": "ai_2039_workflow_2039_automate_pipedrive_gmail.json",
      "category": "AI",
      "business_function": "2039",
      "key_integrations": [
        "pipedrive",
        "if",
        "openAi",
        "set",
        "code",
        "gmailTrigger",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.pipedrive": 3,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.gmailTrigger": 2,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 2039 processes using pipedrive, if, openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.715513"
    },
    {
      "original_filename": "ai_automatizacion_automate_n8nnodeslangchainmemorybufferwindow_twitter.json",
      "workflow_name": "Automatizacion X",
      "suggested_filename": "ai_automatizacion_automate_n8nnodeslangchainmemorybufferwindow_twitter.json",
      "category": "AI",
      "business_function": "automatizacion",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "twitterTool",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.twitterTool": 2,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates automatizacion processes using @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.715734"
    },
    {
      "original_filename": "biz_receive_update_chargebee.json",
      "workflow_name": "Receive updates for events in Chargebee",
      "suggested_filename": "biz_receive_update_chargebee.json",
      "category": "BIZ",
      "business_function": "receive",
      "key_integrations": [
        "chargebeeTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.chargebeeTrigger": 1
      },
      "business_value": "Automates receive processes using chargebeeTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.715856"
    },
    {
      "original_filename": "ai_airtable_ai_process_airtable_webhook_webhook_2.json",
      "workflow_name": "Get Airtable data in Obsidian Notes",
      "suggested_filename": "ai_airtable_ai_process_airtable_webhook_webhook_2.json",
      "category": "AI",
      "business_function": "airtable",
      "key_integrations": [
        "airtableTool",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.agent",
        "stickyNote",
        "respondToWebhook",
        "webhook"
      ],
      "trigger_type": "chat",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.airtableTool": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates airtable processes using airtableTool, @n8n/langchain.lmChatOpenAi, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.715972"
    },
    {
      "original_filename": "util_send_update_amqp_httprequest_cron.json",
      "workflow_name": "Send updates about the position of the ISS every minute to a topic in ActiveMQ",
      "suggested_filename": "util_send_update_amqp_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "send",
      "key_integrations": [
        "cron",
        "httpRequest",
        "set",
        "amqp"
      ],
      "trigger_type": "cron",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.amqp": 1
      },
      "business_value": "Automates send processes using cron, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.716074"
    },
    {
      "original_filename": "ai_nostr_ai_process_n8nnodeslangchainchainllm_gmail_cron.json",
      "workflow_name": "#️⃣Nostr #damus AI Powered Reporting + Gmail + Telegram",
      "suggested_filename": "ai_nostr_ai_process_n8nnodeslangchainchainllm_gmail_cron.json",
      "category": "AI",
      "business_function": "nostr",
      "key_integrations": [
        "manualTrigger",
        "markdown",
        "gmail",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatGoogleGemini",
        "aggregate",
        "stickyNote",
        "merge",
        "scheduleTrigger",
        "telegram"
      ],
      "trigger_type": "chat",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.markdown": 2,
        "n8n-nodes-base.gmail": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 3,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 3,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-nostrobots.nostrobotsread": 1
      },
      "business_value": "Automates nostr processes using manualTrigger, markdown, gmail",
      "analysis_timestamp": "2025-06-01T16:06:48.716380"
    },
    {
      "original_filename": "ai_3028_workflow_3028_automate_wordpress_n8nnodeslangchainchainllm.json",
      "workflow_name": "ai_3028_workflow_3028_automate_wordpress_n8nnodeslangchainchainllm",
      "suggested_filename": "ai_3028_workflow_3028_automate_wordpress_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "3028",
      "key_integrations": [
        "manualTrigger",
        "wordpress",
        "@n8n/langchain.chainLlm",
        "httpRequest",
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.wordpress": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 3028 processes using manualTrigger, wordpress, @n8n/langchain.chainLlm",
      "analysis_timestamp": "2025-06-01T16:06:48.716654"
    },
    {
      "original_filename": "ai_convert_ai_process_xml_httprequest.json",
      "workflow_name": "Convert the JSON data received from the CocktailDB API in XML",
      "suggested_filename": "ai_convert_ai_process_xml_httprequest.json",
      "category": "AI",
      "business_function": "convert",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "xml"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.xml": 1
      },
      "business_value": "Automates convert processes using manualTrigger, httpRequest, xml",
      "analysis_timestamp": "2025-06-01T16:06:48.716763"
    },
    {
      "original_filename": "comm_deepseek_automate_n8nnodeslangchainlmchatdeepseek_notion.json",
      "workflow_name": "DeepSeek v3.1",
      "suggested_filename": "comm_deepseek_automate_n8nnodeslangchainlmchatdeepseek_notion.json",
      "category": "COMM",
      "business_function": "deepseek",
      "key_integrations": [
        "notionTrigger",
        "@n8n/langchain.agent",
        "gmailTool",
        "wordpressTool",
        "mcp.mcpClientTool",
        "stickyNote",
        "set",
        "@n8n/langchain.lmChatDeepSeek"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.notionTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.gmailTool": 1,
        "n8n-nodes-base.wordpressTool": 1,
        "n8n-nodes-mcp.mcpClientTool": 2,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.lmChatDeepSeek": 1
      },
      "business_value": "Automates deepseek processes using notionTrigger, @n8n/langchain.agent, gmailTool",
      "analysis_timestamp": "2025-06-01T16:06:48.717004"
    },
    {
      "original_filename": "util_2500_workflow_2500_automate_elasticsearch_httprequest_cron.json",
      "workflow_name": "util_2500_workflow_2500_automate_elasticsearch_httprequest_cron",
      "suggested_filename": "util_2500_workflow_2500_automate_elasticsearch_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "2500",
      "key_integrations": [
        "cron",
        "elasticsearch",
        "if",
        "httpRequest"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.elasticsearch": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 2500 processes using cron, elasticsearch, if",
      "analysis_timestamp": "2025-06-01T16:06:48.717137"
    },
    {
      "original_filename": "ai_3832_workflow_3832_automate_n8nnodeslangchainchat_executeworkflow.json",
      "workflow_name": "ai_3832_workflow_3832_automate_n8nnodeslangchainchat_executeworkflow",
      "suggested_filename": "ai_3832_workflow_3832_automate_n8nnodeslangchainchat_executeworkflow.json",
      "category": "AI",
      "business_function": "3832",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.informationExtractor",
        "@n8n/langchain.lmChatOpenAi",
        "code",
        "redis",
        "set",
        "if",
        "@n8n/langchain.chatTrigger",
        "wait",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 30,
      "complexity": "High",
      "total_nodes": 30,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.noOp": 3,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.redis": 11,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.if": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.wait": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates 3832 processes using manualTrigger, @n8n/langchain.informationExtractor, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.717521"
    },
    {
      "original_filename": "comm_monitor_monitor_cron_httprequest_cron.json",
      "workflow_name": "Monitor USDT ERC-20 Wallet Balance with Etherscan and Telegram Notifications",
      "suggested_filename": "comm_monitor_monitor_cron_httprequest_cron.json",
      "category": "COMM",
      "business_function": "monitor",
      "key_integrations": [
        "if",
        "telegram",
        "set",
        "code",
        "stickyNote",
        "cron",
        "httpRequest"
      ],
      "trigger_type": "cron",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates monitor processes using if, telegram, set",
      "analysis_timestamp": "2025-06-01T16:06:48.717688"
    },
    {
      "original_filename": "ops_restore_automate_httprequest_manual_2.json",
      "workflow_name": "Restore your credentials from GitHub",
      "suggested_filename": "ops_restore_automate_httprequest_manual_2.json",
      "category": "OPS",
      "business_function": "restore",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "github",
        "extractFromFile",
        "n8n",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.github": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates restore processes using manualTrigger, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:48.717957"
    },
    {
      "original_filename": "util_create_create_contact_vero_manual.json",
      "workflow_name": "Create a user profile in Vero",
      "suggested_filename": "util_create_create_contact_vero_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "vero"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.vero": 1
      },
      "business_value": "Automates create processes using manualTrigger, vero",
      "analysis_timestamp": "2025-06-01T16:06:48.718073"
    },
    {
      "original_filename": "util_google_extract_httprequest_webhook_webhook.json",
      "workflow_name": "Google Page Entity Extraction Template",
      "suggested_filename": "util_google_extract_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "google",
      "key_integrations": [
        "respondToWebhook",
        "httpRequest",
        "stickyNote",
        "webhook",
        "code"
      ],
      "trigger_type": "webhook",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates google processes using respondToWebhook, httpRequest, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.718283"
    },
    {
      "original_filename": "comm_2106_workflow_2106_automate_gmail_clearbit.json",
      "workflow_name": "comm_2106_workflow_2106_automate_gmail_clearbit",
      "suggested_filename": "comm_2106_workflow_2106_automate_gmail_clearbit.json",
      "category": "COMM",
      "business_function": "2106",
      "key_integrations": [
        "formTrigger",
        "clearbit",
        "if",
        "gmail",
        "stickyNote",
        "set",
        "filter"
      ],
      "trigger_type": "manual",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.clearbit": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates 2106 processes using formTrigger, clearbit, if",
      "analysis_timestamp": "2025-06-01T16:06:48.718637"
    },
    {
      "original_filename": "util_507_workflow_507_automate_awsses_manual.json",
      "workflow_name": "util_507_workflow_507_automate_awsses_manual",
      "suggested_filename": "util_507_workflow_507_automate_awsses_manual.json",
      "category": "UTIL",
      "business_function": "507",
      "key_integrations": [
        "manualTrigger",
        "awsSes"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.awsSes": 1
      },
      "business_value": "Automates 507 processes using manualTrigger, awsSes",
      "analysis_timestamp": "2025-06-01T16:06:48.718761"
    },
    {
      "original_filename": "util_send_automate_mocean_manual.json",
      "workflow_name": "Send an SMS using the Mocean node",
      "suggested_filename": "util_send_automate_mocean_manual.json",
      "category": "UTIL",
      "business_function": "send",
      "key_integrations": [
        "manualTrigger",
        "mocean"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.mocean": 1
      },
      "business_value": "Automates send processes using manualTrigger, mocean",
      "analysis_timestamp": "2025-06-01T16:06:48.718852"
    },
    {
      "original_filename": "data_template_automate_webhook_airtable_webhook.json",
      "workflow_name": "TEMPLATE - Multi Methods API Endpoint",
      "suggested_filename": "data_template_automate_webhook_airtable_webhook.json",
      "category": "DATA",
      "business_function": "template",
      "key_integrations": [
        "respondToWebhook",
        "stickyNote",
        "airtable",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.respondToWebhook": 5,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.airtable": 6,
        "n8n-nodes-base.webhook": 2
      },
      "business_value": "Automates template processes using respondToWebhook, stickyNote, airtable",
      "analysis_timestamp": "2025-06-01T16:06:48.719101"
    },
    {
      "original_filename": "util_1435_workflow_1435_automate_spreadsheetfile_respondtowebhook_webhook.json",
      "workflow_name": "util_1435_workflow_1435_automate_spreadsheetfile_respondtowebhook_webhook",
      "suggested_filename": "util_1435_workflow_1435_automate_spreadsheetfile_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "1435",
      "key_integrations": [
        "webhook",
        "itemLists",
        "spreadsheetFile",
        "respondToWebhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.respondToWebhook": 1
      },
      "business_value": "Automates 1435 processes using webhook, itemLists, spreadsheetFile",
      "analysis_timestamp": "2025-06-01T16:06:48.719217"
    },
    {
      "original_filename": "ai_focused_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr_2.json",
      "workflow_name": "HR-focused automation pipeline with AI",
      "suggested_filename": "ai_focused_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr_2.json",
      "category": "AI",
      "business_function": "focused",
      "key_integrations": [
        "formTrigger",
        "extractFromFile",
        "@n8n/langchain.informationExtractor",
        "@n8n/langchain.chainSummarization",
        "merge",
        "set",
        "googleSheets",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.chainLlm",
        "googleDrive"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 2,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleSheets": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.stickyNote": 6
      },
      "business_value": "Automates focused processes using formTrigger, extractFromFile, @n8n/langchain.informationExtractor",
      "analysis_timestamp": "2025-06-01T16:06:48.719561"
    },
    {
      "original_filename": "ai_analyze_analyze_cortex_manual.json",
      "workflow_name": "Analyze a URL and get the job details using the Cortex node",
      "suggested_filename": "ai_analyze_analyze_cortex_manual.json",
      "category": "AI",
      "business_function": "analyze",
      "key_integrations": [
        "manualTrigger",
        "cortex"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.cortex": 2
      },
      "business_value": "Automates analyze processes using manualTrigger, cortex",
      "analysis_timestamp": "2025-06-01T16:06:48.719670"
    },
    {
      "original_filename": "ai_discord_ai_process_webhook_openai_webhook_1.json",
      "workflow_name": "Discord AI bot",
      "suggested_filename": "ai_discord_ai_process_webhook_openai_webhook_1.json",
      "category": "AI",
      "business_function": "discord",
      "key_integrations": [
        "manualTrigger",
        "webhook",
        "openAi",
        "switch",
        "set",
        "discord"
      ],
      "trigger_type": "webhook",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.discord": 3
      },
      "business_value": "Automates discord processes using manualTrigger, webhook, openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.719781"
    },
    {
      "original_filename": "ai_remove_ai_process_extractfromfile_googledrive.json",
      "workflow_name": "ai_remove_ai_process_extractfromfile_googledrive",
      "suggested_filename": "ai_remove_ai_process_extractfromfile_googledrive.json",
      "category": "AI",
      "business_function": "remove",
      "key_integrations": [
        "googleDriveTrigger",
        "googleDrive",
        "extractFromFile",
        "@n8n/langchain.openAi",
        "merge",
        "splitOut",
        "code",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates remove processes using googleDriveTrigger, googleDrive, extractFromFile",
      "analysis_timestamp": "2025-06-01T16:06:48.720028"
    },
    {
      "original_filename": "util_2053_workflow_2053_automate_httprequest_schedule_cron.json",
      "workflow_name": "util_2053_workflow_2053_automate_httprequest_schedule_cron",
      "suggested_filename": "util_2053_workflow_2053_automate_httprequest_schedule_cron.json",
      "category": "UTIL",
      "business_function": "2053",
      "key_integrations": [
        "splitOut",
        "set",
        "filter",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "aggregate"
      ],
      "trigger_type": "cron",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.aggregate": 1
      },
      "business_value": "Automates 2053 processes using splitOut, set, filter",
      "analysis_timestamp": "2025-06-01T16:06:48.720275"
    },
    {
      "original_filename": "ai_powered_ai_process_httprequest_microsoftoutlook_webhook.json",
      "workflow_name": "ai_powered_ai_process_httprequest_microsoftoutlook_webhook",
      "suggested_filename": "ai_powered_ai_process_httprequest_microsoftoutlook_webhook.json",
      "category": "AI",
      "business_function": "powered",
      "key_integrations": [
        "stickyNote",
        "code",
        "set",
        "erpNext",
        "if",
        "@n8n/langchain.lmChatGoogleGemini",
        "httpRequest",
        "webhook",
        "switch",
        "extractFromFile"
      ],
      "trigger_type": "chat",
      "complexity_score": 39,
      "complexity": "High",
      "total_nodes": 39,
      "node_types": {
        "n8n-nodes-base.stickyNote": 16,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.erpNext": 3,
        "n8n-nodes-base.if": 3,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.extractFromFile": 2,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.microsoftOutlook": 1,
        "n8n-nodes-base.whatsApp": 1
      },
      "business_value": "Automates powered processes using stickyNote, code, set",
      "analysis_timestamp": "2025-06-01T16:06:48.720707"
    },
    {
      "original_filename": "ai_3610_workflow_3610_automate_n8nnodeslangchainchainllm_gmail.json",
      "workflow_name": "ai_3610_workflow_3610_automate_n8nnodeslangchainchainllm_gmail",
      "suggested_filename": "ai_3610_workflow_3610_automate_n8nnodeslangchainchainllm_gmail.json",
      "category": "AI",
      "business_function": "3610",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "formTrigger",
        "wait",
        "if",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatOpenAi",
        "gmail",
        "filter",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates 3610 processes using stickyNote, httpRequest, formTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.721073"
    },
    {
      "original_filename": "biz_property_automate_spreadsheetfile_hubspot_cron.json",
      "workflow_name": "Property Lead Contact Enrichment from CRM",
      "suggested_filename": "biz_property_automate_spreadsheetfile_hubspot_cron.json",
      "category": "BIZ",
      "business_function": "property",
      "key_integrations": [
        "manualTrigger",
        "scheduleTrigger",
        "httpRequest",
        "set",
        "code",
        "spreadsheetFile",
        "hubspot",
        "emailSend",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.hubspot": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates property processes using manualTrigger, scheduleTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.721376"
    },
    {
      "original_filename": "ai_generate_generate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "workflow_name": "Generate SQL queries from schema only - AI-powered",
      "suggested_filename": "ai_generate_generate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "category": "AI",
      "business_function": "generate",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "mySql",
        "set",
        "convertToFile",
        "readWriteFile",
        "extractFromFile",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.mySql": 3,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.readWriteFile": 2,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates generate processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow, mySql",
      "analysis_timestamp": "2025-06-01T16:06:48.721754"
    },
    {
      "original_filename": "util_read_read_splitinbatches_manual.json",
      "workflow_name": "Read RSS feed from two different sources",
      "suggested_filename": "util_read_read_splitinbatches_manual.json",
      "category": "UTIL",
      "business_function": "read",
      "key_integrations": [
        "rssFeedRead",
        "manualTrigger",
        "code",
        "splitInBatches"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.rssFeedRead": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.splitInBatches": 1
      },
      "business_value": "Automates read processes using rssFeedRead, manualTrigger, code",
      "analysis_timestamp": "2025-06-01T16:06:48.722010"
    },
    {
      "original_filename": "ai_testing_automate_n8nnodeslangchainchainllm_datetime_1.json",
      "workflow_name": "Testing Mulitple Local LLM with LM Studio",
      "suggested_filename": "ai_testing_automate_n8nnodeslangchainchainllm_datetime_1.json",
      "category": "AI",
      "business_function": "testing",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "@n8n/langchain.chatTrigger",
        "dateTime",
        "@n8n/langchain.lmChatOpenAi",
        "code",
        "googleSheets",
        "set",
        "splitOut",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.dateTime": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates testing processes using stickyNote, httpRequest, @n8n/langchain.chatTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.722464"
    },
    {
      "original_filename": "util_2471_workflow_2471_automate_httprequest_webhook_webhook.json",
      "workflow_name": "util_2471_workflow_2471_automate_httprequest_webhook_webhook",
      "suggested_filename": "util_2471_workflow_2471_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "2471",
      "key_integrations": [
        "httpRequest",
        "respondToWebhook",
        "stickyNote",
        "set",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 2471 processes using httpRequest, respondToWebhook, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.722770"
    },
    {
      "original_filename": "ai_template_automate_splitinbatches_n8nnodeslangchainchat.json",
      "workflow_name": "template-demo-chatgpt-image-1-with-drive-and-sheet copy",
      "suggested_filename": "ai_template_automate_splitinbatches_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "template",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "googleDrive",
        "splitOut",
        "convertToFile",
        "splitInBatches",
        "set",
        "googleSheets",
        "@n8n/langchain.chatTrigger",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.googleSheets": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates template processes using manualTrigger, httpRequest, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.723095"
    },
    {
      "original_filename": "comm_1205_workflow_1205_automate_shopify_telegram.json",
      "workflow_name": "comm_1205_workflow_1205_automate_shopify_telegram",
      "suggested_filename": "comm_1205_workflow_1205_automate_shopify_telegram.json",
      "category": "COMM",
      "business_function": "1205",
      "key_integrations": [
        "twitter",
        "telegram",
        "shopifyTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.shopifyTrigger": 1
      },
      "business_value": "Automates 1205 processes using twitter, telegram, shopifyTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.723213"
    },
    {
      "original_filename": "data_n8n_mysql_purge_history_greater_than_10_days_automate_cron_manual_cron.json",
      "workflow_name": "n8n_mysql_purge_history_greater_than_10_days",
      "suggested_filename": "data_n8n_mysql_purge_history_greater_than_10_days_automate_cron_manual_cron.json",
      "category": "DATA",
      "business_function": "n8n",
      "key_integrations": [
        "manualTrigger",
        "mySql",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.mySql": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates n8n processes using manualTrigger, mySql, cron",
      "analysis_timestamp": "2025-06-01T16:06:48.723396"
    },
    {
      "original_filename": "ai_query_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "workflow_name": "ai_query_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat",
      "suggested_filename": "ai_query_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "query",
      "key_integrations": [
        "manualTrigger",
        "set",
        "stickyNote",
        "code",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.toolCode",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.agent",
        "n8n"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolCode": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.n8n": 1
      },
      "business_value": "Automates query processes using manualTrigger, set, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.723656"
    },
    {
      "original_filename": "data_current_read_openweathermap_manual.json",
      "workflow_name": "Get the current weather data for a city",
      "suggested_filename": "data_current_read_openweathermap_manual.json",
      "category": "DATA",
      "business_function": "current",
      "key_integrations": [
        "manualTrigger",
        "openWeatherMap"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.openWeatherMap": 1
      },
      "business_value": "Automates current processes using manualTrigger, openWeatherMap",
      "analysis_timestamp": "2025-06-01T16:06:48.723868"
    },
    {
      "original_filename": "comm_27_workflow_27_automate_telegram_telegram.json",
      "workflow_name": "comm_27_workflow_27_automate_telegram_telegram",
      "suggested_filename": "comm_27_workflow_27_automate_telegram_telegram.json",
      "category": "COMM",
      "business_function": "27",
      "key_integrations": [
        "telegramTrigger",
        "telegram",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 27 processes using telegramTrigger, telegram, if",
      "analysis_timestamp": "2025-06-01T16:06:48.723986"
    },
    {
      "original_filename": "ai_youtube_ai_process_httprequest_schedule_cron.json",
      "workflow_name": "YouTube to Airtable Anonym",
      "suggested_filename": "ai_youtube_ai_process_httprequest_schedule_cron.json",
      "category": "AI",
      "business_function": "youtube",
      "key_integrations": [
        "httpRequest",
        "code",
        "scheduleTrigger",
        "airtable",
        "set",
        "@n8n/langchain.informationExtractor",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.set": 3,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates youtube processes using httpRequest, code, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.724323"
    },
    {
      "original_filename": "ai_telegram_automate_n8nnodeslangchaintextclassifier_httprequest_webhook_1.json",
      "workflow_name": "🤖 Telegram Messaging Agent for Text/Audio/Images",
      "suggested_filename": "ai_telegram_automate_n8nnodeslangchaintextclassifier_httprequest_webhook_1.json",
      "category": "AI",
      "business_function": "telegram",
      "key_integrations": [
        "if",
        "telegram",
        "stickyNote",
        "webhook",
        "httpRequest",
        "set",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.openAi",
        "convertToFile",
        "extractFromFile"
      ],
      "trigger_type": "webhook",
      "complexity_score": 39,
      "complexity": "High",
      "total_nodes": 39,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.telegram": 11,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.set": 4,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 2,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates telegram processes using if, telegram, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.724763"
    },
    {
      "original_filename": "util_1750_workflow_1750_automate_webhook_respondtowebhook_webhook.json",
      "workflow_name": "util_1750_workflow_1750_automate_webhook_respondtowebhook_webhook",
      "suggested_filename": "util_1750_workflow_1750_automate_webhook_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "1750",
      "key_integrations": [
        "webhook",
        "stickyNote",
        "respondToWebhook",
        "set"
      ],
      "trigger_type": "webhook",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 1750 processes using webhook, stickyNote, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:48.724888"
    },
    {
      "original_filename": "util_zammad_automate_zulip_manual_cron.json",
      "workflow_name": "Zammad Open Tickets",
      "suggested_filename": "util_zammad_automate_zulip_manual_cron.json",
      "category": "UTIL",
      "business_function": "zammad",
      "key_integrations": [
        "manualTrigger",
        "function",
        "zammad",
        "zulip",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.zammad": 1,
        "n8n-nodes-base.zulip": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates zammad processes using manualTrigger, function, zammad",
      "analysis_timestamp": "2025-06-01T16:06:48.725098"
    },
    {
      "original_filename": "util_shortener_automate_httprequest_manual.json",
      "workflow_name": "dub.co URL Shortener",
      "suggested_filename": "util_shortener_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "shortener",
      "key_integrations": [
        "stickyNote",
        "manualTrigger",
        "set",
        "httpRequest",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates shortener processes using stickyNote, manualTrigger, set",
      "analysis_timestamp": "2025-06-01T16:06:48.725367"
    },
    {
      "original_filename": "ai_chat_ai_process_executeworkflow_n8nnodeslangchainmanualchat.json",
      "workflow_name": "ai_chat_ai_process_executeworkflow_n8nnodeslangchainmanualchat",
      "suggested_filename": "ai_chat_ai_process_executeworkflow_n8nnodeslangchainmanualchat.json",
      "category": "AI",
      "business_function": "chat",
      "key_integrations": [
        "@n8n/langchain.manualChatTrigger",
        "executeWorkflowTrigger",
        "hackerNews",
        "set",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "code",
        "stickyNote",
        "@n8n/langchain.toolWorkflow"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "@n8n/n8n-nodes-langchain.manualChatTrigger": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.hackerNews": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1
      },
      "business_value": "Automates chat processes using @n8n/langchain.manualChatTrigger, executeWorkflowTrigger, hackerNews",
      "analysis_timestamp": "2025-06-01T16:06:48.725496"
    },
    {
      "original_filename": "ai_google_automate_splitinbatches_httprequest_cron.json",
      "workflow_name": "Google Site Index - sitemap.xml example",
      "suggested_filename": "ai_google_automate_splitinbatches_httprequest_cron.json",
      "category": "AI",
      "business_function": "google",
      "key_integrations": [
        "manualTrigger",
        "splitOut",
        "httpRequest",
        "splitInBatches",
        "wait",
        "scheduleTrigger",
        "stickyNote",
        "if",
        "xml",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.xml": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.sort": 1
      },
      "business_value": "Automates google processes using manualTrigger, splitOut, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.725766"
    },
    {
      "original_filename": "util_2017_workflow_2017_automate_webhook_webhook.json",
      "workflow_name": "util_2017_workflow_2017_automate_webhook_webhook",
      "suggested_filename": "util_2017_workflow_2017_automate_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "2017",
      "key_integrations": [
        "webhook",
        "set",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates 2017 processes using webhook, set, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.726015"
    },
    {
      "original_filename": "util_1069_workflow_1069_automate_mqtt_httprequest_cron.json",
      "workflow_name": "util_1069_workflow_1069_automate_mqtt_httprequest_cron",
      "suggested_filename": "util_1069_workflow_1069_automate_mqtt_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "1069",
      "key_integrations": [
        "cron",
        "httpRequest",
        "set",
        "mqtt"
      ],
      "trigger_type": "cron",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.mqtt": 1
      },
      "business_value": "Automates 1069 processes using cron, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.726127"
    },
    {
      "original_filename": "data_classifier_automate_httprequest_executeworkflow_1.json",
      "workflow_name": "[2/2] KNN classifier (lands dataset)",
      "suggested_filename": "data_classifier_automate_httprequest_executeworkflow_1.json",
      "category": "DATA",
      "business_function": "classifier",
      "key_integrations": [
        "httpRequest",
        "code",
        "set",
        "if",
        "stickyNote",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.executeWorkflowTrigger": 1
      },
      "business_value": "Automates classifier processes using httpRequest, code, set",
      "analysis_timestamp": "2025-06-01T16:06:48.726393"
    },
    {
      "original_filename": "util_3102_workflow_3102_automate_httprequest_manual.json",
      "workflow_name": "util_3102_workflow_3102_automate_httprequest_manual",
      "suggested_filename": "util_3102_workflow_3102_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "3102",
      "key_integrations": [
        "httpRequest",
        "manualTrigger",
        "googleDrive",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.httpRequest": 10,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates 3102 processes using httpRequest, manualTrigger, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.726717"
    },
    {
      "original_filename": "util_very_automate_manual_n8ntrainingcustomerdatastore.json",
      "workflow_name": "Very quick quickstart",
      "suggested_filename": "util_very_automate_manual_n8ntrainingcustomerdatastore.json",
      "category": "UTIL",
      "business_function": "very",
      "key_integrations": [
        "n8nTrainingCustomerDatastore",
        "stickyNote",
        "manualTrigger",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.n8nTrainingCustomerDatastore": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates very processes using n8nTrainingCustomerDatastore, stickyNote, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.726841"
    },
    {
      "original_filename": "comm_1381_workflow_1381_automate_httprequest_functionitem_webhook.json",
      "workflow_name": "comm_1381_workflow_1381_automate_httprequest_functionitem_webhook",
      "suggested_filename": "comm_1381_workflow_1381_automate_httprequest_functionitem_webhook.json",
      "category": "COMM",
      "business_function": "1381",
      "key_integrations": [
        "webhook",
        "functionItem",
        "httpRequest",
        "if",
        "telegram"
      ],
      "trigger_type": "webhook",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.telegram": 2
      },
      "business_value": "Automates 1381 processes using webhook, functionItem, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.727060"
    },
    {
      "original_filename": "comm_2278_workflow_2278_automate_gmail_httprequest_cron.json",
      "workflow_name": "comm_2278_workflow_2278_automate_gmail_httprequest_cron",
      "suggested_filename": "comm_2278_workflow_2278_automate_gmail_httprequest_cron.json",
      "category": "COMM",
      "business_function": "2278",
      "key_integrations": [
        "gmail",
        "httpRequest",
        "splitOut",
        "markdown",
        "scheduleTrigger",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 2278 processes using gmail, httpRequest, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.727286"
    },
    {
      "original_filename": "ai_training_ai_process_emailsend_linkedin_webhook.json",
      "workflow_name": "Training Feedback Automation",
      "suggested_filename": "ai_training_ai_process_emailsend_linkedin_webhook.json",
      "category": "AI",
      "business_function": "training",
      "key_integrations": [
        "airtableTrigger",
        "webhook",
        "switch",
        "linkedIn",
        "emailSend",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.airtableTrigger": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.linkedIn": 1,
        "n8n-nodes-base.emailSend": 3,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates training processes using airtableTrigger, webhook, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.727636"
    },
    {
      "original_filename": "ecommerce_updating_automate_onfleet_shopify.json",
      "workflow_name": "Updating Shopify tags on Onfleet events",
      "suggested_filename": "ecommerce_updating_automate_onfleet_shopify.json",
      "category": "ECOMMERCE",
      "business_function": "updating",
      "key_integrations": [
        "onfleetTrigger",
        "shopify"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.onfleetTrigger": 1,
        "n8n-nodes-base.shopify": 1
      },
      "business_value": "Automates updating processes using onfleetTrigger, shopify",
      "analysis_timestamp": "2025-06-01T16:06:48.727749"
    },
    {
      "original_filename": "util_auto_automate_schedule_n8n_cron.json",
      "workflow_name": "Auto - Resume Disabled Workflows",
      "suggested_filename": "util_auto_automate_schedule_n8n_cron.json",
      "category": "UTIL",
      "business_function": "auto",
      "key_integrations": [
        "manualTrigger",
        "n8n",
        "filter",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.n8n": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates auto processes using manualTrigger, n8n, filter",
      "analysis_timestamp": "2025-06-01T16:06:48.727931"
    },
    {
      "original_filename": "util_583_workflow_583_automate_rssfeedread_manual.json",
      "workflow_name": "util_583_workflow_583_automate_rssfeedread_manual",
      "suggested_filename": "util_583_workflow_583_automate_rssfeedread_manual.json",
      "category": "UTIL",
      "business_function": "583",
      "key_integrations": [
        "manualTrigger",
        "rssFeedRead"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.rssFeedRead": 1
      },
      "business_value": "Automates 583 processes using manualTrigger, rssFeedRead",
      "analysis_timestamp": "2025-06-01T16:06:48.728043"
    },
    {
      "original_filename": "ai_2328_workflow_2328_automate_n8nnodeslangchainoutputparserstructured_httpreque.json",
      "workflow_name": "ai_2328_workflow_2328_automate_n8nnodeslangchainoutputparserstructured_httpreque",
      "suggested_filename": "ai_2328_workflow_2328_automate_n8nnodeslangchainoutputparserstructured_httpreque.json",
      "category": "AI",
      "business_function": "2328",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "httpRequest",
        "googleDrive",
        "manualTrigger",
        "extractFromFile",
        "googleCalendar",
        "@n8n/langchain.outputParserStructured",
        "executeWorkflowTrigger",
        "set",
        "switch"
      ],
      "trigger_type": "chat",
      "complexity_score": 28,
      "complexity": "High",
      "total_nodes": 28,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.googleCalendar": 3,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.stickyNote": 9,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates 2328 processes using @n8n/langchain.lmChatOpenAi, httpRequest, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.728414"
    },
    {
      "original_filename": "util_2476_workflow_2476_automate_splitinbatches_httprequest.json",
      "workflow_name": "util_2476_workflow_2476_automate_splitinbatches_httprequest",
      "suggested_filename": "util_2476_workflow_2476_automate_splitinbatches_httprequest.json",
      "category": "UTIL",
      "business_function": "2476",
      "key_integrations": [
        "manualTrigger",
        "wait",
        "stickyNote",
        "set",
        "limit",
        "splitInBatches",
        "splitOut",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 2476 processes using manualTrigger, wait, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.728633"
    },
    {
      "original_filename": "ai_automated_automate_wordpress_httprequest_cron.json",
      "workflow_name": "Automated Content Generation & Publishing - Wordpress",
      "suggested_filename": "ai_automated_automate_wordpress_httprequest_cron.json",
      "category": "AI",
      "business_function": "automated",
      "key_integrations": [
        "wordpress",
        "code",
        "wait",
        "googleSheets",
        "stickyNote",
        "scheduleTrigger",
        "manualTrigger",
        "httpRequest",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "cron",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.scheduleTrigger": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates automated processes using wordpress, code, wait",
      "analysis_timestamp": "2025-06-01T16:06:48.728949"
    },
    {
      "original_filename": "ai_speed_automate_httprequest_bannerbear.json",
      "workflow_name": "ai_speed_automate_httprequest_bannerbear",
      "suggested_filename": "ai_speed_automate_httprequest_bannerbear.json",
      "category": "AI",
      "business_function": "speed",
      "key_integrations": [
        "formTrigger",
        "httpRequest",
        "bannerbear",
        "set",
        "stickyNote",
        "discord",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.bannerbear": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.discord": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates speed processes using formTrigger, httpRequest, bannerbear",
      "analysis_timestamp": "2025-06-01T16:06:48.729359"
    },
    {
      "original_filename": "ai_build_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_4.json",
      "workflow_name": "Build an OpenAI Assistant with Google Drive Integration",
      "suggested_filename": "ai_build_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_4.json",
      "category": "AI",
      "business_function": "build",
      "key_integrations": [
        "manualTrigger",
        "googleDrive",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.openAi",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.openAi": 4,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates build processes using manualTrigger, googleDrive, @n8n/langchain.chatTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.729615"
    },
    {
      "original_filename": "comm_error_automate_error_telegram.json",
      "workflow_name": "Error Handler send Telegram",
      "suggested_filename": "comm_error_automate_error_telegram.json",
      "category": "COMM",
      "business_function": "error",
      "key_integrations": [
        "telegram",
        "errorTrigger",
        "stickyNote",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.errorTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates error processes using telegram, errorTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.729831"
    },
    {
      "original_filename": "data_exponential_automate_splitinbatches_stopanderror.json",
      "workflow_name": "Exponential Backoff for Google APIs",
      "suggested_filename": "data_exponential_automate_splitinbatches_stopanderror.json",
      "category": "DATA",
      "business_function": "exponential",
      "key_integrations": [
        "manualTrigger",
        "code",
        "stopAndError",
        "splitInBatches",
        "googleSheets",
        "wait",
        "if",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stopAndError": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates exponential processes using manualTrigger, code, stopAndError",
      "analysis_timestamp": "2025-06-01T16:06:48.730072"
    },
    {
      "original_filename": "util_pipeline_read_circleci_manual.json",
      "workflow_name": "Get a pipeline in CircleCI",
      "suggested_filename": "util_pipeline_read_circleci_manual.json",
      "category": "UTIL",
      "business_function": "pipeline",
      "key_integrations": [
        "manualTrigger",
        "circleCi"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.circleCi": 1
      },
      "business_value": "Automates pipeline processes using manualTrigger, circleCi",
      "analysis_timestamp": "2025-06-01T16:06:48.730262"
    },
    {
      "original_filename": "util_2149_workflow_2149_automate_schedule_todoist_cron.json",
      "workflow_name": "util_2149_workflow_2149_automate_schedule_todoist_cron",
      "suggested_filename": "util_2149_workflow_2149_automate_schedule_todoist_cron.json",
      "category": "UTIL",
      "business_function": "2149",
      "key_integrations": [
        "stickyNote",
        "todoist",
        "code",
        "filter",
        "scheduleTrigger",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.todoist": 4,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.scheduleTrigger": 2,
        "n8n-nodes-base.if": 2
      },
      "business_value": "Automates 2149 processes using stickyNote, todoist, code",
      "analysis_timestamp": "2025-06-01T16:06:48.730557"
    },
    {
      "original_filename": "ai_agent_ai_process_n8nnodeslangchainmemorypostgreschat_httprequest_webhook_2.json",
      "workflow_name": "AI Agent to chat with you Search Console Data, using OpenAI and Postgres",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorypostgreschat_httprequest_webhook_2.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "@n8n/langchain.memoryPostgresChat",
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "stickyNote",
        "webhook",
        "respondToWebhook",
        "@n8n/langchain.toolWorkflow",
        "executeWorkflowTrigger",
        "switch",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 30,
      "complexity": "High",
      "total_nodes": 30,
      "node_types": {
        "@n8n/n8n-nodes-langchain.memoryPostgresChat": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.stickyNote": 14,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.aggregate": 2,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates agent processes using @n8n/langchain.memoryPostgresChat, @n8n/langchain.lmChatOpenAi, set",
      "analysis_timestamp": "2025-06-01T16:06:48.730984"
    },
    {
      "original_filename": "util_3630_workflow_3630_automate_executecommand_executecommand.json",
      "workflow_name": "util_3630_workflow_3630_automate_executecommand_executecommand",
      "suggested_filename": "util_3630_workflow_3630_automate_executecommand_executecommand.json",
      "category": "UTIL",
      "business_function": "3630",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.mcpTrigger",
        "executeCommandTool",
        "executeWorkflowTrigger",
        "switch",
        "executeCommand",
        "@n8n/langchain.toolWorkflow"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.mcpTrigger": 1,
        "n8n-nodes-base.executeCommandTool": 3,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.executeCommand": 2,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 2
      },
      "business_value": "Automates 3630 processes using stickyNote, @n8n/langchain.mcpTrigger, executeCommandTool",
      "analysis_timestamp": "2025-06-01T16:06:48.731288"
    },
    {
      "original_filename": "util_3578_workflow_3578_automate_quickchart_manual.json",
      "workflow_name": "util_3578_workflow_3578_automate_quickchart_manual",
      "suggested_filename": "util_3578_workflow_3578_automate_quickchart_manual.json",
      "category": "UTIL",
      "business_function": "3578",
      "key_integrations": [
        "quickChart",
        "set",
        "googleDrive",
        "stickyNote",
        "manualTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.quickChart": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates 3578 processes using quickChart, set, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.731512"
    },
    {
      "original_filename": "content_publish_automate_httprequest_manual.json",
      "workflow_name": "Publish Image Post to Bluesky",
      "suggested_filename": "content_publish_automate_httprequest_manual.json",
      "category": "CONTENT",
      "business_function": "publish",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "code",
        "stickyNote",
        "splitOut",
        "set",
        "aggregate"
      ],
      "trigger_type": "manual",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.aggregate": 1
      },
      "business_value": "Automates publish processes using manualTrigger, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:48.731790"
    },
    {
      "original_filename": "ai_automate_automate_wordpress_httprequest_2.json",
      "workflow_name": "Automate Content Generator for WordPress with DeepSeek R1",
      "suggested_filename": "ai_automate_automate_wordpress_httprequest_2.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "manualTrigger",
        "googleSheets",
        "set",
        "wordpress",
        "httpRequest",
        "stickyNote",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.openAi": 3
      },
      "business_value": "Automates automate processes using manualTrigger, googleSheets, set",
      "analysis_timestamp": "2025-06-01T16:06:48.732117"
    },
    {
      "original_filename": "ai_screening_ai_process_httprequest_manual.json",
      "workflow_name": "ai_screening_ai_process_httprequest_manual",
      "suggested_filename": "ai_screening_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "screening",
      "key_integrations": [
        "extractFromFile",
        "httpRequest",
        "manualTrigger",
        "stickyNote",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.set": 2
      },
      "business_value": "Automates screening processes using extractFromFile, httpRequest, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.732419"
    },
    {
      "original_filename": "ai_check_ai_process_onesimpleapi_itemlists.json",
      "workflow_name": "Check for valid Mautic contact email",
      "suggested_filename": "ai_check_ai_process_onesimpleapi_itemlists.json",
      "category": "AI",
      "business_function": "check",
      "key_integrations": [
        "if",
        "mauticTrigger",
        "itemLists",
        "oneSimpleApi",
        "slack"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.mauticTrigger": 1,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.oneSimpleApi": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates check processes using if, mauticTrigger, itemLists",
      "analysis_timestamp": "2025-06-01T16:06:48.732628"
    },
    {
      "original_filename": "comm_3937_workflow_3937_automate_whatsapp_whatsapp.json",
      "workflow_name": "comm_3937_workflow_3937_automate_whatsapp_whatsapp",
      "suggested_filename": "comm_3937_workflow_3937_automate_whatsapp_whatsapp.json",
      "category": "COMM",
      "business_function": "3937",
      "key_integrations": [
        "stickyNote",
        "whatsAppTrigger",
        "switch",
        "CUSTOM.klicktippTrigger",
        "whatsApp",
        "CUSTOM.klicktipp",
        "filter"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.whatsAppTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "CUSTOM.klicktippTrigger": 1,
        "n8n-nodes-base.whatsApp": 2,
        "CUSTOM.klicktipp": 1,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates 3937 processes using stickyNote, whatsAppTrigger, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.732940"
    },
    {
      "original_filename": "data_1757_workflow_1757_automate_googlesheets_webhook_webhook.json",
      "workflow_name": "data_1757_workflow_1757_automate_googlesheets_webhook_webhook",
      "suggested_filename": "data_1757_workflow_1757_automate_googlesheets_webhook_webhook.json",
      "category": "DATA",
      "business_function": "1757",
      "key_integrations": [
        "googleSheets",
        "respondToWebhook",
        "function",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 1757 processes using googleSheets, respondToWebhook, function",
      "analysis_timestamp": "2025-06-01T16:06:48.733167"
    },
    {
      "original_filename": "ai_3599_workflow_3599_automate_googlesheets_n8nnodeslangchainoutputparserstructu.json",
      "workflow_name": "ai_3599_workflow_3599_automate_googlesheets_n8nnodeslangchainoutputparserstructu",
      "suggested_filename": "ai_3599_workflow_3599_automate_googlesheets_n8nnodeslangchainoutputparserstructu.json",
      "category": "AI",
      "business_function": "3599",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "telegram",
        "@n8n/langchain.openAi",
        "limit",
        "telegramTrigger",
        "if",
        "set",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.telegram": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.stickyNote": 8
      },
      "business_value": "Automates 3599 processes using @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.733461"
    },
    {
      "original_filename": "ai_chat_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "workflow_name": "Chat with Postgresql Database",
      "suggested_filename": "ai_chat_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "category": "AI",
      "business_function": "chat",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "postgresTool",
        "stickyNote",
        "@n8n/langchain.memoryBufferWindow"
      ],
      "trigger_type": "chat",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.postgresTool": 3,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1
      },
      "business_value": "Automates chat processes using @n8n/langchain.chatTrigger, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.733815"
    },
    {
      "original_filename": "data_image_automate_httprequest_schedule_cron.json",
      "workflow_name": "Image-to-3D",
      "suggested_filename": "data_image_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "image",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "wait",
        "scheduleTrigger",
        "stickyNote",
        "if",
        "googleSheets",
        "set",
        "googleDrive"
      ],
      "trigger_type": "cron",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleDrive": 1
      },
      "business_value": "Automates image processes using manualTrigger, httpRequest, wait",
      "analysis_timestamp": "2025-06-01T16:06:48.734123"
    },
    {
      "original_filename": "ai_2972_workflow_2972_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "workflow_name": "ai_2972_workflow_2972_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput",
      "suggested_filename": "ai_2972_workflow_2972_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "2972",
      "key_integrations": [
        "manualTrigger",
        "splitOut",
        "html",
        "aggregate",
        "httpRequest",
        "filter",
        "if",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.outputParserStructured"
      ],
      "trigger_type": "chat",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.html": 3,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.limit": 1
      },
      "business_value": "Automates 2972 processes using manualTrigger, splitOut, html",
      "analysis_timestamp": "2025-06-01T16:06:48.734491"
    },
    {
      "original_filename": "ai_2823_workflow_2823_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "workflow_name": "ai_2823_workflow_2823_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput",
      "suggested_filename": "ai_2823_workflow_2823_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "2823",
      "key_integrations": [
        "set",
        "httpRequest",
        "code",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.chainLlm",
        "emailSend",
        "stickyNote",
        "googleSheetsTrigger",
        "googleSheets"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.code": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.googleSheetsTrigger": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 2823 processes using set, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:48.734858"
    },
    {
      "original_filename": "comm_1570_workflow_1570_automate_slack_httprequest.json",
      "workflow_name": "comm_1570_workflow_1570_automate_slack_httprequest",
      "suggested_filename": "comm_1570_workflow_1570_automate_slack_httprequest.json",
      "category": "COMM",
      "business_function": "1570",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "slack"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates 1570 processes using manualTrigger, httpRequest, slack",
      "analysis_timestamp": "2025-06-01T16:06:48.734974"
    },
    {
      "original_filename": "data_226_workflow_226_automate_googlesheets_webhook_webhook.json",
      "workflow_name": "data_226_workflow_226_automate_googlesheets_webhook_webhook",
      "suggested_filename": "data_226_workflow_226_automate_googlesheets_webhook_webhook.json",
      "category": "DATA",
      "business_function": "226",
      "key_integrations": [
        "googleSheets",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 226 processes using googleSheets, webhook",
      "analysis_timestamp": "2025-06-01T16:06:48.735058"
    },
    {
      "original_filename": "util_remove_delete_splitinbatches_httprequest_1.json",
      "workflow_name": "Remove Advanced Background from Google Drive Images",
      "suggested_filename": "util_remove_delete_splitinbatches_httprequest_1.json",
      "category": "UTIL",
      "business_function": "remove",
      "key_integrations": [
        "set",
        "httpRequest",
        "splitOut",
        "googleDrive",
        "merge",
        "editImage",
        "stickyNote",
        "googleDriveTrigger",
        "if",
        "splitInBatches"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleDrive": 3,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.editImage": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.splitInBatches": 1
      },
      "business_value": "Automates remove processes using set, httpRequest, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.735326"
    },
    {
      "original_filename": "ai_link_report_n8nnodeslangchainmemorybufferwindow_gmail_cron_2.json",
      "workflow_name": "UTM Link Creator & QR Code Generator with Scheduled Google Analytics Reports",
      "suggested_filename": "ai_link_report_n8nnodeslangchainmemorybufferwindow_gmail_cron_2.json",
      "category": "AI",
      "business_function": "link",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "googleAnalyticsTool",
        "manualTrigger",
        "set",
        "code",
        "airtable",
        "httpRequest",
        "scheduleTrigger",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.googleAnalyticsTool": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates link processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow, googleAnalyticsTool",
      "analysis_timestamp": "2025-06-01T16:06:48.735591"
    },
    {
      "original_filename": "util_all_unique_nodes_automate_generic.json",
      "workflow_name": "util_all_unique_nodes_automate_generic",
      "suggested_filename": "util_all_unique_nodes_automate_generic.json",
      "category": "UTIL",
      "business_function": "all",
      "key_integrations": [],
      "trigger_type": "manual",
      "complexity_score": 0,
      "complexity": "Low",
      "total_nodes": 0,
      "node_types": {},
      "business_value": "Automates all processes using ",
      "analysis_timestamp": "2025-06-01T16:06:48.735796"
    },
    {
      "original_filename": "ai_driven_ai_process_generic.json",
      "workflow_name": "ai_driven_ai_process_generic",
      "suggested_filename": "ai_driven_ai_process_generic.json",
      "category": "AI",
      "business_function": "driven",
      "key_integrations": [],
      "trigger_type": "manual",
      "complexity_score": 0,
      "complexity": "Low",
      "total_nodes": 0,
      "node_types": {},
      "business_value": "Automates driven processes using ",
      "analysis_timestamp": "2025-06-01T16:06:48.736023"
    },
    {
      "original_filename": "comm_1971_workflow_1971_automate_itemlists_slack_webhook.json",
      "workflow_name": "comm_1971_workflow_1971_automate_itemlists_slack_webhook",
      "suggested_filename": "comm_1971_workflow_1971_automate_itemlists_slack_webhook.json",
      "category": "COMM",
      "business_function": "1971",
      "key_integrations": [
        "httpRequest",
        "code",
        "set",
        "merge",
        "if",
        "wait",
        "webhook",
        "itemLists",
        "slack",
        "gmail"
      ],
      "trigger_type": "webhook",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.formTrigger": 1
      },
      "business_value": "Automates 1971 processes using httpRequest, code, set",
      "analysis_timestamp": "2025-06-01T16:06:48.736394"
    },
    {
      "original_filename": "analytics_weekly_shodan_query_report_accidents_no_function_node_report_splitinba.json",
      "workflow_name": "Weekly_Shodan_Query___Report_Accidents__no_function_node_",
      "suggested_filename": "analytics_weekly_shodan_query_report_accidents_no_function_node_report_splitinba.json",
      "category": "ANALYTICS",
      "business_function": "weekly",
      "key_integrations": [
        "httpRequest",
        "itemLists",
        "filter",
        "set",
        "html",
        "markdown",
        "splitInBatches",
        "stickyNote",
        "scheduleTrigger",
        "theHive"
      ],
      "trigger_type": "cron",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.theHive": 1
      },
      "business_value": "Automates weekly processes using httpRequest, itemLists, filter",
      "analysis_timestamp": "2025-06-01T16:06:48.737128"
    },
    {
      "original_filename": "ai_hacker_automate_n8nnodeslangchainoutputparserstructured_httprequest_2.json",
      "workflow_name": "Hacker News to Video Template - AlexK1919",
      "suggested_filename": "ai_hacker_automate_n8nnodeslangchainoutputparserstructured_httprequest_2.json",
      "category": "AI",
      "business_function": "hacker",
      "key_integrations": [
        "manualTrigger",
        "hackerNews",
        "splitInBatches",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolHttpRequest",
        "@n8n/langchain.outputParserStructured",
        "s3",
        "set",
        "httpRequest",
        "wait"
      ],
      "trigger_type": "chat",
      "complexity_score": 48,
      "complexity": "High",
      "total_nodes": 48,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.hackerNews": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.s3": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 14,
        "n8n-nodes-base.wait": 5,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.limit": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.dropbox": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.microsoftOneDrive": 1,
        "n8n-nodes-base.youTube": 1,
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.linkedIn": 1
      },
      "business_value": "Automates hacker processes using manualTrigger, hackerNews, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.737663"
    },
    {
      "original_filename": "data_636_workflow_636_automate_mautic_googlesheets_cron.json",
      "workflow_name": "data_636_workflow_636_automate_mautic_googlesheets_cron",
      "suggested_filename": "data_636_workflow_636_automate_mautic_googlesheets_cron.json",
      "category": "DATA",
      "business_function": "636",
      "key_integrations": [
        "googleSheets",
        "mautic",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.mautic": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates 636 processes using googleSheets, mautic, cron",
      "analysis_timestamp": "2025-06-01T16:06:48.737932"
    },
    {
      "original_filename": "ai_optimize_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainlmchat.json",
      "workflow_name": "Optimize Prompt",
      "suggested_filename": "ai_optimize_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainlmchat.json",
      "category": "AI",
      "business_function": "optimize",
      "key_integrations": [
        "executeWorkflowTrigger",
        "@n8n/langchain.agent",
        "telegram",
        "@n8n/langchain.lmChatOpenAi",
        "code",
        "stickyNote",
        "@n8n/langchain.memoryBufferWindow"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.telegram": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1
      },
      "business_value": "Automates optimize processes using executeWorkflowTrigger, @n8n/langchain.agent, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.738178"
    },
    {
      "original_filename": "ai_receive_ai_process_activecampaign.json",
      "workflow_name": "Receive updates when a new account is added by an admin in ActiveCampaign",
      "suggested_filename": "ai_receive_ai_process_activecampaign.json",
      "category": "AI",
      "business_function": "receive",
      "key_integrations": [
        "activeCampaignTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.activeCampaignTrigger": 1
      },
      "business_value": "Automates receive processes using activeCampaignTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.738264"
    },
    {
      "original_filename": "ai_powered_ai_process_n8nnodeslangchainchat_httprequest.json",
      "workflow_name": "AI-Powered Research with Jina AI Deep Search",
      "suggested_filename": "ai_powered_ai_process_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "powered",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "@n8n/langchain.chatTrigger",
        "code"
      ],
      "trigger_type": "chat",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates powered processes using stickyNote, httpRequest, @n8n/langchain.chatTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.738497"
    },
    {
      "original_filename": "util_2333_workflow_2333_automate_executeworkflow_n8nnodeslangchainchat.json",
      "workflow_name": "util_2333_workflow_2333_automate_executeworkflow_n8nnodeslangchainchat",
      "suggested_filename": "util_2333_workflow_2333_automate_executeworkflow_n8nnodeslangchainchat.json",
      "category": "UTIL",
      "business_function": "2333",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "code",
        "html",
        "set",
        "@n8n/langchain.embeddingsMistralCloud",
        "@n8n/langchain.documentDefaultDataLoader",
        "merge",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 33,
      "complexity": "High",
      "total_nodes": 33,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.set": 3,
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.stickyNote": 9,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 1
      },
      "business_value": "Automates 2333 processes using manualTrigger, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:48.738903"
    },
    {
      "original_filename": "ai_error_notify_error_n8nnodeslangchainoutputparserstructured.json",
      "workflow_name": "Error Alert and Summarizer",
      "suggested_filename": "ai_error_notify_error_n8nnodeslangchainoutputparserstructured.json",
      "category": "AI",
      "business_function": "error",
      "key_integrations": [
        "errorTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "set",
        "stickyNote",
        "if",
        "n8n",
        "code",
        "@n8n/langchain.agent",
        "gmail"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.errorTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.code": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates error processes using errorTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.739305"
    },
    {
      "original_filename": "data_1834_workflow_1834_automate_webhook_notion_webhook.json",
      "workflow_name": "data_1834_workflow_1834_automate_webhook_notion_webhook",
      "suggested_filename": "data_1834_workflow_1834_automate_webhook_notion_webhook.json",
      "category": "DATA",
      "business_function": "1834",
      "key_integrations": [
        "webhook",
        "notion",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 1834 processes using webhook, notion, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.739431"
    },
    {
      "original_filename": "data_list_automate_airtop_manual.json",
      "workflow_name": "List Builder",
      "suggested_filename": "data_list_automate_airtop_manual.json",
      "category": "DATA",
      "business_function": "list",
      "key_integrations": [
        "manualTrigger",
        "code",
        "airtop",
        "googleSheets",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.airtop": 2,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates list processes using manualTrigger, code, airtop",
      "analysis_timestamp": "2025-06-01T16:06:48.739767"
    },
    {
      "original_filename": "util_1118_workflow_1118_automate_splitinbatches_trello_cron.json",
      "workflow_name": "util_1118_workflow_1118_automate_splitinbatches_trello_cron",
      "suggested_filename": "util_1118_workflow_1118_automate_splitinbatches_trello_cron.json",
      "category": "UTIL",
      "business_function": "1118",
      "key_integrations": [
        "function",
        "set",
        "if",
        "googleCalendar",
        "splitInBatches",
        "trello",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.googleCalendar": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.trello": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates 1118 processes using function, set, if",
      "analysis_timestamp": "2025-06-01T16:06:48.740025"
    },
    {
      "original_filename": "ai_organize_ai_process_schedule_todoist_cron.json",
      "workflow_name": "ai_organize_ai_process_schedule_todoist_cron",
      "suggested_filename": "ai_organize_ai_process_schedule_todoist_cron.json",
      "category": "AI",
      "business_function": "organize",
      "key_integrations": [
        "todoist",
        "scheduleTrigger",
        "stickyNote",
        "set",
        "@n8n/langchain.openAi",
        "filter"
      ],
      "trigger_type": "cron",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.todoist": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.filter": 2
      },
      "business_value": "Automates organize processes using todoist, scheduleTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.740278"
    },
    {
      "original_filename": "ai_auto_ai_process_splitinbatches_n8nnodeslangchainoutputparserautofixing_2.json",
      "workflow_name": "Auto-Tag Blog Posts in WordPress with AI",
      "suggested_filename": "ai_auto_ai_process_splitinbatches_n8nnodeslangchainoutputparserautofixing_2.json",
      "category": "AI",
      "business_function": "auto",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.outputParserStructured",
        "rssFeedReadTrigger",
        "set",
        "splitOut",
        "splitInBatches",
        "httpRequest",
        "filter",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 32,
      "complexity": "High",
      "total_nodes": 32,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.rssFeedReadTrigger": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates auto processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.outputParserAutofixing, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.740598"
    },
    {
      "original_filename": "ai_printify_update_splitinbatches_n8nnodeslangchaincalculator_1.json",
      "workflow_name": "Printify Automation - Update Title and Description - AlexK1919",
      "suggested_filename": "ai_printify_update_splitinbatches_n8nnodeslangchaincalculator_1.json",
      "category": "AI",
      "business_function": "printify",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "splitOut",
        "splitInBatches",
        "@n8n/langchain.toolCalculator",
        "@n8n/langchain.toolWikipedia",
        "set",
        "stickyNote",
        "googleSheetsTrigger",
        "googleSheets"
      ],
      "trigger_type": "manual",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.googleSheetsTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates printify processes using manualTrigger, httpRequest, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.741002"
    },
    {
      "original_filename": "ai_structured_extract_n8nnodeslangchainchainllm_httprequest.json",
      "workflow_name": "Structured Data Extract, Data Mining with Bright Data & Google Gemini",
      "suggested_filename": "ai_structured_extract_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "structured",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "@n8n/langchain.chainLlm",
        "set",
        "httpRequest",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.informationExtractor",
        "function",
        "readWriteFile"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 4,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 3,
        "@n8n/n8n-nodes-langchain.informationExtractor": 2,
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.readWriteFile": 2
      },
      "business_value": "Automates structured processes using manualTrigger, stickyNote, @n8n/langchain.chainLlm",
      "analysis_timestamp": "2025-06-01T16:06:48.741322"
    },
    {
      "original_filename": "comm_receive_automate_vonage_kafka.json",
      "workflow_name": "Receive messages from a topic and send an SMS",
      "suggested_filename": "comm_receive_automate_vonage_kafka.json",
      "category": "COMM",
      "business_function": "receive",
      "key_integrations": [
        "kafkaTrigger",
        "if",
        "vonage"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.kafkaTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.vonage": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates receive processes using kafkaTrigger, if, vonage",
      "analysis_timestamp": "2025-06-01T16:06:48.741438"
    },
    {
      "original_filename": "ai_2114_workflow_2114_automate_n8nnodeslangchainlmchatopenai_telegram.json",
      "workflow_name": "ai_2114_workflow_2114_automate_n8nnodeslangchainlmchatopenai_telegram",
      "suggested_filename": "ai_2114_workflow_2114_automate_n8nnodeslangchainlmchatopenai_telegram.json",
      "category": "AI",
      "business_function": "2114",
      "key_integrations": [
        "@n8n/langchain.agent",
        "telegramTrigger",
        "telegram",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.telegram": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates 2114 processes using @n8n/langchain.agent, telegramTrigger, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.741543"
    },
    {
      "original_filename": "ai_powered_ai_process_n8nnodeslangchainchainsummarization_schedule_cron_1.json",
      "workflow_name": "ai_powered_ai_process_n8nnodeslangchainchainsummarization_schedule_cron_1",
      "suggested_filename": "ai_powered_ai_process_n8nnodeslangchainchainsummarization_schedule_cron_1.json",
      "category": "AI",
      "business_function": "powered",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "scheduleTrigger",
        "stickyNote",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.openAi",
        "telegram",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.chainSummarization": 2,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.telegram": 3,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates powered processes using @n8n/langchain.lmChatOpenAi, scheduleTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.741784"
    },
    {
      "original_filename": "util_2774_workflow_2774_automate_typeform.json",
      "workflow_name": "util_2774_workflow_2774_automate_typeform",
      "suggested_filename": "util_2774_workflow_2774_automate_typeform.json",
      "category": "UTIL",
      "business_function": "2774",
      "key_integrations": [
        "set",
        "klicktipp.klicktipp",
        "typeformTrigger",
        "stickyNote",
        "merge",
        "splitOut",
        "if",
        "aggregate"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.set": 2,
        "n8n-nodes-klicktipp.klicktipp": 5,
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.aggregate": 2
      },
      "business_value": "Automates 2774 processes using set, klicktipp.klicktipp, typeformTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.742079"
    },
    {
      "original_filename": "comm_line_automate_httprequest_webhook_webhook.json",
      "workflow_name": "line message api demo",
      "suggested_filename": "comm_line_automate_httprequest_webhook_webhook.json",
      "category": "COMM",
      "business_function": "line",
      "key_integrations": [
        "httpRequest",
        "webhook",
        "stickyNote",
        "if",
        "manualTrigger",
        "set"
      ],
      "trigger_type": "webhook",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates line processes using httpRequest, webhook, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.742339"
    },
    {
      "original_filename": "ops_1222_workflow_1222_automate_httprequest_github_cron.json",
      "workflow_name": "ops_1222_workflow_1222_automate_httprequest_github_cron",
      "suggested_filename": "ops_1222_workflow_1222_automate_httprequest_github_cron.json",
      "category": "OPS",
      "business_function": "1222",
      "key_integrations": [
        "github",
        "function",
        "merge",
        "httpRequest",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.github": 3,
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates 1222 processes using github, function, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.742576"
    },
    {
      "original_filename": "data_2191_workflow_2191_automate_httprequest_googlesheets.json",
      "workflow_name": "data_2191_workflow_2191_automate_httprequest_googlesheets",
      "suggested_filename": "data_2191_workflow_2191_automate_httprequest_googlesheets.json",
      "category": "DATA",
      "business_function": "2191",
      "key_integrations": [
        "googleSheetsTrigger",
        "removeDuplicates",
        "httpRequest",
        "stickyNote",
        "googleSheets",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.googleSheetsTrigger": 1,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 2191 processes using googleSheetsTrigger, removeDuplicates, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.742835"
    },
    {
      "original_filename": "comm_2130_workflow_2130_automate_hubspot_convertkit.json",
      "workflow_name": "comm_2130_workflow_2130_automate_hubspot_convertkit",
      "suggested_filename": "comm_2130_workflow_2130_automate_hubspot_convertkit.json",
      "category": "COMM",
      "business_function": "2130",
      "key_integrations": [
        "if",
        "stickyNote",
        "clearbit",
        "hubspot",
        "convertKitTrigger",
        "filter"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.clearbit": 2,
        "n8n-nodes-base.hubspot": 5,
        "n8n-nodes-base.convertKitTrigger": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 2130 processes using if, stickyNote, clearbit",
      "analysis_timestamp": "2025-06-01T16:06:48.743124"
    },
    {
      "original_filename": "ai_stock_report_splitinbatches_n8nnodeslangchainvectorstore_1.json",
      "workflow_name": "RAG Workflow For Stock Earnings Report Analysis",
      "suggested_filename": "ai_stock_report_splitinbatches_n8nnodeslangchainvectorstore_1.json",
      "category": "AI",
      "business_function": "stock",
      "key_integrations": [
        "@n8n/langchain.vectorStorePinecone",
        "@n8n/langchain.embeddingsGoogleGemini",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "splitInBatches",
        "manualTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.toolVectorStore",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 2,
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.googleDocs": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates stock processes using @n8n/langchain.vectorStorePinecone, @n8n/langchain.embeddingsGoogleGemini, @n8n/langchain.documentDefaultDataLoader",
      "analysis_timestamp": "2025-06-01T16:06:48.743449"
    },
    {
      "original_filename": "data_2107_workflow_2107_automate_httprequest_schedule_cron.json",
      "workflow_name": "data_2107_workflow_2107_automate_httprequest_schedule_cron",
      "suggested_filename": "data_2107_workflow_2107_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "2107",
      "key_integrations": [
        "httpRequest",
        "scheduleTrigger",
        "stickyNote",
        "if",
        "set",
        "merge",
        "googleSheets"
      ],
      "trigger_type": "cron",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.googleSheets": 2
      },
      "business_value": "Automates 2107 processes using httpRequest, scheduleTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.743765"
    },
    {
      "original_filename": "comm_1941_workflow_1941_automate_discord_googlesheets.json",
      "workflow_name": "comm_1941_workflow_1941_automate_discord_googlesheets",
      "suggested_filename": "comm_1941_workflow_1941_automate_discord_googlesheets.json",
      "category": "COMM",
      "business_function": "1941",
      "key_integrations": [
        "googleSheetsTrigger",
        "discord",
        "code",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.googleSheetsTrigger": 1,
        "n8n-nodes-base.discord": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 1941 processes using googleSheetsTrigger, discord, code",
      "analysis_timestamp": "2025-06-01T16:06:48.744024"
    },
    {
      "original_filename": "ai_creating_ai_process_n8nnodeslangchainmemorybufferwindow_slack_webhook.json",
      "workflow_name": "ai_creating_ai_process_n8nnodeslangchainmemorybufferwindow_slack_webhook",
      "suggested_filename": "ai_creating_ai_process_n8nnodeslangchainmemorybufferwindow_slack_webhook.json",
      "category": "AI",
      "business_function": "creating",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.memoryBufferWindow",
        "slack",
        "webhook",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates creating processes using stickyNote, @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.744158"
    },
    {
      "original_filename": "util_880_workflow_880_automate_httprequest_cron_cron.json",
      "workflow_name": "util_880_workflow_880_automate_httprequest_cron_cron",
      "suggested_filename": "util_880_workflow_880_automate_httprequest_cron_cron.json",
      "category": "UTIL",
      "business_function": "880",
      "key_integrations": [
        "function",
        "set",
        "httpRequest",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates 880 processes using function, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.744358"
    },
    {
      "original_filename": "util_1282_workflow_1282_automate_awstextract_manual.json",
      "workflow_name": "util_1282_workflow_1282_automate_awstextract_manual",
      "suggested_filename": "util_1282_workflow_1282_automate_awstextract_manual.json",
      "category": "UTIL",
      "business_function": "1282",
      "key_integrations": [
        "manualTrigger",
        "awsTextract",
        "awsS3"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.awsTextract": 1,
        "n8n-nodes-base.awsS3": 1
      },
      "business_value": "Automates 1282 processes using manualTrigger, awsTextract, awsS3",
      "analysis_timestamp": "2025-06-01T16:06:48.744454"
    },
    {
      "original_filename": "comm_1785_workflow_1785_automate_htmlextract_sendgrid_cron.json",
      "workflow_name": "comm_1785_workflow_1785_automate_htmlextract_sendgrid_cron",
      "suggested_filename": "comm_1785_workflow_1785_automate_htmlextract_sendgrid_cron.json",
      "category": "COMM",
      "business_function": "1785",
      "key_integrations": [
        "manualTrigger",
        "cron",
        "baserow",
        "httpRequest",
        "htmlExtract",
        "function",
        "set",
        "sendGrid"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.baserow": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.htmlExtract": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.sendGrid": 1
      },
      "business_value": "Automates 1785 processes using manualTrigger, cron, baserow",
      "analysis_timestamp": "2025-06-01T16:06:48.744685"
    },
    {
      "original_filename": "comm_check_send_slack_notion_cron.json",
      "workflow_name": "Check To Do on Notion and send message on Slack",
      "suggested_filename": "comm_check_send_slack_notion_cron.json",
      "category": "COMM",
      "business_function": "check",
      "key_integrations": [
        "cron",
        "notion",
        "if",
        "slack"
      ],
      "trigger_type": "cron",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 2
      },
      "business_value": "Automates check processes using cron, notion, if",
      "analysis_timestamp": "2025-06-01T16:06:48.744919"
    },
    {
      "original_filename": "ai_advanced_automate_n8nnodeslangchainchainllm_gmail_cron.json",
      "workflow_name": "🎦💌Advanced YouTube RSS Feed Buddy for Your Favorite Channels",
      "suggested_filename": "ai_advanced_automate_n8nnodeslangchainchainllm_gmail_cron.json",
      "category": "AI",
      "business_function": "advanced",
      "key_integrations": [
        "formTrigger",
        "set",
        "code",
        "httpRequest",
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi",
        "merge",
        "rssFeedRead",
        "filter",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 41,
      "complexity": "High",
      "total_nodes": 41,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.set": 9,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 12,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.rssFeedRead": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.gmail": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates advanced processes using formTrigger, set, code",
      "analysis_timestamp": "2025-06-01T16:06:48.745487"
    },
    {
      "original_filename": "ai_3644_workflow_3644_automate_splitinbatches_googletasks.json",
      "workflow_name": "ai_3644_workflow_3644_automate_splitinbatches_googletasks",
      "suggested_filename": "ai_3644_workflow_3644_automate_splitinbatches_googletasks.json",
      "category": "AI",
      "business_function": "3644",
      "key_integrations": [
        "splitInBatches",
        "merge",
        "if",
        "httpRequest",
        "stickyNote",
        "html",
        "googleTasks",
        "manualTrigger",
        "@n8n/langchain.openAi",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.googleTasks": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates 3644 processes using splitInBatches, merge, if",
      "analysis_timestamp": "2025-06-01T16:06:48.745862"
    },
    {
      "original_filename": "util_create_create_manual_yourls.json",
      "workflow_name": "Create a short URL and get the statistics of the URL",
      "suggested_filename": "util_create_create_manual_yourls.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "yourls"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.yourls": 2
      },
      "business_value": "Automates create processes using manualTrigger, yourls",
      "analysis_timestamp": "2025-06-01T16:06:48.745964"
    },
    {
      "original_filename": "ai_line_chatbot_extract_text_from_pay_slip_with_gemini_extract_n8nnodeslangchain.json",
      "workflow_name": "Line_Chatbot_Extract_Text_from_Pay_Slip_with_Gemini",
      "suggested_filename": "ai_line_chatbot_extract_text_from_pay_slip_with_gemini_extract_n8nnodeslangchain.json",
      "category": "AI",
      "business_function": "line",
      "key_integrations": [
        "@n8n/langchain.memoryBufferWindow",
        "stickyNote",
        "httpRequest",
        "set",
        "switch",
        "@n8n/langchain.agent",
        "@n8n/langchain.chainLlm",
        "googleSheets",
        "webhook",
        "@n8n/langchain.lmChatGoogleGemini"
      ],
      "trigger_type": "webhook",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2
      },
      "business_value": "Automates line processes using @n8n/langchain.memoryBufferWindow, stickyNote, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.746235"
    },
    {
      "original_filename": "ai_automate_ai_process_n8nnodeslangchainchainllm_gmail_cron.json",
      "workflow_name": "ai_automate_ai_process_n8nnodeslangchainchainllm_gmail_cron",
      "suggested_filename": "ai_automate_ai_process_n8nnodeslangchainchainllm_gmail_cron.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "gmail",
        "set",
        "googleCalendar",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.informationExtractor",
        "executeWorkflowTrigger",
        "whatsApp",
        "stickyNote",
        "scheduleTrigger",
        "switch"
      ],
      "trigger_type": "chat",
      "complexity_score": 61,
      "complexity": "High",
      "total_nodes": 61,
      "node_types": {
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.set": 13,
        "n8n-nodes-base.googleCalendar": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 4,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.whatsApp": 1,
        "n8n-nodes-base.stickyNote": 14,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.splitOut": 3,
        "n8n-nodes-base.executeWorkflow": 2,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.html": 5,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 3
      },
      "business_value": "Automates automate processes using gmail, set, googleCalendar",
      "analysis_timestamp": "2025-06-01T16:06:48.747059"
    },
    {
      "original_filename": "ai_youtube_ai_process_functionitem_manual_cron.json",
      "workflow_name": "YouTube to Raindrop",
      "suggested_filename": "ai_youtube_ai_process_functionitem_manual_cron.json",
      "category": "AI",
      "business_function": "youtube",
      "key_integrations": [
        "manualTrigger",
        "youTube",
        "function",
        "functionItem",
        "raindrop",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.youTube": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.raindrop": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates youtube processes using manualTrigger, youTube, function",
      "analysis_timestamp": "2025-06-01T16:06:48.747348"
    },
    {
      "original_filename": "util_3547_workflow_3547_automate_readbinaryfiles_manual.json",
      "workflow_name": "util_3547_workflow_3547_automate_readbinaryfiles_manual",
      "suggested_filename": "util_3547_workflow_3547_automate_readbinaryfiles_manual.json",
      "category": "UTIL",
      "business_function": "3547",
      "key_integrations": [
        "executeCommand",
        "set",
        "manualTrigger",
        "readBinaryFiles"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.executeCommand": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readBinaryFiles": 1
      },
      "business_value": "Automates 3547 processes using executeCommand, set, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.747544"
    },
    {
      "original_filename": "ai_automate_ai_process_wordpress_n8nnodeslangchainchainllm.json",
      "workflow_name": "ai_automate_ai_process_wordpress_n8nnodeslangchainchainllm",
      "suggested_filename": "ai_automate_ai_process_wordpress_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.informationExtractor",
        "httpRequest",
        "html",
        "splitOut",
        "limit",
        "aggregate",
        "merge",
        "wordpress"
      ],
      "trigger_type": "chat",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "@n8n/n8n-nodes-langchain.informationExtractor": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.stickyNote": 9,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates automate processes using manualTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.informationExtractor",
      "analysis_timestamp": "2025-06-01T16:06:48.747886"
    },
    {
      "original_filename": "ai_blockchain_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainch.json",
      "workflow_name": "Blockchain DEX Screener Insights Agent",
      "suggested_filename": "ai_blockchain_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainch.json",
      "category": "AI",
      "business_function": "blockchain",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "telegramTrigger",
        "@n8n/langchain.agent",
        "telegram",
        "set",
        "@n8n/langchain.toolHttpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 8
      },
      "business_value": "Automates blockchain processes using @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.748206"
    },
    {
      "original_filename": "util_585_workflow_585_automate_manual_readpdf.json",
      "workflow_name": "util_585_workflow_585_automate_manual_readpdf",
      "suggested_filename": "util_585_workflow_585_automate_manual_readpdf.json",
      "category": "UTIL",
      "business_function": "585",
      "key_integrations": [
        "manualTrigger",
        "readBinaryFile",
        "readPDF"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readBinaryFile": 1,
        "n8n-nodes-base.readPDF": 1
      },
      "business_value": "Automates 585 processes using manualTrigger, readBinaryFile, readPDF",
      "analysis_timestamp": "2025-06-01T16:06:48.748423"
    },
    {
      "original_filename": "ai_invoice_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr_2.json",
      "workflow_name": "ai_invoice_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr_2",
      "suggested_filename": "ai_invoice_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr_2.json",
      "category": "AI",
      "business_function": "invoice",
      "key_integrations": [
        "@n8n/langchain.lmOpenAi",
        "@n8n/langchain.outputParserStructured",
        "httpRequest",
        "stickyNote",
        "gmailTrigger",
        "googleSheets",
        "wait",
        "switch",
        "gmail",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates invoice processes using @n8n/langchain.lmOpenAi, @n8n/langchain.outputParserStructured, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.748902"
    },
    {
      "original_filename": "ai_youtube_automation_automate_splitinbatches_httprequest_cron.json",
      "workflow_name": "Youtube_Automation",
      "suggested_filename": "ai_youtube_automation_automate_splitinbatches_httprequest_cron.json",
      "category": "AI",
      "business_function": "youtube",
      "key_integrations": [
        "youTube",
        "splitInBatches",
        "@n8n/langchain.openAi",
        "manualTrigger",
        "stickyNote",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.agent",
        "wait",
        "scheduleTrigger",
        "code"
      ],
      "trigger_type": "chat",
      "complexity_score": 33,
      "complexity": "High",
      "total_nodes": 33,
      "node_types": {
        "n8n-nodes-base.youTube": 7,
        "n8n-nodes-base.splitInBatches": 3,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 8,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.wait": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates youtube processes using youTube, splitInBatches, @n8n/langchain.openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.749351"
    },
    {
      "original_filename": "ai_create_create_httprequest_manual.json",
      "workflow_name": "Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API",
      "suggested_filename": "ai_create_create_httprequest_manual.json",
      "category": "AI",
      "business_function": "create",
      "key_integrations": [
        "set",
        "code",
        "httpRequest",
        "wait",
        "if",
        "switch",
        "stickyNote",
        "manualTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 51,
      "complexity": "High",
      "total_nodes": 51,
      "node_types": {
        "n8n-nodes-base.set": 10,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 14,
        "n8n-nodes-base.wait": 7,
        "n8n-nodes-base.if": 6,
        "n8n-nodes-base.switch": 6,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates create processes using set, code, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.749879"
    },
    {
      "original_filename": "ai_qdrant_automate_splitinbatches_n8nnodeslangchaintextsplittercharactertextspli.json",
      "workflow_name": "Qdrant Vector Database Embedding Pipeline",
      "suggested_filename": "ai_qdrant_automate_splitinbatches_n8nnodeslangchaintextsplittercharactertextspli.json",
      "category": "AI",
      "business_function": "qdrant",
      "key_integrations": [
        "@n8n/langchain.vectorStoreQdrant",
        "manualTrigger",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterCharacterTextSplitter",
        "stickyNote",
        "ftp",
        "splitInBatches"
      ],
      "trigger_type": "manual",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.ftp": 2,
        "n8n-nodes-base.splitInBatches": 1
      },
      "business_value": "Automates qdrant processes using @n8n/langchain.vectorStoreQdrant, manualTrigger, @n8n/langchain.embeddingsOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.750198"
    },
    {
      "original_filename": "ai_generate_generate_splitinbatches_postgres_cron_2.json",
      "workflow_name": "Generate Instagram Content from Top Trends with AI Image Generation",
      "suggested_filename": "ai_generate_generate_splitinbatches_postgres_cron_2.json",
      "category": "AI",
      "business_function": "generate",
      "key_integrations": [
        "if",
        "telegram",
        "splitInBatches",
        "scheduleTrigger",
        "set",
        "stickyNote",
        "code",
        "httpRequest",
        "merge",
        "postgres"
      ],
      "trigger_type": "cron",
      "complexity_score": 44,
      "complexity": "High",
      "total_nodes": 44,
      "node_types": {
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.telegram": 4,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.stickyNote": 17,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.postgres": 2,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.facebookGraphApi": 4
      },
      "business_value": "Automates generate processes using if, telegram, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.750668"
    },
    {
      "original_filename": "ai_3478_workflow_3478_automate_googledrive_facebookgraphapi.json",
      "workflow_name": "ai_3478_workflow_3478_automate_googledrive_facebookgraphapi",
      "suggested_filename": "ai_3478_workflow_3478_automate_googledrive_facebookgraphapi.json",
      "category": "AI",
      "business_function": "3478",
      "key_integrations": [
        "stickyNote",
        "facebookGraphApi",
        "googleDriveTrigger",
        "googleDrive",
        "@n8n/langchain.openAi",
        "googleSheets"
      ],
      "trigger_type": "manual",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.facebookGraphApi": 2,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates 3478 processes using stickyNote, facebookGraphApi, googleDriveTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.751028"
    },
    {
      "original_filename": "util_flux_automate_httprequest_webhook_webhook_2.json",
      "workflow_name": "FLUX-fill standalone",
      "suggested_filename": "util_flux_automate_httprequest_webhook_webhook_2.json",
      "category": "UTIL",
      "business_function": "flux",
      "key_integrations": [
        "merge",
        "respondToWebhook",
        "wait",
        "if",
        "stickyNote",
        "httpRequest",
        "set",
        "webhook",
        "html"
      ],
      "trigger_type": "webhook",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates flux processes using merge, respondToWebhook, wait",
      "analysis_timestamp": "2025-06-01T16:06:48.751322"
    },
    {
      "original_filename": "ai_2170_workflow_2170_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "workflow_name": "ai_2170_workflow_2170_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl",
      "suggested_filename": "ai_2170_workflow_2170_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "category": "AI",
      "business_function": "2170",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "code",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.outputParserStructured",
        "telegramTrigger",
        "if",
        "telegram",
        "extractFromFile",
        "set",
        "merge"
      ],
      "trigger_type": "chat",
      "complexity_score": 43,
      "complexity": "High",
      "total_nodes": 43,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.code": 5,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.set": 8,
        "n8n-nodes-base.merge": 5,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 10,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates 2170 processes using @n8n/langchain.lmChatOpenAi, code, @n8n/langchain.outputParserAutofixing",
      "analysis_timestamp": "2025-06-01T16:06:48.751784"
    },
    {
      "original_filename": "util_1916_workflow_1916_automate_httprequest_manual.json",
      "workflow_name": "util_1916_workflow_1916_automate_httprequest_manual",
      "suggested_filename": "util_1916_workflow_1916_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "1916",
      "key_integrations": [
        "manualTrigger",
        "code",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 1916 processes using manualTrigger, code, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.751918"
    },
    {
      "original_filename": "util_1028_workflow_1028_automate_copper_manual.json",
      "workflow_name": "util_1028_workflow_1028_automate_copper_manual",
      "suggested_filename": "util_1028_workflow_1028_automate_copper_manual.json",
      "category": "UTIL",
      "business_function": "1028",
      "key_integrations": [
        "manualTrigger",
        "copper"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.copper": 3
      },
      "business_value": "Automates 1028 processes using manualTrigger, copper",
      "analysis_timestamp": "2025-06-01T16:06:48.752020"
    },
    {
      "original_filename": "ai_topsourcer_automate_n8nnodeslangchainchat_httprequest.json",
      "workflow_name": "TopSourcer - Finds LinkedIn Profiles using natural language",
      "suggested_filename": "ai_topsourcer_automate_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "topsourcer",
      "key_integrations": [
        "wait",
        "@n8n/langchain.chatTrigger",
        "stickyNote",
        "googleSheets",
        "code",
        "httpRequest",
        "@n8n/langchain.openAi",
        "if"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.wait": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.code": 4,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates topsourcer processes using wait, @n8n/langchain.chatTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.752347"
    },
    {
      "original_filename": "ai_lemlist_automate_generic.json",
      "workflow_name": "ai_lemlist_automate_generic",
      "suggested_filename": "ai_lemlist_automate_generic.json",
      "category": "AI",
      "business_function": "lemlist",
      "key_integrations": [],
      "trigger_type": "manual",
      "complexity_score": 0,
      "complexity": "Low",
      "total_nodes": 0,
      "node_types": {},
      "business_value": "Automates lemlist processes using ",
      "analysis_timestamp": "2025-06-01T16:06:48.752579"
    },
    {
      "original_filename": "ai_template_automate_error_httprequest.json",
      "workflow_name": "template in store",
      "suggested_filename": "ai_template_automate_error_httprequest.json",
      "category": "AI",
      "business_function": "template",
      "key_integrations": [
        "googleDriveTrigger",
        "googleDrive",
        "errorTrigger",
        "telegram",
        "if",
        "stickyNote",
        "@n8n/langchain.openAi",
        "writeBinaryFile",
        "readBinaryFile",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.errorTrigger": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.writeBinaryFile": 1,
        "n8n-nodes-base.readBinaryFile": 2,
        "n8n-nodes-base.httpRequest": 2
      },
      "business_value": "Automates template processes using googleDriveTrigger, googleDrive, errorTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.752881"
    },
    {
      "original_filename": "ai_wordpress_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr.json",
      "workflow_name": "WordPress Contact Form (CF7) Responses and Classification",
      "suggested_filename": "ai_wordpress_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr.json",
      "category": "AI",
      "business_function": "wordpress",
      "key_integrations": [
        "webhook",
        "set",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.textClassifier",
        "gmail",
        "@n8n/langchain.chainLlm",
        "googleSheets",
        "stickyNote",
        "@n8n/langchain.outputParserStructured"
      ],
      "trigger_type": "webhook",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 4,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "n8n-nodes-base.gmail": 3,
        "@n8n/n8n-nodes-langchain.chainLlm": 3,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 3
      },
      "business_value": "Automates wordpress processes using webhook, set, @n8n/langchain.lmChatGoogleGemini",
      "analysis_timestamp": "2025-06-01T16:06:48.753262"
    },
    {
      "original_filename": "comm_bitrix24_automate_httprequest_webhook_webhook_2.json",
      "workflow_name": "Bitrix24 Chatbot Application Workflow example with Webhook Integration",
      "suggested_filename": "comm_bitrix24_automate_httprequest_webhook_webhook_2.json",
      "category": "COMM",
      "business_function": "bitrix24",
      "key_integrations": [
        "webhook",
        "set",
        "if",
        "switch",
        "function",
        "httpRequest",
        "respondToWebhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.function": 3,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.respondToWebhook": 2
      },
      "business_value": "Automates bitrix24 processes using webhook, set, if",
      "analysis_timestamp": "2025-06-01T16:06:48.753572"
    },
    {
      "original_filename": "comm_1078_workflow_1078_automate_gmail_googledrive.json",
      "workflow_name": "comm_1078_workflow_1078_automate_gmail_googledrive",
      "suggested_filename": "comm_1078_workflow_1078_automate_gmail_googledrive.json",
      "category": "COMM",
      "business_function": "1078",
      "key_integrations": [
        "gmail",
        "googleDrive",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 1078 processes using gmail, googleDrive, set",
      "analysis_timestamp": "2025-06-01T16:06:48.753681"
    },
    {
      "original_filename": "content_1376_workflow_1376_automate_twitter_httprequest_cron.json",
      "workflow_name": "content_1376_workflow_1376_automate_twitter_httprequest_cron",
      "suggested_filename": "content_1376_workflow_1376_automate_twitter_httprequest_cron.json",
      "category": "CONTENT",
      "business_function": "1376",
      "key_integrations": [
        "httpRequest",
        "cron",
        "twitter"
      ],
      "trigger_type": "cron",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.twitter": 1
      },
      "business_value": "Automates 1376 processes using httpRequest, cron, twitter",
      "analysis_timestamp": "2025-06-01T16:06:48.753784"
    },
    {
      "original_filename": "ai_text_automate_webhook_n8nnodeslangchainopenai_webhook_2.json",
      "workflow_name": "ai_text_automate_webhook_n8nnodeslangchainopenai_webhook_2",
      "suggested_filename": "ai_text_automate_webhook_n8nnodeslangchainopenai_webhook_2.json",
      "category": "AI",
      "business_function": "text",
      "key_integrations": [
        "stickyNote",
        "switch",
        "respondToWebhook",
        "webhook",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "webhook",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.openAi": 5
      },
      "business_value": "Automates text processes using stickyNote, switch, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:48.754051"
    },
    {
      "original_filename": "ai_xmlrpc_automate_httprequest_manual.json",
      "workflow_name": "Use XMLRPC via HttpRequest-node to post on Wordpress.com",
      "suggested_filename": "ai_xmlrpc_automate_httprequest_manual.json",
      "category": "AI",
      "business_function": "xmlrpc",
      "key_integrations": [
        "set",
        "manualTrigger",
        "stickyNote",
        "code",
        "httpRequest",
        "if",
        "xml"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.xml": 1
      },
      "business_value": "Automates xmlrpc processes using set, manualTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.754248"
    },
    {
      "original_filename": "ai_invoice_ai_process_slack_emailsend.json",
      "workflow_name": "New invoice email notification",
      "suggested_filename": "ai_invoice_ai_process_slack_emailsend.json",
      "category": "AI",
      "business_function": "invoice",
      "key_integrations": [
        "emailReadImap",
        "if",
        "mindee",
        "slack",
        "emailSend"
      ],
      "trigger_type": "email",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.mindee": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.emailSend": 1
      },
      "business_value": "Automates invoice processes using emailReadImap, if, mindee",
      "analysis_timestamp": "2025-06-01T16:06:48.754478"
    },
    {
      "original_filename": "ai_youtube_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruc.json",
      "workflow_name": "youtube chapter generator",
      "suggested_filename": "ai_youtube_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruc.json",
      "category": "AI",
      "business_function": "youtube",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "extractFromFile",
        "@n8n/langchain.outputParserStructured",
        "youTube",
        "@n8n/langchain.lmChatGoogleGemini",
        "set",
        "@n8n/langchain.chainLlm",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.youTube": 2,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates youtube processes using manualTrigger, httpRequest, extractFromFile",
      "analysis_timestamp": "2025-06-01T16:06:48.754733"
    },
    {
      "original_filename": "ai_2665_workflow_2665_automate_gmail_httprequest.json",
      "workflow_name": "ai_2665_workflow_2665_automate_gmail_httprequest",
      "suggested_filename": "ai_2665_workflow_2665_automate_gmail_httprequest.json",
      "category": "AI",
      "business_function": "2665",
      "key_integrations": [
        "gmailTrigger",
        "microsoftOutlookTrigger",
        "httpRequest",
        "set",
        "code",
        "@n8n/langchain.openAi",
        "jira",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.microsoftOutlookTrigger": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.code": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.jira": 2,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates 2665 processes using gmailTrigger, microsoftOutlookTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.755098"
    },
    {
      "original_filename": "ai_3350_workflow_3350_automate_redis_n8nnodeslangchainmemoryredischat.json",
      "workflow_name": "ai_3350_workflow_3350_automate_redis_n8nnodeslangchainmemoryredischat",
      "suggested_filename": "ai_3350_workflow_3350_automate_redis_n8nnodeslangchainmemoryredischat.json",
      "category": "AI",
      "business_function": "3350",
      "key_integrations": [
        "telegram",
        "redis",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryRedisChat",
        "executeWorkflowTrigger",
        "telegramTrigger",
        "switch",
        "@n8n/langchain.informationExtractor",
        "code",
        "if"
      ],
      "trigger_type": "chat",
      "complexity_score": 39,
      "complexity": "High",
      "total_nodes": 39,
      "node_types": {
        "n8n-nodes-base.telegram": 7,
        "n8n-nodes-base.redis": 4,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "@n8n/n8n-nodes-langchain.memoryRedisChat": 4,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.executeWorkflow": 1,
        "@n8n/n8n-nodes-langchain.memoryManager": 2
      },
      "business_value": "Automates 3350 processes using telegram, redis, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.755500"
    },
    {
      "original_filename": "data_1769_workflow_1769_automate_asana_notion.json",
      "workflow_name": "data_1769_workflow_1769_automate_asana_notion",
      "suggested_filename": "data_1769_workflow_1769_automate_asana_notion.json",
      "category": "DATA",
      "business_function": "1769",
      "key_integrations": [
        "if",
        "notion",
        "asana",
        "function",
        "asanaTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.notion": 4,
        "n8n-nodes-base.asana": 1,
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.asanaTrigger": 1
      },
      "business_value": "Automates 1769 processes using if, notion, asana",
      "analysis_timestamp": "2025-06-01T16:06:48.755760"
    },
    {
      "original_filename": "ai_2465_workflow_2465_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_2465_workflow_2465_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_2465_workflow_2465_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "2465",
      "key_integrations": [
        "whatsAppTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolVectorStore",
        "@n8n/langchain.embeddingsOpenAi",
        "manualTrigger",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "extractFromFile",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 28,
      "complexity": "High",
      "total_nodes": 28,
      "node_types": {
        "n8n-nodes-base.whatsAppTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.whatsApp": 2,
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory": 2,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates 2465 processes using whatsAppTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.756142"
    },
    {
      "original_filename": "ai_chatbot_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainwikip.json",
      "workflow_name": "ai_chatbot_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainwikip",
      "suggested_filename": "ai_chatbot_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainwikip.json",
      "category": "AI",
      "business_function": "chatbot",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.manualChatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolWikipedia",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolSerpApi",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.manualChatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolSerpApi": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates chatbot processes using stickyNote, @n8n/langchain.manualChatTrigger, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.756300"
    },
    {
      "original_filename": "ai_content_automate_splitinbatches_httprequest.json",
      "workflow_name": "Content to 9:16 Aspect Image Generator v1",
      "suggested_filename": "ai_content_automate_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "content",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "set",
        "airtable",
        "removeDuplicates",
        "filter",
        "splitOut",
        "limit",
        "@n8n/langchain.openAi",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 39,
      "complexity": "High",
      "total_nodes": 39,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 12,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.airtable": 5,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.splitOut": 4,
        "n8n-nodes-base.limit": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.httpRequest": 6,
        "n8n-nodes-base.wait": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1
      },
      "business_value": "Automates content processes using manualTrigger, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:48.756881"
    },
    {
      "original_filename": "util_936_workflow_936_automate_tapfiliate_manual.json",
      "workflow_name": "util_936_workflow_936_automate_tapfiliate_manual",
      "suggested_filename": "util_936_workflow_936_automate_tapfiliate_manual.json",
      "category": "UTIL",
      "business_function": "936",
      "key_integrations": [
        "tapfiliate",
        "manualTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.tapfiliate": 3,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates 936 processes using tapfiliate, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.757166"
    },
    {
      "original_filename": "ai_deepseek_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "workflow_name": "🐋🤖 DeepSeek AI Agent + Telegram + LONG TERM Memory 🧠",
      "suggested_filename": "ai_deepseek_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "category": "AI",
      "business_function": "deepseek",
      "key_integrations": [
        "if",
        "telegram",
        "stickyNote",
        "webhook",
        "set",
        "switch",
        "@n8n/langchain.agent",
        "merge",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "webhook",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.telegram": 3,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.googleDocsTool": 1,
        "n8n-nodes-base.googleDocs": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2
      },
      "business_value": "Automates deepseek processes using if, telegram, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.757507"
    },
    {
      "original_filename": "content_receive_create_strava_twitter.json",
      "workflow_name": "Receive updates when a new activity gets created and tweet about it",
      "suggested_filename": "content_receive_create_strava_twitter.json",
      "category": "CONTENT",
      "business_function": "receive",
      "key_integrations": [
        "stravaTrigger",
        "twitter"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.stravaTrigger": 1,
        "n8n-nodes-base.twitter": 1
      },
      "business_value": "Automates receive processes using stravaTrigger, twitter",
      "analysis_timestamp": "2025-06-01T16:06:48.757663"
    },
    {
      "original_filename": "util_101_workflow_101_automate_writebinaryfile.json",
      "workflow_name": "util_101_workflow_101_automate_writebinaryfile",
      "suggested_filename": "util_101_workflow_101_automate_writebinaryfile.json",
      "category": "UTIL",
      "business_function": "101",
      "key_integrations": [
        "writeBinaryFile",
        "function"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.writeBinaryFile": 1,
        "n8n-nodes-base.function": 2
      },
      "business_value": "Automates 101 processes using writeBinaryFile, function",
      "analysis_timestamp": "2025-06-01T16:06:48.757762"
    },
    {
      "original_filename": "ai_prepare_automate_splitinbatches_spreadsheetfile_2.json",
      "workflow_name": "Prepare CSV files with GPT-4",
      "suggested_filename": "ai_prepare_automate_splitinbatches_spreadsheetfile_2.json",
      "category": "AI",
      "business_function": "prepare",
      "key_integrations": [
        "manualTrigger",
        "openAi",
        "splitInBatches",
        "stickyNote",
        "set",
        "itemLists",
        "spreadsheetFile",
        "writeBinaryFile",
        "moveBinaryData"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.writeBinaryFile": 1,
        "n8n-nodes-base.moveBinaryData": 2
      },
      "business_value": "Automates prepare processes using manualTrigger, openAi, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.758021"
    },
    {
      "original_filename": "content_1130_workflow_1130_automate_twitter_manual.json",
      "workflow_name": "content_1130_workflow_1130_automate_twitter_manual",
      "suggested_filename": "content_1130_workflow_1130_automate_twitter_manual.json",
      "category": "CONTENT",
      "business_function": "1130",
      "key_integrations": [
        "manualTrigger",
        "if",
        "twitter"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.twitter": 1
      },
      "business_value": "Automates 1130 processes using manualTrigger, if, twitter",
      "analysis_timestamp": "2025-06-01T16:06:48.758128"
    },
    {
      "original_filename": "ai_living_automate_splitinbatches_n8nnodeslangchainchainretrievalqa_cron_2.json",
      "workflow_name": "RAG on living data",
      "suggested_filename": "ai_living_automate_splitinbatches_n8nnodeslangchainchainretrievalqa_cron_2.json",
      "category": "AI",
      "business_function": "living",
      "key_integrations": [
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.textSplitterTokenSplitter",
        "splitInBatches",
        "@n8n/langchain.chainRetrievalQa",
        "@n8n/langchain.retrieverVectorStore",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.chatTrigger",
        "scheduleTrigger",
        "stickyNote",
        "limit"
      ],
      "trigger_type": "chat",
      "complexity_score": 34,
      "complexity": "High",
      "total_nodes": 34,
      "node_types": {
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 15,
        "n8n-nodes-base.limit": 2,
        "n8n-nodes-base.supabase": 1,
        "n8n-nodes-base.notion": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.notionTrigger": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase": 2,
        "n8n-nodes-base.summarize": 1
      },
      "business_value": "Automates living processes using @n8n/langchain.embeddingsOpenAi, @n8n/langchain.textSplitterTokenSplitter, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.758430"
    },
    {
      "original_filename": "ai_2786_workflow_2786_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_2786_workflow_2786_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_2786_workflow_2786_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "2786",
      "key_integrations": [
        "@n8n/langchain.memoryBufferWindow",
        "respondToWebhook",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolHttpRequest",
        "executeWorkflowTrigger",
        "set",
        "code",
        "httpRequest",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "webhook",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.microsoftOutlook": 1,
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 2786 processes using @n8n/langchain.memoryBufferWindow, respondToWebhook, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.758870"
    },
    {
      "original_filename": "ai_lead_automate_n8nnodeslangchainmemorybufferwindow_splitinbatches_cron.json",
      "workflow_name": "HDW Lead Geländewagen",
      "suggested_filename": "ai_lead_automate_n8nnodeslangchainmemorybufferwindow_splitinbatches_cron.json",
      "category": "AI",
      "business_function": "lead",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.outputParserStructured",
        "googleSheets",
        "splitInBatches",
        "stickyNote",
        "hdw.hdwLinkedin",
        "aggregate",
        "splitOut"
      ],
      "trigger_type": "chat",
      "complexity_score": 92,
      "complexity": "High",
      "total_nodes": 92,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.googleSheets": 20,
        "n8n-nodes-base.splitInBatches": 10,
        "n8n-nodes-base.stickyNote": 21,
        "n8n-nodes-hdw.hdwLinkedin": 6,
        "n8n-nodes-base.aggregate": 3,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-hdw.hdwWebParserTool": 2,
        "@n8n/n8n-nodes-langchain.openAi": 4,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.if": 8,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-hdw.hdwLinkedinManagement": 3,
        "n8n-nodes-base.scheduleTrigger": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.wait": 1
      },
      "business_value": "Automates lead processes using @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.760160"
    },
    {
      "original_filename": "util_538_workflow_538_automate_eventbrite.json",
      "workflow_name": "util_538_workflow_538_automate_eventbrite",
      "suggested_filename": "util_538_workflow_538_automate_eventbrite.json",
      "category": "UTIL",
      "business_function": "538",
      "key_integrations": [
        "eventbriteTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.eventbriteTrigger": 1
      },
      "business_value": "Automates 538 processes using eventbriteTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.760446"
    },
    {
      "original_filename": "data_receive_update_googlefirebaserealtimedatabase_httprequest_cron.json",
      "workflow_name": "Receive updates for the position of the ISS every minute and push it to a database",
      "suggested_filename": "data_receive_update_googlefirebaserealtimedatabase_httprequest_cron.json",
      "category": "DATA",
      "business_function": "receive",
      "key_integrations": [
        "cron",
        "httpRequest",
        "set",
        "googleFirebaseRealtimeDatabase"
      ],
      "trigger_type": "cron",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleFirebaseRealtimeDatabase": 1
      },
      "business_value": "Automates receive processes using cron, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.760548"
    },
    {
      "original_filename": "util_comentarios_automate_httprequest_webhook_webhook.json",
      "workflow_name": "comentarios automaticos",
      "suggested_filename": "util_comentarios_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "comentarios",
      "key_integrations": [
        "webhook",
        "stickyNote",
        "respondToWebhook",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenRouter",
        "httpRequest",
        "set",
        "filter"
      ],
      "trigger_type": "webhook",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.webhook": 2,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.respondToWebhook": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates comentarios processes using webhook, stickyNote, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:48.760890"
    },
    {
      "original_filename": "ai_social_ai_process_n8nnodeslangchainmemorybufferwindow_airtable_2.json",
      "workflow_name": "AI Social Media Caption Creator",
      "suggested_filename": "ai_social_ai_process_n8nnodeslangchainmemorybufferwindow_airtable_2.json",
      "category": "AI",
      "business_function": "social",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "airtable",
        "wait",
        "set",
        "airtableTrigger",
        "airtableTool",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtableTrigger": 1,
        "n8n-nodes-base.airtableTool": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates social processes using @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.761265"
    },
    {
      "original_filename": "ai_3930_workflow_3930_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "workflow_name": "ai_3930_workflow_3930_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput",
      "suggested_filename": "ai_3930_workflow_3930_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "3930",
      "key_integrations": [
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.lmChatOpenAi",
        "telegram",
        "@n8n/langchain.openAi",
        "gmailTrigger",
        "if",
        "telegramTrigger",
        "gmail",
        "stickyNote",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.telegram": 4,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 3930 processes using @n8n/langchain.outputParserStructured, @n8n/langchain.lmChatOpenAi, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.761642"
    },
    {
      "original_filename": "comm_create_create_contact_slack_httprequest.json",
      "workflow_name": "Create a channel, invite users to the channel, post a message, and upload a file",
      "suggested_filename": "comm_create_create_contact_slack_httprequest.json",
      "category": "COMM",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "slack",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.slack": 4,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates create processes using manualTrigger, slack, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.761893"
    },
    {
      "original_filename": "util_optimise_automate_httprequest_googledrive.json",
      "workflow_name": "Optimise images uploaded to GDrive",
      "suggested_filename": "util_optimise_automate_httprequest_googledrive.json",
      "category": "UTIL",
      "business_function": "optimise",
      "key_integrations": [
        "googleDriveTrigger",
        "googleDrive",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates optimise processes using googleDriveTrigger, googleDrive, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.762154"
    },
    {
      "original_filename": "util_send_update_rabbitmq_httprequest_cron.json",
      "workflow_name": "Send updates about the position of the ISS every minute to a topic in RabbitMQ",
      "suggested_filename": "util_send_update_rabbitmq_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "send",
      "key_integrations": [
        "rabbitmq",
        "set",
        "httpRequest",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.rabbitmq": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates send processes using rabbitmq, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.762262"
    },
    {
      "original_filename": "util_1338_workflow_1338_automate_start_httprequest.json",
      "workflow_name": "util_1338_workflow_1338_automate_start_httprequest",
      "suggested_filename": "util_1338_workflow_1338_automate_start_httprequest.json",
      "category": "UTIL",
      "business_function": "1338",
      "key_integrations": [
        "manualTrigger",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.start": 1,
        "n8n-nodes-base.httpRequest": 2
      },
      "business_value": "Automates 1338 processes using manualTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.762354"
    },
    {
      "original_filename": "biz_information_read_uplead_manual.json",
      "workflow_name": "Get information about a company with UpLead",
      "suggested_filename": "biz_information_read_uplead_manual.json",
      "category": "BIZ",
      "business_function": "information",
      "key_integrations": [
        "manualTrigger",
        "uplead"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.uplead": 1
      },
      "business_value": "Automates information processes using manualTrigger, uplead",
      "analysis_timestamp": "2025-06-01T16:06:48.762441"
    },
    {
      "original_filename": "comm_3787_workflow_3787_automate_splitinbatches_executiondata_cron.json",
      "workflow_name": "comm_3787_workflow_3787_automate_splitinbatches_executiondata_cron",
      "suggested_filename": "comm_3787_workflow_3787_automate_splitinbatches_executiondata_cron.json",
      "category": "COMM",
      "business_function": "3787",
      "key_integrations": [
        "scheduleTrigger",
        "n8n",
        "googleDrive",
        "splitInBatches",
        "if",
        "set",
        "code",
        "limit",
        "executionData",
        "gmail"
      ],
      "trigger_type": "cron",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.googleDrive": 3,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.executionData": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.stickyNote": 11,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.discord": 1
      },
      "business_value": "Automates 3787 processes using scheduleTrigger, n8n, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.762829"
    },
    {
      "original_filename": "util_create_create_manual_harvest.json",
      "workflow_name": "Create a client in Harvest",
      "suggested_filename": "util_create_create_manual_harvest.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "harvest"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.harvest": 1
      },
      "business_value": "Automates create processes using manualTrigger, harvest",
      "analysis_timestamp": "2025-06-01T16:06:48.762934"
    },
    {
      "original_filename": "ops_deployer_automate_httprequest_manual.json",
      "workflow_name": "n8n workflow deployer",
      "suggested_filename": "ops_deployer_automate_httprequest_manual.json",
      "category": "OPS",
      "business_function": "deployer",
      "key_integrations": [
        "httpRequest",
        "stickyNote",
        "manualTrigger",
        "extractFromFile",
        "code",
        "set",
        "googleDrive",
        "googleDriveTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.googleDriveTrigger": 1
      },
      "business_value": "Automates deployer processes using httpRequest, stickyNote, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.763246"
    },
    {
      "original_filename": "ai_schema_extract_httprequest_n8nnodeslangchaininformationextractor.json",
      "workflow_name": "ai_schema_extract_httprequest_n8nnodeslangchaininformationextractor",
      "suggested_filename": "ai_schema_extract_httprequest_n8nnodeslangchaininformationextractor.json",
      "category": "AI",
      "business_function": "schema",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "splitOut",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "set",
        "@n8n/langchain.documentDefaultDataLoader",
        "executeWorkflowTrigger",
        "executionData",
        "switch",
        "@n8n/langchain.lmChatGoogleGemini"
      ],
      "trigger_type": "chat",
      "complexity_score": 88,
      "complexity": "High",
      "total_nodes": 88,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.splitOut": 3,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.set": 17,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.executionData": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 3,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.splitInBatches": 6,
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini": 3,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 3,
        "@n8n/n8n-nodes-langchain.informationExtractor": 2,
        "n8n-nodes-base.wait": 3,
        "n8n-nodes-base.removeDuplicates": 2,
        "n8n-nodes-base.executeWorkflow": 3,
        "n8n-nodes-base.if": 7,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.googleSheets": 14,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.stickyNote": 6
      },
      "business_value": "Automates schema processes using manualTrigger, httpRequest, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.764086"
    },
    {
      "original_filename": "ai_automated_automate_httprequest_googledrive_1.json",
      "workflow_name": "✨🩷Automated Social Media Content Publishing Factory + System Prompt Composition",
      "suggested_filename": "ai_automated_automate_httprequest_googledrive_1.json",
      "category": "AI",
      "business_function": "automated",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "stickyNote",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.memoryBufferWindow",
        "executeWorkflowTrigger",
        "httpRequest",
        "gmail",
        "googleDocs",
        "@n8n/langchain.lmChatOpenAi",
        "twitter"
      ],
      "trigger_type": "chat",
      "complexity_score": 100,
      "complexity": "High",
      "total_nodes": 100,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.stickyNote": 43,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 6,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.googleDocs": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 4,
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.facebookGraphApi": 2,
        "n8n-nodes-base.linkedIn": 1,
        "n8n-nodes-base.set": 12,
        "n8n-nodes-base.code": 2,
        "@n8n/n8n-nodes-langchain.agent": 4,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.googleDrive": 3,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.noOp": 2,
        "@n8n/n8n-nodes-langchain.toolSerpApi": 1
      },
      "business_value": "Automates automated processes using @n8n/langchain.chatTrigger, stickyNote, @n8n/langchain.toolWorkflow",
      "analysis_timestamp": "2025-06-01T16:06:48.765087"
    },
    {
      "original_filename": "ai_reservation_automate_n8nnodeslangchainmemorybufferwindow_googlesheets.json",
      "workflow_name": "Reservation Medcin",
      "suggested_filename": "ai_reservation_automate_n8nnodeslangchainmemorybufferwindow_googlesheets.json",
      "category": "AI",
      "business_function": "reservation",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "stickyNote",
        "googleCalendarTool",
        "googleSheetsTool"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.googleCalendarTool": 2,
        "n8n-nodes-base.googleSheetsTool": 1
      },
      "business_value": "Automates reservation processes using @n8n/langchain.chatTrigger, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.765487"
    },
    {
      "original_filename": "ai_translate_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainlmchatopenai_2.json",
      "workflow_name": "Translate Telegram audio messages with AI (55 supported languages) v1",
      "suggested_filename": "ai_translate_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainlmchatopenai_2.json",
      "category": "AI",
      "business_function": "translate",
      "key_integrations": [
        "telegramTrigger",
        "stickyNote",
        "telegram",
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.telegram": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2
      },
      "business_value": "Automates translate processes using telegramTrigger, stickyNote, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.765770"
    },
    {
      "original_filename": "comm_2146_workflow_2146_automate_itemlists_gmail_cron.json",
      "workflow_name": "comm_2146_workflow_2146_automate_itemlists_gmail_cron",
      "suggested_filename": "comm_2146_workflow_2146_automate_itemlists_gmail_cron.json",
      "category": "COMM",
      "business_function": "2146",
      "key_integrations": [
        "stickyNote",
        "scheduleTrigger",
        "gmail",
        "filter",
        "itemLists"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.gmail": 4,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.itemLists": 1
      },
      "business_value": "Automates 2146 processes using stickyNote, scheduleTrigger, gmail",
      "analysis_timestamp": "2025-06-01T16:06:48.766029"
    },
    {
      "original_filename": "ai_news_ai_process_httprequest_schedule_cron.json",
      "workflow_name": "YT AI News Playlist Creator/AI News Form Updater",
      "suggested_filename": "ai_news_ai_process_httprequest_schedule_cron.json",
      "category": "AI",
      "business_function": "news",
      "key_integrations": [
        "googleSheets",
        "httpRequest",
        "splitOut",
        "stickyNote",
        "youTube",
        "filter",
        "telegram",
        "scheduleTrigger",
        "manualTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.googleSheets": 5,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.youTube": 3,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates news processes using googleSheets, httpRequest, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.766367"
    },
    {
      "original_filename": "ai_2700_workflow_2700_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_2700_workflow_2700_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_2700_workflow_2700_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "2700",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.agent",
        "stickyNote",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.chatTrigger",
        "executeWorkflowTrigger",
        "set",
        "switch",
        "aggregate",
        "merge"
      ],
      "trigger_type": "chat",
      "complexity_score": 41,
      "complexity": "High",
      "total_nodes": 41,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 11,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.aggregate": 3,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.if": 2,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 4,
        "@n8n/n8n-nodes-langchain.toolCode": 1,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.httpRequest": 8
      },
      "business_value": "Automates 2700 processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.agent, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.766846"
    },
    {
      "original_filename": "util_verify_validate_functionitem_uproc.json",
      "workflow_name": "Verify phone numbers",
      "suggested_filename": "util_verify_validate_functionitem_uproc.json",
      "category": "UTIL",
      "business_function": "verify",
      "key_integrations": [
        "manualTrigger",
        "functionItem",
        "uproc",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.uproc": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates verify processes using manualTrigger, functionItem, uproc",
      "analysis_timestamp": "2025-06-01T16:06:48.766998"
    },
    {
      "original_filename": "ai_insert_ai_process_manual_airtable.json",
      "workflow_name": "Insert and update data in Airtable",
      "suggested_filename": "ai_insert_ai_process_manual_airtable.json",
      "category": "AI",
      "business_function": "insert",
      "key_integrations": [
        "manualTrigger",
        "airtable",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.airtable": 3,
        "n8n-nodes-base.set": 2
      },
      "business_value": "Automates insert processes using manualTrigger, airtable, set",
      "analysis_timestamp": "2025-06-01T16:06:48.767197"
    },
    {
      "original_filename": "ai_ollama_automate_n8nnodeslangchainlmollama_n8nnodeslangchainchainllm_1.json",
      "workflow_name": "🗨️Ollama Chat",
      "suggested_filename": "ai_ollama_automate_n8nnodeslangchainlmollama_n8nnodeslangchainchainllm_1.json",
      "category": "AI",
      "business_function": "ollama",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmOllama",
        "stickyNote",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmOllama": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.set": 3
      },
      "business_value": "Automates ollama processes using @n8n/langchain.chatTrigger, @n8n/langchain.chainLlm, @n8n/langchain.lmOllama",
      "analysis_timestamp": "2025-06-01T16:06:48.767526"
    },
    {
      "original_filename": "util_960_workflow_960_automate_gotowebinar.json",
      "workflow_name": "util_960_workflow_960_automate_gotowebinar",
      "suggested_filename": "util_960_workflow_960_automate_gotowebinar.json",
      "category": "UTIL",
      "business_function": "960",
      "key_integrations": [
        "goToWebinar"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.goToWebinar": 3
      },
      "business_value": "Automates 960 processes using goToWebinar",
      "analysis_timestamp": "2025-06-01T16:06:48.767801"
    },
    {
      "original_filename": "util_2925_workflow_2925_automate_ssh_emailsend_cron.json",
      "workflow_name": "util_2925_workflow_2925_automate_ssh_emailsend_cron",
      "suggested_filename": "util_2925_workflow_2925_automate_ssh_emailsend_cron.json",
      "category": "UTIL",
      "business_function": "2925",
      "key_integrations": [
        "ssh",
        "emailSend",
        "scheduleTrigger",
        "code",
        "if",
        "stickyNote"
      ],
      "trigger_type": "email",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.ssh": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 2925 processes using ssh, emailSend, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.768061"
    },
    {
      "original_filename": "ai_3958_workflow_3958_automate_hubspot_n8nnodeslangchainoutputparserstructured_w.json",
      "workflow_name": "ai_3958_workflow_3958_automate_hubspot_n8nnodeslangchainoutputparserstructured_w",
      "suggested_filename": "ai_3958_workflow_3958_automate_hubspot_n8nnodeslangchainoutputparserstructured_w.json",
      "category": "AI",
      "business_function": "3958",
      "key_integrations": [
        "webhook",
        "stickyNote",
        "set",
        "@n8n/langchain.agent",
        "googleCalendarTool",
        "executeWorkflowTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.outputParserStructured",
        "httpRequest"
      ],
      "trigger_type": "webhook",
      "complexity_score": 31,
      "complexity": "High",
      "total_nodes": 31,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.set": 3,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "n8n-nodes-base.googleCalendarTool": 5,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.hubspotTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.hubspot": 2,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.markdown": 1
      },
      "business_value": "Automates 3958 processes using webhook, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:48.768460"
    },
    {
      "original_filename": "analytics_serpbear_automate_httprequest_schedule_cron_1.json",
      "workflow_name": "SERPBear analytics template",
      "suggested_filename": "analytics_serpbear_automate_httprequest_schedule_cron_1.json",
      "category": "ANALYTICS",
      "business_function": "serpbear",
      "key_integrations": [
        "manualTrigger",
        "scheduleTrigger",
        "httpRequest",
        "code",
        "baserow",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.baserow": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates serpbear processes using manualTrigger, scheduleTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.768757"
    },
    {
      "original_filename": "content_upload_automate_httprequest_manual_1.json",
      "workflow_name": "Upload video to drive via google script",
      "suggested_filename": "content_upload_automate_httprequest_manual_1.json",
      "category": "CONTENT",
      "business_function": "upload",
      "key_integrations": [
        "manualTrigger",
        "googleDrive",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates upload processes using manualTrigger, googleDrive, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.768956"
    },
    {
      "original_filename": "ai_youtube_automate_googlesheets_n8nnodeslangchaincalculator_cron.json",
      "workflow_name": "YouTube to X Post- AlexK1919",
      "suggested_filename": "ai_youtube_automate_googlesheets_n8nnodeslangchaincalculator_cron.json",
      "category": "AI",
      "business_function": "youtube",
      "key_integrations": [
        "twitter",
        "stickyNote",
        "youTube",
        "@n8n/langchain.toolCalculator",
        "@n8n/langchain.toolWikipedia",
        "scheduleTrigger",
        "googleSheets",
        "manualTrigger",
        "discord",
        "removeDuplicates"
      ],
      "trigger_type": "cron",
      "complexity_score": 28,
      "complexity": "High",
      "total_nodes": 28,
      "node_types": {
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.youTube": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 2,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.discord": 1,
        "n8n-nodes-base.removeDuplicates": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates youtube processes using twitter, stickyNote, youTube",
      "analysis_timestamp": "2025-06-01T16:06:48.769329"
    },
    {
      "original_filename": "ai_voice_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchainll_2.json",
      "workflow_name": "AI Voice Chat using Webhook, Memory Manager, OpenAI, Google Gemini & ElevenLabs",
      "suggested_filename": "ai_voice_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchainll_2.json",
      "category": "AI",
      "business_function": "voice",
      "key_integrations": [
        "@n8n/langchain.memoryManager",
        "stickyNote",
        "aggregate",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.lmChatGoogleGemini",
        "respondToWebhook",
        "httpRequest",
        "limit",
        "@n8n/langchain.chainLlm",
        "webhook"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "@n8n/n8n-nodes-langchain.memoryManager": 2,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.limit": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates voice processes using @n8n/langchain.memoryManager, stickyNote, aggregate",
      "analysis_timestamp": "2025-06-01T16:06:48.769598"
    },
    {
      "original_filename": "util_551_workflow_551_automate_surveymonkey.json",
      "workflow_name": "util_551_workflow_551_automate_surveymonkey",
      "suggested_filename": "util_551_workflow_551_automate_surveymonkey.json",
      "category": "UTIL",
      "business_function": "551",
      "key_integrations": [
        "surveyMonkeyTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.surveyMonkeyTrigger": 1
      },
      "business_value": "Automates 551 processes using surveyMonkeyTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.769788"
    },
    {
      "original_filename": "ai_visualize_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincha.json",
      "workflow_name": "ai_visualize_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincha",
      "suggested_filename": "ai_visualize_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincha.json",
      "category": "AI",
      "business_function": "visualize",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "httpRequest",
        "set",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.memoryBufferWindow",
        "stickyNote",
        "@n8n/langchain.textClassifier"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 4,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1
      },
      "business_value": "Automates visualize processes using @n8n/langchain.lmChatOpenAi, executeWorkflow, executeWorkflowTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.770105"
    },
    {
      "original_filename": "ai_2025_workflow_2025_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_2025_workflow_2025_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_2025_workflow_2025_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "2025",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.openAi",
        "@n8n/langchain.memoryBufferWindow",
        "executeWorkflowTrigger",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.toolCode",
        "if",
        "code",
        "summarize"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.toolCode": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.summarize": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates 2025 processes using stickyNote, @n8n/langchain.chatTrigger, @n8n/langchain.openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.770390"
    },
    {
      "original_filename": "ai_modelo_automate_mysql_n8nnodeslangchainmemorypostgreschat_2.json",
      "workflow_name": "modelo do chatbot",
      "suggested_filename": "ai_modelo_automate_mysql_n8nnodeslangchainmemorypostgreschat_2.json",
      "category": "AI",
      "business_function": "modelo",
      "key_integrations": [
        "if",
        "set",
        "@n8n/langchain.openAi",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.memoryPostgresChat",
        "mySqlTool",
        "@n8n/langchain.toolHttpRequest",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.memoryPostgresChat": 2,
        "n8n-nodes-base.mySqlTool": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 2,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates modelo processes using if, set, @n8n/langchain.openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.770681"
    },
    {
      "original_filename": "ai_1951_workflow_1951_automate_httprequest_n8nnodeslangchainchainsummarization.json",
      "workflow_name": "ai_1951_workflow_1951_automate_httprequest_n8nnodeslangchainchainsummarization",
      "suggested_filename": "ai_1951_workflow_1951_automate_httprequest_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "1951",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "httpRequest",
        "@n8n/langchain.lmChatOpenAi",
        "html",
        "splitOut",
        "@n8n/langchain.chainSummarization",
        "set",
        "merge",
        "@n8n/langchain.documentDefaultDataLoader"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.html": 3,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.limit": 1
      },
      "business_value": "Automates 1951 processes using manualTrigger, stickyNote, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.770927"
    },
    {
      "original_filename": "util_get_a_web_page_read_httprequest_executeworkflow_1.json",
      "workflow_name": "get_a_web_page",
      "suggested_filename": "util_get_a_web_page_read_httprequest_executeworkflow_1.json",
      "category": "UTIL",
      "business_function": "get",
      "key_integrations": [
        "executeWorkflowTrigger",
        "httpRequest",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates get processes using executeWorkflowTrigger, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.771122"
    },
    {
      "original_filename": "ai_extract_extract_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainchai_1.json",
      "workflow_name": "ai_extract_extract_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainchai_1",
      "suggested_filename": "ai_extract_extract_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainchai_1.json",
      "category": "AI",
      "business_function": "extract",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "code",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.outputParserStructured",
        "telegramTrigger",
        "if",
        "telegram",
        "extractFromFile",
        "set",
        "merge"
      ],
      "trigger_type": "chat",
      "complexity_score": 43,
      "complexity": "High",
      "total_nodes": 43,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.code": 5,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.set": 8,
        "n8n-nodes-base.merge": 5,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 10,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates extract processes using @n8n/langchain.lmChatOpenAi, code, @n8n/langchain.outputParserAutofixing",
      "analysis_timestamp": "2025-06-01T16:06:48.771542"
    },
    {
      "original_filename": "biz_receive_update_customerio.json",
      "workflow_name": "Receive updates when a subscriber unsubscribes in Customer.io",
      "suggested_filename": "biz_receive_update_customerio.json",
      "category": "BIZ",
      "business_function": "receive",
      "key_integrations": [
        "customerIoTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.customerIoTrigger": 1
      },
      "business_value": "Automates receive processes using customerIoTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.771759"
    },
    {
      "original_filename": "ai_luma_ai_process_executiondata_httprequest.json",
      "workflow_name": "Luma AI Dream Machine - Simple v1 - AK",
      "suggested_filename": "ai_luma_ai_process_executiondata_httprequest.json",
      "category": "AI",
      "business_function": "luma",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "code",
        "stickyNote",
        "set",
        "airtable",
        "executionData"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.executionData": 1
      },
      "business_value": "Automates luma processes using manualTrigger, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:48.772060"
    },
    {
      "original_filename": "comm_2109_workflow_2109_automate_slack_webhook_webhook.json",
      "workflow_name": "comm_2109_workflow_2109_automate_slack_webhook_webhook",
      "suggested_filename": "comm_2109_workflow_2109_automate_slack_webhook_webhook.json",
      "category": "COMM",
      "business_function": "2109",
      "key_integrations": [
        "filter",
        "stickyNote",
        "clearbit",
        "webhook",
        "slack"
      ],
      "trigger_type": "webhook",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.clearbit": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates 2109 processes using filter, stickyNote, clearbit",
      "analysis_timestamp": "2025-06-01T16:06:48.772340"
    },
    {
      "original_filename": "ai_youtube_analyze_httprequest_n8nnodeslangchainlmchatopenai.json",
      "workflow_name": "YouTube Comment Sentiment Analyzer",
      "suggested_filename": "ai_youtube_analyze_httprequest_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "youtube",
      "key_integrations": [
        "splitOut",
        "@n8n/langchain.lmChatOpenAi",
        "googleSheets",
        "if",
        "httpRequest",
        "@n8n/langchain.sentimentAnalysis",
        "set",
        "manualTrigger",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.sentimentAnalysis": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates youtube processes using splitOut, @n8n/langchain.lmChatOpenAi, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.772705"
    },
    {
      "original_filename": "util_576_workflow_576_automate_httprequest_editimage.json",
      "workflow_name": "util_576_workflow_576_automate_httprequest_editimage",
      "suggested_filename": "util_576_workflow_576_automate_httprequest_editimage.json",
      "category": "UTIL",
      "business_function": "576",
      "key_integrations": [
        "manualTrigger",
        "editImage",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.editImage": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 576 processes using manualTrigger, editImage, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.772898"
    },
    {
      "original_filename": "comm_4_workflow_4_automate_slack_github.json",
      "workflow_name": "comm_4_workflow_4_automate_slack_github",
      "suggested_filename": "comm_4_workflow_4_automate_slack_github.json",
      "category": "COMM",
      "business_function": "4",
      "key_integrations": [
        "githubTrigger",
        "if",
        "slack"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.githubTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 2
      },
      "business_value": "Automates 4 processes using githubTrigger, if, slack",
      "analysis_timestamp": "2025-06-01T16:06:48.773297"
    },
    {
      "original_filename": "data_1737_workflow_1737_automate_spreadsheetfile_httprequest.json",
      "workflow_name": "data_1737_workflow_1737_automate_spreadsheetfile_httprequest",
      "suggested_filename": "data_1737_workflow_1737_automate_spreadsheetfile_httprequest.json",
      "category": "DATA",
      "business_function": "1737",
      "key_integrations": [
        "httpRequest",
        "googleSheets",
        "set",
        "spreadsheetFile",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 1737 processes using httpRequest, googleSheets, set",
      "analysis_timestamp": "2025-06-01T16:06:48.773411"
    },
    {
      "original_filename": "util_2383_workflow_2383_automate_httprequest_spotify.json",
      "workflow_name": "util_2383_workflow_2383_automate_httprequest_spotify",
      "suggested_filename": "util_2383_workflow_2383_automate_httprequest_spotify.json",
      "category": "UTIL",
      "business_function": "2383",
      "key_integrations": [
        "spotify",
        "stickyNote",
        "httpRequest",
        "splitOut",
        "filter",
        "switch",
        "set",
        "if",
        "mqttTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "n8n-nodes-base.spotify": 8,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.httpRequest": 6,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.mqttTrigger": 1
      },
      "business_value": "Automates 2383 processes using spotify, stickyNote, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.773751"
    },
    {
      "original_filename": "ai_voice_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvectors_1.json",
      "workflow_name": "Voice RAG Chatbot with ElevenLabs and OpenAI",
      "suggested_filename": "ai_voice_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvectors_1.json",
      "category": "AI",
      "business_function": "voice",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.toolVectorStore",
        "@n8n/langchain.vectorStoreQdrant",
        "@n8n/langchain.embeddingsOpenAi",
        "stickyNote",
        "manualTrigger",
        "httpRequest",
        "googleDrive",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterTokenSplitter"
      ],
      "trigger_type": "webhook",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleDrive": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1
      },
      "business_value": "Automates voice processes using @n8n/langchain.agent, @n8n/langchain.toolVectorStore, @n8n/langchain.vectorStoreQdrant",
      "analysis_timestamp": "2025-06-01T16:06:48.774108"
    },
    {
      "original_filename": "comm_3440_workflow_3440_automate_googlesheets_gmail_cron.json",
      "workflow_name": "comm_3440_workflow_3440_automate_googlesheets_gmail_cron",
      "suggested_filename": "comm_3440_workflow_3440_automate_googlesheets_gmail_cron.json",
      "category": "COMM",
      "business_function": "3440",
      "key_integrations": [
        "googleSheetsTool",
        "set",
        "formTrigger",
        "@n8n/langchain.code",
        "stickyNote",
        "form",
        "filter",
        "googleSheets",
        "summarize",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.googleSheetsTool": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.formTrigger": 1,
        "@n8n/n8n-nodes-langchain.code": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.form": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.summarize": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1
      },
      "business_value": "Automates 3440 processes using googleSheetsTool, set, formTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.774464"
    },
    {
      "original_filename": "ai_3656_workflow_3656_automate_n8nnodeslangchainmemorybufferwindow_googletasks.json",
      "workflow_name": "ai_3656_workflow_3656_automate_n8nnodeslangchainmemorybufferwindow_googletasks",
      "suggested_filename": "ai_3656_workflow_3656_automate_n8nnodeslangchainmemorybufferwindow_googletasks.json",
      "category": "AI",
      "business_function": "3656",
      "key_integrations": [
        "telegramTrigger",
        "@n8n/langchain.mcpTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.mcpClientTool",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "set",
        "googleTasksTool",
        "telegram",
        "switch"
      ],
      "trigger_type": "chat",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "@n8n/n8n-nodes-langchain.mcpTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.mcpClientTool": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.googleTasksTool": 5,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 3656 processes using telegramTrigger, @n8n/langchain.mcpTrigger, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.774790"
    },
    {
      "original_filename": "ai_financial_ai_process_editimage_n8nnodeslangchainchainllm_cron.json",
      "workflow_name": "N8N Financial Tracker Telegram Invoices to Notion with AI Summaries & Reports",
      "suggested_filename": "ai_financial_ai_process_editimage_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "financial",
      "key_integrations": [
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.chainLlm",
        "stickyNote",
        "scheduleTrigger",
        "notion",
        "summarize",
        "quickChart",
        "telegram",
        "code",
        "telegramTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 28,
      "complexity": "High",
      "total_nodes": 28,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.stickyNote": 13,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.notion": 2,
        "n8n-nodes-base.summarize": 1,
        "n8n-nodes-base.quickChart": 1,
        "n8n-nodes-base.telegram": 3,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.editImage": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.splitOut": 1
      },
      "business_value": "Automates financial processes using @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.chainLlm, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.775181"
    },
    {
      "original_filename": "data_datapoint_create_beeminder_strava.json",
      "workflow_name": "Add a datapoint to Beeminder when new activity is added to Strava",
      "suggested_filename": "data_datapoint_create_beeminder_strava.json",
      "category": "DATA",
      "business_function": "datapoint",
      "key_integrations": [
        "stravaTrigger",
        "beeminder"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.stravaTrigger": 1,
        "n8n-nodes-base.beeminder": 1
      },
      "business_value": "Automates datapoint processes using stravaTrigger, beeminder",
      "analysis_timestamp": "2025-06-01T16:06:48.775303"
    },
    {
      "original_filename": "util_create_create_splitinbatches_httprequest_cron.json",
      "workflow_name": "Create Threads on Bluesky",
      "suggested_filename": "util_create_create_splitinbatches_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "httpRequest",
        "scheduleTrigger",
        "set",
        "stickyNote",
        "code",
        "splitInBatches",
        "wait"
      ],
      "trigger_type": "cron",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.code": 5,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.wait": 1
      },
      "business_value": "Automates create processes using httpRequest, scheduleTrigger, set",
      "analysis_timestamp": "2025-06-01T16:06:48.775600"
    },
    {
      "original_filename": "util_556_workflow_556_automate_mondaycom_manual.json",
      "workflow_name": "util_556_workflow_556_automate_mondaycom_manual",
      "suggested_filename": "util_556_workflow_556_automate_mondaycom_manual.json",
      "category": "UTIL",
      "business_function": "556",
      "key_integrations": [
        "manualTrigger",
        "mondayCom"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.mondayCom": 1
      },
      "business_value": "Automates 556 processes using manualTrigger, mondayCom",
      "analysis_timestamp": "2025-06-01T16:06:48.775836"
    },
    {
      "original_filename": "ai_agent_ai_process_splitinbatches_supabase.json",
      "workflow_name": "ai_agent_ai_process_splitinbatches_supabase",
      "suggested_filename": "ai_agent_ai_process_splitinbatches_supabase.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "httpRequest",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "extractFromFile",
        "@n8n/langchain.embeddingsOpenAi",
        "supabase",
        "if",
        "splitInBatches",
        "manualTrigger",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 33,
      "complexity": "High",
      "total_nodes": 33,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "n8n-nodes-base.supabase": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase": 2,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 11
      },
      "business_value": "Automates agent processes using httpRequest, @n8n/langchain.documentDefaultDataLoader, @n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
      "analysis_timestamp": "2025-06-01T16:06:48.776327"
    },
    {
      "original_filename": "data_compare_automate_comparedatasets_manual.json",
      "workflow_name": "Compare 2 SQL datasets",
      "suggested_filename": "data_compare_automate_comparedatasets_manual.json",
      "category": "DATA",
      "business_function": "compare",
      "key_integrations": [
        "manualTrigger",
        "compareDatasets",
        "mySql",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.compareDatasets": 1,
        "n8n-nodes-base.mySql": 2,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates compare processes using manualTrigger, compareDatasets, mySql",
      "analysis_timestamp": "2025-06-01T16:06:48.776637"
    },
    {
      "original_filename": "comm_woocommerce_automate_slack_woocommerce_1.json",
      "workflow_name": "New WooCommerce refund to Slack",
      "suggested_filename": "comm_woocommerce_automate_slack_woocommerce_1.json",
      "category": "COMM",
      "business_function": "woocommerce",
      "key_integrations": [
        "wooCommerceTrigger",
        "if",
        "slack"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.wooCommerceTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates woocommerce processes using wooCommerceTrigger, if, slack",
      "analysis_timestamp": "2025-06-01T16:06:48.776872"
    },
    {
      "original_filename": "ai_2347_workflow_2347_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_2347_workflow_2347_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_2347_workflow_2347_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "2347",
      "key_integrations": [
        "manualTrigger",
        "set",
        "stickyNote",
        "code",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.toolCode",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.agent",
        "n8n"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolCode": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.n8n": 1
      },
      "business_value": "Automates 2347 processes using manualTrigger, set, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.777180"
    },
    {
      "original_filename": "ai_langchain_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchai.json",
      "workflow_name": "[AI/LangChain] Output Parser 4",
      "suggested_filename": "ai_langchain_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchai.json",
      "category": "AI",
      "business_function": "langchain",
      "key_integrations": [
        "manualTrigger",
        "set",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.outputParserAutofixing",
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2
      },
      "business_value": "Automates langchain processes using manualTrigger, set, @n8n/langchain.chainLlm",
      "analysis_timestamp": "2025-06-01T16:06:48.777421"
    },
    {
      "original_filename": "util_activity_automate_strava_emailsend_cron.json",
      "workflow_name": "Activity Encouragement",
      "suggested_filename": "util_activity_automate_strava_emailsend_cron.json",
      "category": "UTIL",
      "business_function": "activity",
      "key_integrations": [
        "strava",
        "set",
        "if",
        "emailSend",
        "cron"
      ],
      "trigger_type": "email",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.strava": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates activity processes using strava, set, if",
      "analysis_timestamp": "2025-06-01T16:06:48.777669"
    },
    {
      "original_filename": "comm_2543_workflow_2543_automate_schedule_wordpress_cron.json",
      "workflow_name": "comm_2543_workflow_2543_automate_schedule_wordpress_cron",
      "suggested_filename": "comm_2543_workflow_2543_automate_schedule_wordpress_cron.json",
      "category": "COMM",
      "business_function": "2543",
      "key_integrations": [
        "zoom",
        "scheduleTrigger",
        "wordpress",
        "slack"
      ],
      "trigger_type": "cron",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.zoom": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates 2543 processes using zoom, scheduleTrigger, wordpress",
      "analysis_timestamp": "2025-06-01T16:06:48.777788"
    },
    {
      "original_filename": "util_767_workflow_767_automate_generic.json",
      "workflow_name": "util_767_workflow_767_automate_generic",
      "suggested_filename": "util_767_workflow_767_automate_generic.json",
      "category": "UTIL",
      "business_function": "767",
      "key_integrations": [
        "function"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.function": 2
      },
      "business_value": "Automates 767 processes using function",
      "analysis_timestamp": "2025-06-01T16:06:48.778077"
    },
    {
      "original_filename": "data_598_workflow_598_automate_manual_mysql.json",
      "workflow_name": "data_598_workflow_598_automate_manual_mysql",
      "suggested_filename": "data_598_workflow_598_automate_manual_mysql.json",
      "category": "DATA",
      "business_function": "598",
      "key_integrations": [
        "manualTrigger",
        "mySql",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.mySql": 2,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 598 processes using manualTrigger, mySql, set",
      "analysis_timestamp": "2025-06-01T16:06:48.778194"
    },
    {
      "original_filename": "data_1791_workflow_1791_automate_googlesheets_movebinarydata.json",
      "workflow_name": "data_1791_workflow_1791_automate_googlesheets_movebinarydata",
      "suggested_filename": "data_1791_workflow_1791_automate_googlesheets_movebinarydata.json",
      "category": "DATA",
      "business_function": "1791",
      "key_integrations": [
        "googleSheets",
        "readBinaryFile",
        "moveBinaryData"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.readBinaryFile": 1,
        "n8n-nodes-base.moveBinaryData": 1
      },
      "business_value": "Automates 1791 processes using googleSheets, readBinaryFile, moveBinaryData",
      "analysis_timestamp": "2025-06-01T16:06:48.778298"
    },
    {
      "original_filename": "util_volume_create_manual_googlebooks.json",
      "workflow_name": "Get a volume and add it to your bookshelf",
      "suggested_filename": "util_volume_create_manual_googlebooks.json",
      "category": "UTIL",
      "business_function": "volume",
      "key_integrations": [
        "manualTrigger",
        "googleBooks"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleBooks": 3
      },
      "business_value": "Automates volume processes using manualTrigger, googleBooks",
      "analysis_timestamp": "2025-06-01T16:06:48.778402"
    },
    {
      "original_filename": "data_track_monitor_notion_webhook_webhook.json",
      "workflow_name": "Track Working Time and Pauses",
      "suggested_filename": "data_track_monitor_notion_webhook_webhook.json",
      "category": "DATA",
      "business_function": "track",
      "key_integrations": [
        "notion",
        "if",
        "set",
        "switch",
        "stickyNote",
        "respondToWebhook",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 30,
      "complexity": "High",
      "total_nodes": 30,
      "node_types": {
        "n8n-nodes-base.notion": 7,
        "n8n-nodes-base.if": 5,
        "n8n-nodes-base.set": 9,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates track processes using notion, if, set",
      "analysis_timestamp": "2025-06-01T16:06:48.778839"
    },
    {
      "original_filename": "data_2169_workflow_2169_automate_postgres_schedule_cron.json",
      "workflow_name": "data_2169_workflow_2169_automate_postgres_schedule_cron",
      "suggested_filename": "data_2169_workflow_2169_automate_postgres_schedule_cron.json",
      "category": "DATA",
      "business_function": "2169",
      "key_integrations": [
        "postgres",
        "set",
        "filter",
        "manualTrigger",
        "scheduleTrigger",
        "n8n"
      ],
      "trigger_type": "cron",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.postgres": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.n8n": 1
      },
      "business_value": "Automates 2169 processes using postgres, set, filter",
      "analysis_timestamp": "2025-06-01T16:06:48.779139"
    },
    {
      "original_filename": "util_2291_workflow_2291_automate_httprequest_sendinblue.json",
      "workflow_name": "util_2291_workflow_2291_automate_httprequest_sendinblue",
      "suggested_filename": "util_2291_workflow_2291_automate_httprequest_sendinblue.json",
      "category": "UTIL",
      "business_function": "2291",
      "key_integrations": [
        "httpRequest",
        "if",
        "executeWorkflowTrigger",
        "stickyNote",
        "sendInBlue"
      ],
      "trigger_type": "manual",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.httpRequest": 6,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 12,
        "n8n-nodes-base.sendInBlue": 1
      },
      "business_value": "Automates 2291 processes using httpRequest, if, executeWorkflowTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.779454"
    },
    {
      "original_filename": "comm_evaluation_automate_error_gmail.json",
      "workflow_name": "CV Evaluation - Error Handling",
      "suggested_filename": "comm_evaluation_automate_error_gmail.json",
      "category": "COMM",
      "business_function": "evaluation",
      "key_integrations": [
        "errorTrigger",
        "gmail",
        "merge",
        "set",
        "if",
        "html",
        "code",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.errorTrigger": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates evaluation processes using errorTrigger, gmail, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.779730"
    },
    {
      "original_filename": "util_2475_workflow_2475_automate_httprequest_manual.json",
      "workflow_name": "util_2475_workflow_2475_automate_httprequest_manual",
      "suggested_filename": "util_2475_workflow_2475_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "2475",
      "key_integrations": [
        "manualTrigger",
        "set",
        "splitOut",
        "filter",
        "code",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.noOp": 2
      },
      "business_value": "Automates 2475 processes using manualTrigger, set, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.780035"
    },
    {
      "original_filename": "util_2570_workflow_2570_automate_splitinbatches_httprequest_cron.json",
      "workflow_name": "util_2570_workflow_2570_automate_splitinbatches_httprequest_cron",
      "suggested_filename": "util_2570_workflow_2570_automate_splitinbatches_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "2570",
      "key_integrations": [
        "httpRequest",
        "convertToFile",
        "extractFromFile",
        "splitOut",
        "splitInBatches",
        "wait",
        "code",
        "readWriteFile",
        "set",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.readWriteFile": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 2570 processes using httpRequest, convertToFile, extractFromFile",
      "analysis_timestamp": "2025-06-01T16:06:48.780365"
    },
    {
      "original_filename": "ai_3396_workflow_3396_automate_splitinbatches_n8nnodeslangchaintextclassifier_cr.json",
      "workflow_name": "ai_3396_workflow_3396_automate_splitinbatches_n8nnodeslangchaintextclassifier_cr",
      "suggested_filename": "ai_3396_workflow_3396_automate_splitinbatches_n8nnodeslangchaintextclassifier_cr.json",
      "category": "AI",
      "business_function": "3396",
      "key_integrations": [
        "code",
        "microsoftOutlook",
        "set",
        "splitInBatches",
        "@n8n/langchain.textClassifier",
        "extractFromFile",
        "markdown",
        "wait",
        "filter",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.microsoftOutlook": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.noOp": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 6,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.microsoftExcel": 1,
        "n8n-nodes-base.httpRequest": 2
      },
      "business_value": "Automates 3396 processes using code, microsoftOutlook, set",
      "analysis_timestamp": "2025-06-01T16:06:48.780654"
    },
    {
      "original_filename": "util_update_update_httprequest_manual_1.json",
      "workflow_name": "Update Roles by Excel",
      "suggested_filename": "util_update_update_httprequest_manual_1.json",
      "category": "UTIL",
      "business_function": "update",
      "key_integrations": [
        "manualTrigger",
        "extractFromFile",
        "merge",
        "set",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates update processes using manualTrigger, extractFromFile, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.780919"
    },
    {
      "original_filename": "comm_update_update_ssh_httprequest_cron.json",
      "workflow_name": "n8n update",
      "suggested_filename": "comm_update_update_ssh_httprequest_cron.json",
      "category": "COMM",
      "business_function": "update",
      "key_integrations": [
        "ssh",
        "manualTrigger",
        "scheduleTrigger",
        "stickyNote",
        "set",
        "httpRequest",
        "merge",
        "if",
        "telegram"
      ],
      "trigger_type": "cron",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "n8n-nodes-base.ssh": 4,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 13,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.telegram": 3
      },
      "business_value": "Automates update processes using ssh, manualTrigger, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.781236"
    },
    {
      "original_filename": "util_task_create_task_googletasks_manual.json",
      "workflow_name": "Add task to tasklist",
      "suggested_filename": "util_task_create_task_googletasks_manual.json",
      "category": "UTIL",
      "business_function": "task",
      "key_integrations": [
        "manualTrigger",
        "googleTasks"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleTasks": 1
      },
      "business_value": "Automates task processes using manualTrigger, googleTasks",
      "analysis_timestamp": "2025-06-01T16:06:48.781342"
    },
    {
      "original_filename": "comm_post_automate_rocketchat_manual.json",
      "workflow_name": "Post a message to a channel in RocketChat",
      "suggested_filename": "comm_post_automate_rocketchat_manual.json",
      "category": "COMM",
      "business_function": "post",
      "key_integrations": [
        "manualTrigger",
        "rocketchat"
      ],
      "trigger_type": "chat",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.rocketchat": 1
      },
      "business_value": "Automates post processes using manualTrigger, rocketchat",
      "analysis_timestamp": "2025-06-01T16:06:48.781532"
    },
    {
      "original_filename": "util_create_create_trello_manual.json",
      "workflow_name": "Create a new card in Trello",
      "suggested_filename": "util_create_create_trello_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "trello"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.trello": 1
      },
      "business_value": "Automates create processes using manualTrigger, trello",
      "analysis_timestamp": "2025-06-01T16:06:48.781715"
    },
    {
      "original_filename": "ai_auto_automate_wordpress_n8nnodeslangchainlmchatopenai_2.json",
      "workflow_name": "Auto categorize wordpress template",
      "suggested_filename": "ai_auto_automate_wordpress_n8nnodeslangchainlmchatopenai_2.json",
      "category": "AI",
      "business_function": "auto",
      "key_integrations": [
        "manualTrigger",
        "wordpress",
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.wordpress": 2,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates auto processes using manualTrigger, wordpress, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.781929"
    },
    {
      "original_filename": "ai_2666_workflow_2666_automate_gmail_httprequest.json",
      "workflow_name": "ai_2666_workflow_2666_automate_gmail_httprequest",
      "suggested_filename": "ai_2666_workflow_2666_automate_gmail_httprequest.json",
      "category": "AI",
      "business_function": "2666",
      "key_integrations": [
        "gmailTrigger",
        "microsoftOutlookTrigger",
        "httpRequest",
        "set",
        "code",
        "@n8n/langchain.openAi",
        "jira",
        "convertToFile",
        "stickyNote",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.microsoftOutlookTrigger": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.code": 3,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.jira": 4,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 2666 processes using gmailTrigger, microsoftOutlookTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.782331"
    },
    {
      "original_filename": "ai_screening_ai_process_n8nnodeslangchainchainllm_gmail_1.json",
      "workflow_name": "AI CV Screening Workflow",
      "suggested_filename": "ai_screening_ai_process_n8nnodeslangchainchainllm_gmail_1.json",
      "category": "AI",
      "business_function": "screening",
      "key_integrations": [
        "@n8n/langchain.lmChatGoogleGemini",
        "gmail",
        "@n8n/langchain.chainLlm",
        "extractFromFile",
        "formTrigger",
        "googleSheets"
      ],
      "trigger_type": "chat",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.gmail": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates screening processes using @n8n/langchain.lmChatGoogleGemini, gmail, @n8n/langchain.chainLlm",
      "analysis_timestamp": "2025-06-01T16:06:48.782808"
    },
    {
      "original_filename": "comm_1534_workflow_1534_automate_splitinbatches_slack_cron.json",
      "workflow_name": "comm_1534_workflow_1534_automate_splitinbatches_slack_cron",
      "suggested_filename": "comm_1534_workflow_1534_automate_splitinbatches_slack_cron.json",
      "category": "COMM",
      "business_function": "1534",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "executeWorkflowTrigger",
        "n8n",
        "set",
        "httpRequest",
        "if",
        "merge",
        "code",
        "switch"
      ],
      "trigger_type": "cron",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.noOp": 3,
        "n8n-nodes-base.github": 3,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.slack": 3,
        "n8n-nodes-base.executeWorkflow": 1
      },
      "business_value": "Automates 1534 processes using manualTrigger, stickyNote, executeWorkflowTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.783204"
    },
    {
      "original_filename": "comm_2407_workflow_2407_automate_gmail_schedule_cron.json",
      "workflow_name": "comm_2407_workflow_2407_automate_gmail_schedule_cron",
      "suggested_filename": "comm_2407_workflow_2407_automate_gmail_schedule_cron.json",
      "category": "COMM",
      "business_function": "2407",
      "key_integrations": [
        "scheduleTrigger",
        "airtable",
        "code",
        "html",
        "set",
        "gmail",
        "stickyNote",
        "webhook"
      ],
      "trigger_type": "cron",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 2407 processes using scheduleTrigger, airtable, code",
      "analysis_timestamp": "2025-06-01T16:06:48.783525"
    },
    {
      "original_filename": "ai_linkedin_ai_process_httprequest_schedule_cron_2.json",
      "workflow_name": "LinkedIn Leads Scraping & Enrichment (Main)",
      "suggested_filename": "ai_linkedin_ai_process_httprequest_schedule_cron_2.json",
      "category": "AI",
      "business_function": "linkedin",
      "key_integrations": [
        "formTrigger",
        "splitOut",
        "googleSheetsTrigger",
        "@n8n/langchain.openAi",
        "stickyNote",
        "set",
        "googleSheets",
        "scheduleTrigger",
        "httpRequest",
        "code"
      ],
      "trigger_type": "cron",
      "complexity_score": 66,
      "complexity": "High",
      "total_nodes": 66,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleSheetsTrigger": 6,
        "@n8n/n8n-nodes-langchain.openAi": 5,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleSheets": 23,
        "n8n-nodes-base.scheduleTrigger": 3,
        "n8n-nodes-base.httpRequest": 6,
        "n8n-nodes-base.code": 8,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates linkedin processes using formTrigger, splitOut, googleSheetsTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.784586"
    },
    {
      "original_filename": "data_line_automate_httprequest_webhook_webhook_2.json",
      "workflow_name": "Line Save File to Google Drive and Log File's URL",
      "suggested_filename": "data_line_automate_httprequest_webhook_webhook_2.json",
      "category": "DATA",
      "business_function": "line",
      "key_integrations": [
        "googleSheets",
        "googleDrive",
        "code",
        "merge",
        "if",
        "httpRequest",
        "webhook",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.googleDrive": 5,
        "n8n-nodes-base.code": 6,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.if": 5,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates line processes using googleSheets, googleDrive, code",
      "analysis_timestamp": "2025-06-01T16:06:48.785073"
    },
    {
      "original_filename": "comm_sending_automate_messagebird_manual.json",
      "workflow_name": "Sending an SMS with MessageBird",
      "suggested_filename": "comm_sending_automate_messagebird_manual.json",
      "category": "COMM",
      "business_function": "sending",
      "key_integrations": [
        "manualTrigger",
        "messageBird"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.messageBird": 1
      },
      "business_value": "Automates sending processes using manualTrigger, messageBird",
      "analysis_timestamp": "2025-06-01T16:06:48.785202"
    },
    {
      "original_filename": "ai_2094_workflow_2094_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_2094_workflow_2094_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_2094_workflow_2094_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "2094",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "executeWorkflowTrigger",
        "@n8n/langchain.informationExtractor",
        "httpRequest",
        "@n8n/langchain.toolWorkflow",
        "set",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates 2094 processes using stickyNote, @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.785469"
    },
    {
      "original_filename": "data_11_workflow_11_automate_spreadsheetfile_googlesheets.json",
      "workflow_name": "data_11_workflow_11_automate_spreadsheetfile_googlesheets",
      "suggested_filename": "data_11_workflow_11_automate_spreadsheetfile_googlesheets.json",
      "category": "DATA",
      "business_function": "11",
      "key_integrations": [
        "googleSheets",
        "spreadsheetFile",
        "dropbox",
        "interval"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.dropbox": 1,
        "n8n-nodes-base.interval": 1
      },
      "business_value": "Automates 11 processes using googleSheets, spreadsheetFile, dropbox",
      "analysis_timestamp": "2025-06-01T16:06:48.785668"
    },
    {
      "original_filename": "ai_twitter_ai_process_schedule_manual_cron.json",
      "workflow_name": "ai_twitter_ai_process_schedule_manual_cron",
      "suggested_filename": "ai_twitter_ai_process_schedule_manual_cron.json",
      "category": "AI",
      "business_function": "twitter",
      "key_integrations": [
        "stickyNote",
        "twitter",
        "scheduleTrigger",
        "manualTrigger",
        "if",
        "@n8n/langchain.openAi",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates twitter processes using stickyNote, twitter, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.785906"
    },
    {
      "original_filename": "util_receive_update_trello.json",
      "workflow_name": "Receive updates for changes in the specified list in Trello",
      "suggested_filename": "util_receive_update_trello.json",
      "category": "UTIL",
      "business_function": "receive",
      "key_integrations": [
        "trelloTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.trelloTrigger": 1
      },
      "business_value": "Automates receive processes using trelloTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.786103"
    },
    {
      "original_filename": "util_2133_workflow_2133_automate_httprequest_webhook_webhook.json",
      "workflow_name": "util_2133_workflow_2133_automate_httprequest_webhook_webhook",
      "suggested_filename": "util_2133_workflow_2133_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "2133",
      "key_integrations": [
        "respondToWebhook",
        "webhook",
        "httpRequest",
        "xml",
        "splitOut",
        "if",
        "filter",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.xml": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 2133 processes using respondToWebhook, webhook, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.786323"
    },
    {
      "original_filename": "util_create_create_pagerduty_manual.json",
      "workflow_name": "Create, update, and get an incident on PagerDuty",
      "suggested_filename": "util_create_create_pagerduty_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "pagerDuty"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.pagerDuty": 3
      },
      "business_value": "Automates create processes using manualTrigger, pagerDuty",
      "analysis_timestamp": "2025-06-01T16:06:48.786522"
    },
    {
      "original_filename": "analytics_steam_report_webhook_mailgun_webhook.json",
      "workflow_name": "Steam + CF Report",
      "suggested_filename": "analytics_steam_report_webhook_mailgun_webhook.json",
      "category": "ANALYTICS",
      "business_function": "steam",
      "key_integrations": [
        "webhook",
        "executeCommand",
        "if",
        "mailgun"
      ],
      "trigger_type": "webhook",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.executeCommand": 3,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.mailgun": 2
      },
      "business_value": "Automates steam processes using webhook, executeCommand, if",
      "analysis_timestamp": "2025-06-01T16:06:48.786745"
    },
    {
      "original_filename": "util_2334_workflow_2334_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutp.json",
      "workflow_name": "util_2334_workflow_2334_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutp",
      "suggested_filename": "util_2334_workflow_2334_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutp.json",
      "category": "UTIL",
      "business_function": "2334",
      "key_integrations": [
        "localFileTrigger",
        "executeCommand",
        "set",
        "@n8n/langchain.lmChatMistralCloud",
        "@n8n/langchain.outputParserStructured",
        "stickyNote",
        "if",
        "splitOut",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.localFileTrigger": 1,
        "n8n-nodes-base.executeCommand": 2,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates 2334 processes using localFileTrigger, executeCommand, set",
      "analysis_timestamp": "2025-06-01T16:06:48.787042"
    },
    {
      "original_filename": "data_company_automate_googlesheets_manual.json",
      "workflow_name": "ICP Company Scoring",
      "suggested_filename": "data_company_automate_googlesheets_manual.json",
      "category": "DATA",
      "business_function": "company",
      "key_integrations": [
        "manualTrigger",
        "googleSheets",
        "airtop",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.airtop": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates company processes using manualTrigger, googleSheets, airtop",
      "analysis_timestamp": "2025-06-01T16:06:48.787361"
    },
    {
      "original_filename": "util_2147_workflow_2147_automate_crypto_itemlists_cron.json",
      "workflow_name": "util_2147_workflow_2147_automate_crypto_itemlists_cron",
      "suggested_filename": "util_2147_workflow_2147_automate_crypto_itemlists_cron.json",
      "category": "UTIL",
      "business_function": "2147",
      "key_integrations": [
        "if",
        "scheduleTrigger",
        "todoist",
        "dateTime",
        "stickyNote",
        "set",
        "filter",
        "crypto",
        "itemLists",
        "httpRequest"
      ],
      "trigger_type": "cron",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.scheduleTrigger": 2,
        "n8n-nodes-base.todoist": 2,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.crypto": 1,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 2147 processes using if, scheduleTrigger, todoist",
      "analysis_timestamp": "2025-06-01T16:06:48.787739"
    },
    {
      "original_filename": "data_1933_workflow_1933_automate_spreadsheetfile_httprequest.json",
      "workflow_name": "data_1933_workflow_1933_automate_spreadsheetfile_httprequest",
      "suggested_filename": "data_1933_workflow_1933_automate_spreadsheetfile_httprequest.json",
      "category": "DATA",
      "business_function": "1933",
      "key_integrations": [
        "httpRequest",
        "spreadsheetFile",
        "stickyNote",
        "manualTrigger",
        "googleSheets",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 1933 processes using httpRequest, spreadsheetFile, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.788017"
    },
    {
      "original_filename": "ai_create_ai_process_humanticai_httprequest_2.json",
      "workflow_name": "Create, update, and get a profile in Humantic AI",
      "suggested_filename": "ai_create_ai_process_humanticai_httprequest_2.json",
      "category": "AI",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "humanticAi",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.humanticAi": 3,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates create processes using manualTrigger, humanticAi, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.788141"
    },
    {
      "original_filename": "util_990_workflow_990_automate_autopilot.json",
      "workflow_name": "util_990_workflow_990_automate_autopilot",
      "suggested_filename": "util_990_workflow_990_automate_autopilot.json",
      "category": "UTIL",
      "business_function": "990",
      "key_integrations": [
        "autopilot"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.autopilot": 4
      },
      "business_value": "Automates 990 processes using autopilot",
      "analysis_timestamp": "2025-06-01T16:06:48.788251"
    },
    {
      "original_filename": "util_automate_update_jira_figma.json",
      "workflow_name": "Automate Figma Versioning and Jira Updates with n8n Webhook Integration",
      "suggested_filename": "util_automate_update_jira_figma.json",
      "category": "UTIL",
      "business_function": "automate",
      "key_integrations": [
        "stickyNote",
        "jira",
        "figmaTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.jira": 2,
        "n8n-nodes-base.figmaTrigger": 1
      },
      "business_value": "Automates automate processes using stickyNote, jira, figmaTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.788484"
    },
    {
      "original_filename": "content_generate_generate_httprequest_manual.json",
      "workflow_name": "Generate 360° Virtual Try-on Videos for Clothing with Kling API",
      "suggested_filename": "content_generate_generate_httprequest_manual.json",
      "category": "CONTENT",
      "business_function": "generate",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "switch",
        "set",
        "if",
        "wait",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.wait": 2,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates generate processes using manualTrigger, httpRequest, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.788804"
    },
    {
      "original_filename": "ai_actioning_ai_process_n8nnodeslangchainoutputparserstructured_httprequest.json",
      "workflow_name": "ai_actioning_ai_process_n8nnodeslangchainoutputparserstructured_httprequest",
      "suggested_filename": "ai_actioning_ai_process_n8nnodeslangchainoutputparserstructured_httprequest.json",
      "category": "AI",
      "business_function": "actioning",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "httpRequest",
        "googleDrive",
        "manualTrigger",
        "extractFromFile",
        "googleCalendar",
        "@n8n/langchain.outputParserStructured",
        "executeWorkflowTrigger",
        "set",
        "switch"
      ],
      "trigger_type": "chat",
      "complexity_score": 28,
      "complexity": "High",
      "total_nodes": 28,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.googleCalendar": 3,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.stickyNote": 9,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates actioning processes using @n8n/langchain.lmChatOpenAi, httpRequest, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.789244"
    },
    {
      "original_filename": "comm_1134_workflow_1134_automate_telegram_github.json",
      "workflow_name": "comm_1134_workflow_1134_automate_telegram_github",
      "suggested_filename": "comm_1134_workflow_1134_automate_telegram_github.json",
      "category": "COMM",
      "business_function": "1134",
      "key_integrations": [
        "telegramTrigger",
        "if",
        "github",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.github": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 1134 processes using telegramTrigger, if, github",
      "analysis_timestamp": "2025-06-01T16:06:48.789512"
    },
    {
      "original_filename": "util_general_automate_httprequest_manual.json",
      "workflow_name": "General 3D Presentation",
      "suggested_filename": "util_general_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "general",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "wait",
        "if",
        "code",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.wait": 2,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates general processes using manualTrigger, httpRequest, wait",
      "analysis_timestamp": "2025-06-01T16:06:48.789840"
    },
    {
      "original_filename": "util_3709_workflow_3709_automate_manual_googledrive.json",
      "workflow_name": "util_3709_workflow_3709_automate_manual_googledrive",
      "suggested_filename": "util_3709_workflow_3709_automate_manual_googledrive.json",
      "category": "UTIL",
      "business_function": "3709",
      "key_integrations": [
        "manualTrigger",
        "code",
        "executeWorkflowTrigger",
        "set",
        "googleDrive",
        "if",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates 3709 processes using manualTrigger, code, executeWorkflowTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.790141"
    },
    {
      "original_filename": "ai_summarize_ai_process_gmail_markdown_1.json",
      "workflow_name": "Summarize Google Sheets form feedback via OpenAI's GPT-4",
      "suggested_filename": "ai_summarize_ai_process_gmail_markdown_1.json",
      "category": "AI",
      "business_function": "summarize",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "googleSheets",
        "aggregate",
        "openAi",
        "markdown",
        "gmail"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates summarize processes using manualTrigger, stickyNote, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.790387"
    },
    {
      "original_filename": "ai_analyze_analyze_httprequest_manual_2.json",
      "workflow_name": "Analyze Screenshots with AI",
      "suggested_filename": "ai_analyze_analyze_httprequest_manual_2.json",
      "category": "AI",
      "business_function": "analyze",
      "key_integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "@n8n/langchain.openAi",
        "merge",
        "manualTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates analyze processes using stickyNote, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.790624"
    },
    {
      "original_filename": "comm_398_workflow_398_automate_slack_emailsend.json",
      "workflow_name": "comm_398_workflow_398_automate_slack_emailsend",
      "suggested_filename": "comm_398_workflow_398_automate_slack_emailsend.json",
      "category": "COMM",
      "business_function": "398",
      "key_integrations": [
        "typeformTrigger",
        "if",
        "googleSheets",
        "emailSend",
        "slack"
      ],
      "trigger_type": "email",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates 398 processes using typeformTrigger, if, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.790760"
    },
    {
      "original_filename": "ai_agent_ai_process_httprequest_sort_cron_2.json",
      "workflow_name": "🤖🧑‍💻 AI Agent for Top n8n Creators Leaderboard Reporting",
      "suggested_filename": "ai_agent_ai_process_httprequest_sort_cron_2.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "httpRequest",
        "set",
        "aggregate",
        "@n8n/langchain.lmChatOpenAi",
        "executeWorkflowTrigger",
        "@n8n/langchain.toolWorkflow",
        "convertToFile",
        "readWriteFile",
        "stickyNote",
        "merge"
      ],
      "trigger_type": "chat",
      "complexity_score": 49,
      "complexity": "High",
      "total_nodes": 49,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 6,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.stickyNote": 18,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.sort": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.limit": 2,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.markdown": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates agent processes using httpRequest, set, aggregate",
      "analysis_timestamp": "2025-06-01T16:06:48.791332"
    },
    {
      "original_filename": "ai_chat_ai_process_n8nnodeslangchainlmchatopenai_telegram.json",
      "workflow_name": "ai_chat_ai_process_n8nnodeslangchainlmchatopenai_telegram",
      "suggested_filename": "ai_chat_ai_process_n8nnodeslangchainlmchatopenai_telegram.json",
      "category": "AI",
      "business_function": "chat",
      "key_integrations": [
        "telegramTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.agent",
        "telegram"
      ],
      "trigger_type": "chat",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates chat processes using telegramTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.791463"
    },
    {
      "original_filename": "comm_2131_workflow_2131_automate_hubspot_slack_cron.json",
      "workflow_name": "comm_2131_workflow_2131_automate_hubspot_slack_cron",
      "suggested_filename": "comm_2131_workflow_2131_automate_hubspot_slack_cron.json",
      "category": "COMM",
      "business_function": "2131",
      "key_integrations": [
        "hubspot",
        "slack",
        "stickyNote",
        "scheduleTrigger",
        "filter"
      ],
      "trigger_type": "cron",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.hubspot": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates 2131 processes using hubspot, slack, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.791701"
    },
    {
      "original_filename": "ai_2322_workflow_2322_automate_httprequest_bannerbear.json",
      "workflow_name": "ai_2322_workflow_2322_automate_httprequest_bannerbear",
      "suggested_filename": "ai_2322_workflow_2322_automate_httprequest_bannerbear.json",
      "category": "AI",
      "business_function": "2322",
      "key_integrations": [
        "formTrigger",
        "httpRequest",
        "bannerbear",
        "set",
        "stickyNote",
        "discord",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.bannerbear": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.discord": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates 2322 processes using formTrigger, httpRequest, bannerbear",
      "analysis_timestamp": "2025-06-01T16:06:48.792047"
    },
    {
      "original_filename": "util_find_automate_splitinbatches_googledocs.json",
      "workflow_name": "🦙👁️👁️ Find the Best Local Ollama Vision Models by Comparison",
      "suggested_filename": "util_find_automate_splitinbatches_googledocs.json",
      "category": "UTIL",
      "business_function": "find",
      "key_integrations": [
        "stickyNote",
        "manualTrigger",
        "httpRequest",
        "set",
        "splitInBatches",
        "extractFromFile",
        "googleDrive",
        "splitOut",
        "googleDocs"
      ],
      "trigger_type": "manual",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 6,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleDocs": 1
      },
      "business_value": "Automates find processes using stickyNote, manualTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.792370"
    },
    {
      "original_filename": "data_archive_backup_splitinbatches_notion_cron.json",
      "workflow_name": "Archive empty pages in Notion Database",
      "suggested_filename": "data_archive_backup_splitinbatches_notion_cron.json",
      "category": "DATA",
      "business_function": "archive",
      "key_integrations": [
        "notion",
        "function",
        "splitInBatches",
        "if",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.notion": 4,
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates archive processes using notion, function, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.792607"
    },
    {
      "original_filename": "ai_1959_workflow_1959_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_1959_workflow_1959_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_1959_workflow_1959_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "1959",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolSerpApi",
        "@n8n/langchain.toolWikipedia",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolSerpApi": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates 1959 processes using stickyNote, @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.792836"
    },
    {
      "original_filename": "ai_3891_workflow_3891_automate_reddit_n8nnodeslangchainoutputparserstructured_cr.json",
      "workflow_name": "ai_3891_workflow_3891_automate_reddit_n8nnodeslangchainoutputparserstructured_cr",
      "suggested_filename": "ai_3891_workflow_3891_automate_reddit_n8nnodeslangchainoutputparserstructured_cr.json",
      "category": "AI",
      "business_function": "3891",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.openAi",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.informationExtractor",
        "@n8n/langchain.chainRetrievalQa",
        "@n8n/langchain.sentimentAnalysis",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.textClassifier",
        "@n8n/langchain.memoryManager",
        "bitly"
      ],
      "trigger_type": "email",
      "complexity_score": 113,
      "complexity": "High",
      "total_nodes": 113,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.sentimentAnalysis": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "@n8n/n8n-nodes-langchain.memoryManager": 1,
        "n8n-nodes-base.bitly": 1,
        "n8n-nodes-base.dropbox": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.googleCalendar": 1,
        "n8n-nodes-base.googleDocs": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.pushbullet": 1,
        "n8n-nodes-base.youTube": 1,
        "@muench-dev/n8n-nodes-bluesky.bluesky": 1,
        "@watzon/n8n-nodes-perplexity.perplexity": 1,
        "n8n-nodes-elevenlabs.elevenLabs": 1,
        "n8n-nodes-base.reddit": 1,
        "n8n-nodes-base.gmailTrigger": 2,
        "n8n-nodes-base.googleSheetsTrigger": 2,
        "n8n-nodes-base.stickyNote": 16,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.toolCode": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "n8n-nodes-base.postgresTool": 1,
        "n8n-nodes-base.redisTool": 1,
        "n8n-nodes-base.emailSendTool": 1,
        "@n8n/n8n-nodes-langchain.toolSerpApi": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "@n8n/n8n-nodes-langchain.toolWolframAlpha": 1,
        "n8n-nodes-base.gmailTool": 1,
        "n8n-nodes-base.googleCalendarTool": 1,
        "n8n-nodes-base.googleDocsTool": 1,
        "n8n-nodes-base.googleSheetsTool": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePGVector": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase": 1,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.memoryPostgresChat": 1,
        "@n8n/n8n-nodes-langchain.memoryRedisChat": 1,
        "@n8n/n8n-nodes-langchain.outputParserItemList": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.calendlyTrigger": 1,
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.gumroadTrigger": 1,
        "n8n-nodes-base.localFileTrigger": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.summarize": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.renameKeys": 1,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.executeCommand": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.executionData": 1,
        "n8n-nodes-base.ftp": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.rssFeedRead": 1,
        "n8n-nodes-base.aiTransform": 1,
        "@n8n/n8n-nodes-langchain.mcpClientTool": 1
      },
      "business_value": "Automates 3891 processes using @n8n/langchain.agent, @n8n/langchain.openAi, @n8n/langchain.chainLlm",
      "analysis_timestamp": "2025-06-01T16:06:48.793453"
    },
    {
      "original_filename": "data_2076_workflow_2076_automate_itemlists_httprequest_cron.json",
      "workflow_name": "data_2076_workflow_2076_automate_itemlists_httprequest_cron",
      "suggested_filename": "data_2076_workflow_2076_automate_itemlists_httprequest_cron.json",
      "category": "DATA",
      "business_function": "2076",
      "key_integrations": [
        "itemLists",
        "httpRequest",
        "googleSheets",
        "set",
        "merge",
        "stickyNote",
        "scheduleTrigger",
        "code"
      ],
      "trigger_type": "cron",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates 2076 processes using itemLists, httpRequest, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.793805"
    },
    {
      "original_filename": "comm_2054_workflow_2054_automate_httprequest_schedule_cron.json",
      "workflow_name": "comm_2054_workflow_2054_automate_httprequest_schedule_cron",
      "suggested_filename": "comm_2054_workflow_2054_automate_httprequest_schedule_cron.json",
      "category": "COMM",
      "business_function": "2054",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "set",
        "merge",
        "code",
        "scheduleTrigger",
        "redis",
        "microsoftTeams",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.redis": 2,
        "n8n-nodes-base.microsoftTeams": 1,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates 2054 processes using manualTrigger, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.794202"
    },
    {
      "original_filename": "comm_2853_workflow_2853_automate_splitinbatches_supabase_cron.json",
      "workflow_name": "comm_2853_workflow_2853_automate_splitinbatches_supabase_cron",
      "suggested_filename": "comm_2853_workflow_2853_automate_splitinbatches_supabase_cron.json",
      "category": "COMM",
      "business_function": "2853",
      "key_integrations": [
        "spotify",
        "if",
        "supabase",
        "compareDatasets",
        "scheduleTrigger",
        "wait",
        "set",
        "youTube",
        "splitInBatches",
        "discord"
      ],
      "trigger_type": "cron",
      "complexity_score": 54,
      "complexity": "High",
      "total_nodes": 54,
      "node_types": {
        "n8n-nodes-base.spotify": 3,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.supabase": 11,
        "n8n-nodes-base.compareDatasets": 3,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.scheduleTrigger": 5,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.set": 7,
        "n8n-nodes-base.youTube": 5,
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.discord": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.stickyNote": 9
      },
      "business_value": "Automates 2853 processes using spotify, if, supabase",
      "analysis_timestamp": "2025-06-01T16:06:48.794684"
    },
    {
      "original_filename": "util_3690_workflow_3690_automate_httprequest_manual.json",
      "workflow_name": "util_3690_workflow_3690_automate_httprequest_manual",
      "suggested_filename": "util_3690_workflow_3690_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "3690",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates 3690 processes using manualTrigger, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.794990"
    },
    {
      "original_filename": "content_automate_contentful_manual.json",
      "workflow_name": "",
      "suggested_filename": "content_automate_contentful_manual.json",
      "category": "CONTENT",
      "business_function": "automate",
      "key_integrations": [
        "manualTrigger",
        "contentful"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.contentful": 1
      },
      "business_value": "Automates automate processes using manualTrigger, contentful",
      "analysis_timestamp": "2025-06-01T16:06:48.795178"
    },
    {
      "original_filename": "comm_2043_workflow_2043_automate_httprequest_schedule_cron.json",
      "workflow_name": "comm_2043_workflow_2043_automate_httprequest_schedule_cron",
      "suggested_filename": "comm_2043_workflow_2043_automate_httprequest_schedule_cron.json",
      "category": "COMM",
      "business_function": "2043",
      "key_integrations": [
        "scheduleTrigger",
        "telegram",
        "aggregate",
        "httpRequest",
        "function",
        "code",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 2043 processes using scheduleTrigger, telegram, aggregate",
      "analysis_timestamp": "2025-06-01T16:06:48.795404"
    },
    {
      "original_filename": "ops_build_automate_manual_travisci.json",
      "workflow_name": "Trigger a build using the TravisCI node",
      "suggested_filename": "ops_build_automate_manual_travisci.json",
      "category": "OPS",
      "business_function": "build",
      "key_integrations": [
        "manualTrigger",
        "travisCi"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.travisCi": 1
      },
      "business_value": "Automates build processes using manualTrigger, travisCi",
      "analysis_timestamp": "2025-06-01T16:06:48.795509"
    },
    {
      "original_filename": "ai_generated_generate_splitinbatches_wordpress_webhook_2.json",
      "workflow_name": "AI-Generated Summary Block for WordPress Posts - with OpenAI, WordPress, Google Sheets & Slack",
      "suggested_filename": "ai_generated_generate_splitinbatches_wordpress_webhook_2.json",
      "category": "AI",
      "business_function": "generated",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.textClassifier",
        "@n8n/langchain.lmChatOpenAi",
        "splitInBatches",
        "if",
        "webhook",
        "scheduleTrigger",
        "httpRequest",
        "googleSheets",
        "markdown"
      ],
      "trigger_type": "chat",
      "complexity_score": 32,
      "complexity": "High",
      "total_nodes": 32,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.markdown": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.stickyNote": 11,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.wordpress": 4,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates generated processes using manualTrigger, @n8n/langchain.textClassifier, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.795974"
    },
    {
      "original_filename": "ai_chatgpt_automate_n8nnodeslangchainchainllm_httprequest_webhook.json",
      "workflow_name": "ai_chatgpt_automate_n8nnodeslangchainchainllm_httprequest_webhook",
      "suggested_filename": "ai_chatgpt_automate_n8nnodeslangchainchainllm_httprequest_webhook.json",
      "category": "AI",
      "business_function": "chatgpt",
      "key_integrations": [
        "stickyNote",
        "webhook",
        "code",
        "splitOut",
        "@n8n/langchain.lmChatOpenAi",
        "httpRequest",
        "if",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "webhook",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.if": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates chatgpt processes using stickyNote, webhook, code",
      "analysis_timestamp": "2025-06-01T16:06:48.796302"
    },
    {
      "original_filename": "data_management_automate_splitinbatches_movebinarydata_cron.json",
      "workflow_name": "Workflow management",
      "suggested_filename": "data_management_automate_splitinbatches_movebinarydata_cron.json",
      "category": "DATA",
      "business_function": "management",
      "key_integrations": [
        "manualTrigger",
        "function",
        "splitInBatches",
        "if",
        "airtable",
        "set",
        "httpRequest",
        "cron",
        "moveBinaryData",
        "dropbox"
      ],
      "trigger_type": "cron",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.function": 3,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.airtable": 3,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.moveBinaryData": 1,
        "n8n-nodes-base.dropbox": 1
      },
      "business_value": "Automates management processes using manualTrigger, function, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.796606"
    },
    {
      "original_filename": "comm_telegram_automate_rssfeedread_telegram_cron.json",
      "workflow_name": "RSS to Telegram",
      "suggested_filename": "comm_telegram_automate_rssfeedread_telegram_cron.json",
      "category": "COMM",
      "business_function": "telegram",
      "key_integrations": [
        "telegram",
        "rssFeedRead",
        "function",
        "if",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.rssFeedRead": 1,
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates telegram processes using telegram, rssFeedRead, function",
      "analysis_timestamp": "2025-06-01T16:06:48.796838"
    },
    {
      "original_filename": "ai_email_ai_process_gmail_schedule_cron_1.json",
      "workflow_name": "Email Summary Agent",
      "suggested_filename": "ai_email_ai_process_gmail_schedule_cron_1.json",
      "category": "AI",
      "business_function": "email",
      "key_integrations": [
        "stickyNote",
        "scheduleTrigger",
        "gmail",
        "aggregate",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates email processes using stickyNote, scheduleTrigger, gmail",
      "analysis_timestamp": "2025-06-01T16:06:48.797080"
    },
    {
      "original_filename": "comm_2150_workflow_2150_automate_error_slack.json",
      "workflow_name": "comm_2150_workflow_2150_automate_error_slack",
      "suggested_filename": "comm_2150_workflow_2150_automate_error_slack.json",
      "category": "COMM",
      "business_function": "2150",
      "key_integrations": [
        "slack",
        "errorTrigger",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.errorTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 2150 processes using slack, errorTrigger, set",
      "analysis_timestamp": "2025-06-01T16:06:48.797305"
    },
    {
      "original_filename": "data_youtube_automate_splitinbatches_postgres.json",
      "workflow_name": "Youtube Searcher",
      "suggested_filename": "data_youtube_automate_splitinbatches_postgres.json",
      "category": "DATA",
      "business_function": "youtube",
      "key_integrations": [
        "splitInBatches",
        "httpRequest",
        "manualTrigger",
        "executeWorkflowTrigger",
        "postgres",
        "youTube",
        "if",
        "code",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.postgres": 6,
        "n8n-nodes-base.youTube": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.code": 4,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates youtube processes using splitInBatches, httpRequest, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.797707"
    },
    {
      "original_filename": "util_588_workflow_588_automate_manual_executeworkflow.json",
      "workflow_name": "util_588_workflow_588_automate_manual_executeworkflow",
      "suggested_filename": "util_588_workflow_588_automate_manual_executeworkflow.json",
      "category": "UTIL",
      "business_function": "588",
      "key_integrations": [
        "manualTrigger",
        "executeWorkflow"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.executeWorkflow": 1
      },
      "business_value": "Automates 588 processes using manualTrigger, executeWorkflow",
      "analysis_timestamp": "2025-06-01T16:06:48.797832"
    },
    {
      "original_filename": "ai_email_ai_process_n8nnodeslangchainmemorybufferwindow_executiondata_cron_1.json",
      "workflow_name": "ai_email_ai_process_n8nnodeslangchainmemorybufferwindow_executiondata_cron_1",
      "suggested_filename": "ai_email_ai_process_n8nnodeslangchainmemorybufferwindow_executiondata_cron_1.json",
      "category": "AI",
      "business_function": "email",
      "key_integrations": [
        "scheduleTrigger",
        "airtable",
        "gmail",
        "executeWorkflow",
        "set",
        "executeWorkflowTrigger",
        "formTrigger",
        "filter",
        "code",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 32,
      "complexity": "High",
      "total_nodes": 32,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.airtable": 6,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.formTrigger": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.executionData": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatGroq": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.editImage": 1
      },
      "business_value": "Automates email processes using scheduleTrigger, airtable, gmail",
      "analysis_timestamp": "2025-06-01T16:06:48.798218"
    },
    {
      "original_filename": "util_3512_workflow_3512_automate_googledrive_googledrive.json",
      "workflow_name": "util_3512_workflow_3512_automate_googledrive_googledrive",
      "suggested_filename": "util_3512_workflow_3512_automate_googledrive_googledrive.json",
      "category": "UTIL",
      "business_function": "3512",
      "key_integrations": [
        "set",
        "filter",
        "code",
        "stickyNote",
        "googleDrive",
        "if",
        "googleDriveTrigger",
        "switch"
      ],
      "trigger_type": "manual",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.googleDrive": 3,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.switch": 2
      },
      "business_value": "Automates 3512 processes using set, filter, code",
      "analysis_timestamp": "2025-06-01T16:06:48.798584"
    },
    {
      "original_filename": "comm_2585_workflow_2585_automate_splitinbatches_slack_webhook.json",
      "workflow_name": "comm_2585_workflow_2585_automate_splitinbatches_slack_webhook",
      "suggested_filename": "comm_2585_workflow_2585_automate_splitinbatches_slack_webhook.json",
      "category": "COMM",
      "business_function": "2585",
      "key_integrations": [
        "set",
        "stickyNote",
        "respondToWebhook",
        "httpRequest",
        "switch",
        "splitInBatches",
        "if",
        "aggregate",
        "webhook",
        "s3"
      ],
      "trigger_type": "webhook",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.respondToWebhook": 3,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.switch": 3,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.s3": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.splitOut": 1
      },
      "business_value": "Automates 2585 processes using set, stickyNote, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:48.799104"
    },
    {
      "original_filename": "data_create_create_snowflake_manual.json",
      "workflow_name": "Create a table, and insert and update data in the table in Snowflake",
      "suggested_filename": "data_create_create_snowflake_manual.json",
      "category": "DATA",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "set",
        "snowflake"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.snowflake": 3
      },
      "business_value": "Automates create processes using manualTrigger, set, snowflake",
      "analysis_timestamp": "2025-06-01T16:06:48.799379"
    },
    {
      "original_filename": "ai_agent_automate_httprequest_markdown.json",
      "workflow_name": "Agent with custom HTTP Request",
      "suggested_filename": "ai_agent_automate_httprequest_markdown.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "@n8n/langchain.manualChatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "httpRequest",
        "set",
        "if",
        "executeWorkflowTrigger",
        "stickyNote",
        "@n8n/langchain.agent",
        "markdown",
        "@n8n/langchain.toolWorkflow"
      ],
      "trigger_type": "chat",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "@n8n/n8n-nodes-langchain.manualChatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 7,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.markdown": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1
      },
      "business_value": "Automates agent processes using @n8n/langchain.manualChatTrigger, @n8n/langchain.lmChatOpenAi, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.799654"
    },
    {
      "original_filename": "ai_2922_workflow_2922_automate_n8nnodeslangchainlmollama_n8nnodeslangchainchainl.json",
      "workflow_name": "ai_2922_workflow_2922_automate_n8nnodeslangchainlmollama_n8nnodeslangchainchainl",
      "suggested_filename": "ai_2922_workflow_2922_automate_n8nnodeslangchainlmollama_n8nnodeslangchainchainl.json",
      "category": "AI",
      "business_function": "2922",
      "key_integrations": [
        "code",
        "splitOut",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatOllama",
        "manualTrigger",
        "set",
        "merge",
        "filter",
        "executeWorkflowTrigger",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.lmOllama": 1,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates 2922 processes using code, splitOut, @n8n/langchain.chainLlm",
      "analysis_timestamp": "2025-06-01T16:06:48.799972"
    },
    {
      "original_filename": "data_congratulations_automate_cron_googlesheets_cron.json",
      "workflow_name": "Congratulations Workflow",
      "suggested_filename": "data_congratulations_automate_cron_googlesheets_cron.json",
      "category": "DATA",
      "business_function": "congratulations",
      "key_integrations": [
        "cron",
        "googleSheets",
        "if",
        "merge",
        "function",
        "twilio"
      ],
      "trigger_type": "cron",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.twilio": 1
      },
      "business_value": "Automates congratulations processes using cron, googleSheets, if",
      "analysis_timestamp": "2025-06-01T16:06:48.800211"
    },
    {
      "original_filename": "util_3331_workflow_3331_automate_webhook_respondtowebhook_webhook.json",
      "workflow_name": "util_3331_workflow_3331_automate_webhook_respondtowebhook_webhook",
      "suggested_filename": "util_3331_workflow_3331_automate_webhook_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "3331",
      "key_integrations": [
        "webhook",
        "respondToWebhook",
        "@custom-js/pdf-toolkit.html2Pdf"
      ],
      "trigger_type": "webhook",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "@custom-js/n8n-nodes-pdf-toolkit.html2Pdf": 1
      },
      "business_value": "Automates 3331 processes using webhook, respondToWebhook, @custom-js/pdf-toolkit.html2Pdf",
      "analysis_timestamp": "2025-06-01T16:06:48.800322"
    },
    {
      "original_filename": "util_credentials_transfer_httprequest_executecommand.json",
      "workflow_name": "Credentials Transfer",
      "suggested_filename": "util_credentials_transfer_httprequest_executecommand.json",
      "category": "UTIL",
      "business_function": "credentials",
      "key_integrations": [
        "form",
        "httpRequest",
        "code",
        "set",
        "executeCommand",
        "readWriteFile",
        "extractFromFile",
        "stickyNote",
        "formTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.form": 4,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.executeCommand": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.formTrigger": 1
      },
      "business_value": "Automates credentials processes using form, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:48.800721"
    },
    {
      "original_filename": "data_2808_workflow_2808_automate_httprequest_manual.json",
      "workflow_name": "data_2808_workflow_2808_automate_httprequest_manual",
      "suggested_filename": "data_2808_workflow_2808_automate_httprequest_manual.json",
      "category": "DATA",
      "business_function": "2808",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "filter",
        "set",
        "code",
        "googleSheets",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates 2808 processes using manualTrigger, httpRequest, filter",
      "analysis_timestamp": "2025-06-01T16:06:48.801173"
    },
    {
      "original_filename": "util_convert_read_webhook_httprequest_webhook.json",
      "workflow_name": "Convert Parquet, Avro, ORC & Feather via ParquetReader to JSON",
      "suggested_filename": "util_convert_read_webhook_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "convert",
      "key_integrations": [
        "httpRequest",
        "webhook",
        "stickyNote",
        "code"
      ],
      "trigger_type": "webhook",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates convert processes using httpRequest, webhook, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.801439"
    },
    {
      "original_filename": "util_receive_update_gumroad.json",
      "workflow_name": "Receive updates when a sale is made in Gumroad",
      "suggested_filename": "util_receive_update_gumroad.json",
      "category": "UTIL",
      "business_function": "receive",
      "key_integrations": [
        "gumroadTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.gumroadTrigger": 1
      },
      "business_value": "Automates receive processes using gumroadTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.801548"
    },
    {
      "original_filename": "analytics_error_report_error_httprequest.json",
      "workflow_name": "n8n Error Report to Line",
      "suggested_filename": "analytics_error_report_error_httprequest.json",
      "category": "ANALYTICS",
      "business_function": "error",
      "key_integrations": [
        "errorTrigger",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.errorTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates error processes using errorTrigger, httpRequest, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.801767"
    },
    {
      "original_filename": "util_reschedule_automate_schedule_asana_cron.json",
      "workflow_name": "Reschedule overdue Asana tasks and clean up completed tasks",
      "suggested_filename": "util_reschedule_automate_schedule_asana_cron.json",
      "category": "UTIL",
      "business_function": "reschedule",
      "key_integrations": [
        "scheduleTrigger",
        "asana",
        "if",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.asana": 4,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates reschedule processes using scheduleTrigger, asana, if",
      "analysis_timestamp": "2025-06-01T16:06:48.802013"
    },
    {
      "original_filename": "ops_528_workflow_528_automate_gitlab.json",
      "workflow_name": "ops_528_workflow_528_automate_gitlab",
      "suggested_filename": "ops_528_workflow_528_automate_gitlab.json",
      "category": "OPS",
      "business_function": "528",
      "key_integrations": [
        "gitlabTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.gitlabTrigger": 1
      },
      "business_value": "Automates 528 processes using gitlabTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.802107"
    },
    {
      "original_filename": "ai_compose_ai_process_splitinbatches_gmail_cron.json",
      "workflow_name": "ai_compose_ai_process_splitinbatches_gmail_cron",
      "suggested_filename": "ai_compose_ai_process_splitinbatches_gmail_cron.json",
      "category": "AI",
      "business_function": "compose",
      "key_integrations": [
        "code",
        "httpRequest",
        "gmail",
        "scheduleTrigger",
        "set",
        "markdown",
        "stickyNote",
        "@n8n/langchain.openAi",
        "splitInBatches",
        "limit"
      ],
      "trigger_type": "cron",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.gmail": 4,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.stickyNote": 10,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.limit": 1
      },
      "business_value": "Automates compose processes using code, httpRequest, gmail",
      "analysis_timestamp": "2025-06-01T16:06:48.802403"
    },
    {
      "original_filename": "comm_2435_workflow_2435_automate_slack_httprequest_webhook.json",
      "workflow_name": "comm_2435_workflow_2435_automate_slack_httprequest_webhook",
      "suggested_filename": "comm_2435_workflow_2435_automate_slack_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "2435",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "splitOut",
        "httpRequest",
        "set",
        "slack",
        "telegram",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 2435 processes using manualTrigger, stickyNote, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.802718"
    },
    {
      "original_filename": "data_3901_workflow_3901_automate_splitinbatches_n8nnodeslangchainchainllm.json",
      "workflow_name": "data_3901_workflow_3901_automate_splitinbatches_n8nnodeslangchainchainllm",
      "suggested_filename": "data_3901_workflow_3901_automate_splitinbatches_n8nnodeslangchainchainllm.json",
      "category": "DATA",
      "business_function": "3901",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenRouter",
        "@n8n/langchain.outputParserStructured",
        "httpRequest",
        "stickyNote",
        "manualTrigger",
        "splitInBatches",
        "googleSheets",
        "code",
        "@n8n/langchain.chainLlm",
        "splitOut"
      ],
      "trigger_type": "chat",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.splitOut": 1
      },
      "business_value": "Automates 3901 processes using @n8n/langchain.lmChatOpenRouter, @n8n/langchain.outputParserStructured, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.802985"
    },
    {
      "original_filename": "ai_personal_automate_n8nnodeslangchainmemorybufferwindow_googlesheets.json",
      "workflow_name": "Personal Assistant MCP server",
      "suggested_filename": "ai_personal_automate_n8nnodeslangchainmemorybufferwindow_googlesheets.json",
      "category": "AI",
      "business_function": "personal",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.mcpTrigger",
        "@n8n/langchain.mcpClientTool",
        "googleCalendarTool",
        "gmailTool",
        "@n8n/langchain.agent",
        "stickyNote",
        "googleSheetsTool"
      ],
      "trigger_type": "chat",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.mcpTrigger": 1,
        "@n8n/n8n-nodes-langchain.mcpClientTool": 1,
        "n8n-nodes-base.googleCalendarTool": 4,
        "n8n-nodes-base.gmailTool": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.googleSheetsTool": 3
      },
      "business_value": "Automates personal processes using @n8n/langchain.chatTrigger, @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.803273"
    },
    {
      "original_filename": "util_2062_workflow_2062_automate_splitinbatches_itemlists.json",
      "workflow_name": "util_2062_workflow_2062_automate_splitinbatches_itemlists",
      "suggested_filename": "util_2062_workflow_2062_automate_splitinbatches_itemlists.json",
      "category": "UTIL",
      "business_function": "2062",
      "key_integrations": [
        "html",
        "httpRequest",
        "itemLists",
        "medium",
        "splitInBatches",
        "manualTrigger",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.itemLists": 2,
        "n8n-nodes-base.medium": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 2062 processes using html, httpRequest, itemLists",
      "analysis_timestamp": "2025-06-01T16:06:48.803494"
    },
    {
      "original_filename": "util_13_workflow_13_automate_httprequest_xml.json",
      "workflow_name": "util_13_workflow_13_automate_httprequest_xml",
      "suggested_filename": "util_13_workflow_13_automate_httprequest_xml.json",
      "category": "UTIL",
      "business_function": "13",
      "key_integrations": [
        "xml",
        "set",
        "httpRequest",
        "dropbox"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.xml": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.dropbox": 1
      },
      "business_value": "Automates 13 processes using xml, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.803696"
    },
    {
      "original_filename": "ai_auto_automate_postgres_httprequest_cron.json",
      "workflow_name": "Auto WordPress Blog Generator (GPT + Postgres + WP Media)",
      "suggested_filename": "ai_auto_automate_postgres_httprequest_cron.json",
      "category": "AI",
      "business_function": "auto",
      "key_integrations": [
        "scheduleTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "httpRequest",
        "code",
        "merge",
        "stickyNote",
        "postgres",
        "@n8n/langchain.agent",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 46,
      "complexity": "High",
      "total_nodes": 46,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.code": 7,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.stickyNote": 23,
        "n8n-nodes-base.postgres": 3,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates auto processes using scheduleTrigger, @n8n/langchain.lmChatOpenAi, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.804243"
    },
    {
      "original_filename": "data_create_create_questdb_manual.json",
      "workflow_name": "Create a table and insert data into it",
      "suggested_filename": "data_create_create_questdb_manual.json",
      "category": "DATA",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "set",
        "questDb"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.questDb": 2
      },
      "business_value": "Automates create processes using manualTrigger, set, questDb",
      "analysis_timestamp": "2025-06-01T16:06:48.804582"
    },
    {
      "original_filename": "util_987_workflow_987_automate_webhook_asana_webhook.json",
      "workflow_name": "util_987_workflow_987_automate_webhook_asana_webhook",
      "suggested_filename": "util_987_workflow_987_automate_webhook_asana_webhook.json",
      "category": "UTIL",
      "business_function": "987",
      "key_integrations": [
        "asana",
        "webhook",
        "set"
      ],
      "trigger_type": "webhook",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.asana": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 987 processes using asana, webhook, set",
      "analysis_timestamp": "2025-06-01T16:06:48.804674"
    },
    {
      "original_filename": "ai_send_ai_process_openweathermap_spontit_cron.json",
      "workflow_name": "Send daily weather updates via a push notification using Spontit",
      "suggested_filename": "ai_send_ai_process_openweathermap_spontit_cron.json",
      "category": "AI",
      "business_function": "send",
      "key_integrations": [
        "cron",
        "openWeatherMap",
        "spontit"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.openWeatherMap": 1,
        "n8n-nodes-base.spontit": 1
      },
      "business_value": "Automates send processes using cron, openWeatherMap, spontit",
      "analysis_timestamp": "2025-06-01T16:06:48.804767"
    },
    {
      "original_filename": "ai_docsify_automate_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainout_1.json",
      "workflow_name": "Docsify example",
      "suggested_filename": "ai_docsify_automate_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainout_1.json",
      "category": "AI",
      "business_function": "docsify",
      "key_integrations": [
        "set",
        "convertToFile",
        "if",
        "extractFromFile",
        "html",
        "sort",
        "switch",
        "readWriteFile",
        "respondToWebhook",
        "n8n"
      ],
      "trigger_type": "webhook",
      "complexity_score": 60,
      "complexity": "High",
      "total_nodes": 60,
      "node_types": {
        "n8n-nodes-base.set": 6,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.html": 6,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.switch": 3,
        "n8n-nodes-base.readWriteFile": 2,
        "n8n-nodes-base.respondToWebhook": 4,
        "n8n-nodes-base.n8n": 3,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.merge": 7,
        "n8n-nodes-base.executeCommand": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.webhook": 2,
        "n8n-nodes-base.stickyNote": 12
      },
      "business_value": "Automates docsify processes using set, convertToFile, if",
      "analysis_timestamp": "2025-06-01T16:06:48.805367"
    },
    {
      "original_filename": "data_1819_workflow_1819_automate_notion_googledrive.json",
      "workflow_name": "data_1819_workflow_1819_automate_notion_googledrive",
      "suggested_filename": "data_1819_workflow_1819_automate_notion_googledrive.json",
      "category": "DATA",
      "business_function": "1819",
      "key_integrations": [
        "googleDriveTrigger",
        "notion"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.notion": 1
      },
      "business_value": "Automates 1819 processes using googleDriveTrigger, notion",
      "analysis_timestamp": "2025-06-01T16:06:48.805513"
    },
    {
      "original_filename": "ai_summarize_ai_process_httprequest_emailreadimap_1.json",
      "workflow_name": "Summarize emails with A.I. then send to messenger",
      "suggested_filename": "ai_summarize_ai_process_httprequest_emailreadimap_1.json",
      "category": "AI",
      "business_function": "summarize",
      "key_integrations": [
        "emailReadImap",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "email",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates summarize processes using emailReadImap, httpRequest, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.805783"
    },
    {
      "original_filename": "biz_1841_workflow_1841_automate_hubspot_functionitem_cron.json",
      "workflow_name": "biz_1841_workflow_1841_automate_hubspot_functionitem_cron",
      "suggested_filename": "biz_1841_workflow_1841_automate_hubspot_functionitem_cron.json",
      "category": "BIZ",
      "business_function": "1841",
      "key_integrations": [
        "if",
        "zendesk",
        "set",
        "merge",
        "hubspot",
        "functionItem",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.zendesk": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.hubspot": 3,
        "n8n-nodes-base.functionItem": 2,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates 1841 processes using if, zendesk, set",
      "analysis_timestamp": "2025-06-01T16:06:48.806049"
    },
    {
      "original_filename": "comm_linear_sync_linear_slack.json",
      "workflow_name": "Linear Project Status and End Date to Productboard feature Sync",
      "suggested_filename": "comm_linear_sync_linear_slack.json",
      "category": "COMM",
      "business_function": "linear",
      "key_integrations": [
        "set",
        "httpRequest",
        "code",
        "merge",
        "splitOut",
        "slack",
        "if",
        "linearTrigger",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.linearTrigger": 2,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates linear processes using set, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:48.806373"
    },
    {
      "original_filename": "util_entries_read_functionitem_uproc.json",
      "workflow_name": "Get DNS entries",
      "suggested_filename": "util_entries_read_functionitem_uproc.json",
      "category": "UTIL",
      "business_function": "entries",
      "key_integrations": [
        "manualTrigger",
        "functionItem",
        "uproc"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.uproc": 1
      },
      "business_value": "Automates entries processes using manualTrigger, functionItem, uproc",
      "analysis_timestamp": "2025-06-01T16:06:48.806573"
    },
    {
      "original_filename": "util_bitrix24_read_httprequest_readwritefile_webhook.json",
      "workflow_name": "Bitrix24 Task Form Widget Application Workflow example with Webhook Integration",
      "suggested_filename": "util_bitrix24_read_httprequest_readwritefile_webhook.json",
      "category": "UTIL",
      "business_function": "bitrix24",
      "key_integrations": [
        "webhook",
        "set",
        "code",
        "if",
        "httpRequest",
        "function",
        "respondToWebhook",
        "readWriteFile",
        "convertToFile",
        "merge"
      ],
      "trigger_type": "webhook",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.respondToWebhook": 4,
        "n8n-nodes-base.readWriteFile": 2,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.extractFromFile": 1
      },
      "business_value": "Automates bitrix24 processes using webhook, set, code",
      "analysis_timestamp": "2025-06-01T16:06:48.806935"
    },
    {
      "original_filename": "util_1500_workflow_1500_automate_manual.json",
      "workflow_name": "util_1500_workflow_1500_automate_manual",
      "suggested_filename": "util_1500_workflow_1500_automate_manual.json",
      "category": "UTIL",
      "business_function": "1500",
      "key_integrations": [
        "manualTrigger",
        "function"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.function": 2
      },
      "business_value": "Automates 1500 processes using manualTrigger, function",
      "analysis_timestamp": "2025-06-01T16:06:48.807049"
    },
    {
      "original_filename": "data_automate_automate_googlecalendar_googlesheets.json",
      "workflow_name": "Automate Event Creation in Google Calendar from Google Sheets",
      "suggested_filename": "data_automate_automate_googlecalendar_googlesheets.json",
      "category": "DATA",
      "business_function": "automate",
      "key_integrations": [
        "stickyNote",
        "code",
        "googleSheetsTrigger",
        "googleCalendar"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.googleSheetsTrigger": 1,
        "n8n-nodes-base.googleCalendar": 1
      },
      "business_value": "Automates automate processes using stickyNote, code, googleSheetsTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.807260"
    },
    {
      "original_filename": "comm_monitor_monitor_slack_airtop_cron.json",
      "workflow_name": "Monitor ProductHunt",
      "suggested_filename": "comm_monitor_monitor_slack_airtop_cron.json",
      "category": "COMM",
      "business_function": "monitor",
      "key_integrations": [
        "set",
        "if",
        "airtop",
        "slack",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.airtop": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates monitor processes using set, if, airtop",
      "analysis_timestamp": "2025-06-01T16:06:48.807484"
    },
    {
      "original_filename": "data_tweets_automate_manual_airtable.json",
      "workflow_name": "New tweets",
      "suggested_filename": "data_tweets_automate_manual_airtable.json",
      "category": "DATA",
      "business_function": "tweets",
      "key_integrations": [
        "manualTrigger",
        "twitter",
        "set",
        "airtable",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates tweets processes using manualTrigger, twitter, set",
      "analysis_timestamp": "2025-06-01T16:06:48.807708"
    },
    {
      "original_filename": "util_1537_workflow_1537_automate_functionitem_itemlists.json",
      "workflow_name": "util_1537_workflow_1537_automate_functionitem_itemlists",
      "suggested_filename": "util_1537_workflow_1537_automate_functionitem_itemlists.json",
      "category": "UTIL",
      "business_function": "1537",
      "key_integrations": [
        "itemLists",
        "functionItem",
        "function"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.function": 1
      },
      "business_value": "Automates 1537 processes using itemLists, functionItem, function",
      "analysis_timestamp": "2025-06-01T16:06:48.808123"
    },
    {
      "original_filename": "util_2225_workflow_2225_automate_httprequest_webhook_webhook.json",
      "workflow_name": "util_2225_workflow_2225_automate_httprequest_webhook_webhook",
      "suggested_filename": "util_2225_workflow_2225_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "2225",
      "key_integrations": [
        "stickyNote",
        "set",
        "webhook",
        "httpRequest",
        "switch"
      ],
      "trigger_type": "webhook",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates 2225 processes using stickyNote, set, webhook",
      "analysis_timestamp": "2025-06-01T16:06:48.808375"
    },
    {
      "original_filename": "biz_1806_workflow_1806_automate_pipedrive_httprequest_cron.json",
      "workflow_name": "biz_1806_workflow_1806_automate_pipedrive_httprequest_cron",
      "suggested_filename": "biz_1806_workflow_1806_automate_pipedrive_httprequest_cron.json",
      "category": "BIZ",
      "business_function": "1806",
      "key_integrations": [
        "functionItem",
        "zendesk",
        "set",
        "cron",
        "merge",
        "pipedrive",
        "httpRequest",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.functionItem": 2,
        "n8n-nodes-base.zendesk": 5,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.pipedrive": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 1806 processes using functionItem, zendesk, set",
      "analysis_timestamp": "2025-06-01T16:06:48.808648"
    },
    {
      "original_filename": "util_2951_workflow_2951_automate_ssh_emailsend_cron.json",
      "workflow_name": "util_2951_workflow_2951_automate_ssh_emailsend_cron",
      "suggested_filename": "util_2951_workflow_2951_automate_ssh_emailsend_cron.json",
      "category": "UTIL",
      "business_function": "2951",
      "key_integrations": [
        "emailSend",
        "ssh",
        "merge",
        "if",
        "stickyNote",
        "scheduleTrigger"
      ],
      "trigger_type": "email",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.ssh": 3,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates 2951 processes using emailSend, ssh, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.808893"
    },
    {
      "original_filename": "comm_español_automate_telegram_telegram.json",
      "workflow_name": "N8N Español - BOT",
      "suggested_filename": "comm_español_automate_telegram_telegram.json",
      "category": "COMM",
      "business_function": "español",
      "key_integrations": [
        "if",
        "telegram",
        "telegramTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.telegramTrigger": 1
      },
      "business_value": "Automates español processes using if, telegram, telegramTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.809211"
    },
    {
      "original_filename": "util_2331_workflow_2331_automate_elasticsearch_httprequest.json",
      "workflow_name": "util_2331_workflow_2331_automate_elasticsearch_httprequest",
      "suggested_filename": "util_2331_workflow_2331_automate_elasticsearch_httprequest.json",
      "category": "UTIL",
      "business_function": "2331",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "splitOut",
        "filter",
        "editImage",
        "set",
        "elasticsearch",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.editImage": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.elasticsearch": 1,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates 2331 processes using manualTrigger, httpRequest, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.809612"
    },
    {
      "original_filename": "content_create_create_manual_strapi.json",
      "workflow_name": "Create, update, and get an entry in Strapi",
      "suggested_filename": "content_create_create_manual_strapi.json",
      "category": "CONTENT",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "strapi",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.strapi": 3,
        "n8n-nodes-base.set": 2
      },
      "business_value": "Automates create processes using manualTrigger, strapi, set",
      "analysis_timestamp": "2025-06-01T16:06:48.809862"
    },
    {
      "original_filename": "ai_transform_process_webhook_httprequest_webhook_2.json",
      "workflow_name": "Transform Image to Lego Style Using Line and Dall-E",
      "suggested_filename": "ai_transform_process_webhook_httprequest_webhook_2.json",
      "category": "AI",
      "business_function": "transform",
      "key_integrations": [
        "webhook",
        "httpRequest",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "webhook",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.openAi": 2
      },
      "business_value": "Automates transform processes using webhook, httpRequest, @n8n/langchain.openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.810336"
    },
    {
      "original_filename": "ai_sync_ai_process_airtable_googledrive.json",
      "workflow_name": "Sync New Files From Google Drive with Airtable",
      "suggested_filename": "ai_sync_ai_process_airtable_googledrive.json",
      "category": "AI",
      "business_function": "sync",
      "key_integrations": [
        "googleDrive",
        "airtable",
        "googleDriveTrigger",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates sync processes using googleDrive, airtable, googleDriveTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.811611"
    },
    {
      "original_filename": "comm_2177_workflow_2177_automate_schedule_telegram_cron.json",
      "workflow_name": "comm_2177_workflow_2177_automate_schedule_telegram_cron",
      "suggested_filename": "comm_2177_workflow_2177_automate_schedule_telegram_cron.json",
      "category": "COMM",
      "business_function": "2177",
      "key_integrations": [
        "telegram",
        "scheduleTrigger",
        "stickyNote",
        "filter",
        "n8n",
        "set",
        "aggregate"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.aggregate": 1
      },
      "business_value": "Automates 2177 processes using telegram, scheduleTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.811953"
    },
    {
      "original_filename": "util_467_workflow_467_automate_mautic_webhook_webhook.json",
      "workflow_name": "util_467_workflow_467_automate_mautic_webhook_webhook",
      "suggested_filename": "util_467_workflow_467_automate_mautic_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "467",
      "key_integrations": [
        "webhook",
        "mautic",
        "function",
        "merge",
        "set",
        "switch",
        "if"
      ],
      "trigger_type": "webhook",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.mautic": 7,
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.if": 2
      },
      "business_value": "Automates 467 processes using webhook, mautic, function",
      "analysis_timestamp": "2025-06-01T16:06:48.812241"
    },
    {
      "original_filename": "comm_ajd7xo4vjbbvbb93_workflow_ajd7xo4vjbbvbb93_automate_trello_gmail_cron.json",
      "workflow_name": "comm_ajd7xo4vjbbvbb93_workflow_ajd7xo4vjbbvbb93_automate_trello_gmail_cron",
      "suggested_filename": "comm_ajd7xo4vjbbvbb93_workflow_ajd7xo4vjbbvbb93_automate_trello_gmail_cron.json",
      "category": "COMM",
      "business_function": "ajd7xo4vjbbvbb93",
      "key_integrations": [
        "scheduleTrigger",
        "rssFeedRead",
        "set",
        "filter",
        "sort",
        "limit",
        "code",
        "trello",
        "gmail",
        "merge"
      ],
      "trigger_type": "cron",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.rssFeedRead": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.trello": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates ajd7xo4vjbbvbb93 processes using scheduleTrigger, rssFeedRead, set",
      "analysis_timestamp": "2025-06-01T16:06:48.812518"
    },
    {
      "original_filename": "util_1790_workflow_1790_automate_itemlists_n8ntrainingcustomerdatastore.json",
      "workflow_name": "util_1790_workflow_1790_automate_itemlists_n8ntrainingcustomerdatastore",
      "suggested_filename": "util_1790_workflow_1790_automate_itemlists_n8ntrainingcustomerdatastore.json",
      "category": "UTIL",
      "business_function": "1790",
      "key_integrations": [
        "manualTrigger",
        "n8nTrainingCustomerDatastore",
        "itemLists",
        "document-generator.DocumentGenerator",
        "functionItem",
        "emailSend"
      ],
      "trigger_type": "email",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.n8nTrainingCustomerDatastore": 1,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-document-generator.DocumentGenerator": 2,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.emailSend": 2
      },
      "business_value": "Automates 1790 processes using manualTrigger, n8nTrainingCustomerDatastore, itemLists",
      "analysis_timestamp": "2025-06-01T16:06:48.812755"
    },
    {
      "original_filename": "ai_fine_ai_process_n8nnodeslangchainchat_httprequest_1.json",
      "workflow_name": "Fine-tuning with OpenAI models",
      "suggested_filename": "ai_fine_ai_process_n8nnodeslangchainchat_httprequest_1.json",
      "category": "AI",
      "business_function": "fine",
      "key_integrations": [
        "manualTrigger",
        "googleDrive",
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "stickyNote",
        "@n8n/langchain.openAi",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates fine processes using manualTrigger, googleDrive, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.813001"
    },
    {
      "original_filename": "util_3297_workflow_3297_automate_nocodb_webhook_webhook.json",
      "workflow_name": "util_3297_workflow_3297_automate_nocodb_webhook_webhook",
      "suggested_filename": "util_3297_workflow_3297_automate_nocodb_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "3297",
      "key_integrations": [
        "webhook",
        "stickyNote",
        "dropbox",
        "switch",
        "nocoDb",
        "merge",
        "respondToWebhook",
        "set",
        "executeWorkflow"
      ],
      "trigger_type": "webhook",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.dropbox": 2,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.nocoDb": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.executeWorkflow": 2
      },
      "business_value": "Automates 3297 processes using webhook, stickyNote, dropbox",
      "analysis_timestamp": "2025-06-01T16:06:48.813347"
    },
    {
      "original_filename": "ai_logo_ai_process_airtable_manual.json",
      "workflow_name": "Get the logo, icon, and information of a company and store it in Airtable",
      "suggested_filename": "ai_logo_ai_process_airtable_manual.json",
      "category": "AI",
      "business_function": "logo",
      "key_integrations": [
        "manualTrigger",
        "Brandfetch",
        "set",
        "airtable"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.Brandfetch": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtable": 1
      },
      "business_value": "Automates logo processes using manualTrigger, Brandfetch, set",
      "analysis_timestamp": "2025-06-01T16:06:48.813481"
    },
    {
      "original_filename": "ai_build_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "workflow_name": "💥🛠️Build a Web Search Chatbot with GPT-4o and MCP Brave Search",
      "suggested_filename": "ai_build_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "category": "AI",
      "business_function": "build",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger",
        "mcp.mcpClientTool",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.lmChatOpenAi",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-mcp.mcpClientTool": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.stickyNote": 9
      },
      "business_value": "Automates build processes using @n8n/langchain.agent, @n8n/langchain.chatTrigger, mcp.mcpClientTool",
      "analysis_timestamp": "2025-06-01T16:06:48.813723"
    },
    {
      "original_filename": "comm_whatsapp_automate_splitinbatches_whatsapp_cron.json",
      "workflow_name": "WhatsApp business bot",
      "suggested_filename": "comm_whatsapp_automate_splitinbatches_whatsapp_cron.json",
      "category": "COMM",
      "business_function": "whatsapp",
      "key_integrations": [
        "whatsApp",
        "whatsAppTrigger",
        "if",
        "scheduleTrigger",
        "splitInBatches",
        "googleSheets",
        "wait",
        "googleSheetsTrigger",
        "filter",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.whatsApp": 2,
        "n8n-nodes-base.whatsAppTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.googleSheetsTrigger": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates whatsapp processes using whatsApp, whatsAppTrigger, if",
      "analysis_timestamp": "2025-06-01T16:06:48.814078"
    },
    {
      "original_filename": "ops_1375_workflow_1375_automate_httprequest_gitlab.json",
      "workflow_name": "ops_1375_workflow_1375_automate_httprequest_gitlab",
      "suggested_filename": "ops_1375_workflow_1375_automate_httprequest_gitlab.json",
      "category": "OPS",
      "business_function": "1375",
      "key_integrations": [
        "gitlabTrigger",
        "httpRequest",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.gitlabTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 1375 processes using gitlabTrigger, httpRequest, if",
      "analysis_timestamp": "2025-06-01T16:06:48.814210"
    },
    {
      "original_filename": "ai_powered_ai_process_writebinaryfile_httprequest_cron.json",
      "workflow_name": "AI-Powered Short-Form Video Generator with OpenAI, Flux, Kling, and ElevenLabs and upload to all social networks",
      "suggested_filename": "ai_powered_ai_process_writebinaryfile_httprequest_cron.json",
      "category": "AI",
      "business_function": "powered",
      "key_integrations": [
        "httpRequest",
        "code",
        "wait",
        "if",
        "@n8n/langchain.openAi",
        "stickyNote",
        "merge",
        "googleDrive",
        "discord",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 51,
      "complexity": "High",
      "total_nodes": 51,
      "node_types": {
        "n8n-nodes-base.httpRequest": 13,
        "n8n-nodes-base.code": 4,
        "n8n-nodes-base.wait": 5,
        "n8n-nodes-base.if": 3,
        "@n8n/n8n-nodes-langchain.openAi": 5,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.googleDrive": 4,
        "n8n-nodes-base.discord": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.readBinaryFile": 1,
        "n8n-nodes-base.writeBinaryFile": 1
      },
      "business_value": "Automates powered processes using httpRequest, code, wait",
      "analysis_timestamp": "2025-06-01T16:06:48.814911"
    },
    {
      "original_filename": "biz_receive_update_paypal.json",
      "workflow_name": "Receive updates when a billing plan is activated in PayPal",
      "suggested_filename": "biz_receive_update_paypal.json",
      "category": "BIZ",
      "business_function": "receive",
      "key_integrations": [
        "payPalTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.payPalTrigger": 1
      },
      "business_value": "Automates receive processes using payPalTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.815185"
    },
    {
      "original_filename": "ai_social_ai_process_httprequest_n8nnodeslangchainlmchatopenai.json",
      "workflow_name": "💥AI Social Video Generator with GPT-4, Kling & Blotato —Auto-Post to Instagram, Facebook,, TikTok, Twitter & Pinterest - vide",
      "suggested_filename": "ai_social_ai_process_httprequest_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "social",
      "key_integrations": [
        "stickyNote",
        "telegramTrigger",
        "code",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "httpRequest",
        "wait",
        "@n8n/langchain.openAi",
        "googleSheets",
        "telegram"
      ],
      "trigger_type": "chat",
      "complexity_score": 38,
      "complexity": "High",
      "total_nodes": 38,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.httpRequest": 17,
        "n8n-nodes-base.wait": 4,
        "@n8n/n8n-nodes-langchain.openAi": 4,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates social processes using stickyNote, telegramTrigger, code",
      "analysis_timestamp": "2025-06-01T16:06:48.815799"
    },
    {
      "original_filename": "util_8_workflow_8_automate_error_mailgun.json",
      "workflow_name": "util_8_workflow_8_automate_error_mailgun",
      "suggested_filename": "util_8_workflow_8_automate_error_mailgun.json",
      "category": "UTIL",
      "business_function": "8",
      "key_integrations": [
        "errorTrigger",
        "mailgun"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.errorTrigger": 1,
        "n8n-nodes-base.mailgun": 1
      },
      "business_value": "Automates 8 processes using errorTrigger, mailgun",
      "analysis_timestamp": "2025-06-01T16:06:48.815952"
    },
    {
      "original_filename": "util_567_workflow_567_automate_manual_helpscout.json",
      "workflow_name": "util_567_workflow_567_automate_manual_helpscout",
      "suggested_filename": "util_567_workflow_567_automate_manual_helpscout.json",
      "category": "UTIL",
      "business_function": "567",
      "key_integrations": [
        "manualTrigger",
        "helpScout"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.helpScout": 1
      },
      "business_value": "Automates 567 processes using manualTrigger, helpScout",
      "analysis_timestamp": "2025-06-01T16:06:48.816229"
    },
    {
      "original_filename": "ai_3397_workflow_3397_automate_splitinbatches_hubspot.json",
      "workflow_name": "ai_3397_workflow_3397_automate_splitinbatches_hubspot",
      "suggested_filename": "ai_3397_workflow_3397_automate_splitinbatches_hubspot.json",
      "category": "AI",
      "business_function": "3397",
      "key_integrations": [
        "manualTrigger",
        "set",
        "@n8n/langchain.lmChatGoogleGemini",
        "gmail",
        "@n8n/langchain.informationExtractor",
        "stickyNote",
        "hubspot",
        "splitInBatches"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2,
        "n8n-nodes-base.gmail": 2,
        "@n8n/n8n-nodes-langchain.informationExtractor": 2,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.hubspot": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 3397 processes using manualTrigger, set, @n8n/langchain.lmChatGoogleGemini",
      "analysis_timestamp": "2025-06-01T16:06:48.816751"
    },
    {
      "original_filename": "util_upload_read_httprequest_manual.json",
      "workflow_name": "Upload a file and get a list of all the files in a bucket",
      "suggested_filename": "util_upload_read_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "upload",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "s3"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.s3": 2
      },
      "business_value": "Automates upload processes using manualTrigger, httpRequest, s3",
      "analysis_timestamp": "2025-06-01T16:06:48.817124"
    },
    {
      "original_filename": "ai_scrape_ai_process_gmail_httprequest.json",
      "workflow_name": "Scrape Books from URL with Dumpling AI, Clean HTML, Save to Sheets, Email as CSV",
      "suggested_filename": "ai_scrape_ai_process_gmail_httprequest.json",
      "category": "AI",
      "business_function": "scrape",
      "key_integrations": [
        "convertToFile",
        "html",
        "sort",
        "gmail",
        "stickyNote",
        "googleSheetsTrigger",
        "httpRequest",
        "splitOut"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.googleSheetsTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 1
      },
      "business_value": "Automates scrape processes using convertToFile, html, sort",
      "analysis_timestamp": "2025-06-01T16:06:48.817602"
    },
    {
      "original_filename": "util_3112_workflow_3112_automate_schedule_googledrive_cron.json",
      "workflow_name": "util_3112_workflow_3112_automate_schedule_googledrive_cron",
      "suggested_filename": "util_3112_workflow_3112_automate_schedule_googledrive_cron.json",
      "category": "UTIL",
      "business_function": "3112",
      "key_integrations": [
        "set",
        "scheduleTrigger",
        "stickyNote",
        "code",
        "n8n",
        "googleDrive"
      ],
      "trigger_type": "cron",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.googleDrive": 1
      },
      "business_value": "Automates 3112 processes using set, scheduleTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.817984"
    },
    {
      "original_filename": "util_1823_workflow_1823_automate_mondaycom_mautic.json",
      "workflow_name": "util_1823_workflow_1823_automate_mondaycom_mautic",
      "suggested_filename": "util_1823_workflow_1823_automate_mondaycom_mautic.json",
      "category": "UTIL",
      "business_function": "1823",
      "key_integrations": [
        "mondayCom",
        "mauticTrigger",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.mondayCom": 1,
        "n8n-nodes-base.mauticTrigger": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 1823 processes using mondayCom, mauticTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.818132"
    },
    {
      "original_filename": "comm_1223_workflow_1223_automate_hubspot_gmail.json",
      "workflow_name": "comm_1223_workflow_1223_automate_hubspot_gmail",
      "suggested_filename": "comm_1223_workflow_1223_automate_hubspot_gmail.json",
      "category": "COMM",
      "business_function": "1223",
      "key_integrations": [
        "hubspot",
        "set",
        "typeformTrigger",
        "if",
        "gmail"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.hubspot": 2,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates 1223 processes using hubspot, set, typeformTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.818437"
    },
    {
      "original_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_3.json",
      "workflow_name": "AI agent: expense tracker in Google Sheets and n8n chat",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_3.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger",
        "executeWorkflowTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "stickyNote",
        "@n8n/langchain.informationExtractor",
        "googleSheets",
        "@n8n/langchain.toolWorkflow"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.stickyNote": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.googleSheets": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1
      },
      "business_value": "Automates agent processes using @n8n/langchain.agent, @n8n/langchain.chatTrigger, executeWorkflowTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.818799"
    },
    {
      "original_filename": "ai_2216_workflow_2216_automate_telegram_telegram.json",
      "workflow_name": "ai_2216_workflow_2216_automate_telegram_telegram",
      "suggested_filename": "ai_2216_workflow_2216_automate_telegram_telegram.json",
      "category": "AI",
      "business_function": "2216",
      "key_integrations": [
        "telegramTrigger",
        "@n8n/langchain.openAi",
        "telegram",
        "merge",
        "aggregate",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates 2216 processes using telegramTrigger, @n8n/langchain.openAi, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.819064"
    },
    {
      "original_filename": "util_multi_automate_splitinbatches_n8nnodeslangchainmemorybufferwindow.json",
      "workflow_name": "Multi-Agent Conversation",
      "suggested_filename": "util_multi_automate_splitinbatches_n8nnodeslangchainmemorybufferwindow.json",
      "category": "UTIL",
      "business_function": "multi",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "splitInBatches",
        "code",
        "@n8n/langchain.memoryBufferWindow",
        "set",
        "if",
        "stickyNote",
        "@n8n/langchain.lmChatOpenRouter"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.code": 4,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 1
      },
      "business_value": "Automates multi processes using @n8n/langchain.chatTrigger, @n8n/langchain.agent, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.819403"
    },
    {
      "original_filename": "data_3556_workflow_3556_automate_httprequest_schedule_cron.json",
      "workflow_name": "data_3556_workflow_3556_automate_httprequest_schedule_cron",
      "suggested_filename": "data_3556_workflow_3556_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "3556",
      "key_integrations": [
        "set",
        "merge",
        "httpRequest",
        "googleSheets",
        "stickyNote",
        "code",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates 3556 processes using set, merge, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.820475"
    },
    {
      "original_filename": "comm_twitter_automate_cron_twitter_cron.json",
      "workflow_name": "Twitter notifications",
      "suggested_filename": "comm_twitter_automate_cron_twitter_cron.json",
      "category": "COMM",
      "business_function": "twitter",
      "key_integrations": [
        "twitter",
        "cron",
        "function",
        "set",
        "mattermost"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.mattermost": 1
      },
      "business_value": "Automates twitter processes using twitter, cron, function",
      "analysis_timestamp": "2025-06-01T16:06:48.820852"
    },
    {
      "original_filename": "ai_2840_workflow_2840_automate_n8nnodeslangchainmemorybufferwindow_splitinbatche.json",
      "workflow_name": "ai_2840_workflow_2840_automate_n8nnodeslangchainmemorybufferwindow_splitinbatche",
      "suggested_filename": "ai_2840_workflow_2840_automate_n8nnodeslangchainmemorybufferwindow_splitinbatche.json",
      "category": "AI",
      "business_function": "2840",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "splitOut",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterTokenSplitter",
        "@n8n/langchain.memoryBufferWindow",
        "extractFromFile",
        "manualTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 3,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 3,
        "n8n-nodes-base.zendesk": 2,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 2840 processes using @n8n/langchain.chatTrigger, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.821275"
    },
    {
      "original_filename": "comm_pipeline_automate_postgres_slack_cron_2.json",
      "workflow_name": "ETL pipeline",
      "suggested_filename": "comm_pipeline_automate_postgres_slack_cron_2.json",
      "category": "COMM",
      "business_function": "pipeline",
      "key_integrations": [
        "twitter",
        "postgres",
        "mongoDb",
        "slack",
        "if",
        "googleCloudNaturalLanguage",
        "set",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.postgres": 1,
        "n8n-nodes-base.mongoDb": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.googleCloudNaturalLanguage": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates pipeline processes using twitter, postgres, mongoDb",
      "analysis_timestamp": "2025-06-01T16:06:48.821495"
    },
    {
      "original_filename": "ai_3344_workflow_3344_automate_n8nnodeslangchainoutputparserstructured_gmail.json",
      "workflow_name": "ai_3344_workflow_3344_automate_n8nnodeslangchainoutputparserstructured_gmail",
      "suggested_filename": "ai_3344_workflow_3344_automate_n8nnodeslangchainoutputparserstructured_gmail.json",
      "category": "AI",
      "business_function": "3344",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "googleSheets",
        "gmailTrigger",
        "if",
        "code"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates 3344 processes using stickyNote, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.821934"
    },
    {
      "original_filename": "ai_coinmarketcap_ai_data_analyst_agent_ai_process_n8nnodeslangchainmemorybufferw.json",
      "workflow_name": "CoinMarketCap_AI_Data_Analyst_Agent",
      "suggested_filename": "ai_coinmarketcap_ai_data_analyst_agent_ai_process_n8nnodeslangchainmemorybufferw.json",
      "category": "AI",
      "business_function": "coinmarketcap",
      "key_integrations": [
        "telegram",
        "set",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolWorkflow",
        "telegramTrigger",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 3,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates coinmarketcap processes using telegram, set, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.822555"
    },
    {
      "original_filename": "ai_telegram_ai_process_telegram_openai_1.json",
      "workflow_name": "Telegram AI-bot",
      "suggested_filename": "ai_telegram_ai_process_telegram_openai_1.json",
      "category": "AI",
      "business_function": "telegram",
      "key_integrations": [
        "telegramTrigger",
        "switch",
        "stickyNote",
        "set",
        "openAi",
        "telegram",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.openAi": 3,
        "n8n-nodes-base.telegram": 4,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates telegram processes using telegramTrigger, switch, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.823216"
    },
    {
      "original_filename": "ai_3868_workflow_3868_automate_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "workflow_name": "ai_3868_workflow_3868_automate_splitinbatches_n8nnodeslangchainchainllm_cron",
      "suggested_filename": "ai_3868_workflow_3868_automate_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "3868",
      "key_integrations": [
        "scheduleTrigger",
        "jira",
        "set",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.chainLlm",
        "splitInBatches",
        "aggregate",
        "stickyNote",
        "removeDuplicates"
      ],
      "trigger_type": "cron",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.jira": 5,
        "n8n-nodes-base.set": 4,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 3,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.removeDuplicates": 1
      },
      "business_value": "Automates 3868 processes using scheduleTrigger, jira, set",
      "analysis_timestamp": "2025-06-01T16:06:48.823659"
    },
    {
      "original_filename": "biz_2129_workflow_2129_automate_hubspot_calendly.json",
      "workflow_name": "biz_2129_workflow_2129_automate_hubspot_calendly",
      "suggested_filename": "biz_2129_workflow_2129_automate_hubspot_calendly.json",
      "category": "BIZ",
      "business_function": "2129",
      "key_integrations": [
        "if",
        "stickyNote",
        "clearbit",
        "hubspot",
        "filter",
        "calendlyTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.clearbit": 2,
        "n8n-nodes-base.hubspot": 5,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.calendlyTrigger": 1
      },
      "business_value": "Automates 2129 processes using if, stickyNote, clearbit",
      "analysis_timestamp": "2025-06-01T16:06:48.824019"
    },
    {
      "original_filename": "ai_3899_workflow_3899_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "workflow_name": "ai_3899_workflow_3899_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput",
      "suggested_filename": "ai_3899_workflow_3899_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "3899",
      "key_integrations": [
        "scheduleTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "stickyNote",
        "markdown",
        "removeDuplicates",
        "@n8n/langchain.chainLlm",
        "gmail",
        "linear"
      ],
      "trigger_type": "cron",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.removeDuplicates": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.linear": 1
      },
      "business_value": "Automates 3899 processes using scheduleTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.824303"
    },
    {
      "original_filename": "ai_summarize_ai_process_gmail_n8nnodeslangchainchainsummarization.json",
      "workflow_name": "Summarize Google Drive Documents with Mistral AI and Send via Gmail",
      "suggested_filename": "ai_summarize_ai_process_gmail_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "summarize",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatMistralCloud",
        "googleDrive",
        "@n8n/langchain.chainSummarization",
        "gmail"
      ],
      "trigger_type": "chat",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud": 1,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates summarize processes using manualTrigger, @n8n/langchain.lmChatMistralCloud, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.824469"
    },
    {
      "original_filename": "util_3105_workflow_3105_automate_readwritefile_httprequest.json",
      "workflow_name": "util_3105_workflow_3105_automate_readwritefile_httprequest",
      "suggested_filename": "util_3105_workflow_3105_automate_readwritefile_httprequest.json",
      "category": "UTIL",
      "business_function": "3105",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "readWriteFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.readWriteFile": 1
      },
      "business_value": "Automates 3105 processes using manualTrigger, httpRequest, readWriteFile",
      "analysis_timestamp": "2025-06-01T16:06:48.824598"
    },
    {
      "original_filename": "ai_automated_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainout.json",
      "workflow_name": "Automated Research Report Generation with OpenAI, Wikipedia, Google Search, and Gmail/Telegram",
      "suggested_filename": "ai_automated_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainout.json",
      "category": "AI",
      "business_function": "automated",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolHttpRequest",
        "@n8n/langchain.agent",
        "@n8n/langchain.outputParserStructured",
        "splitOut",
        "code",
        "googleSheets",
        "stickyNote",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 4,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.code": 4,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates automated processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow, @n8n/langchain.toolHttpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.825193"
    },
    {
      "original_filename": "util_1943_workflow_1943_automate_comparedatasets_manual.json",
      "workflow_name": "util_1943_workflow_1943_automate_comparedatasets_manual",
      "suggested_filename": "util_1943_workflow_1943_automate_comparedatasets_manual.json",
      "category": "UTIL",
      "business_function": "1943",
      "key_integrations": [
        "manualTrigger",
        "code",
        "compareDatasets",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.compareDatasets": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 1943 processes using manualTrigger, code, compareDatasets",
      "analysis_timestamp": "2025-06-01T16:06:48.825487"
    },
    {
      "original_filename": "comm_create_create_matrix_manual.json",
      "workflow_name": "Create a room, invite members from a different room, and send a message in the room we created",
      "suggested_filename": "comm_create_create_matrix_manual.json",
      "category": "COMM",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "matrix",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.matrix": 5,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates create processes using manualTrigger, matrix, if",
      "analysis_timestamp": "2025-06-01T16:06:48.825716"
    },
    {
      "original_filename": "util_templates_automate_httprequest_manual.json",
      "workflow_name": "TEMPLATES",
      "suggested_filename": "util_templates_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "templates",
      "key_integrations": [
        "manualTrigger",
        "code",
        "splitOut",
        "mondayCom",
        "httpRequest",
        "convertToFile",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 5,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.mondayCom": 3,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates templates processes using manualTrigger, code, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.825986"
    },
    {
      "original_filename": "util_510_workflow_510_automate_awslambda_manual.json",
      "workflow_name": "util_510_workflow_510_automate_awslambda_manual",
      "suggested_filename": "util_510_workflow_510_automate_awslambda_manual.json",
      "category": "UTIL",
      "business_function": "510",
      "key_integrations": [
        "manualTrigger",
        "awsLambda"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.awsLambda": 1
      },
      "business_value": "Automates 510 processes using manualTrigger, awsLambda",
      "analysis_timestamp": "2025-06-01T16:06:48.826108"
    },
    {
      "original_filename": "ai_3078_workflow_3078_automate_splitinbatches_httprequest.json",
      "workflow_name": "ai_3078_workflow_3078_automate_splitinbatches_httprequest",
      "suggested_filename": "ai_3078_workflow_3078_automate_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "3078",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.agent",
        "httpRequest",
        "splitOut",
        "extractFromFile",
        "splitInBatches",
        "set",
        "stickyNote",
        "filter"
      ],
      "trigger_type": "chat",
      "complexity_score": 28,
      "complexity": "High",
      "total_nodes": 28,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "n8n-nodes-base.httpRequest": 8,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.extractFromFile": 3,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates 3078 processes using manualTrigger, @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.826452"
    },
    {
      "original_filename": "comm_save_automate_telegram_googledrive.json",
      "workflow_name": "Save new Files received on Telegram to Google Drive",
      "suggested_filename": "comm_save_automate_telegram_googledrive.json",
      "category": "COMM",
      "business_function": "save",
      "key_integrations": [
        "telegramTrigger",
        "if",
        "googleDrive"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.googleDrive": 1
      },
      "business_value": "Automates save processes using telegramTrigger, if, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.826582"
    },
    {
      "original_filename": "ai_daily_ai_process_slack_googlecalendar_cron_1.json",
      "workflow_name": "Daily meetings summarization with Gemini AI",
      "suggested_filename": "ai_daily_ai_process_slack_googlecalendar_cron_1.json",
      "category": "AI",
      "business_function": "daily",
      "key_integrations": [
        "stickyNote",
        "slack",
        "googleCalendarTool",
        "@n8n/langchain.agent",
        "scheduleTrigger",
        "@n8n/langchain.lmChatGoogleGemini"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.googleCalendarTool": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1
      },
      "business_value": "Automates daily processes using stickyNote, slack, googleCalendarTool",
      "analysis_timestamp": "2025-06-01T16:06:48.826728"
    },
    {
      "original_filename": "ai_look_ai_process_clearbit_manual.json",
      "workflow_name": "Look up a person using their email in Clearbit",
      "suggested_filename": "ai_look_ai_process_clearbit_manual.json",
      "category": "AI",
      "business_function": "look",
      "key_integrations": [
        "manualTrigger",
        "clearbit"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.clearbit": 1
      },
      "business_value": "Automates look processes using manualTrigger, clearbit",
      "analysis_timestamp": "2025-06-01T16:06:48.826937"
    },
    {
      "original_filename": "util_1035_workflow_1035_automate_googleslides_manual.json",
      "workflow_name": "util_1035_workflow_1035_automate_googleslides_manual",
      "suggested_filename": "util_1035_workflow_1035_automate_googleslides_manual.json",
      "category": "UTIL",
      "business_function": "1035",
      "key_integrations": [
        "manualTrigger",
        "googleSlides"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSlides": 2
      },
      "business_value": "Automates 1035 processes using manualTrigger, googleSlides",
      "analysis_timestamp": "2025-06-01T16:06:48.827167"
    },
    {
      "original_filename": "util_2285_workflow_2285_automate_splitinbatches_schedule_cron.json",
      "workflow_name": "util_2285_workflow_2285_automate_splitinbatches_schedule_cron",
      "suggested_filename": "util_2285_workflow_2285_automate_splitinbatches_schedule_cron.json",
      "category": "UTIL",
      "business_function": "2285",
      "key_integrations": [
        "if",
        "spotify",
        "splitInBatches",
        "aggregate",
        "splitOut",
        "code",
        "filter",
        "scheduleTrigger",
        "stickyNote",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.spotify": 7,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 2285 processes using if, spotify, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.827454"
    },
    {
      "original_filename": "data_linkedin_automate_googlesheets_manual.json",
      "workflow_name": "LinkedIn Profile Discovery",
      "suggested_filename": "data_linkedin_automate_googlesheets_manual.json",
      "category": "DATA",
      "business_function": "linkedin",
      "key_integrations": [
        "manualTrigger",
        "googleSheets",
        "airtop",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.airtop": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates linkedin processes using manualTrigger, googleSheets, airtop",
      "analysis_timestamp": "2025-06-01T16:06:48.827691"
    },
    {
      "original_filename": "comm_2080_workflow_2080_automate_httprequest_telegram.json",
      "workflow_name": "comm_2080_workflow_2080_automate_httprequest_telegram",
      "suggested_filename": "comm_2080_workflow_2080_automate_httprequest_telegram.json",
      "category": "COMM",
      "business_function": "2080",
      "key_integrations": [
        "emailReadImap",
        "telegram",
        "httpRequest",
        "stickyNote",
        "wait"
      ],
      "trigger_type": "email",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.wait": 1
      },
      "business_value": "Automates 2080 processes using emailReadImap, telegram, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.827935"
    },
    {
      "original_filename": "comm_1206_workflow_1206_automate_zohocrm_trello.json",
      "workflow_name": "comm_1206_workflow_1206_automate_zohocrm_trello",
      "suggested_filename": "comm_1206_workflow_1206_automate_zohocrm_trello.json",
      "category": "COMM",
      "business_function": "1206",
      "key_integrations": [
        "zohoCrm",
        "trello",
        "set",
        "if",
        "gmail",
        "mailchimp",
        "shopifyTrigger",
        "harvest"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.zohoCrm": 1,
        "n8n-nodes-base.trello": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.mailchimp": 1,
        "n8n-nodes-base.shopifyTrigger": 1,
        "n8n-nodes-base.harvest": 1
      },
      "business_value": "Automates 1206 processes using zohoCrm, trello, set",
      "analysis_timestamp": "2025-06-01T16:06:48.828178"
    },
    {
      "original_filename": "util_2485_workflow_2485_automate_cron_httprequest_cron.json",
      "workflow_name": "util_2485_workflow_2485_automate_cron_httprequest_cron",
      "suggested_filename": "util_2485_workflow_2485_automate_cron_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "2485",
      "key_integrations": [
        "filter",
        "httpRequest",
        "cron",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.stickyNote": 11
      },
      "business_value": "Automates 2485 processes using filter, httpRequest, cron",
      "analysis_timestamp": "2025-06-01T16:06:48.828479"
    },
    {
      "original_filename": "data_2802_workflow_2802_automate_splitinbatches_httprequest_cron.json",
      "workflow_name": "data_2802_workflow_2802_automate_splitinbatches_httprequest_cron",
      "suggested_filename": "data_2802_workflow_2802_automate_splitinbatches_httprequest_cron.json",
      "category": "DATA",
      "business_function": "2802",
      "key_integrations": [
        "httpRequest",
        "function",
        "splitInBatches",
        "code",
        "notion",
        "switch",
        "merge",
        "stickyNote",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "n8n-nodes-base.httpRequest": 6,
        "n8n-nodes-base.function": 3,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.notion": 2,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates 2802 processes using httpRequest, function, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.828845"
    },
    {
      "original_filename": "ai_3395_workflow_3395_automate_splitinbatches_n8nnodeslangchainvectorstoresupaba.json",
      "workflow_name": "ai_3395_workflow_3395_automate_splitinbatches_n8nnodeslangchainvectorstoresupaba",
      "suggested_filename": "ai_3395_workflow_3395_automate_splitinbatches_n8nnodeslangchainvectorstoresupaba.json",
      "category": "AI",
      "business_function": "3395",
      "key_integrations": [
        "scheduleTrigger",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.vectorStoreSupabase",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.agent",
        "jira",
        "splitInBatches",
        "removeDuplicates"
      ],
      "trigger_type": "cron",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.jira": 5,
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.summarize": 1,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 3395 processes using scheduleTrigger, @n8n/langchain.embeddingsOpenAi, @n8n/langchain.documentDefaultDataLoader",
      "analysis_timestamp": "2025-06-01T16:06:48.829360"
    },
    {
      "original_filename": "util_3445_workflow_3445_automate_splitinbatches_httprequest.json",
      "workflow_name": "util_3445_workflow_3445_automate_splitinbatches_httprequest",
      "suggested_filename": "util_3445_workflow_3445_automate_splitinbatches_httprequest.json",
      "category": "UTIL",
      "business_function": "3445",
      "key_integrations": [
        "set",
        "httpRequest",
        "splitOut",
        "filter",
        "removeDuplicates",
        "splitInBatches",
        "n8n",
        "limit",
        "formTrigger",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 40,
      "complexity": "High",
      "total_nodes": 40,
      "node_types": {
        "n8n-nodes-base.set": 10,
        "n8n-nodes-base.httpRequest": 6,
        "n8n-nodes-base.splitOut": 3,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.form": 2,
        "n8n-nodes-base.stickyNote": 9
      },
      "business_value": "Automates 3445 processes using set, httpRequest, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.829813"
    },
    {
      "original_filename": "ai_opensea_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainhttpreq_3.json",
      "workflow_name": "OpenSea Marketplace Agent Tool",
      "suggested_filename": "ai_opensea_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainhttpreq_3.json",
      "category": "AI",
      "business_function": "opensea",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.agent",
        "executeWorkflowTrigger",
        "@n8n/langchain.toolHttpRequest",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 10,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates opensea processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.830276"
    },
    {
      "original_filename": "ai_2370_workflow_2370_automate_n8nnodeslangchainmemorybufferwindow_slack_webhook.json",
      "workflow_name": "ai_2370_workflow_2370_automate_n8nnodeslangchainmemorybufferwindow_slack_webhook",
      "suggested_filename": "ai_2370_workflow_2370_automate_n8nnodeslangchainmemorybufferwindow_slack_webhook.json",
      "category": "AI",
      "business_function": "2370",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.memoryBufferWindow",
        "slack",
        "webhook",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates 2370 processes using stickyNote, @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.830586"
    },
    {
      "original_filename": "ai_spot_ai_process_n8nnodeslangchainchainllm_quickchart_1.json",
      "workflow_name": "Spot Workplace Discrimination Patterns with AI",
      "suggested_filename": "ai_spot_ai_process_n8nnodeslangchainchainllm_quickchart_1.json",
      "category": "AI",
      "business_function": "spot",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "merge",
        "set",
        "httpRequest",
        "html",
        "@n8n/langchain.informationExtractor",
        "code",
        "quickChart",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 38,
      "complexity": "High",
      "total_nodes": 38,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.set": 7,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.html": 4,
        "@n8n/n8n-nodes-langchain.informationExtractor": 2,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.quickChart": 1,
        "n8n-nodes-base.stickyNote": 12,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates spot processes using manualTrigger, @n8n/langchain.lmChatOpenAi, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.831268"
    },
    {
      "original_filename": "util_stats_automate_movebinarydata_sort_webhook.json",
      "workflow_name": "Workflow stats",
      "suggested_filename": "util_stats_automate_movebinarydata_sort_webhook.json",
      "category": "UTIL",
      "business_function": "stats",
      "key_integrations": [
        "manualTrigger",
        "code",
        "set",
        "stickyNote",
        "executeWorkflowTrigger",
        "xml",
        "html",
        "moveBinaryData",
        "respondToWebhook",
        "sort"
      ],
      "trigger_type": "webhook",
      "complexity_score": 33,
      "complexity": "High",
      "total_nodes": 33,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.xml": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.moveBinaryData": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.sort": 4,
        "n8n-nodes-base.aggregate": 4,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.webhook": 2,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates stats processes using manualTrigger, code, set",
      "analysis_timestamp": "2025-06-01T16:06:48.832045"
    },
    {
      "original_filename": "ai_openai_ai_process_httprequest_readbinaryfiles_2.json",
      "workflow_name": "OpenAI-model-examples",
      "suggested_filename": "ai_openai_ai_process_httprequest_readbinaryfiles_2.json",
      "category": "AI",
      "business_function": "openai",
      "key_integrations": [
        "manualTrigger",
        "openAi",
        "code",
        "httpRequest",
        "stickyNote",
        "set",
        "html",
        "readBinaryFiles"
      ],
      "trigger_type": "manual",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.openAi": 9,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.readBinaryFiles": 1
      },
      "business_value": "Automates openai processes using manualTrigger, openAi, code",
      "analysis_timestamp": "2025-06-01T16:06:48.832459"
    },
    {
      "original_filename": "ai_2697_workflow_2697_automate_n8nnodeslangchainchainllm_emailsend.json",
      "workflow_name": "ai_2697_workflow_2697_automate_n8nnodeslangchainchainllm_emailsend",
      "suggested_filename": "ai_2697_workflow_2697_automate_n8nnodeslangchainchainllm_emailsend.json",
      "category": "AI",
      "business_function": "2697",
      "key_integrations": [
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.chainLlm",
        "hackerNews",
        "httpRequest",
        "aggregate",
        "splitOut",
        "formTrigger",
        "emailSend",
        "markdown"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.hackerNews": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 2697 processes using @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.chainLlm, hackerNews",
      "analysis_timestamp": "2025-06-01T16:06:48.832746"
    },
    {
      "original_filename": "ai_questions_ai_process_n8nnodeslangchainchainretrievalqa_n8nnodeslangchainchat.json",
      "workflow_name": "ai_questions_ai_process_n8nnodeslangchainchainretrievalqa_n8nnodeslangchainchat",
      "suggested_filename": "ai_questions_ai_process_n8nnodeslangchainchainretrievalqa_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "questions",
      "key_integrations": [
        "googleDrive",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.embeddingsOpenAi",
        "stickyNote",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.chainRetrievalQa",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.retrieverVectorStore",
        "@n8n/langchain.vectorStorePinecone",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates questions processes using googleDrive, @n8n/langchain.textSplitterRecursiveCharacterTextSplitter, @n8n/langchain.embeddingsOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.833034"
    },
    {
      "original_filename": "ai_3295_workflow_3295_automate_n8nnodeslangchainmemorybufferwindow_telegram.json",
      "workflow_name": "ai_3295_workflow_3295_automate_n8nnodeslangchainmemorybufferwindow_telegram",
      "suggested_filename": "ai_3295_workflow_3295_automate_n8nnodeslangchainmemorybufferwindow_telegram.json",
      "category": "AI",
      "business_function": "3295",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "telegramTrigger",
        "googleSheets",
        "aggregate",
        "telegram"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates 3295 processes using stickyNote, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.833326"
    },
    {
      "original_filename": "ai_3617_workflow_3617_automate_splitinbatches_n8nnodeslangchaincalculator_cron.json",
      "workflow_name": "ai_3617_workflow_3617_automate_splitinbatches_n8nnodeslangchaincalculator_cron",
      "suggested_filename": "ai_3617_workflow_3617_automate_splitinbatches_n8nnodeslangchaincalculator_cron.json",
      "category": "AI",
      "business_function": "3617",
      "key_integrations": [
        "scheduleTrigger",
        "mySql",
        "splitInBatches",
        "set",
        "dateTime",
        "code",
        "filter",
        "html",
        "merge",
        "microsoftOutlook"
      ],
      "trigger_type": "cron",
      "complexity_score": 30,
      "complexity": "High",
      "total_nodes": 30,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.mySql": 5,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.code": 7,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.microsoftOutlook": 1,
        "n8n-nodes-base.wait": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.toolThink": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates 3617 processes using scheduleTrigger, mySql, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.833916"
    },
    {
      "original_filename": "ai_2736_workflow_2736_automate_n8nnodeslangchainchainsummarization_httprequest.json",
      "workflow_name": "ai_2736_workflow_2736_automate_n8nnodeslangchainchainsummarization_httprequest",
      "suggested_filename": "ai_2736_workflow_2736_automate_n8nnodeslangchainchainsummarization_httprequest.json",
      "category": "AI",
      "business_function": "2736",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "@n8n/langchain.chainSummarization",
        "formTrigger",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.noOp": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.formTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates 2736 processes using stickyNote, httpRequest, @n8n/langchain.chainSummarization",
      "analysis_timestamp": "2025-06-01T16:06:48.834271"
    },
    {
      "original_filename": "biz_1788_workflow_1788_automate_pipedrive_github.json",
      "workflow_name": "biz_1788_workflow_1788_automate_pipedrive_github",
      "suggested_filename": "biz_1788_workflow_1788_automate_pipedrive_github.json",
      "category": "BIZ",
      "business_function": "1788",
      "key_integrations": [
        "if",
        "set",
        "pipedrive",
        "githubTrigger",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.pipedrive": 4,
        "n8n-nodes-base.githubTrigger": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 1788 processes using if, set, pipedrive",
      "analysis_timestamp": "2025-06-01T16:06:48.834548"
    },
    {
      "original_filename": "ai_3564_workflow_3564_automate_emailsend_httprequest_cron.json",
      "workflow_name": "ai_3564_workflow_3564_automate_emailsend_httprequest_cron",
      "suggested_filename": "ai_3564_workflow_3564_automate_emailsend_httprequest_cron.json",
      "category": "AI",
      "business_function": "3564",
      "key_integrations": [
        "stickyNote",
        "emailSend",
        "function",
        "merge",
        "html",
        "aggregate",
        "set",
        "httpRequest",
        "splitOut",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "email",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.rssFeedRead": 2,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates 3564 processes using stickyNote, emailSend, function",
      "analysis_timestamp": "2025-06-01T16:06:48.834919"
    },
    {
      "original_filename": "util_763_workflow_763_automate_generic.json",
      "workflow_name": "util_763_workflow_763_automate_generic",
      "suggested_filename": "util_763_workflow_763_automate_generic.json",
      "category": "UTIL",
      "business_function": "763",
      "key_integrations": [
        "function"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.function": 2
      },
      "business_value": "Automates 763 processes using function",
      "analysis_timestamp": "2025-06-01T16:06:48.835118"
    },
    {
      "original_filename": "ai_2436_workflow_2436_automate_webhook_n8nnodeslangchainlmchatopenai_webhook.json",
      "workflow_name": "ai_2436_workflow_2436_automate_webhook_n8nnodeslangchainlmchatopenai_webhook",
      "suggested_filename": "ai_2436_workflow_2436_automate_webhook_n8nnodeslangchainlmchatopenai_webhook.json",
      "category": "AI",
      "business_function": "2436",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "stickyNote",
        "respondToWebhook",
        "@n8n/langchain.agent",
        "webhook"
      ],
      "trigger_type": "chat",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.respondToWebhook": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 2436 processes using @n8n/langchain.lmChatOpenAi, stickyNote, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:48.835357"
    },
    {
      "original_filename": "ai_2082_workflow_2082_automate_n8nnodeslangchaincode_n8nnodeslangchainlmchatopen.json",
      "workflow_name": "ai_2082_workflow_2082_automate_n8nnodeslangchaincode_n8nnodeslangchainlmchatopen",
      "suggested_filename": "ai_2082_workflow_2082_automate_n8nnodeslangchaincode_n8nnodeslangchainlmchatopen.json",
      "category": "AI",
      "business_function": "2082",
      "key_integrations": [
        "stickyNote",
        "manualTrigger",
        "@n8n/langchain.code",
        "set",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.code": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates 2082 processes using stickyNote, manualTrigger, @n8n/langchain.code",
      "analysis_timestamp": "2025-06-01T16:06:48.835601"
    },
    {
      "original_filename": "ai_agent_ai_process_httprequest_sort_cron_1.json",
      "workflow_name": "🤖🧑‍💻 AI Agent  for Top n8n Creators Leaderboard Reporting",
      "suggested_filename": "ai_agent_ai_process_httprequest_sort_cron_1.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "httpRequest",
        "set",
        "aggregate",
        "@n8n/langchain.lmChatOpenAi",
        "executeWorkflowTrigger",
        "@n8n/langchain.toolWorkflow",
        "convertToFile",
        "readWriteFile",
        "stickyNote",
        "merge"
      ],
      "trigger_type": "chat",
      "complexity_score": 49,
      "complexity": "High",
      "total_nodes": 49,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 6,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.stickyNote": 18,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.sort": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.limit": 2,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.markdown": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates agent processes using httpRequest, set, aggregate",
      "analysis_timestamp": "2025-06-01T16:06:48.836174"
    },
    {
      "original_filename": "data_3580_workflow_3580_automate_httprequest_googlesheets.json",
      "workflow_name": "data_3580_workflow_3580_automate_httprequest_googlesheets",
      "suggested_filename": "data_3580_workflow_3580_automate_httprequest_googlesheets.json",
      "category": "DATA",
      "business_function": "3580",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "formTrigger",
        "wait",
        "if",
        "code",
        "googleSheets",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 3580 processes using stickyNote, httpRequest, formTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.836702"
    },
    {
      "original_filename": "biz_create_create_salesmate_manual.json",
      "workflow_name": "Create a company in Salesmate",
      "suggested_filename": "biz_create_create_salesmate_manual.json",
      "category": "BIZ",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "salesmate"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.salesmate": 1
      },
      "business_value": "Automates create processes using manualTrigger, salesmate",
      "analysis_timestamp": "2025-06-01T16:06:48.836831"
    },
    {
      "original_filename": "data_generate_generate_httprequest_googlesheets.json",
      "workflow_name": "Generate New Keywords with Search Volumes⚒️⚒️🟢🟢",
      "suggested_filename": "data_generate_generate_httprequest_googlesheets.json",
      "category": "DATA",
      "business_function": "generate",
      "key_integrations": [
        "splitOut",
        "stickyNote",
        "httpRequest",
        "set",
        "googleSheets",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1
      },
      "business_value": "Automates generate processes using splitOut, stickyNote, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.837195"
    },
    {
      "original_filename": "biz_automate_hubspot_manual.json",
      "workflow_name": "6",
      "suggested_filename": "biz_automate_hubspot_manual.json",
      "category": "BIZ",
      "business_function": "automate",
      "key_integrations": [
        "manualTrigger",
        "hubspot"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.hubspot": 1
      },
      "business_value": "Automates automate processes using manualTrigger, hubspot",
      "analysis_timestamp": "2025-06-01T16:06:48.837403"
    },
    {
      "original_filename": "util_create_create_manual_thehive.json",
      "workflow_name": "Create, update and get a case in TheHive",
      "suggested_filename": "util_create_create_manual_thehive.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "theHive"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.theHive": 3
      },
      "business_value": "Automates create processes using manualTrigger, theHive",
      "analysis_timestamp": "2025-06-01T16:06:48.837522"
    },
    {
      "original_filename": "util_930_workflow_930_automate_manual_discourse.json",
      "workflow_name": "util_930_workflow_930_automate_manual_discourse",
      "suggested_filename": "util_930_workflow_930_automate_manual_discourse.json",
      "category": "UTIL",
      "business_function": "930",
      "key_integrations": [
        "manualTrigger",
        "discourse"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.discourse": 3
      },
      "business_value": "Automates 930 processes using manualTrigger, discourse",
      "analysis_timestamp": "2025-06-01T16:06:48.837731"
    },
    {
      "original_filename": "data_599_workflow_599_automate_postgres_manual.json",
      "workflow_name": "data_599_workflow_599_automate_postgres_manual",
      "suggested_filename": "data_599_workflow_599_automate_postgres_manual.json",
      "category": "DATA",
      "business_function": "599",
      "key_integrations": [
        "manualTrigger",
        "set",
        "postgres"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.postgres": 2
      },
      "business_value": "Automates 599 processes using manualTrigger, set, postgres",
      "analysis_timestamp": "2025-06-01T16:06:48.837934"
    },
    {
      "original_filename": "ai_basic_ai_process_n8nnodeslangchainmemorybufferwindow_gmail.json",
      "workflow_name": "ai_basic_ai_process_n8nnodeslangchainmemorybufferwindow_gmail",
      "suggested_filename": "ai_basic_ai_process_n8nnodeslangchainmemorybufferwindow_gmail.json",
      "category": "AI",
      "business_function": "basic",
      "key_integrations": [
        "gmailTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "gmailTool",
        "@n8n/langchain.agent",
        "@n8n/langchain.memoryBufferWindow",
        "wait",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.gmailTool": 4,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates basic processes using gmailTrigger, @n8n/langchain.lmChatOpenAi, gmailTool",
      "analysis_timestamp": "2025-06-01T16:06:48.838197"
    },
    {
      "original_filename": "ai_automatically_ai_process_schedule_googlecalendar_cron.json",
      "workflow_name": "Automatically Send Daily Meeting List to Telegram",
      "suggested_filename": "ai_automatically_ai_process_schedule_googlecalendar_cron.json",
      "category": "AI",
      "business_function": "automatically",
      "key_integrations": [
        "googleCalendar",
        "scheduleTrigger",
        "set",
        "function",
        "telegram",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.googleCalendar": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates automatically processes using googleCalendar, scheduleTrigger, set",
      "analysis_timestamp": "2025-06-01T16:06:48.838450"
    },
    {
      "original_filename": "comm_jsreport_read_gmail_httprequest.json",
      "workflow_name": "Get PDF with JSReport",
      "suggested_filename": "comm_jsreport_read_gmail_httprequest.json",
      "category": "COMM",
      "business_function": "jsreport",
      "key_integrations": [
        "httpRequest",
        "stickyNote",
        "formTrigger",
        "gmail"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates jsreport processes using httpRequest, stickyNote, formTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.838607"
    },
    {
      "original_filename": "ecommerce_3296_workflow_3296_automate_splitinbatches_shopify_cron.json",
      "workflow_name": "ecommerce_3296_workflow_3296_automate_splitinbatches_shopify_cron",
      "suggested_filename": "ecommerce_3296_workflow_3296_automate_splitinbatches_shopify_cron.json",
      "category": "ECOMMERCE",
      "business_function": "3296",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "splitInBatches",
        "scheduleTrigger",
        "filter",
        "httpRequest",
        "set",
        "shopify"
      ],
      "trigger_type": "cron",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.shopify": 1
      },
      "business_value": "Automates 3296 processes using manualTrigger, stickyNote, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.838930"
    },
    {
      "original_filename": "util_query_automate_movebinarydata_httprequest.json",
      "workflow_name": "Query List of Sign-in IPs",
      "suggested_filename": "util_query_automate_movebinarydata_httprequest.json",
      "category": "UTIL",
      "business_function": "query",
      "key_integrations": [
        "httpRequest",
        "stickyNote",
        "removeDuplicates",
        "moveBinaryData",
        "convertToFile",
        "set",
        "merge",
        "formTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.moveBinaryData": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.formTrigger": 1
      },
      "business_value": "Automates query processes using httpRequest, stickyNote, removeDuplicates",
      "analysis_timestamp": "2025-06-01T16:06:48.839285"
    },
    {
      "original_filename": "ai_email_ai_process_gmail_schedule_cron_2.json",
      "workflow_name": "Email Summary Agent",
      "suggested_filename": "ai_email_ai_process_gmail_schedule_cron_2.json",
      "category": "AI",
      "business_function": "email",
      "key_integrations": [
        "stickyNote",
        "scheduleTrigger",
        "gmail",
        "aggregate",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates email processes using stickyNote, scheduleTrigger, gmail",
      "analysis_timestamp": "2025-06-01T16:06:48.839586"
    },
    {
      "original_filename": "comm_addon_create_gmail_n8n.json",
      "workflow_name": "Addon for Workflow Nodes Update Check Template",
      "suggested_filename": "comm_addon_create_gmail_n8n.json",
      "category": "COMM",
      "business_function": "addon",
      "key_integrations": [
        "executeWorkflowTrigger",
        "stickyNote",
        "set",
        "gmail",
        "n8n",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.n8n": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates addon processes using executeWorkflowTrigger, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:48.839916"
    },
    {
      "original_filename": "util_549_workflow_549_automate_mautic_manual.json",
      "workflow_name": "util_549_workflow_549_automate_mautic_manual",
      "suggested_filename": "util_549_workflow_549_automate_mautic_manual.json",
      "category": "UTIL",
      "business_function": "549",
      "key_integrations": [
        "manualTrigger",
        "mautic"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.mautic": 1
      },
      "business_value": "Automates 549 processes using manualTrigger, mautic",
      "analysis_timestamp": "2025-06-01T16:06:48.840052"
    },
    {
      "original_filename": "util_1115_workflow_1115_automate_git_manual.json",
      "workflow_name": "util_1115_workflow_1115_automate_git_manual",
      "suggested_filename": "util_1115_workflow_1115_automate_git_manual.json",
      "category": "UTIL",
      "business_function": "1115",
      "key_integrations": [
        "manualTrigger",
        "git"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.git": 4
      },
      "business_value": "Automates 1115 processes using manualTrigger, git",
      "analysis_timestamp": "2025-06-01T16:06:48.840188"
    },
    {
      "original_filename": "data_3039_workflow_3039_automate_notion_executeworkflow.json",
      "workflow_name": "data_3039_workflow_3039_automate_notion_executeworkflow",
      "suggested_filename": "data_3039_workflow_3039_automate_notion_executeworkflow.json",
      "category": "DATA",
      "business_function": "3039",
      "key_integrations": [
        "executeWorkflowTrigger",
        "if",
        "stickyNote",
        "notion",
        "wait",
        "splitOut",
        "aggregate",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.notion": 3,
        "n8n-nodes-base.wait": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.set": 2
      },
      "business_value": "Automates 3039 processes using executeWorkflowTrigger, if, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.840579"
    },
    {
      "original_filename": "util_2044_workflow_2044_automate_schedule_spotify_cron.json",
      "workflow_name": "util_2044_workflow_2044_automate_schedule_spotify_cron",
      "suggested_filename": "util_2044_workflow_2044_automate_schedule_spotify_cron.json",
      "category": "UTIL",
      "business_function": "2044",
      "key_integrations": [
        "scheduleTrigger",
        "spotify",
        "switch",
        "merge",
        "stickyNote",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.spotify": 4,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 2044 processes using scheduleTrigger, spotify, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.840904"
    },
    {
      "original_filename": "ai_generated_generate_splitinbatches_wordpress_webhook_1.json",
      "workflow_name": "AI-Generated Summary Block for WordPress Posts - with OpenAI, WordPress, Google Sheets & Slack",
      "suggested_filename": "ai_generated_generate_splitinbatches_wordpress_webhook_1.json",
      "category": "AI",
      "business_function": "generated",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.textClassifier",
        "@n8n/langchain.lmChatOpenAi",
        "splitInBatches",
        "if",
        "webhook",
        "scheduleTrigger",
        "httpRequest",
        "googleSheets",
        "markdown"
      ],
      "trigger_type": "chat",
      "complexity_score": 32,
      "complexity": "High",
      "total_nodes": 32,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.markdown": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.stickyNote": 11,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.wordpress": 4,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates generated processes using manualTrigger, @n8n/langchain.textClassifier, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.841527"
    },
    {
      "original_filename": "ai_clockifyblockiaworkflow_automate_n8nnodeslangchainmemorybufferwindow_executio.json",
      "workflow_name": "ClockifyBlockiaWorkflow",
      "suggested_filename": "ai_clockifyblockiaworkflow_automate_n8nnodeslangchainmemorybufferwindow_executio.json",
      "category": "AI",
      "business_function": "clockifyblockiaworkflow",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolCalculator",
        "@n8n/langchain.toolHttpRequest",
        "@n8n/langchain.toolCode",
        "@n8n/langchain.agent",
        "slackTrigger",
        "executionData",
        "@n8n/langchain.memoryBufferWindow",
        "slack"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 7,
        "@n8n/n8n-nodes-langchain.toolCode": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.slackTrigger": 1,
        "n8n-nodes-base.executionData": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.slack": 2
      },
      "business_value": "Automates clockifyblockiaworkflow processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.toolCalculator, @n8n/langchain.toolHttpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.841969"
    },
    {
      "original_filename": "util_2979_workflow_2979_automate_googledrive_form.json",
      "workflow_name": "util_2979_workflow_2979_automate_googledrive_form",
      "suggested_filename": "util_2979_workflow_2979_automate_googledrive_form.json",
      "category": "UTIL",
      "business_function": "2979",
      "key_integrations": [
        "formTrigger",
        "set",
        "googleDrive",
        "if",
        "code",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleDrive": 4,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates 2979 processes using formTrigger, set, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.842336"
    },
    {
      "original_filename": "ai_send_ai_process_splitinbatches_datetime_webhook.json",
      "workflow_name": "Send Emails from Obsidian",
      "suggested_filename": "ai_send_ai_process_splitinbatches_datetime_webhook.json",
      "category": "AI",
      "business_function": "send",
      "key_integrations": [
        "stickyNote",
        "if",
        "splitOut",
        "splitInBatches",
        "convertToFile",
        "aggregate",
        "gmail",
        "respondToWebhook",
        "set",
        "dateTime"
      ],
      "trigger_type": "webhook",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates send processes using stickyNote, if, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.842685"
    },
    {
      "original_filename": "comm_696_workflow_696_automate_error_gmail.json",
      "workflow_name": "comm_696_workflow_696_automate_error_gmail",
      "suggested_filename": "comm_696_workflow_696_automate_error_gmail.json",
      "category": "COMM",
      "business_function": "696",
      "key_integrations": [
        "errorTrigger",
        "gmail"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.errorTrigger": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates 696 processes using errorTrigger, gmail",
      "analysis_timestamp": "2025-06-01T16:06:48.842947"
    },
    {
      "original_filename": "util_2108_workflow_2108_automate_httprequest_webhook_webhook.json",
      "workflow_name": "util_2108_workflow_2108_automate_httprequest_webhook_webhook",
      "suggested_filename": "util_2108_workflow_2108_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "2108",
      "key_integrations": [
        "webhook",
        "set",
        "httpRequest",
        "intercom",
        "code",
        "stickyNote",
        "switch"
      ],
      "trigger_type": "webhook",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.intercom": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates 2108 processes using webhook, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.843287"
    },
    {
      "original_filename": "ai_email_ai_process_n8nnodeslangchainmemorybufferwindow_executiondata_cron_2.json",
      "workflow_name": "ai_email_ai_process_n8nnodeslangchainmemorybufferwindow_executiondata_cron_2",
      "suggested_filename": "ai_email_ai_process_n8nnodeslangchainmemorybufferwindow_executiondata_cron_2.json",
      "category": "AI",
      "business_function": "email",
      "key_integrations": [
        "scheduleTrigger",
        "airtable",
        "gmail",
        "executeWorkflow",
        "set",
        "executeWorkflowTrigger",
        "formTrigger",
        "filter",
        "code",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 32,
      "complexity": "High",
      "total_nodes": 32,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.airtable": 6,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.formTrigger": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.executionData": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatGroq": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.editImage": 1
      },
      "business_value": "Automates email processes using scheduleTrigger, airtable, gmail",
      "analysis_timestamp": "2025-06-01T16:06:48.843809"
    },
    {
      "original_filename": "util_1049_workflow_1049_automate_googlebigquery_httprequest_cron.json",
      "workflow_name": "util_1049_workflow_1049_automate_googlebigquery_httprequest_cron",
      "suggested_filename": "util_1049_workflow_1049_automate_googlebigquery_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "1049",
      "key_integrations": [
        "googleBigQuery",
        "set",
        "httpRequest",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.googleBigQuery": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates 1049 processes using googleBigQuery, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.843976"
    },
    {
      "original_filename": "util_create_create_manual_clockify.json",
      "workflow_name": "Create a project, tag, and time entry, and update the time entry in Clockify",
      "suggested_filename": "util_create_create_manual_clockify.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "clockify"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.clockify": 4
      },
      "business_value": "Automates create processes using manualTrigger, clockify",
      "analysis_timestamp": "2025-06-01T16:06:48.844235"
    },
    {
      "original_filename": "ai_3971_workflow_3971_automate_n8nnodeslangchainchainllm_markdown_cron.json",
      "workflow_name": "ai_3971_workflow_3971_automate_n8nnodeslangchainchainllm_markdown_cron",
      "suggested_filename": "ai_3971_workflow_3971_automate_n8nnodeslangchainchainllm_markdown_cron.json",
      "category": "AI",
      "business_function": "3971",
      "key_integrations": [
        "scheduleTrigger",
        "microsoftTeams",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.chainLlm",
        "set",
        "aggregate",
        "markdown",
        "stickyNote",
        "code",
        "splitOut"
      ],
      "trigger_type": "cron",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.microsoftTeams": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.splitOut": 1
      },
      "business_value": "Automates 3971 processes using scheduleTrigger, microsoftTeams, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.844543"
    },
    {
      "original_filename": "comm_telegram_validate_httprequest_telegram.json",
      "workflow_name": "Telegram Tron Wallet Blacklist Checker",
      "suggested_filename": "comm_telegram_validate_httprequest_telegram.json",
      "category": "COMM",
      "business_function": "telegram",
      "key_integrations": [
        "telegramTrigger",
        "telegram",
        "if",
        "httpRequest",
        "code",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates telegram processes using telegramTrigger, telegram, if",
      "analysis_timestamp": "2025-06-01T16:06:48.844824"
    },
    {
      "original_filename": "ai_1960_workflow_1960_automate_n8nnodeslangchainchat_n8nnodeslangchainembeddings.json",
      "workflow_name": "ai_1960_workflow_1960_automate_n8nnodeslangchainchat_n8nnodeslangchainembeddings",
      "suggested_filename": "ai_1960_workflow_1960_automate_n8nnodeslangchainchat_n8nnodeslangchainembeddings.json",
      "category": "AI",
      "business_function": "1960",
      "key_integrations": [
        "stickyNote",
        "manualTrigger",
        "@n8n/langchain.vectorStorePinecone",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "set",
        "googleDrive",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.embeddingsOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates 1960 processes using stickyNote, manualTrigger, @n8n/langchain.vectorStorePinecone",
      "analysis_timestamp": "2025-06-01T16:06:48.845114"
    },
    {
      "original_filename": "util_2398_workflow_2398_automate_httprequest_executeworkflow.json",
      "workflow_name": "util_2398_workflow_2398_automate_httprequest_executeworkflow",
      "suggested_filename": "util_2398_workflow_2398_automate_httprequest_executeworkflow.json",
      "category": "UTIL",
      "business_function": "2398",
      "key_integrations": [
        "executeWorkflowTrigger",
        "httpRequest",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates 2398 processes using executeWorkflowTrigger, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.845369"
    },
    {
      "original_filename": "ai_extract_ai_process_n8nnodeslangchainmemorypostgreschat_n8nnodeslangchainchat.json",
      "workflow_name": "ai_extract_ai_process_n8nnodeslangchainmemorypostgreschat_n8nnodeslangchainchat",
      "suggested_filename": "ai_extract_ai_process_n8nnodeslangchainmemorypostgreschat_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "extract",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.memoryPostgresChat",
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger",
        "httpRequest",
        "executeWorkflowTrigger",
        "set",
        "switch"
      ],
      "trigger_type": "chat",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 7,
        "@n8n/n8n-nodes-langchain.memoryPostgresChat": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.httpRequest": 6,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates extract processes using stickyNote, @n8n/langchain.lmChatOpenAi, @n8n/langchain.toolWorkflow",
      "analysis_timestamp": "2025-06-01T16:06:48.845908"
    },
    {
      "original_filename": "ai_search_ai_process_httprequest_n8nnodeslangchainchainsummarization.json",
      "workflow_name": "Search & Summarize Web Data with Perplexity, Gemini AI & Bright Data to Webhooks",
      "suggested_filename": "ai_search_ai_process_httprequest_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "search",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "if",
        "set",
        "httpRequest",
        "wait",
        "stickyNote",
        "@n8n/langchain.informationExtractor"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1
      },
      "business_value": "Automates search processes using manualTrigger, @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.documentDefaultDataLoader",
      "analysis_timestamp": "2025-06-01T16:06:48.846334"
    },
    {
      "original_filename": "util_935_workflow_935_automate_manual_peekalink.json",
      "workflow_name": "util_935_workflow_935_automate_manual_peekalink",
      "suggested_filename": "util_935_workflow_935_automate_manual_peekalink.json",
      "category": "UTIL",
      "business_function": "935",
      "key_integrations": [
        "manualTrigger",
        "peekalink",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.peekalink": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 935 processes using manualTrigger, peekalink, if",
      "analysis_timestamp": "2025-06-01T16:06:48.846582"
    },
    {
      "original_filename": "ai_coinmarketcap_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainh.json",
      "workflow_name": "Coinmarketcap Price Agent",
      "suggested_filename": "ai_coinmarketcap_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainh.json",
      "category": "AI",
      "business_function": "coinmarketcap",
      "key_integrations": [
        "telegram",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "telegramTrigger",
        "@n8n/langchain.agent",
        "set",
        "@n8n/langchain.toolHttpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.telegram": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1
      },
      "business_value": "Automates coinmarketcap processes using telegram, @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.846740"
    },
    {
      "original_filename": "ai_3194_workflow_3194_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "workflow_name": "ai_3194_workflow_3194_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput",
      "suggested_filename": "ai_3194_workflow_3194_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "3194",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "scheduleTrigger",
        "stickyNote",
        "code",
        "httpRequest",
        "gmail",
        "@n8n/langchain.chainLlm",
        "googleCalendar"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.gmail": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.googleCalendar": 1
      },
      "business_value": "Automates 3194 processes using manualTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.847070"
    },
    {
      "original_filename": "util_544_workflow_544_automate_bannerbear_manual.json",
      "workflow_name": "util_544_workflow_544_automate_bannerbear_manual",
      "suggested_filename": "util_544_workflow_544_automate_bannerbear_manual.json",
      "category": "UTIL",
      "business_function": "544",
      "key_integrations": [
        "manualTrigger",
        "bannerbear"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.bannerbear": 1
      },
      "business_value": "Automates 544 processes using manualTrigger, bannerbear",
      "analysis_timestamp": "2025-06-01T16:06:48.847207"
    },
    {
      "original_filename": "ai_podcast_automate_itemlists_n8nnodeslangchainchainllm.json",
      "workflow_name": "Podcast Digest",
      "suggested_filename": "ai_podcast_automate_itemlists_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "podcast",
      "key_integrations": [
        "manualTrigger",
        "code",
        "@n8n/langchain.documentJsonInputLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "stickyNote",
        "itemLists",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolWikipedia",
        "gmail"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 2,
        "@n8n/n8n-nodes-langchain.documentJsonInputLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.itemLists": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "n8n-nodes-base.gmail": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates podcast processes using manualTrigger, code, @n8n/langchain.documentJsonInputLoader",
      "analysis_timestamp": "2025-06-01T16:06:48.847711"
    },
    {
      "original_filename": "util_twilio_automate_manual_twilio.json",
      "workflow_name": "A workflow with the Twilio node",
      "suggested_filename": "util_twilio_automate_manual_twilio.json",
      "category": "UTIL",
      "business_function": "twilio",
      "key_integrations": [
        "manualTrigger",
        "twilio"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.twilio": 1
      },
      "business_value": "Automates twilio processes using manualTrigger, twilio",
      "analysis_timestamp": "2025-06-01T16:06:48.847849"
    },
    {
      "original_filename": "ai_indeed_ai_process_splitinbatches_n8nnodeslangchainchainllm.json",
      "workflow_name": "Indeed Company Data Scraper & Summarization with Airtable, Bright Data and Google Gemini",
      "suggested_filename": "ai_indeed_ai_process_splitinbatches_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "indeed",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.toolHttpRequest",
        "stickyNote",
        "httpRequest",
        "@n8n/langchain.agent",
        "@n8n/langchain.chainLlm",
        "markdown",
        "set",
        "splitInBatches"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 3,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.wait": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1
      },
      "business_value": "Automates indeed processes using manualTrigger, @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.toolHttpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.848221"
    },
    {
      "original_filename": "content_681_workflow_681_automate_httprequest_manual.json",
      "workflow_name": "content_681_workflow_681_automate_httprequest_manual",
      "suggested_filename": "content_681_workflow_681_automate_httprequest_manual.json",
      "category": "CONTENT",
      "business_function": "681",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "linkedIn"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.linkedIn": 1
      },
      "business_value": "Automates 681 processes using manualTrigger, httpRequest, linkedIn",
      "analysis_timestamp": "2025-06-01T16:06:48.848459"
    },
    {
      "original_filename": "data_1107_workflow_1107_automate_calendly_humanticai.json",
      "workflow_name": "data_1107_workflow_1107_automate_calendly_humanticai",
      "suggested_filename": "data_1107_workflow_1107_automate_calendly_humanticai.json",
      "category": "DATA",
      "business_function": "1107",
      "key_integrations": [
        "notion",
        "humanticAi",
        "calendlyTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.humanticAi": 2,
        "n8n-nodes-base.calendlyTrigger": 1
      },
      "business_value": "Automates 1107 processes using notion, humanticAi, calendlyTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.848595"
    },
    {
      "original_filename": "ai_google_ai_process_googlesheets_mailchimp.json",
      "workflow_name": "Google Sheet to Mailchimp",
      "suggested_filename": "ai_google_ai_process_googlesheets_mailchimp.json",
      "category": "AI",
      "business_function": "google",
      "key_integrations": [
        "manualTrigger",
        "googleSheets",
        "mailchimp",
        "interval"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.mailchimp": 1,
        "n8n-nodes-base.interval": 1
      },
      "business_value": "Automates google processes using manualTrigger, googleSheets, mailchimp",
      "analysis_timestamp": "2025-06-01T16:06:48.848724"
    },
    {
      "original_filename": "biz_1792_workflow_1792_automate_itemlists_renamekeys.json",
      "workflow_name": "biz_1792_workflow_1792_automate_itemlists_renamekeys",
      "suggested_filename": "biz_1792_workflow_1792_automate_itemlists_renamekeys.json",
      "category": "BIZ",
      "business_function": "1792",
      "key_integrations": [
        "manualTrigger",
        "googleSheets",
        "salesforce",
        "merge",
        "if",
        "itemLists",
        "renameKeys",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.salesforce": 3,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.renameKeys": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 1792 processes using manualTrigger, googleSheets, salesforce",
      "analysis_timestamp": "2025-06-01T16:06:48.849006"
    },
    {
      "original_filename": "ai_chat_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruct.json",
      "workflow_name": "ai_chat_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruct",
      "suggested_filename": "ai_chat_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruct.json",
      "category": "AI",
      "business_function": "chat",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.embeddingsOpenAi",
        "stickyNote",
        "@n8n/langchain.documentDefaultDataLoader",
        "set",
        "code",
        "googleDrive",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured"
      ],
      "trigger_type": "chat",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 2,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1
      },
      "business_value": "Automates chat processes using manualTrigger, @n8n/langchain.embeddingsOpenAi, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.849369"
    },
    {
      "original_filename": "ai_2422_workflow_2422_automate_venafitlsprotectcloud_slack_webhook.json",
      "workflow_name": "ai_2422_workflow_2422_automate_venafitlsprotectcloud_slack_webhook",
      "suggested_filename": "ai_2422_workflow_2422_automate_venafitlsprotectcloud_slack_webhook.json",
      "category": "AI",
      "business_function": "2422",
      "key_integrations": [
        "venafiTlsProtectCloud",
        "set",
        "stickyNote",
        "respondToWebhook",
        "httpRequest",
        "executeWorkflow",
        "if",
        "merge",
        "@n8n/langchain.openAi",
        "slack"
      ],
      "trigger_type": "webhook",
      "complexity_score": 38,
      "complexity": "High",
      "total_nodes": 38,
      "node_types": {
        "n8n-nodes-base.venafiTlsProtectCloud": 2,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.stickyNote": 12,
        "n8n-nodes-base.respondToWebhook": 3,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.executeWorkflow": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 3,
        "n8n-nodes-base.merge": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.slack": 3,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 2422 processes using venafiTlsProtectCloud, set, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.850020"
    },
    {
      "original_filename": "comm_2732_workflow_2732_automate_slack_httprequest_webhook.json",
      "workflow_name": "comm_2732_workflow_2732_automate_slack_httprequest_webhook",
      "suggested_filename": "comm_2732_workflow_2732_automate_slack_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "2732",
      "key_integrations": [
        "stickyNote",
        "extractFromFile",
        "respondToWebhook",
        "set",
        "switch",
        "slack",
        "code",
        "if",
        "httpRequest",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.respondToWebhook": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.aggregate": 2
      },
      "business_value": "Automates 2732 processes using stickyNote, extractFromFile, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:48.850404"
    },
    {
      "original_filename": "ai_social_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstru.json",
      "workflow_name": "ai_social_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstru",
      "suggested_filename": "ai_social_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstru.json",
      "category": "AI",
      "business_function": "social",
      "key_integrations": [
        "set",
        "httpRequest",
        "code",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.chainLlm",
        "emailSend",
        "stickyNote",
        "googleSheetsTrigger",
        "googleSheets"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.code": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.googleSheetsTrigger": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates social processes using set, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:48.850868"
    },
    {
      "original_filename": "ai_2931_workflow_2931_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_2931_workflow_2931_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_2931_workflow_2931_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "2931",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.manualChatTrigger",
        "@n8n/langchain.toolWikipedia",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.agent",
        "@n8n/langchain.toolHttpRequest",
        "@n8n/langchain.lmChatOllama"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.manualChatTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 1
      },
      "business_value": "Automates 2931 processes using stickyNote, @n8n/langchain.manualChatTrigger, @n8n/langchain.toolWikipedia",
      "analysis_timestamp": "2025-06-01T16:06:48.851207"
    },
    {
      "original_filename": "data_prospectlens_automate_splitinbatches_httprequest.json",
      "workflow_name": "ProspectLens company research",
      "suggested_filename": "data_prospectlens_automate_splitinbatches_httprequest.json",
      "category": "DATA",
      "business_function": "prospectlens",
      "key_integrations": [
        "manualTrigger",
        "filter",
        "stickyNote",
        "googleSheets",
        "splitInBatches",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates prospectlens processes using manualTrigger, filter, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.851560"
    },
    {
      "original_filename": "data_1949_workflow_1949_automate_itemlists_xml.json",
      "workflow_name": "data_1949_workflow_1949_automate_itemlists_xml",
      "suggested_filename": "data_1949_workflow_1949_automate_itemlists_xml.json",
      "category": "DATA",
      "business_function": "1949",
      "key_integrations": [
        "manualTrigger",
        "mySql",
        "set",
        "itemLists",
        "xml",
        "moveBinaryData",
        "stickyNote",
        "writeBinaryFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.mySql": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.itemLists": 2,
        "n8n-nodes-base.xml": 2,
        "n8n-nodes-base.moveBinaryData": 2,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.writeBinaryFile": 1
      },
      "business_value": "Automates 1949 processes using manualTrigger, mySql, set",
      "analysis_timestamp": "2025-06-01T16:06:48.851871"
    },
    {
      "original_filename": "ai_summarize_ai_process_httprequest_emailreadimap_2.json",
      "workflow_name": "Summarize emails with A.I. then send to messenger",
      "suggested_filename": "ai_summarize_ai_process_httprequest_emailreadimap_2.json",
      "category": "AI",
      "business_function": "summarize",
      "key_integrations": [
        "emailReadImap",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "email",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates summarize processes using emailReadImap, httpRequest, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.852148"
    },
    {
      "original_filename": "ecommerce_1809_workflow_1809_automate_zendesk_shopify.json",
      "workflow_name": "ecommerce_1809_workflow_1809_automate_zendesk_shopify",
      "suggested_filename": "ecommerce_1809_workflow_1809_automate_zendesk_shopify.json",
      "category": "ECOMMERCE",
      "business_function": "1809",
      "key_integrations": [
        "shopifyTrigger",
        "if",
        "zendesk",
        "set",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.shopifyTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.zendesk": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates 1809 processes using shopifyTrigger, if, zendesk",
      "analysis_timestamp": "2025-06-01T16:06:48.852384"
    },
    {
      "original_filename": "biz_552_workflow_552_automate_zohocrm_manual.json",
      "workflow_name": "biz_552_workflow_552_automate_zohocrm_manual",
      "suggested_filename": "biz_552_workflow_552_automate_zohocrm_manual.json",
      "category": "BIZ",
      "business_function": "552",
      "key_integrations": [
        "manualTrigger",
        "zohoCrm"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.zohoCrm": 1
      },
      "business_value": "Automates 552 processes using manualTrigger, zohoCrm",
      "analysis_timestamp": "2025-06-01T16:06:48.852503"
    },
    {
      "original_filename": "ai_store_ai_process_writebinaryfile_httprequest.json",
      "workflow_name": "Store the data received from the CocktailDB API in JSON",
      "suggested_filename": "ai_store_ai_process_writebinaryfile_httprequest.json",
      "category": "AI",
      "business_function": "store",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "moveBinaryData",
        "writeBinaryFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.moveBinaryData": 1,
        "n8n-nodes-base.writeBinaryFile": 1
      },
      "business_value": "Automates store processes using manualTrigger, httpRequest, moveBinaryData",
      "analysis_timestamp": "2025-06-01T16:06:48.852715"
    },
    {
      "original_filename": "comm_discord_automate_manual_discord.json",
      "workflow_name": "Discord Intro",
      "suggested_filename": "comm_discord_automate_manual_discord.json",
      "category": "COMM",
      "business_function": "discord",
      "key_integrations": [
        "manualTrigger",
        "discord"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.discord": 1
      },
      "business_value": "Automates discord processes using manualTrigger, discord",
      "analysis_timestamp": "2025-06-01T16:06:48.852831"
    },
    {
      "original_filename": "ai_docsify_automate_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainout_2.json",
      "workflow_name": "Docsify example",
      "suggested_filename": "ai_docsify_automate_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainout_2.json",
      "category": "AI",
      "business_function": "docsify",
      "key_integrations": [
        "set",
        "convertToFile",
        "if",
        "extractFromFile",
        "html",
        "sort",
        "switch",
        "readWriteFile",
        "respondToWebhook",
        "n8n"
      ],
      "trigger_type": "webhook",
      "complexity_score": 60,
      "complexity": "High",
      "total_nodes": 60,
      "node_types": {
        "n8n-nodes-base.set": 6,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.html": 6,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.switch": 3,
        "n8n-nodes-base.readWriteFile": 2,
        "n8n-nodes-base.respondToWebhook": 4,
        "n8n-nodes-base.n8n": 3,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.merge": 7,
        "n8n-nodes-base.executeCommand": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.webhook": 2,
        "n8n-nodes-base.stickyNote": 12
      },
      "business_value": "Automates docsify processes using set, convertToFile, if",
      "analysis_timestamp": "2025-06-01T16:06:48.853469"
    },
    {
      "original_filename": "comm_2512_workflow_2512_automate_splitinbatches_slack.json",
      "workflow_name": "comm_2512_workflow_2512_automate_splitinbatches_slack",
      "suggested_filename": "comm_2512_workflow_2512_automate_splitinbatches_slack.json",
      "category": "COMM",
      "business_function": "2512",
      "key_integrations": [
        "set",
        "httpRequest",
        "xml",
        "splitInBatches",
        "wait",
        "if",
        "slack",
        "executeWorkflowTrigger",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.xml": 3,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 8
      },
      "business_value": "Automates 2512 processes using set, httpRequest, xml",
      "analysis_timestamp": "2025-06-01T16:06:48.853959"
    },
    {
      "original_filename": "comm_2088_workflow_2088_automate_gmail_schedule_cron.json",
      "workflow_name": "comm_2088_workflow_2088_automate_gmail_schedule_cron",
      "suggested_filename": "comm_2088_workflow_2088_automate_gmail_schedule_cron.json",
      "category": "COMM",
      "business_function": "2088",
      "key_integrations": [
        "filter",
        "set",
        "stickyNote",
        "scheduleTrigger",
        "googleSheets",
        "gmail",
        "merge"
      ],
      "trigger_type": "cron",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates 2088 processes using filter, set, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.854351"
    },
    {
      "original_filename": "util_934_workflow_934_automate_stackby_manual.json",
      "workflow_name": "util_934_workflow_934_automate_stackby_manual",
      "suggested_filename": "util_934_workflow_934_automate_stackby_manual.json",
      "category": "UTIL",
      "business_function": "934",
      "key_integrations": [
        "manualTrigger",
        "set",
        "stackby"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stackby": 2
      },
      "business_value": "Automates 934 processes using manualTrigger, set, stackby",
      "analysis_timestamp": "2025-06-01T16:06:48.854570"
    },
    {
      "original_filename": "util_539_workflow_539_automate_rundeck_manual.json",
      "workflow_name": "util_539_workflow_539_automate_rundeck_manual",
      "suggested_filename": "util_539_workflow_539_automate_rundeck_manual.json",
      "category": "UTIL",
      "business_function": "539",
      "key_integrations": [
        "manualTrigger",
        "rundeck"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.rundeck": 1
      },
      "business_value": "Automates 539 processes using manualTrigger, rundeck",
      "analysis_timestamp": "2025-06-01T16:06:48.854674"
    },
    {
      "original_filename": "util_558_workflow_558_automate_graphql_manual.json",
      "workflow_name": "util_558_workflow_558_automate_graphql_manual",
      "suggested_filename": "util_558_workflow_558_automate_graphql_manual.json",
      "category": "UTIL",
      "business_function": "558",
      "key_integrations": [
        "manualTrigger",
        "graphql"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.graphql": 1
      },
      "business_value": "Automates 558 processes using manualTrigger, graphql",
      "analysis_timestamp": "2025-06-01T16:06:48.854781"
    },
    {
      "original_filename": "util_2621_workflow_2621_automate_calendly.json",
      "workflow_name": "util_2621_workflow_2621_automate_calendly",
      "suggested_filename": "util_2621_workflow_2621_automate_calendly.json",
      "category": "UTIL",
      "business_function": "2621",
      "key_integrations": [
        "klicktipp.klicktipp",
        "splitOut",
        "if",
        "calendlyTrigger",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-klicktipp.klicktipp": 5,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.calendlyTrigger": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.noOp": 3,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 2621 processes using klicktipp.klicktipp, splitOut, if",
      "analysis_timestamp": "2025-06-01T16:06:48.855185"
    },
    {
      "original_filename": "biz_lead_automate_httprequest_manual.json",
      "workflow_name": "Lead Generation System (Template)",
      "suggested_filename": "biz_lead_automate_httprequest_manual.json",
      "category": "BIZ",
      "business_function": "lead",
      "key_integrations": [
        "manualTrigger",
        "set",
        "stickyNote",
        "httpRequest",
        "airtable",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates lead processes using manualTrigger, set, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.855554"
    },
    {
      "original_filename": "comm_1771_workflow_1771_automate_functionitem_hubspot_cron.json",
      "workflow_name": "comm_1771_workflow_1771_automate_functionitem_hubspot_cron",
      "suggested_filename": "comm_1771_workflow_1771_automate_functionitem_hubspot_cron.json",
      "category": "COMM",
      "business_function": "1771",
      "key_integrations": [
        "functionItem",
        "cron",
        "hubspot",
        "mailchimp"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.functionItem": 2,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.hubspot": 1,
        "n8n-nodes-base.mailchimp": 1
      },
      "business_value": "Automates 1771 processes using functionItem, cron, hubspot",
      "analysis_timestamp": "2025-06-01T16:06:48.855851"
    },
    {
      "original_filename": "util_1243_workflow_1243_automate_splitinbatches_n8ntrainingcustomerdatastore.json",
      "workflow_name": "util_1243_workflow_1243_automate_splitinbatches_n8ntrainingcustomerdatastore",
      "suggested_filename": "util_1243_workflow_1243_automate_splitinbatches_n8ntrainingcustomerdatastore.json",
      "category": "UTIL",
      "business_function": "1243",
      "key_integrations": [
        "manualTrigger",
        "n8nTrainingCustomerDatastore",
        "splitInBatches",
        "httpRequest",
        "wait"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.n8nTrainingCustomerDatastore": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 1243 processes using manualTrigger, n8nTrainingCustomerDatastore, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.855980"
    },
    {
      "original_filename": "util_2857_workflow_2857_automate_httprequest_webhook_webhook.json",
      "workflow_name": "util_2857_workflow_2857_automate_httprequest_webhook_webhook",
      "suggested_filename": "util_2857_workflow_2857_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "2857",
      "key_integrations": [
        "stickyNote",
        "manualTrigger",
        "wait",
        "httpRequest",
        "set",
        "webhook",
        "respondToWebhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.wait": 2,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.webhook": 2,
        "n8n-nodes-base.respondToWebhook": 1
      },
      "business_value": "Automates 2857 processes using stickyNote, manualTrigger, wait",
      "analysis_timestamp": "2025-06-01T16:06:48.856298"
    },
    {
      "original_filename": "ai_send_ai_process_openweathermap_line_cron.json",
      "workflow_name": "Send daily weather updates via a message in Line",
      "suggested_filename": "ai_send_ai_process_openweathermap_line_cron.json",
      "category": "AI",
      "business_function": "send",
      "key_integrations": [
        "line",
        "cron",
        "openWeatherMap"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.line": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.openWeatherMap": 1
      },
      "business_value": "Automates send processes using line, cron, openWeatherMap",
      "analysis_timestamp": "2025-06-01T16:06:48.856434"
    },
    {
      "original_filename": "ai_3303_workflow_3303_automate_n8nnodeslangchainchat_n8nnodeslangchainlmchatopen.json",
      "workflow_name": "ai_3303_workflow_3303_automate_n8nnodeslangchainchat_n8nnodeslangchainlmchatopen",
      "suggested_filename": "ai_3303_workflow_3303_automate_n8nnodeslangchainchat_n8nnodeslangchainlmchatopen.json",
      "category": "AI",
      "business_function": "3303",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "mcp.mcpClientTool",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-mcp.mcpClientTool": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates 3303 processes using @n8n/langchain.chatTrigger, @n8n/langchain.agent, mcp.mcpClientTool",
      "analysis_timestamp": "2025-06-01T16:06:48.856688"
    },
    {
      "original_filename": "ai_2098_workflow_2098_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_2098_workflow_2098_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_2098_workflow_2098_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "2098",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.openAi",
        "@n8n/langchain.toolCalculator",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1
      },
      "business_value": "Automates 2098 processes using stickyNote, @n8n/langchain.memoryBufferWindow, @n8n/langchain.openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.856932"
    },
    {
      "original_filename": "ai_transform_process_webhook_httprequest_webhook_1.json",
      "workflow_name": "Transform Image to Lego Style Using Line and Dall-E",
      "suggested_filename": "ai_transform_process_webhook_httprequest_webhook_1.json",
      "category": "AI",
      "business_function": "transform",
      "key_integrations": [
        "webhook",
        "httpRequest",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "webhook",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.openAi": 2
      },
      "business_value": "Automates transform processes using webhook, httpRequest, @n8n/langchain.openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.857215"
    },
    {
      "original_filename": "util_oidc_automate_httprequest_webhook_webhook.json",
      "workflow_name": "OIDC client workflow",
      "suggested_filename": "util_oidc_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "oidc",
      "key_integrations": [
        "webhook",
        "code",
        "httpRequest",
        "respondToWebhook",
        "if",
        "html",
        "stickyNote",
        "set"
      ],
      "trigger_type": "webhook",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates oidc processes using webhook, code, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.857539"
    },
    {
      "original_filename": "util_manipulate_automate_httprequest_manual.json",
      "workflow_name": "util_manipulate_automate_httprequest_manual",
      "suggested_filename": "util_manipulate_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "manipulate",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "executeWorkflowTrigger",
        "stickyNote",
        "set",
        "dropbox",
        "merge",
        "wait",
        "switch"
      ],
      "trigger_type": "manual",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.dropbox": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates manipulate processes using manualTrigger, httpRequest, executeWorkflowTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.857932"
    },
    {
      "original_filename": "comm_1554_workflow_1554_automate_splitinbatches_rssfeedread_cron.json",
      "workflow_name": "comm_1554_workflow_1554_automate_splitinbatches_rssfeedread_cron",
      "suggested_filename": "comm_1554_workflow_1554_automate_splitinbatches_rssfeedread_cron.json",
      "category": "COMM",
      "business_function": "1554",
      "key_integrations": [
        "rssFeedRead",
        "splitInBatches",
        "cron",
        "function",
        "telegram",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.rssFeedRead": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.function": 3,
        "n8n-nodes-base.telegram": 3,
        "n8n-nodes-base.if": 2
      },
      "business_value": "Automates 1554 processes using rssFeedRead, splitInBatches, cron",
      "analysis_timestamp": "2025-06-01T16:06:48.858195"
    },
    {
      "original_filename": "ai_noco_ai_process_nocodb_slack_cron.json",
      "workflow_name": "Noco Kanban Board with AI Prioritization",
      "suggested_filename": "ai_noco_ai_process_nocodb_slack_cron.json",
      "category": "AI",
      "business_function": "noco",
      "key_integrations": [
        "formTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "nocoDb",
        "stickyNote",
        "aggregate",
        "manualTrigger",
        "if",
        "emailSend"
      ],
      "trigger_type": "chat",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.nocoDb": 4,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.emailSend": 4,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates noco processes using formTrigger, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.858642"
    },
    {
      "original_filename": "ai_auto_ai_process_splitinbatches_microsoftoutlook.json",
      "workflow_name": "ai_auto_ai_process_splitinbatches_microsoftoutlook",
      "suggested_filename": "ai_auto_ai_process_splitinbatches_microsoftoutlook.json",
      "category": "AI",
      "business_function": "auto",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "@n8n/langchain.lmChatOllama",
        "microsoftOutlook",
        "splitInBatches",
        "markdown",
        "set",
        "filter",
        "if",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 10,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 1,
        "n8n-nodes-base.microsoftOutlook": 13,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates auto processes using manualTrigger, stickyNote, @n8n/langchain.lmChatOllama",
      "analysis_timestamp": "2025-06-01T16:06:48.859223"
    },
    {
      "original_filename": "ai_build_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "workflow_name": "Build an MCP Server with Google Calendar",
      "suggested_filename": "ai_build_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "category": "AI",
      "business_function": "build",
      "key_integrations": [
        "stickyNote",
        "googleCalendarTool",
        "@n8n/langchain.mcpTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.mcpClientTool",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.stickyNote": 13,
        "n8n-nodes-base.googleCalendarTool": 4,
        "@n8n/n8n-nodes-langchain.mcpTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.mcpClientTool": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates build processes using stickyNote, googleCalendarTool, @n8n/langchain.mcpTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.859673"
    },
    {
      "original_filename": "comm_2118_workflow_2118_automate_hubspot_gmail_cron.json",
      "workflow_name": "comm_2118_workflow_2118_automate_hubspot_gmail_cron",
      "suggested_filename": "comm_2118_workflow_2118_automate_hubspot_gmail_cron.json",
      "category": "COMM",
      "business_function": "2118",
      "key_integrations": [
        "scheduleTrigger",
        "stickyNote",
        "gmail",
        "hubspot",
        "if",
        "httpRequest",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.hubspot": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 2118 processes using scheduleTrigger, stickyNote, gmail",
      "analysis_timestamp": "2025-06-01T16:06:48.859939"
    },
    {
      "original_filename": "ai_personal_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvector.json",
      "workflow_name": "Personal Portfolio Resume CV Chatbot",
      "suggested_filename": "ai_personal_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvector.json",
      "category": "AI",
      "business_function": "personal",
      "key_integrations": [
        "@n8n/langchain.embeddingsGoogleGemini",
        "stickyNote",
        "scheduleTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "googleDriveTrigger",
        "googleDrive",
        "@n8n/langchain.vectorStorePinecone",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "webhook"
      ],
      "trigger_type": "cron",
      "complexity_score": 35,
      "complexity": "High",
      "total_nodes": 35,
      "node_types": {
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini": 2,
        "n8n-nodes-base.stickyNote": 11,
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2,
        "n8n-nodes-base.googleDriveTrigger": 2,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.webhook": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "n8n-nodes-base.nocoDb": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates personal processes using @n8n/langchain.embeddingsGoogleGemini, stickyNote, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.860324"
    },
    {
      "original_filename": "ai_fine_ai_process_n8nnodeslangchainchat_httprequest_2.json",
      "workflow_name": "Fine-tuning with OpenAI models",
      "suggested_filename": "ai_fine_ai_process_n8nnodeslangchainchat_httprequest_2.json",
      "category": "AI",
      "business_function": "fine",
      "key_integrations": [
        "manualTrigger",
        "googleDrive",
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "stickyNote",
        "@n8n/langchain.openAi",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates fine processes using manualTrigger, googleDrive, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.860615"
    },
    {
      "original_filename": "ai_2790_workflow_2790_automate_gmail_emailsend.json",
      "workflow_name": "ai_2790_workflow_2790_automate_gmail_emailsend",
      "suggested_filename": "ai_2790_workflow_2790_automate_gmail_emailsend.json",
      "category": "AI",
      "business_function": "2790",
      "key_integrations": [
        "stravaTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "gmail",
        "code",
        "@n8n/langchain.agent",
        "emailSend",
        "stickyNote",
        "whatsApp"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.stravaTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.code": 4,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.whatsApp": 1
      },
      "business_value": "Automates 2790 processes using stravaTrigger, @n8n/langchain.lmChatGoogleGemini, gmail",
      "analysis_timestamp": "2025-06-01T16:06:48.860928"
    },
    {
      "original_filename": "ops_clockify_backup_httprequest_stopanderror_cron.json",
      "workflow_name": "Clockify Backup Template",
      "suggested_filename": "ops_clockify_backup_httprequest_stopanderror_cron.json",
      "category": "OPS",
      "business_function": "clockify",
      "key_integrations": [
        "extractFromFile",
        "compareDatasets",
        "stopAndError",
        "set",
        "splitOut",
        "filter",
        "clockify",
        "httpRequest",
        "github",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.compareDatasets": 1,
        "n8n-nodes-base.stopAndError": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.clockify": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.github": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates clockify processes using extractFromFile, compareDatasets, stopAndError",
      "analysis_timestamp": "2025-06-01T16:06:48.861220"
    },
    {
      "original_filename": "comm_2393_workflow_2393_automate_gmail_httprequest.json",
      "workflow_name": "comm_2393_workflow_2393_automate_gmail_httprequest",
      "suggested_filename": "comm_2393_workflow_2393_automate_gmail_httprequest.json",
      "category": "COMM",
      "business_function": "2393",
      "key_integrations": [
        "gmailTrigger",
        "if",
        "splitOut",
        "filter",
        "stickyNote",
        "set",
        "httpRequest",
        "googleDrive",
        "html"
      ],
      "trigger_type": "manual",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.html": 1
      },
      "business_value": "Automates 2393 processes using gmailTrigger, if, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.861613"
    },
    {
      "original_filename": "ai_extract_ai_process_httprequest_manual.json",
      "workflow_name": "Extract Business Leads from Google Maps with Dumpling AI to Google Sheets",
      "suggested_filename": "ai_extract_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "extract",
      "key_integrations": [
        "stickyNote",
        "manualTrigger",
        "httpRequest",
        "splitOut",
        "googleSheets"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates extract processes using stickyNote, manualTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.862277"
    },
    {
      "original_filename": "util_3973_workflow_3973_automate_webhook_respondtowebhook_webhook.json",
      "workflow_name": "util_3973_workflow_3973_automate_webhook_respondtowebhook_webhook",
      "suggested_filename": "util_3973_workflow_3973_automate_webhook_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "3973",
      "key_integrations": [
        "webhook",
        "code",
        "switch",
        "respondToWebhook",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.code": 7,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 3973 processes using webhook, code, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.862715"
    },
    {
      "original_filename": "ai_agent_analyze_generic.json",
      "workflow_name": "ai_agent_analyze_generic",
      "suggested_filename": "ai_agent_analyze_generic.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [],
      "trigger_type": "manual",
      "complexity_score": 0,
      "complexity": "Low",
      "total_nodes": 0,
      "node_types": {},
      "business_value": "Automates agent processes using ",
      "analysis_timestamp": "2025-06-01T16:06:48.862894"
    },
    {
      "original_filename": "ops_1832_workflow_1832_automate_webhook_github_webhook.json",
      "workflow_name": "ops_1832_workflow_1832_automate_webhook_github_webhook",
      "suggested_filename": "ops_1832_workflow_1832_automate_webhook_github_webhook.json",
      "category": "OPS",
      "business_function": "1832",
      "key_integrations": [
        "zendesk",
        "if",
        "function",
        "github",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.zendesk": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.github": 2,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 1832 processes using zendesk, if, function",
      "analysis_timestamp": "2025-06-01T16:06:48.863150"
    },
    {
      "original_filename": "marketing_automate_activecampaign_manual.json",
      "workflow_name": "",
      "suggested_filename": "marketing_automate_activecampaign_manual.json",
      "category": "MARKETING",
      "business_function": "automate",
      "key_integrations": [
        "manualTrigger",
        "activeCampaign"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.activeCampaign": 1
      },
      "business_value": "Automates automate processes using manualTrigger, activeCampaign",
      "analysis_timestamp": "2025-06-01T16:06:48.863261"
    },
    {
      "original_filename": "ops_1856_workflow_1856_automate_homeassistant_github.json",
      "workflow_name": "ops_1856_workflow_1856_automate_homeassistant_github",
      "suggested_filename": "ops_1856_workflow_1856_automate_homeassistant_github.json",
      "category": "OPS",
      "business_function": "1856",
      "key_integrations": [
        "githubTrigger",
        "homeAssistant",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.githubTrigger": 1,
        "n8n-nodes-base.homeAssistant": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 1856 processes using githubTrigger, homeAssistant, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.863556"
    },
    {
      "original_filename": "util_2886_workflow_2886_automate_splitinbatches_schedule_cron.json",
      "workflow_name": "util_2886_workflow_2886_automate_splitinbatches_schedule_cron",
      "suggested_filename": "util_2886_workflow_2886_automate_splitinbatches_schedule_cron.json",
      "category": "UTIL",
      "business_function": "2886",
      "key_integrations": [
        "manualTrigger",
        "n8n",
        "splitInBatches",
        "googleDrive",
        "convertToFile",
        "scheduleTrigger",
        "filter"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.googleDrive": 4,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates 2886 processes using manualTrigger, n8n, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.863789"
    },
    {
      "original_filename": "biz_receive_create_contact_helpscout.json",
      "workflow_name": "Receive updates when a customer is created in HelpScout",
      "suggested_filename": "biz_receive_create_contact_helpscout.json",
      "category": "BIZ",
      "business_function": "receive",
      "key_integrations": [
        "helpScoutTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.helpScoutTrigger": 1
      },
      "business_value": "Automates receive processes using helpScoutTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.863986"
    },
    {
      "original_filename": "ai_telegram_ai_process_telegram_openai_2.json",
      "workflow_name": "Telegram AI-bot",
      "suggested_filename": "ai_telegram_ai_process_telegram_openai_2.json",
      "category": "AI",
      "business_function": "telegram",
      "key_integrations": [
        "telegramTrigger",
        "switch",
        "stickyNote",
        "set",
        "openAi",
        "telegram",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.openAi": 3,
        "n8n-nodes-base.telegram": 4,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates telegram processes using telegramTrigger, switch, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.864273"
    },
    {
      "original_filename": "ai_customer_automate_n8nnodeslangchainmemorybufferwindow_googlesheets.json",
      "workflow_name": "Customer and Sales Support",
      "suggested_filename": "ai_customer_automate_n8nnodeslangchainmemorybufferwindow_googlesheets.json",
      "category": "AI",
      "business_function": "customer",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "googleSheetsTool",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.googleSheetsTool": 3,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates customer processes using @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.864591"
    },
    {
      "original_filename": "ai_1895_workflow_1895_automate_reddit_manual.json",
      "workflow_name": "ai_1895_workflow_1895_automate_reddit_manual",
      "suggested_filename": "ai_1895_workflow_1895_automate_reddit_manual.json",
      "category": "AI",
      "business_function": "1895",
      "key_integrations": [
        "manualTrigger",
        "reddit",
        "stickyNote",
        "set",
        "if",
        "merge",
        "openAi"
      ],
      "trigger_type": "manual",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.reddit": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.openAi": 3
      },
      "business_value": "Automates 1895 processes using manualTrigger, reddit, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.864928"
    },
    {
      "original_filename": "util_1588_workflow_1588_automate_webhook_respondtowebhook_webhook.json",
      "workflow_name": "util_1588_workflow_1588_automate_webhook_respondtowebhook_webhook",
      "suggested_filename": "util_1588_workflow_1588_automate_webhook_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "1588",
      "key_integrations": [
        "function",
        "webhook",
        "respondToWebhook",
        "set"
      ],
      "trigger_type": "webhook",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.webhook": 2,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 1588 processes using function, webhook, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:48.865218"
    },
    {
      "original_filename": "ai_advanced_ai_process_n8nnodeslangchainchainretrievalqa_httprequest_webhook.json",
      "workflow_name": "ai_advanced_ai_process_n8nnodeslangchainchainretrievalqa_httprequest_webhook",
      "suggested_filename": "ai_advanced_ai_process_n8nnodeslangchainchainretrievalqa_httprequest_webhook.json",
      "category": "AI",
      "business_function": "advanced",
      "key_integrations": [
        "slack",
        "stickyNote",
        "code",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.retrieverVectorStore",
        "httpRequest",
        "@n8n/langchain.vectorStorePinecone"
      ],
      "trigger_type": "chat",
      "complexity_score": 39,
      "complexity": "High",
      "total_nodes": 39,
      "node_types": {
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.stickyNote": 13,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.noOp": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 2,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.gmailTrigger": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates advanced processes using slack, stickyNote, code",
      "analysis_timestamp": "2025-06-01T16:06:48.865656"
    },
    {
      "original_filename": "ai_agent_ai_process_httprequest_googlecalendar_webhook.json",
      "workflow_name": "ai_agent_ai_process_httprequest_googlecalendar_webhook",
      "suggested_filename": "ai_agent_ai_process_httprequest_googlecalendar_webhook.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolWorkflow",
        "gmailTool",
        "executeWorkflowTrigger",
        "splitOut",
        "airtable",
        "googleCalendarTool",
        "webhook",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.gmailTool": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.googleCalendarTool": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 8
      },
      "business_value": "Automates agent processes using @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi, @n8n/langchain.toolWorkflow",
      "analysis_timestamp": "2025-06-01T16:06:48.866028"
    },
    {
      "original_filename": "comm_2677_workflow_2677_automate_gmail_httprequest_webhook.json",
      "workflow_name": "comm_2677_workflow_2677_automate_gmail_httprequest_webhook",
      "suggested_filename": "comm_2677_workflow_2677_automate_gmail_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "2677",
      "key_integrations": [
        "gmailTrigger",
        "code",
        "set",
        "if",
        "httpRequest",
        "webhook",
        "limit",
        "merge",
        "aggregate",
        "respondToWebhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 40,
      "complexity": "High",
      "total_nodes": 40,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.code": 4,
        "n8n-nodes-base.set": 14,
        "n8n-nodes-base.if": 5,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 2677 processes using gmailTrigger, code, set",
      "analysis_timestamp": "2025-06-01T16:06:48.866514"
    },
    {
      "original_filename": "ecommerce_shopify_automate_graphql_schedule_cron.json",
      "workflow_name": "Shopify order UTM to Baserow",
      "suggested_filename": "ecommerce_shopify_automate_graphql_schedule_cron.json",
      "category": "ECOMMERCE",
      "business_function": "shopify",
      "key_integrations": [
        "baserow",
        "set",
        "graphql",
        "scheduleTrigger",
        "splitOut",
        "if",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.baserow": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.graphql": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates shopify processes using baserow, set, graphql",
      "analysis_timestamp": "2025-06-01T16:06:48.866820"
    },
    {
      "original_filename": "util_receive_update_webflow.json",
      "workflow_name": "Receive updates when a form submission occurs in your Webflow website",
      "suggested_filename": "util_receive_update_webflow.json",
      "category": "UTIL",
      "business_function": "receive",
      "key_integrations": [
        "webflowTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.webflowTrigger": 1
      },
      "business_value": "Automates receive processes using webflowTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.866928"
    },
    {
      "original_filename": "ai_airtop_ai_process_slack_n8nnodeslangchainoutputparserstructured.json",
      "workflow_name": "Airtop Web Agent",
      "suggested_filename": "ai_airtop_ai_process_slack_n8nnodeslangchainoutputparserstructured.json",
      "category": "AI",
      "business_function": "airtop",
      "key_integrations": [
        "@n8n/langchain.agent",
        "airtopTool",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.lmChatAnthropic",
        "formTrigger",
        "slack",
        "stickyNote",
        "@n8n/langchain.outputParserStructured",
        "set",
        "airtop"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.airtopTool": 5,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.slack": 2,
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.airtop": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1
      },
      "business_value": "Automates airtop processes using @n8n/langchain.agent, airtopTool, @n8n/langchain.toolWorkflow",
      "analysis_timestamp": "2025-06-01T16:06:48.867255"
    },
    {
      "original_filename": "data_append_update_googlesheets_manual.json",
      "workflow_name": "Append, lookup, update, and read data from a Google Sheets spreadsheet",
      "suggested_filename": "data_append_update_googlesheets_manual.json",
      "category": "DATA",
      "business_function": "append",
      "key_integrations": [
        "manualTrigger",
        "googleSheets",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 4,
        "n8n-nodes-base.set": 2
      },
      "business_value": "Automates append processes using manualTrigger, googleSheets, set",
      "analysis_timestamp": "2025-06-01T16:06:48.867509"
    },
    {
      "original_filename": "comm_pipeline_automate_postgres_slack_cron_1.json",
      "workflow_name": "ETL pipeline",
      "suggested_filename": "comm_pipeline_automate_postgres_slack_cron_1.json",
      "category": "COMM",
      "business_function": "pipeline",
      "key_integrations": [
        "twitter",
        "postgres",
        "mongoDb",
        "slack",
        "if",
        "googleCloudNaturalLanguage",
        "set",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.postgres": 1,
        "n8n-nodes-base.mongoDb": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.googleCloudNaturalLanguage": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates pipeline processes using twitter, postgres, mongoDb",
      "analysis_timestamp": "2025-06-01T16:06:48.867780"
    },
    {
      "original_filename": "data_convert_process_httprequest_manual.json",
      "workflow_name": "Convert image from jpg/png to webp",
      "suggested_filename": "data_convert_process_httprequest_manual.json",
      "category": "DATA",
      "business_function": "convert",
      "key_integrations": [
        "manualTrigger",
        "set",
        "googleSheets",
        "code",
        "switch",
        "httpRequest",
        "googleDrive",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates convert processes using manualTrigger, set, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.868066"
    },
    {
      "original_filename": "data_1395_workflow_1395_automate_httprequest_awsrekognition.json",
      "workflow_name": "data_1395_workflow_1395_automate_httprequest_awsrekognition",
      "suggested_filename": "data_1395_workflow_1395_automate_httprequest_awsrekognition.json",
      "category": "DATA",
      "business_function": "1395",
      "key_integrations": [
        "awsRekognition",
        "httpRequest",
        "set",
        "function",
        "googleSheets"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.awsRekognition": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates 1395 processes using awsRekognition, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.868310"
    },
    {
      "original_filename": "util_3205_workflow_3205_automate_httprequest_schedule_cron.json",
      "workflow_name": "util_3205_workflow_3205_automate_httprequest_schedule_cron",
      "suggested_filename": "util_3205_workflow_3205_automate_httprequest_schedule_cron.json",
      "category": "UTIL",
      "business_function": "3205",
      "key_integrations": [
        "manualTrigger",
        "convertToFile",
        "splitOut",
        "scheduleTrigger",
        "stickyNote",
        "httpRequest",
        "readWriteFile",
        "extractFromFile",
        "if",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.convertToFile": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.readWriteFile": 3,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates 3205 processes using manualTrigger, convertToFile, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.868635"
    },
    {
      "original_filename": "ai_2421_workflow_2421_automate_n8nnodeslangchainchainllm_httprequest.json",
      "workflow_name": "ai_2421_workflow_2421_automate_n8nnodeslangchainchainllm_httprequest",
      "suggested_filename": "ai_2421_workflow_2421_automate_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "2421",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "sort",
        "stickyNote",
        "googleDrive",
        "httpRequest",
        "compression",
        "code",
        "editImage",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.compression": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.editImage": 1,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates 2421 processes using manualTrigger, @n8n/langchain.lmChatGoogleGemini, sort",
      "analysis_timestamp": "2025-06-01T16:06:48.868964"
    },
    {
      "original_filename": "util_3869_workflow_3869_automate_manual.json",
      "workflow_name": "util_3869_workflow_3869_automate_manual",
      "suggested_filename": "util_3869_workflow_3869_automate_manual.json",
      "category": "UTIL",
      "business_function": "3869",
      "key_integrations": [
        "@custom-js/pdf-toolkit.html2Pdf",
        "@custom-js/pdf-toolkit.CompressPDF",
        "manualTrigger",
        "code",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "@custom-js/n8n-nodes-pdf-toolkit.html2Pdf": 1,
        "@custom-js/n8n-nodes-pdf-toolkit.CompressPDF": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates 3869 processes using @custom-js/pdf-toolkit.html2Pdf, @custom-js/pdf-toolkit.CompressPDF, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.869103"
    },
    {
      "original_filename": "util_557_workflow_557_automate_manual_redis.json",
      "workflow_name": "util_557_workflow_557_automate_manual_redis",
      "suggested_filename": "util_557_workflow_557_automate_manual_redis.json",
      "category": "UTIL",
      "business_function": "557",
      "key_integrations": [
        "manualTrigger",
        "redis"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.redis": 1
      },
      "business_value": "Automates 557 processes using manualTrigger, redis",
      "analysis_timestamp": "2025-06-01T16:06:48.869318"
    },
    {
      "original_filename": "comm_2327_workflow_2327_automate_splitinbatches_slack_cron.json",
      "workflow_name": "comm_2327_workflow_2327_automate_splitinbatches_slack_cron",
      "suggested_filename": "comm_2327_workflow_2327_automate_splitinbatches_slack_cron.json",
      "category": "COMM",
      "business_function": "2327",
      "key_integrations": [
        "scheduleTrigger",
        "set",
        "googleSheets",
        "slack",
        "gmail",
        "httpRequest",
        "splitInBatches",
        "stickyNote",
        "switch"
      ],
      "trigger_type": "cron",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates 2327 processes using scheduleTrigger, set, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.869698"
    },
    {
      "original_filename": "util_create_create_contact_drift_manual.json",
      "workflow_name": "Create a contact in Drift",
      "suggested_filename": "util_create_create_contact_drift_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "drift"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.drift": 1
      },
      "business_value": "Automates create processes using manualTrigger, drift",
      "analysis_timestamp": "2025-06-01T16:06:48.869822"
    },
    {
      "original_filename": "comm_3954_workflow_3954_automate_gmail_httprequest.json",
      "workflow_name": "comm_3954_workflow_3954_automate_gmail_httprequest",
      "suggested_filename": "comm_3954_workflow_3954_automate_gmail_httprequest.json",
      "category": "COMM",
      "business_function": "3954",
      "key_integrations": [
        "splitOut",
        "httpRequest",
        "set",
        "formTrigger",
        "if",
        "form",
        "stickyNote",
        "convertToFile",
        "html",
        "gmail"
      ],
      "trigger_type": "manual",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.form": 2,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.convertToFile": 2,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.extractFromFile": 1
      },
      "business_value": "Automates 3954 processes using splitOut, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.870172"
    },
    {
      "original_filename": "comm_create_create_contact_sendgrid_manual.json",
      "workflow_name": "Create, update and get a contact using the SendGrid node",
      "suggested_filename": "comm_create_create_contact_sendgrid_manual.json",
      "category": "COMM",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "sendGrid"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.sendGrid": 3
      },
      "business_value": "Automates create processes using manualTrigger, sendGrid",
      "analysis_timestamp": "2025-06-01T16:06:48.870408"
    },
    {
      "original_filename": "util_create_create_task_jira_manual.json",
      "workflow_name": "Create a new issue in Jira",
      "suggested_filename": "util_create_create_task_jira_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "jira"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.jira": 1
      },
      "business_value": "Automates create processes using manualTrigger, jira",
      "analysis_timestamp": "2025-06-01T16:06:48.870625"
    },
    {
      "original_filename": "comm_automated_backup_splitinbatches_schedule_cron.json",
      "workflow_name": "✨😃Automated Workflow Backups to Google Drive",
      "suggested_filename": "comm_automated_backup_splitinbatches_schedule_cron.json",
      "category": "COMM",
      "business_function": "automated",
      "key_integrations": [
        "manualTrigger",
        "splitInBatches",
        "scheduleTrigger",
        "googleDrive",
        "set",
        "n8n",
        "limit",
        "convertToFile",
        "telegram",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.googleDrive": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates automated processes using manualTrigger, splitInBatches, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.870978"
    },
    {
      "original_filename": "comm_3686_workflow_3686_automate_gmail_telegram.json",
      "workflow_name": "comm_3686_workflow_3686_automate_gmail_telegram",
      "suggested_filename": "comm_3686_workflow_3686_automate_gmail_telegram.json",
      "category": "COMM",
      "business_function": "3686",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatOpenRouter",
        "telegramTrigger",
        "stickyNote",
        "gmailTool",
        "aggregate",
        "telegram",
        "@n8n/langchain.agent",
        "gmail",
        "filter"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 2,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.gmailTool": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.telegram": 1,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates 3686 processes using manualTrigger, @n8n/langchain.lmChatOpenRouter, telegramTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.871302"
    },
    {
      "original_filename": "biz_sync_sync_pipedrive_datetime_cron.json",
      "workflow_name": "Two Way Sync Pipedrive and MySQL",
      "suggested_filename": "biz_sync_sync_pipedrive_datetime_cron.json",
      "category": "BIZ",
      "business_function": "sync",
      "key_integrations": [
        "compareDatasets",
        "scheduleTrigger",
        "mySql",
        "pipedrive",
        "dateTime",
        "set",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.compareDatasets": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.mySql": 3,
        "n8n-nodes-base.pipedrive": 3,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.if": 2
      },
      "business_value": "Automates sync processes using compareDatasets, scheduleTrigger, mySql",
      "analysis_timestamp": "2025-06-01T16:06:48.871597"
    },
    {
      "original_filename": "ai_daily_ai_process_slack_googlecalendar_cron_2.json",
      "workflow_name": "Daily meetings summarization with Gemini AI",
      "suggested_filename": "ai_daily_ai_process_slack_googlecalendar_cron_2.json",
      "category": "AI",
      "business_function": "daily",
      "key_integrations": [
        "stickyNote",
        "slack",
        "googleCalendarTool",
        "@n8n/langchain.agent",
        "scheduleTrigger",
        "@n8n/langchain.lmChatGoogleGemini"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.googleCalendarTool": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1
      },
      "business_value": "Automates daily processes using stickyNote, slack, googleCalendarTool",
      "analysis_timestamp": "2025-06-01T16:06:48.871858"
    },
    {
      "original_filename": "ai_openai_ai_process_httprequest_readbinaryfiles_1.json",
      "workflow_name": "OpenAI-model-examples",
      "suggested_filename": "ai_openai_ai_process_httprequest_readbinaryfiles_1.json",
      "category": "AI",
      "business_function": "openai",
      "key_integrations": [
        "manualTrigger",
        "openAi",
        "code",
        "httpRequest",
        "stickyNote",
        "set",
        "html",
        "readBinaryFiles"
      ],
      "trigger_type": "manual",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.openAi": 9,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.readBinaryFiles": 1
      },
      "business_value": "Automates openai processes using manualTrigger, openAi, code",
      "analysis_timestamp": "2025-06-01T16:06:48.872238"
    },
    {
      "original_filename": "ai_create_ai_process_httprequest_emailreadimap.json",
      "workflow_name": "Create Nextcloud Deck card from email",
      "suggested_filename": "ai_create_ai_process_httprequest_emailreadimap.json",
      "category": "AI",
      "business_function": "create",
      "key_integrations": [
        "emailReadImap",
        "function",
        "httpRequest"
      ],
      "trigger_type": "email",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates create processes using emailReadImap, function, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.872415"
    },
    {
      "original_filename": "ai_automate_automate_n8nnodeslangchainchat_httprequest.json",
      "workflow_name": "💥🛠️Automate Blog Content Creation with GPT-4, Perplexity & WordPress",
      "suggested_filename": "ai_automate_automate_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "@n8n/langchain.chatTrigger",
        "mcp.mcpClientTool",
        "@n8n/langchain.agent",
        "set",
        "wordpressTool",
        "gmailTool",
        "@n8n/langchain.lmChatOpenAi",
        "formTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-mcp.mcpClientTool": 4,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.wordpressTool": 1,
        "n8n-nodes-base.gmailTool": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.formTrigger": 1
      },
      "business_value": "Automates automate processes using stickyNote, httpRequest, @n8n/langchain.chatTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.872826"
    },
    {
      "original_filename": "ai_simple_ai_process_httprequest_form.json",
      "workflow_name": "Simple OpenAI Image Generator",
      "suggested_filename": "ai_simple_ai_process_httprequest_form.json",
      "category": "AI",
      "business_function": "simple",
      "key_integrations": [
        "convertToFile",
        "formTrigger",
        "httpRequest",
        "form",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.form": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates simple processes using convertToFile, formTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.873102"
    },
    {
      "original_filename": "data_1253_workflow_1253_automate_airtable_netlify.json",
      "workflow_name": "data_1253_workflow_1253_automate_airtable_netlify",
      "suggested_filename": "data_1253_workflow_1253_automate_airtable_netlify.json",
      "category": "DATA",
      "business_function": "1253",
      "key_integrations": [
        "netlifyTrigger",
        "set",
        "airtable"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.netlifyTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtable": 1
      },
      "business_value": "Automates 1253 processes using netlifyTrigger, set, airtable",
      "analysis_timestamp": "2025-06-01T16:06:48.873247"
    },
    {
      "original_filename": "ai_hacker_automate_n8nnodeslangchainchainllm_httprequest_cron.json",
      "workflow_name": "ai_hacker_automate_n8nnodeslangchainchainllm_httprequest_cron",
      "suggested_filename": "ai_hacker_automate_n8nnodeslangchainchainllm_httprequest_cron.json",
      "category": "AI",
      "business_function": "hacker",
      "key_integrations": [
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatGoogleGemini",
        "scheduleTrigger",
        "code",
        "set",
        "splitOut",
        "httpRequest",
        "html",
        "merge",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates hacker processes using @n8n/langchain.chainLlm, @n8n/langchain.lmChatGoogleGemini, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.873564"
    },
    {
      "original_filename": "util_1621_workflow_1621_automate_httprequest_manual.json",
      "workflow_name": "util_1621_workflow_1621_automate_httprequest_manual",
      "suggested_filename": "util_1621_workflow_1621_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "1621",
      "key_integrations": [
        "manualTrigger",
        "function",
        "httpRequest",
        "compression",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.compression": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 1621 processes using manualTrigger, function, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.873806"
    },
    {
      "original_filename": "util_569_workflow_569_automate_jira.json",
      "workflow_name": "util_569_workflow_569_automate_jira",
      "suggested_filename": "util_569_workflow_569_automate_jira.json",
      "category": "UTIL",
      "business_function": "569",
      "key_integrations": [
        "jiraTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.jiraTrigger": 1
      },
      "business_value": "Automates 569 processes using jiraTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.874021"
    },
    {
      "original_filename": "ai_auto_automate_n8nnodeslangchainchat_httprequest.json",
      "workflow_name": "Auto Knowledge Base Article Generator",
      "suggested_filename": "ai_auto_automate_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "auto",
      "key_integrations": [
        "httpRequest",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.chatTrigger",
        "code",
        "merge",
        "set",
        "function",
        "if"
      ],
      "trigger_type": "chat",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.code": 5,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates auto processes using httpRequest, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.874474"
    },
    {
      "original_filename": "util_create_create_contact_manual_intercom.json",
      "workflow_name": "Create a new user in Intercom",
      "suggested_filename": "util_create_create_contact_manual_intercom.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "intercom"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.intercom": 1
      },
      "business_value": "Automates create processes using manualTrigger, intercom",
      "analysis_timestamp": "2025-06-01T16:06:48.874753"
    },
    {
      "original_filename": "ai_spot_ai_process_n8nnodeslangchainchainllm_quickchart_2.json",
      "workflow_name": "Spot Workplace Discrimination Patterns with AI",
      "suggested_filename": "ai_spot_ai_process_n8nnodeslangchainchainllm_quickchart_2.json",
      "category": "AI",
      "business_function": "spot",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "merge",
        "set",
        "httpRequest",
        "html",
        "@n8n/langchain.informationExtractor",
        "code",
        "quickChart",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 38,
      "complexity": "High",
      "total_nodes": 38,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.set": 7,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.html": 4,
        "@n8n/n8n-nodes-langchain.informationExtractor": 2,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.quickChart": 1,
        "n8n-nodes-base.stickyNote": 12,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates spot processes using manualTrigger, @n8n/langchain.lmChatOpenAi, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.875398"
    },
    {
      "original_filename": "util_2190_workflow_2190_automate_clickup_webhook_webhook.json",
      "workflow_name": "util_2190_workflow_2190_automate_clickup_webhook_webhook",
      "suggested_filename": "util_2190_workflow_2190_automate_clickup_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "2190",
      "key_integrations": [
        "respondToWebhook",
        "stickyNote",
        "webhook",
        "set",
        "clickUp"
      ],
      "trigger_type": "webhook",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.clickUp": 1
      },
      "business_value": "Automates 2190 processes using respondToWebhook, stickyNote, webhook",
      "analysis_timestamp": "2025-06-01T16:06:48.875621"
    },
    {
      "original_filename": "ai_text_automate_webhook_n8nnodeslangchainopenai_webhook_1.json",
      "workflow_name": "ai_text_automate_webhook_n8nnodeslangchainopenai_webhook_1",
      "suggested_filename": "ai_text_automate_webhook_n8nnodeslangchainopenai_webhook_1.json",
      "category": "AI",
      "business_function": "text",
      "key_integrations": [
        "stickyNote",
        "switch",
        "respondToWebhook",
        "webhook",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "webhook",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.openAi": 5
      },
      "business_value": "Automates text processes using stickyNote, switch, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:48.875929"
    },
    {
      "original_filename": "util_1160_workflow_1160_automate_splitinbatches_rssfeedread.json",
      "workflow_name": "util_1160_workflow_1160_automate_splitinbatches_rssfeedread",
      "suggested_filename": "util_1160_workflow_1160_automate_splitinbatches_rssfeedread.json",
      "category": "UTIL",
      "business_function": "1160",
      "key_integrations": [
        "manualTrigger",
        "function",
        "rssFeedRead",
        "splitInBatches",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.rssFeedRead": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 1160 processes using manualTrigger, function, rssFeedRead",
      "analysis_timestamp": "2025-06-01T16:06:48.876067"
    },
    {
      "original_filename": "ai_google_ai_process_splitinbatches_httprequest.json",
      "workflow_name": "Google Maps Email Scraper Template",
      "suggested_filename": "ai_google_ai_process_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "google",
      "key_integrations": [
        "removeDuplicates",
        "splitInBatches",
        "httpRequest",
        "code",
        "filter",
        "aggregate",
        "splitOut",
        "googleSheets",
        "executeWorkflowTrigger",
        "manualTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "n8n-nodes-base.removeDuplicates": 2,
        "n8n-nodes-base.splitInBatches": 3,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.stickyNote": 8
      },
      "business_value": "Automates google processes using removeDuplicates, splitInBatches, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.876429"
    },
    {
      "original_filename": "ai_deepseek_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "workflow_name": "🐋🤖 DeepSeek AI Agent + Telegram + LONG TERM Memory 🧠",
      "suggested_filename": "ai_deepseek_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "category": "AI",
      "business_function": "deepseek",
      "key_integrations": [
        "if",
        "telegram",
        "stickyNote",
        "webhook",
        "set",
        "switch",
        "@n8n/langchain.agent",
        "merge",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "webhook",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.telegram": 3,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.googleDocsTool": 1,
        "n8n-nodes-base.googleDocs": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2
      },
      "business_value": "Automates deepseek processes using if, telegram, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.876795"
    },
    {
      "original_filename": "util_react_automate_webhook_httprequest_webhook.json",
      "workflow_name": "React to PDFMonkey Callback",
      "suggested_filename": "util_react_automate_webhook_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "react",
      "key_integrations": [
        "stickyNote",
        "webhook",
        "if",
        "httpRequest"
      ],
      "trigger_type": "webhook",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates react processes using stickyNote, webhook, if",
      "analysis_timestamp": "2025-06-01T16:06:48.877027"
    },
    {
      "original_filename": "comm_español_automate_httprequest_executecommand.json",
      "workflow_name": "N8N Español - NocodeBot",
      "suggested_filename": "comm_español_automate_httprequest_executecommand.json",
      "category": "COMM",
      "business_function": "español",
      "key_integrations": [
        "httpRequest",
        "telegram",
        "executeCommand",
        "telegramTrigger",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.telegram": 3,
        "n8n-nodes-base.executeCommand": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates español processes using httpRequest, telegram, executeCommand",
      "analysis_timestamp": "2025-06-01T16:06:48.877261"
    },
    {
      "original_filename": "ai_daily_ai_process_lingvanex_httprequest_cron.json",
      "workflow_name": "Daily poems in Telegram",
      "suggested_filename": "ai_daily_ai_process_lingvanex_httprequest_cron.json",
      "category": "AI",
      "business_function": "daily",
      "key_integrations": [
        "cron",
        "telegram",
        "httpRequest",
        "lingvaNex"
      ],
      "trigger_type": "cron",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.lingvaNex": 1
      },
      "business_value": "Automates daily processes using cron, telegram, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.877458"
    },
    {
      "original_filename": "data_product_read_trello_airtable.json",
      "workflow_name": "Get Product Feedback",
      "suggested_filename": "data_product_read_trello_airtable.json",
      "category": "DATA",
      "business_function": "product",
      "key_integrations": [
        "typeformTrigger",
        "set",
        "airtable",
        "if",
        "trello"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.trello": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates product processes using typeformTrigger, set, airtable",
      "analysis_timestamp": "2025-06-01T16:06:48.877571"
    },
    {
      "original_filename": "ai_3449_workflow_3449_automate_n8nnodeslangchainmemorybufferwindow_microsoftoutl.json",
      "workflow_name": "ai_3449_workflow_3449_automate_n8nnodeslangchainmemorybufferwindow_microsoftoutl",
      "suggested_filename": "ai_3449_workflow_3449_automate_n8nnodeslangchainmemorybufferwindow_microsoftoutl.json",
      "category": "AI",
      "business_function": "3449",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "microsoftOutlookTool",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.agent",
        "stickyNote",
        "slack",
        "respondToWebhook",
        "if",
        "set",
        "webhook"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.microsoftOutlookTool": 3,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 3449 processes using @n8n/langchain.lmChatOpenAi, microsoftOutlookTool, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.877810"
    },
    {
      "original_filename": "ai_3767_workflow_3767_automate_hubspot_n8nnodeslangchainchainllm.json",
      "workflow_name": "ai_3767_workflow_3767_automate_hubspot_n8nnodeslangchainchainllm",
      "suggested_filename": "ai_3767_workflow_3767_automate_hubspot_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "3767",
      "key_integrations": [
        "hubspot",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.chainLlm",
        "emailReadImap",
        "stickyNote",
        "@n8n/langchain.outputParserStructured",
        "if",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.hubspot": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 3767 processes using hubspot, @n8n/langchain.lmChatOpenAi, @n8n/langchain.chainLlm",
      "analysis_timestamp": "2025-06-01T16:06:48.878057"
    },
    {
      "original_filename": "ai_living_automate_splitinbatches_n8nnodeslangchainchainretrievalqa_cron_1.json",
      "workflow_name": "RAG on living data",
      "suggested_filename": "ai_living_automate_splitinbatches_n8nnodeslangchainchainretrievalqa_cron_1.json",
      "category": "AI",
      "business_function": "living",
      "key_integrations": [
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.textSplitterTokenSplitter",
        "splitInBatches",
        "@n8n/langchain.chainRetrievalQa",
        "@n8n/langchain.retrieverVectorStore",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.chatTrigger",
        "scheduleTrigger",
        "stickyNote",
        "limit"
      ],
      "trigger_type": "chat",
      "complexity_score": 34,
      "complexity": "High",
      "total_nodes": 34,
      "node_types": {
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 15,
        "n8n-nodes-base.limit": 2,
        "n8n-nodes-base.supabase": 1,
        "n8n-nodes-base.notion": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.notionTrigger": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase": 2,
        "n8n-nodes-base.summarize": 1
      },
      "business_value": "Automates living processes using @n8n/langchain.embeddingsOpenAi, @n8n/langchain.textSplitterTokenSplitter, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.878381"
    },
    {
      "original_filename": "util_2270_workflow_2270_automate_schedule_manual_cron.json",
      "workflow_name": "util_2270_workflow_2270_automate_schedule_manual_cron",
      "suggested_filename": "util_2270_workflow_2270_automate_schedule_manual_cron.json",
      "category": "UTIL",
      "business_function": "2270",
      "key_integrations": [
        "executeWorkflow",
        "scheduleTrigger",
        "redis",
        "filter",
        "if",
        "manualTrigger",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.redis": 4,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates 2270 processes using executeWorkflow, scheduleTrigger, redis",
      "analysis_timestamp": "2025-06-01T16:06:48.878664"
    },
    {
      "original_filename": "ai_prepare_automate_splitinbatches_spreadsheetfile_1.json",
      "workflow_name": "Prepare CSV files with GPT-4",
      "suggested_filename": "ai_prepare_automate_splitinbatches_spreadsheetfile_1.json",
      "category": "AI",
      "business_function": "prepare",
      "key_integrations": [
        "manualTrigger",
        "openAi",
        "splitInBatches",
        "stickyNote",
        "set",
        "itemLists",
        "spreadsheetFile",
        "writeBinaryFile",
        "moveBinaryData"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.writeBinaryFile": 1,
        "n8n-nodes-base.moveBinaryData": 2
      },
      "business_value": "Automates prepare processes using manualTrigger, openAi, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.878957"
    },
    {
      "original_filename": "data_notion_sync_httprequest_comparedatasets_webhook.json",
      "workflow_name": "Notion to Clockify Sync Template",
      "suggested_filename": "data_notion_sync_httprequest_comparedatasets_webhook.json",
      "category": "DATA",
      "business_function": "notion",
      "key_integrations": [
        "webhook",
        "set",
        "scheduleTrigger",
        "clockify",
        "compareDatasets",
        "stopAndError",
        "notion",
        "if",
        "merge",
        "httpRequest"
      ],
      "trigger_type": "webhook",
      "complexity_score": 68,
      "complexity": "High",
      "total_nodes": 68,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 10,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.clockify": 12,
        "n8n-nodes-base.compareDatasets": 3,
        "n8n-nodes-base.stopAndError": 3,
        "n8n-nodes-base.noOp": 8,
        "n8n-nodes-base.notion": 9,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.limit": 2,
        "n8n-nodes-base.stickyNote": 12
      },
      "business_value": "Automates notion processes using webhook, set, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.879691"
    },
    {
      "original_filename": "comm_send_automate_profitwell_mattermost_cron.json",
      "workflow_name": "Send financial metrics monthly to Mattermost",
      "suggested_filename": "comm_send_automate_profitwell_mattermost_cron.json",
      "category": "COMM",
      "business_function": "send",
      "key_integrations": [
        "profitWell",
        "cron",
        "mattermost"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.profitWell": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.mattermost": 1
      },
      "business_value": "Automates send processes using profitWell, cron, mattermost",
      "analysis_timestamp": "2025-06-01T16:06:48.879993"
    },
    {
      "original_filename": "ai_create_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "workflow_name": "ai_create_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat",
      "suggested_filename": "ai_create_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "create",
      "key_integrations": [
        "@n8n/langchain.memoryBufferWindow",
        "respondToWebhook",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolHttpRequest",
        "executeWorkflowTrigger",
        "set",
        "code",
        "httpRequest",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "webhook",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.microsoftOutlook": 1,
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates create processes using @n8n/langchain.memoryBufferWindow, respondToWebhook, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.880477"
    },
    {
      "original_filename": "data_dialpad_sync_httprequest_webhook_webhook.json",
      "workflow_name": "Dialpad to Syncro",
      "suggested_filename": "data_dialpad_sync_httprequest_webhook_webhook.json",
      "category": "DATA",
      "business_function": "dialpad",
      "key_integrations": [
        "httpRequest",
        "webhook",
        "if",
        "googleSheets",
        "set",
        "function"
      ],
      "trigger_type": "webhook",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.noOp": 3,
        "n8n-nodes-base.function": 2
      },
      "business_value": "Automates dialpad processes using httpRequest, webhook, if",
      "analysis_timestamp": "2025-06-01T16:06:48.880858"
    },
    {
      "original_filename": "ai_social_ai_process_n8nnodeslangchainmemorybufferwindow_airtable_1.json",
      "workflow_name": "AI Social Media Caption Creator",
      "suggested_filename": "ai_social_ai_process_n8nnodeslangchainmemorybufferwindow_airtable_1.json",
      "category": "AI",
      "business_function": "social",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "airtable",
        "wait",
        "set",
        "airtableTrigger",
        "airtableTool",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtableTrigger": 1,
        "n8n-nodes-base.airtableTool": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates social processes using @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.881295"
    },
    {
      "original_filename": "comm_meeting_automate_httprequest_cal.json",
      "workflow_name": "Meeting booked - to newsletter and CRM",
      "suggested_filename": "comm_meeting_automate_httprequest_cal.json",
      "category": "COMM",
      "business_function": "meeting",
      "key_integrations": [
        "splitOut",
        "googleSheets",
        "calTrigger",
        "httpRequest",
        "set",
        "telegram",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.calTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates meeting processes using splitOut, googleSheets, calTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.881671"
    },
    {
      "original_filename": "ai_automated_automate_httprequest_googledrive_2.json",
      "workflow_name": "Automated PDF to HTML Conversion",
      "suggested_filename": "ai_automated_automate_httprequest_googledrive_2.json",
      "category": "AI",
      "business_function": "automated",
      "key_integrations": [
        "googleDriveTrigger",
        "if",
        "httpRequest",
        "googleDrive",
        "code",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates automated processes using googleDriveTrigger, if, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.881842"
    },
    {
      "original_filename": "ai_translate_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainlmchatopenai_1.json",
      "workflow_name": "Translate Telegram audio messages with AI (55 supported languages) v1",
      "suggested_filename": "ai_translate_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainlmchatopenai_1.json",
      "category": "AI",
      "business_function": "translate",
      "key_integrations": [
        "telegramTrigger",
        "stickyNote",
        "telegram",
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.telegram": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2
      },
      "business_value": "Automates translate processes using telegramTrigger, stickyNote, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.882131"
    },
    {
      "original_filename": "ai_send_ai_process_openweathermap_vonage_cron.json",
      "workflow_name": "Send daily weather updates to a phone number using the Vonage node",
      "suggested_filename": "ai_send_ai_process_openweathermap_vonage_cron.json",
      "category": "AI",
      "business_function": "send",
      "key_integrations": [
        "vonage",
        "cron",
        "openWeatherMap"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.vonage": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.openWeatherMap": 1
      },
      "business_value": "Automates send processes using vonage, cron, openWeatherMap",
      "analysis_timestamp": "2025-06-01T16:06:48.882345"
    },
    {
      "original_filename": "content_upload_automate_httprequest_manual_2.json",
      "workflow_name": "upload-post images",
      "suggested_filename": "content_upload_automate_httprequest_manual_2.json",
      "category": "CONTENT",
      "business_function": "upload",
      "key_integrations": [
        "httpRequest",
        "stickyNote",
        "merge",
        "code",
        "manualTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates upload processes using httpRequest, stickyNote, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.882646"
    },
    {
      "original_filename": "analytics_serpbear_automate_httprequest_schedule_cron_2.json",
      "workflow_name": "SERPBear analytics template",
      "suggested_filename": "analytics_serpbear_automate_httprequest_schedule_cron_2.json",
      "category": "ANALYTICS",
      "business_function": "serpbear",
      "key_integrations": [
        "manualTrigger",
        "scheduleTrigger",
        "httpRequest",
        "code",
        "baserow",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.baserow": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates serpbear processes using manualTrigger, scheduleTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.882960"
    },
    {
      "original_filename": "util_sample_automate_manual_spotify.json",
      "workflow_name": "Sample Spotify",
      "suggested_filename": "util_sample_automate_manual_spotify.json",
      "category": "UTIL",
      "business_function": "sample",
      "key_integrations": [
        "manualTrigger",
        "spotify"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.spotify": 1
      },
      "business_value": "Automates sample processes using manualTrigger, spotify",
      "analysis_timestamp": "2025-06-01T16:06:48.883174"
    },
    {
      "original_filename": "data_2113_workflow_2113_automate_httprequest_schedule_cron.json",
      "workflow_name": "data_2113_workflow_2113_automate_httprequest_schedule_cron",
      "suggested_filename": "data_2113_workflow_2113_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "2113",
      "key_integrations": [
        "httpRequest",
        "filter",
        "clearbit",
        "set",
        "splitOut",
        "stickyNote",
        "scheduleTrigger",
        "googleSheets"
      ],
      "trigger_type": "cron",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.filter": 3,
        "n8n-nodes-base.clearbit": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates 2113 processes using httpRequest, filter, clearbit",
      "analysis_timestamp": "2025-06-01T16:06:48.883568"
    },
    {
      "original_filename": "ai_ollama_automate_n8nnodeslangchainlmollama_n8nnodeslangchainchainllm_2.json",
      "workflow_name": "🗨️Ollama Chat",
      "suggested_filename": "ai_ollama_automate_n8nnodeslangchainlmollama_n8nnodeslangchainchainllm_2.json",
      "category": "AI",
      "business_function": "ollama",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmOllama",
        "stickyNote",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmOllama": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.set": 3
      },
      "business_value": "Automates ollama processes using @n8n/langchain.chatTrigger, @n8n/langchain.chainLlm, @n8n/langchain.lmOllama",
      "analysis_timestamp": "2025-06-01T16:06:48.883944"
    },
    {
      "original_filename": "ai_visual_ai_process_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "workflow_name": "ai_visual_ai_process_splitinbatches_n8nnodeslangchainchainllm_cron",
      "suggested_filename": "ai_visual_ai_process_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "visual",
      "key_integrations": [
        "googleDrive",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.outputParserStructured",
        "stickyNote",
        "splitInBatches",
        "wait",
        "httpRequest",
        "googleSheets",
        "merge",
        "scheduleTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 34,
      "complexity": "High",
      "total_nodes": 34,
      "node_types": {
        "n8n-nodes-base.googleDrive": 2,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.wait": 2,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.linear": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates visual processes using googleDrive, @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.884372"
    },
    {
      "original_filename": "ai_streamline_ai_process_gmail_airtable.json",
      "workflow_name": "Streamline data from an n8n form into Google Sheet and Airtable",
      "suggested_filename": "ai_streamline_ai_process_gmail_airtable.json",
      "category": "AI",
      "business_function": "streamline",
      "key_integrations": [
        "formTrigger",
        "code",
        "set",
        "airtable",
        "stickyNote",
        "googleSheets",
        "gmail"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.gmail": 2
      },
      "business_value": "Automates streamline processes using formTrigger, code, set",
      "analysis_timestamp": "2025-06-01T16:06:48.884719"
    },
    {
      "original_filename": "ai_extract_extract_httprequest_n8nnodeslangchaininformationextractor.json",
      "workflow_name": "Extract Amazon Best Seller Electronic Information with Bright Data and Google Gemini",
      "suggested_filename": "ai_extract_extract_httprequest_n8nnodeslangchaininformationextractor.json",
      "category": "AI",
      "business_function": "extract",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "@n8n/langchain.lmChatGoogleGemini",
        "httpRequest",
        "@n8n/langchain.informationExtractor",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates extract processes using manualTrigger, stickyNote, @n8n/langchain.lmChatGoogleGemini",
      "analysis_timestamp": "2025-06-01T16:06:48.884999"
    },
    {
      "original_filename": "comm_2124_workflow_2124_automate_gmail_httprequest_cron.json",
      "workflow_name": "comm_2124_workflow_2124_automate_gmail_httprequest_cron",
      "suggested_filename": "comm_2124_workflow_2124_automate_gmail_httprequest_cron.json",
      "category": "COMM",
      "business_function": "2124",
      "key_integrations": [
        "httpRequest",
        "set",
        "scheduleTrigger",
        "googleCalendar",
        "splitOut",
        "clearbit",
        "gmail",
        "code",
        "merge",
        "html"
      ],
      "trigger_type": "cron",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.googleCalendar": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.clearbit": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates 2124 processes using httpRequest, set, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.885355"
    },
    {
      "original_filename": "ai_2976_workflow_2976_automate_n8nnodeslangchainoutputparserstructured_youtube.json",
      "workflow_name": "ai_2976_workflow_2976_automate_n8nnodeslangchainoutputparserstructured_youtube",
      "suggested_filename": "ai_2976_workflow_2976_automate_n8nnodeslangchainoutputparserstructured_youtube.json",
      "category": "AI",
      "business_function": "2976",
      "key_integrations": [
        "stickyNote",
        "formTrigger",
        "googleDocsTool",
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "@n8n/langchain.agent",
        "youTube",
        "@n8n/langchain.outputParserStructured",
        "form"
      ],
      "trigger_type": "chat",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.googleDocsTool": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.youTube": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.form": 1
      },
      "business_value": "Automates 2976 processes using stickyNote, formTrigger, googleDocsTool",
      "analysis_timestamp": "2025-06-01T16:06:48.885622"
    },
    {
      "original_filename": "util_225_workflow_225_automate_htmlextract_emailsend_cron.json",
      "workflow_name": "util_225_workflow_225_automate_htmlextract_emailsend_cron",
      "suggested_filename": "util_225_workflow_225_automate_htmlextract_emailsend_cron.json",
      "category": "UTIL",
      "business_function": "225",
      "key_integrations": [
        "if",
        "emailSend",
        "cron",
        "function",
        "httpRequest",
        "htmlExtract"
      ],
      "trigger_type": "email",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.htmlExtract": 2
      },
      "business_value": "Automates 225 processes using if, emailSend, cron",
      "analysis_timestamp": "2025-06-01T16:06:48.885844"
    },
    {
      "original_filename": "util_create_create_task_clickup_manual.json",
      "workflow_name": "Create a task in ClickUp",
      "suggested_filename": "util_create_create_task_clickup_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "clickUp"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.clickUp": 1
      },
      "business_value": "Automates create processes using manualTrigger, clickUp",
      "analysis_timestamp": "2025-06-01T16:06:48.885939"
    },
    {
      "original_filename": "util_push_automate_httprequest_manual.json",
      "workflow_name": "Push Multiple Files to Github Repo via Github REST API",
      "suggested_filename": "util_push_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "push",
      "key_integrations": [
        "httpRequest",
        "manualTrigger",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates push processes using httpRequest, manualTrigger, set",
      "analysis_timestamp": "2025-06-01T16:06:48.886212"
    },
    {
      "original_filename": "ai_voice_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchainll_1.json",
      "workflow_name": "AI Voice Chat using Webhook, Memory Manager, OpenAI, Google Gemini & ElevenLabs",
      "suggested_filename": "ai_voice_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchainll_1.json",
      "category": "AI",
      "business_function": "voice",
      "key_integrations": [
        "@n8n/langchain.memoryManager",
        "stickyNote",
        "aggregate",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.lmChatGoogleGemini",
        "respondToWebhook",
        "httpRequest",
        "limit",
        "@n8n/langchain.chainLlm",
        "webhook"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "@n8n/n8n-nodes-langchain.memoryManager": 2,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.limit": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates voice processes using @n8n/langchain.memoryManager, stickyNote, aggregate",
      "analysis_timestamp": "2025-06-01T16:06:48.886509"
    },
    {
      "original_filename": "content_youtube_extract_httprequest_form.json",
      "workflow_name": "Youtube Video Transcript Extraction",
      "suggested_filename": "content_youtube_extract_httprequest_form.json",
      "category": "CONTENT",
      "business_function": "youtube",
      "key_integrations": [
        "formTrigger",
        "set",
        "function",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates youtube processes using formTrigger, set, function",
      "analysis_timestamp": "2025-06-01T16:06:48.886744"
    },
    {
      "original_filename": "util_1344_workflow_1344_automate_nextcloud_emailreadimap.json",
      "workflow_name": "util_1344_workflow_1344_automate_nextcloud_emailreadimap",
      "suggested_filename": "util_1344_workflow_1344_automate_nextcloud_emailreadimap.json",
      "category": "UTIL",
      "business_function": "1344",
      "key_integrations": [
        "emailReadImap",
        "nextCloud",
        "function"
      ],
      "trigger_type": "email",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.nextCloud": 1,
        "n8n-nodes-base.function": 1
      },
      "business_value": "Automates 1344 processes using emailReadImap, nextCloud, function",
      "analysis_timestamp": "2025-06-01T16:06:48.886940"
    },
    {
      "original_filename": "biz_3031_workflow_3031_automate_gong_schedule_cron.json",
      "workflow_name": "biz_3031_workflow_3031_automate_gong_schedule_cron",
      "suggested_filename": "biz_3031_workflow_3031_automate_gong_schedule_cron.json",
      "category": "BIZ",
      "business_function": "3031",
      "key_integrations": [
        "manualTrigger",
        "if",
        "stickyNote",
        "set",
        "executeWorkflow",
        "gong",
        "sort",
        "salesforce",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.gong": 1,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.salesforce": 1,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates 3031 processes using manualTrigger, if, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.887223"
    },
    {
      "original_filename": "ai_2525_workflow_2525_automate_sort_googledrive.json",
      "workflow_name": "ai_2525_workflow_2525_automate_sort_googledrive",
      "suggested_filename": "ai_2525_workflow_2525_automate_sort_googledrive.json",
      "category": "AI",
      "business_function": "2525",
      "key_integrations": [
        "googleDrive",
        "set",
        "merge",
        "sort",
        "aggregate",
        "formTrigger",
        "googleSheets",
        "convertToFile",
        "splitOut",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 39,
      "complexity": "High",
      "total_nodes": 39,
      "node_types": {
        "n8n-nodes-base.googleDrive": 3,
        "n8n-nodes-base.set": 8,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.convertToFile": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.openAi": 3,
        "n8n-nodes-base.stickyNote": 12
      },
      "business_value": "Automates 2525 processes using googleDrive, set, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.887728"
    },
    {
      "original_filename": "ops_527_workflow_527_automate_github.json",
      "workflow_name": "ops_527_workflow_527_automate_github",
      "suggested_filename": "ops_527_workflow_527_automate_github.json",
      "category": "OPS",
      "business_function": "527",
      "key_integrations": [
        "githubTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.githubTrigger": 1
      },
      "business_value": "Automates 527 processes using githubTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.887991"
    },
    {
      "original_filename": "ai_extract_extract_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainchai_2.json",
      "workflow_name": "Extract personal data with a self-hosted LLM Mistral NeMo",
      "suggested_filename": "ai_extract_extract_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainchai_2.json",
      "category": "AI",
      "business_function": "extract",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOllama",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.chainLlm",
        "stickyNote",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 1,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates extract processes using @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOllama, @n8n/langchain.outputParserAutofixing",
      "analysis_timestamp": "2025-06-01T16:06:48.888246"
    },
    {
      "original_filename": "util_3327_workflow_3327_automate_splitinbatches_httprequest_cron.json",
      "workflow_name": "util_3327_workflow_3327_automate_splitinbatches_httprequest_cron",
      "suggested_filename": "util_3327_workflow_3327_automate_splitinbatches_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "3327",
      "key_integrations": [
        "manualTrigger",
        "splitOut",
        "set",
        "stickyNote",
        "scheduleTrigger",
        "httpRequest",
        "splitInBatches",
        "filter"
      ],
      "trigger_type": "cron",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates 3327 processes using manualTrigger, splitOut, set",
      "analysis_timestamp": "2025-06-01T16:06:48.888532"
    },
    {
      "original_filename": "ai_modelo_automate_mysql_n8nnodeslangchainmemorypostgreschat_1.json",
      "workflow_name": "modelo do chatbot",
      "suggested_filename": "ai_modelo_automate_mysql_n8nnodeslangchainmemorypostgreschat_1.json",
      "category": "AI",
      "business_function": "modelo",
      "key_integrations": [
        "if",
        "set",
        "@n8n/langchain.openAi",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.memoryPostgresChat",
        "mySqlTool",
        "@n8n/langchain.toolHttpRequest",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.memoryPostgresChat": 2,
        "n8n-nodes-base.mySqlTool": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 2,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates modelo processes using if, set, @n8n/langchain.openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.888820"
    },
    {
      "original_filename": "util_get_a_web_page_read_httprequest_executeworkflow_2.json",
      "workflow_name": "get_a_web_page",
      "suggested_filename": "util_get_a_web_page_read_httprequest_executeworkflow_2.json",
      "category": "UTIL",
      "business_function": "get",
      "key_integrations": [
        "executeWorkflowTrigger",
        "httpRequest",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates get processes using executeWorkflowTrigger, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.889035"
    },
    {
      "original_filename": "ai_youtube_analyze_n8nnodeslangchainlmchatdeepseek_n8nnodeslangchainchainllm.json",
      "workflow_name": "YouTube Video Analyzer with AI",
      "suggested_filename": "ai_youtube_analyze_n8nnodeslangchainlmchatdeepseek_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "youtube",
      "key_integrations": [
        "manualTrigger",
        "code",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.lmChatOpenRouter",
        "@n8n/langchain.lmChatDeepSeek",
        "@n8n/langchain.outputParserStructured",
        "stickyNote",
        "emailSend",
        "httpRequest",
        "if"
      ],
      "trigger_type": "chat",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 1,
        "@n8n/n8n-nodes-langchain.lmChatDeepSeek": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.set": 2
      },
      "business_value": "Automates youtube processes using manualTrigger, code, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.889422"
    },
    {
      "original_filename": "util_574_workflow_574_automate_crypto_manual.json",
      "workflow_name": "util_574_workflow_574_automate_crypto_manual",
      "suggested_filename": "util_574_workflow_574_automate_crypto_manual.json",
      "category": "UTIL",
      "business_function": "574",
      "key_integrations": [
        "manualTrigger",
        "crypto"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.crypto": 1
      },
      "business_value": "Automates 574 processes using manualTrigger, crypto",
      "analysis_timestamp": "2025-06-01T16:06:48.889631"
    },
    {
      "original_filename": "data_classifier_automate_httprequest_executeworkflow_3.json",
      "workflow_name": "[2/2] KNN classifier (lands dataset)",
      "suggested_filename": "data_classifier_automate_httprequest_executeworkflow_3.json",
      "category": "DATA",
      "business_function": "classifier",
      "key_integrations": [
        "httpRequest",
        "code",
        "set",
        "if",
        "stickyNote",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.executeWorkflowTrigger": 1
      },
      "business_value": "Automates classifier processes using httpRequest, code, set",
      "analysis_timestamp": "2025-06-01T16:06:48.889910"
    },
    {
      "original_filename": "ai_verify_ai_process_functionitem_uproc.json",
      "workflow_name": "verify email",
      "suggested_filename": "ai_verify_ai_process_functionitem_uproc.json",
      "category": "AI",
      "business_function": "verify",
      "key_integrations": [
        "manualTrigger",
        "functionItem",
        "uproc",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.uproc": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates verify processes using manualTrigger, functionItem, uproc",
      "analysis_timestamp": "2025-06-01T16:06:48.890028"
    },
    {
      "original_filename": "comm_2137_workflow_2137_automate_gmail_schedule_cron.json",
      "workflow_name": "comm_2137_workflow_2137_automate_gmail_schedule_cron",
      "suggested_filename": "comm_2137_workflow_2137_automate_gmail_schedule_cron.json",
      "category": "COMM",
      "business_function": "2137",
      "key_integrations": [
        "googleSheets",
        "set",
        "code",
        "gmail",
        "filter",
        "stickyNote",
        "executeWorkflowTrigger",
        "if",
        "executeWorkflow",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 32,
      "complexity": "High",
      "total_nodes": 32,
      "node_types": {
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.set": 6,
        "n8n-nodes-base.code": 5,
        "n8n-nodes-base.gmail": 4,
        "n8n-nodes-base.filter": 3,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.executeWorkflow": 2,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates 2137 processes using googleSheets, set, code",
      "analysis_timestamp": "2025-06-01T16:06:48.890396"
    },
    {
      "original_filename": "ai_voice_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvectors_2.json",
      "workflow_name": "Voice RAG Chatbot with ElevenLabs and OpenAI",
      "suggested_filename": "ai_voice_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvectors_2.json",
      "category": "AI",
      "business_function": "voice",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.toolVectorStore",
        "@n8n/langchain.vectorStoreQdrant",
        "@n8n/langchain.embeddingsOpenAi",
        "stickyNote",
        "manualTrigger",
        "httpRequest",
        "googleDrive",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterTokenSplitter"
      ],
      "trigger_type": "webhook",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleDrive": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1
      },
      "business_value": "Automates voice processes using @n8n/langchain.agent, @n8n/langchain.toolVectorStore, @n8n/langchain.vectorStoreQdrant",
      "analysis_timestamp": "2025-06-01T16:06:48.890722"
    },
    {
      "original_filename": "ai_youtube_automate_n8nnodeslangchainchat_httprequest.json",
      "workflow_name": "YouTube Video Transcriber",
      "suggested_filename": "ai_youtube_automate_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "youtube",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "code",
        "if",
        "respondToWebhook",
        "stickyNote",
        "set",
        "httpRequest",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates youtube processes using @n8n/langchain.chatTrigger, code, if",
      "analysis_timestamp": "2025-06-01T16:06:48.891027"
    },
    {
      "original_filename": "ai_slackbot_ai_process_n8nnodeslangchainmemorybufferwindow_slack_webhook.json",
      "workflow_name": "ai_slackbot_ai_process_n8nnodeslangchainmemorybufferwindow_slack_webhook",
      "suggested_filename": "ai_slackbot_ai_process_n8nnodeslangchainmemorybufferwindow_slack_webhook.json",
      "category": "AI",
      "business_function": "slackbot",
      "key_integrations": [
        "respondToWebhook",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "if",
        "slack",
        "stickyNote",
        "webhook",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "webhook",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.respondToWebhook": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.noOp": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 3,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates slackbot processes using respondToWebhook, @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.891331"
    },
    {
      "original_filename": "ai_2619_workflow_2619_automate_gmail_httprequest_cron.json",
      "workflow_name": "ai_2619_workflow_2619_automate_gmail_httprequest_cron",
      "suggested_filename": "ai_2619_workflow_2619_automate_gmail_httprequest_cron.json",
      "category": "AI",
      "business_function": "2619",
      "key_integrations": [
        "splitOut",
        "httpRequest",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.informationExtractor",
        "merge",
        "airtable",
        "removeDuplicates",
        "html",
        "scheduleTrigger",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.informationExtractor": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.airtable": 3,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.scheduleTrigger": 2,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates 2619 processes using splitOut, httpRequest, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.891766"
    },
    {
      "original_filename": "comm_3251_workflow_3251_automate_splitinbatches_schedule_cron.json",
      "workflow_name": "comm_3251_workflow_3251_automate_splitinbatches_schedule_cron",
      "suggested_filename": "comm_3251_workflow_3251_automate_splitinbatches_schedule_cron.json",
      "category": "COMM",
      "business_function": "3251",
      "key_integrations": [
        "manualTrigger",
        "scheduleTrigger",
        "stickyNote",
        "googleSheets",
        "splitInBatches",
        "mailchimp"
      ],
      "trigger_type": "cron",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.mailchimp": 1
      },
      "business_value": "Automates 3251 processes using manualTrigger, scheduleTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.891923"
    },
    {
      "original_filename": "comm_woocommerce_automate_slack_woocommerce_2.json",
      "workflow_name": "New WooCommerce product to Slack",
      "suggested_filename": "comm_woocommerce_automate_slack_woocommerce_2.json",
      "category": "COMM",
      "business_function": "woocommerce",
      "key_integrations": [
        "wooCommerceTrigger",
        "slack"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.wooCommerceTrigger": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates woocommerce processes using wooCommerceTrigger, slack",
      "analysis_timestamp": "2025-06-01T16:06:48.892128"
    },
    {
      "original_filename": "util_complete_automate_manual_totp.json",
      "workflow_name": "Complete Guide to Setting Up and Generating TOTP Codes in n8n 🔐",
      "suggested_filename": "util_complete_automate_manual_totp.json",
      "category": "UTIL",
      "business_function": "complete",
      "key_integrations": [
        "manualTrigger",
        "totp"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.totp": 1
      },
      "business_value": "Automates complete processes using manualTrigger, totp",
      "analysis_timestamp": "2025-06-01T16:06:48.892268"
    },
    {
      "original_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainwikiped.json",
      "workflow_name": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainwikiped",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainwikiped.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.manualChatTrigger",
        "@n8n/langchain.toolWikipedia",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.agent",
        "@n8n/langchain.toolHttpRequest",
        "@n8n/langchain.lmChatOllama"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.manualChatTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 1
      },
      "business_value": "Automates agent processes using stickyNote, @n8n/langchain.manualChatTrigger, @n8n/langchain.toolWikipedia",
      "analysis_timestamp": "2025-06-01T16:06:48.892552"
    },
    {
      "original_filename": "util_2547_workflow_2547_automate_supabase_httprequest_webhook.json",
      "workflow_name": "util_2547_workflow_2547_automate_supabase_httprequest_webhook",
      "suggested_filename": "util_2547_workflow_2547_automate_supabase_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "2547",
      "key_integrations": [
        "manualTrigger",
        "set",
        "stickyNote",
        "httpRequest",
        "if",
        "supabase",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.stickyNote": 12,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.supabase": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 2547 processes using manualTrigger, set, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.895309"
    },
    {
      "original_filename": "data_739_workflow_739_automate_airtable_webhook_webhook.json",
      "workflow_name": "data_739_workflow_739_automate_airtable_webhook_webhook",
      "suggested_filename": "data_739_workflow_739_automate_airtable_webhook_webhook.json",
      "category": "DATA",
      "business_function": "739",
      "key_integrations": [
        "webhook",
        "mindee",
        "airtable",
        "set"
      ],
      "trigger_type": "webhook",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.mindee": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 739 processes using webhook, mindee, airtable",
      "analysis_timestamp": "2025-06-01T16:06:48.895779"
    },
    {
      "original_filename": "util_update_update_httprequest_manual_2.json",
      "workflow_name": "Update all Zammad Roles to default values",
      "suggested_filename": "util_update_update_httprequest_manual_2.json",
      "category": "UTIL",
      "business_function": "update",
      "key_integrations": [
        "manualTrigger",
        "set",
        "zammad",
        "if",
        "httpRequest",
        "convertToFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.zammad": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.convertToFile": 1
      },
      "business_value": "Automates update processes using manualTrigger, set, zammad",
      "analysis_timestamp": "2025-06-01T16:06:48.896099"
    },
    {
      "original_filename": "util_2424_workflow_2424_automate_httprequest_manual.json",
      "workflow_name": "util_2424_workflow_2424_automate_httprequest_manual",
      "suggested_filename": "util_2424_workflow_2424_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "2424",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "executeWorkflowTrigger",
        "stickyNote",
        "set",
        "dropbox",
        "merge",
        "wait",
        "switch"
      ],
      "trigger_type": "manual",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.dropbox": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates 2424 processes using manualTrigger, httpRequest, executeWorkflowTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.896497"
    },
    {
      "original_filename": "util_2251_workflow_2251_automate_keap_httprequest_webhook.json",
      "workflow_name": "util_2251_workflow_2251_automate_keap_httprequest_webhook",
      "suggested_filename": "util_2251_workflow_2251_automate_keap_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "2251",
      "key_integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "keap",
        "webhook",
        "switch"
      ],
      "trigger_type": "webhook",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.keap": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates 2251 processes using stickyNote, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.896794"
    },
    {
      "original_filename": "comm_1739_workflow_1739_automate_spreadsheetfile_gmail.json",
      "workflow_name": "comm_1739_workflow_1739_automate_spreadsheetfile_gmail",
      "suggested_filename": "comm_1739_workflow_1739_automate_spreadsheetfile_gmail.json",
      "category": "COMM",
      "business_function": "1739",
      "key_integrations": [
        "httpRequest",
        "googleSheets",
        "set",
        "spreadsheetFile",
        "writeBinaryFile",
        "moveBinaryData",
        "gmail",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.spreadsheetFile": 2,
        "n8n-nodes-base.writeBinaryFile": 1,
        "n8n-nodes-base.moveBinaryData": 2,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates 1739 processes using httpRequest, googleSheets, set",
      "analysis_timestamp": "2025-06-01T16:06:48.897081"
    },
    {
      "original_filename": "comm_353_workflow_353_automate_pagerduty_jira_webhook.json",
      "workflow_name": "comm_353_workflow_353_automate_pagerduty_jira_webhook",
      "suggested_filename": "comm_353_workflow_353_automate_pagerduty_jira_webhook.json",
      "category": "COMM",
      "business_function": "353",
      "key_integrations": [
        "webhook",
        "jira",
        "pagerDuty",
        "mattermost"
      ],
      "trigger_type": "webhook",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.webhook": 3,
        "n8n-nodes-base.jira": 2,
        "n8n-nodes-base.pagerDuty": 2,
        "n8n-nodes-base.mattermost": 7
      },
      "business_value": "Automates 353 processes using webhook, jira, pagerDuty",
      "analysis_timestamp": "2025-06-01T16:06:48.897410"
    },
    {
      "original_filename": "ai_3624_workflow_3624_automate_n8nnodeslangchainchainllm_gmail.json",
      "workflow_name": "ai_3624_workflow_3624_automate_n8nnodeslangchainchainllm_gmail",
      "suggested_filename": "ai_3624_workflow_3624_automate_n8nnodeslangchainchainllm_gmail.json",
      "category": "AI",
      "business_function": "3624",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "wait",
        "if",
        "@n8n/langchain.lmChatOpenAi",
        "googleSheets",
        "formTrigger",
        "aggregate",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates 3624 processes using stickyNote, httpRequest, wait",
      "analysis_timestamp": "2025-06-01T16:06:48.897794"
    },
    {
      "original_filename": "util_1169_workflow_1169_automate_httprequest_manual.json",
      "workflow_name": "util_1169_workflow_1169_automate_httprequest_manual",
      "suggested_filename": "util_1169_workflow_1169_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "1169",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "function",
        "if",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.function": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 1169 processes using manualTrigger, httpRequest, function",
      "analysis_timestamp": "2025-06-01T16:06:48.898046"
    },
    {
      "original_filename": "util_find_automate_emailsend_httprequest_cron.json",
      "workflow_name": "Find a New Book",
      "suggested_filename": "util_find_automate_emailsend_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "find",
      "key_integrations": [
        "manualTrigger",
        "cron",
        "set",
        "httpRequest",
        "if",
        "function",
        "emailSend"
      ],
      "trigger_type": "cron",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.emailSend": 2
      },
      "business_value": "Automates find processes using manualTrigger, cron, set",
      "analysis_timestamp": "2025-06-01T16:06:48.898314"
    },
    {
      "original_filename": "util_2572_workflow_2572_automate_httprequest_manual.json",
      "workflow_name": "util_2572_workflow_2572_automate_httprequest_manual",
      "suggested_filename": "util_2572_workflow_2572_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "2572",
      "key_integrations": [
        "extractFromFile",
        "httpRequest",
        "manualTrigger",
        "stickyNote",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.set": 2
      },
      "business_value": "Automates 2572 processes using extractFromFile, httpRequest, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.898621"
    },
    {
      "original_filename": "ai_auto_automate_wordpress_n8nnodeslangchainlmchatopenai_1.json",
      "workflow_name": "Auto categorize wordpress template",
      "suggested_filename": "ai_auto_automate_wordpress_n8nnodeslangchainlmchatopenai_1.json",
      "category": "AI",
      "business_function": "auto",
      "key_integrations": [
        "manualTrigger",
        "wordpress",
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.wordpress": 2,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates auto processes using manualTrigger, wordpress, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.898890"
    },
    {
      "original_filename": "ai_screening_ai_process_n8nnodeslangchainchainllm_gmail_2.json",
      "workflow_name": "AI CV Screening Workflow",
      "suggested_filename": "ai_screening_ai_process_n8nnodeslangchainchainllm_gmail_2.json",
      "category": "AI",
      "business_function": "screening",
      "key_integrations": [
        "@n8n/langchain.lmChatGoogleGemini",
        "gmail",
        "@n8n/langchain.chainLlm",
        "extractFromFile",
        "formTrigger",
        "googleSheets"
      ],
      "trigger_type": "chat",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.gmail": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates screening processes using @n8n/langchain.lmChatGoogleGemini, gmail, @n8n/langchain.chainLlm",
      "analysis_timestamp": "2025-06-01T16:06:48.899212"
    },
    {
      "original_filename": "ai_1953_workflow_1953_automate_gmail_gmail.json",
      "workflow_name": "ai_1953_workflow_1953_automate_gmail_gmail",
      "suggested_filename": "ai_1953_workflow_1953_automate_gmail_gmail.json",
      "category": "AI",
      "business_function": "1953",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi",
        "gmail",
        "gmailTrigger",
        "@n8n/langchain.textClassifier",
        "@n8n/langchain.agent",
        "googleCalendarTool"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.gmailTrigger": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.googleCalendarTool": 1
      },
      "business_value": "Automates 1953 processes using stickyNote, @n8n/langchain.lmChatOpenAi, gmail",
      "analysis_timestamp": "2025-06-01T16:06:48.899522"
    },
    {
      "original_filename": "comm_sending_automate_manual_sms77.json",
      "workflow_name": "Sending an SMS using sms77",
      "suggested_filename": "comm_sending_automate_manual_sms77.json",
      "category": "COMM",
      "business_function": "sending",
      "key_integrations": [
        "manualTrigger",
        "sms77"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.sms77": 1
      },
      "business_value": "Automates sending processes using manualTrigger, sms77",
      "analysis_timestamp": "2025-06-01T16:06:48.899734"
    },
    {
      "original_filename": "ai_enrich_ai_process_splitinbatches_strapi.json",
      "workflow_name": "ai_enrich_ai_process_splitinbatches_strapi",
      "suggested_filename": "ai_enrich_ai_process_splitinbatches_strapi.json",
      "category": "AI",
      "business_function": "enrich",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "splitInBatches",
        "splitOut",
        "aggregate",
        "googleDrive",
        "googleSheets",
        "executeWorkflowTrigger",
        "executeWorkflow"
      ],
      "trigger_type": "chat",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 8,
        "n8n-nodes-base.splitInBatches": 3,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.strapi": 1,
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.webflow": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates enrich processes using manualTrigger, @n8n/langchain.lmChatOpenAi, set",
      "analysis_timestamp": "2025-06-01T16:06:48.900289"
    },
    {
      "original_filename": "data_933_workflow_933_automate_getresponse_airtable.json",
      "workflow_name": "data_933_workflow_933_automate_getresponse_airtable",
      "suggested_filename": "data_933_workflow_933_automate_getresponse_airtable.json",
      "category": "DATA",
      "business_function": "933",
      "key_integrations": [
        "airtable",
        "set",
        "getResponseTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.getResponseTrigger": 1
      },
      "business_value": "Automates 933 processes using airtable, set, getResponseTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.900587"
    },
    {
      "original_filename": "ai_enrich_ai_process_splitinbatches_n8nnodeslangchainoutputparserstructured_webh.json",
      "workflow_name": "Enrich Company Data from Google Sheet with OpenAI Agent and Scraper Tool",
      "suggested_filename": "ai_enrich_ai_process_splitinbatches_n8nnodeslangchainoutputparserstructured_webh.json",
      "category": "AI",
      "business_function": "enrich",
      "key_integrations": [
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.lmChatOpenAi",
        "googleSheets",
        "@n8n/langchain.toolWorkflow",
        "httpRequest",
        "executeWorkflowTrigger",
        "splitInBatches",
        "stickyNote",
        "@n8n/langchain.agent",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.googleSheets": 2,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.stickyNote": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates enrich processes using @n8n/langchain.outputParserStructured, @n8n/langchain.lmChatOpenAi, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.900990"
    },
    {
      "original_filename": "data_line_automate_httprequest_webhook_webhook_1.json",
      "workflow_name": "LINE BOT - Google Sheets Record Receipt",
      "suggested_filename": "data_line_automate_httprequest_webhook_webhook_1.json",
      "category": "DATA",
      "business_function": "line",
      "key_integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "googleDrive",
        "googleSheets",
        "code"
      ],
      "trigger_type": "webhook",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates line processes using stickyNote, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.901382"
    },
    {
      "original_filename": "comm_2110_workflow_2110_automate_gmail_httprequest_cron.json",
      "workflow_name": "comm_2110_workflow_2110_automate_gmail_httprequest_cron",
      "suggested_filename": "comm_2110_workflow_2110_automate_gmail_httprequest_cron.json",
      "category": "COMM",
      "business_function": "2110",
      "key_integrations": [
        "set",
        "stickyNote",
        "scheduleTrigger",
        "if",
        "httpRequest",
        "code",
        "gmail",
        "googleCalendar"
      ],
      "trigger_type": "cron",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.googleCalendar": 1
      },
      "business_value": "Automates 2110 processes using set, stickyNote, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.901667"
    },
    {
      "original_filename": "comm_statsinstagram_automate_datetime_cron_cron.json",
      "workflow_name": "StatsInstagram",
      "suggested_filename": "comm_statsinstagram_automate_datetime_cron_cron.json",
      "category": "COMM",
      "business_function": "statsinstagram",
      "key_integrations": [
        "mattermost",
        "dateTime",
        "cron",
        "function",
        "googleSheets"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.mattermost": 1,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates statsinstagram processes using mattermost, dateTime, cron",
      "analysis_timestamp": "2025-06-01T16:06:48.901917"
    },
    {
      "original_filename": "ai_figurine_automate_httprequest_manual.json",
      "workflow_name": "3D Figurine Orthographic Views with Midjourney and GPT-4o-Image API",
      "suggested_filename": "ai_figurine_automate_httprequest_manual.json",
      "category": "AI",
      "business_function": "figurine",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "if",
        "wait",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.code": 3
      },
      "business_value": "Automates figurine processes using manualTrigger, httpRequest, if",
      "analysis_timestamp": "2025-06-01T16:06:48.902215"
    },
    {
      "original_filename": "ai_linkedin_ai_process_httprequest_schedule_cron_1.json",
      "workflow_name": "Linkedin to Airtable",
      "suggested_filename": "ai_linkedin_ai_process_httprequest_schedule_cron_1.json",
      "category": "AI",
      "business_function": "linkedin",
      "key_integrations": [
        "scheduleTrigger",
        "httpRequest",
        "splitOut",
        "filter",
        "set",
        "airtable",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates linkedin processes using scheduleTrigger, httpRequest, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.902568"
    },
    {
      "original_filename": "ai_3107_workflow_3107_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "workflow_name": "ai_3107_workflow_3107_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl",
      "suggested_filename": "ai_3107_workflow_3107_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "category": "AI",
      "business_function": "3107",
      "key_integrations": [
        "manualTrigger",
        "filter",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.lmChatOpenRouter",
        "@n8n/langchain.informationExtractor",
        "@n8n/langchain.chainLlm",
        "merge",
        "splitOut",
        "html",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 51,
      "complexity": "High",
      "total_nodes": 51,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.filter": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 3,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.httpRequest": 6,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 3,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.stickyNote": 16,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.xml": 2
      },
      "business_value": "Automates 3107 processes using manualTrigger, filter, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.903227"
    },
    {
      "original_filename": "ai_create_ai_process_humanticai_httprequest_1.json",
      "workflow_name": "Create, update, and get a profile in Humantic AI",
      "suggested_filename": "ai_create_ai_process_humanticai_httprequest_1.json",
      "category": "AI",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "humanticAi",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.humanticAi": 3,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates create processes using manualTrigger, humanticAi, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.903520"
    },
    {
      "original_filename": "util_price_read_coingecko_cron_cron.json",
      "workflow_name": "Get the price of BTC in EUR and send an SMS when the price is larger than EUR 9000",
      "suggested_filename": "util_price_read_coingecko_cron_cron.json",
      "category": "UTIL",
      "business_function": "price",
      "key_integrations": [
        "cron",
        "coinGecko",
        "if",
        "twilio"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.coinGecko": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.twilio": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates price processes using cron, coinGecko, if",
      "analysis_timestamp": "2025-06-01T16:06:48.903646"
    },
    {
      "original_filename": "util_688_workflow_688_automate_manual.json",
      "workflow_name": "util_688_workflow_688_automate_manual",
      "suggested_filename": "util_688_workflow_688_automate_manual.json",
      "category": "UTIL",
      "business_function": "688",
      "key_integrations": [
        "manualTrigger",
        "function",
        "set",
        "switch"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 688 processes using manualTrigger, function, set",
      "analysis_timestamp": "2025-06-01T16:06:48.903852"
    },
    {
      "original_filename": "ai_easy_ai_process_wordpress_n8nnodeslangchainchainllm.json",
      "workflow_name": "📄✨ Easy Wordpress Content Creation from PDF Document + Human In The Loop with Gmail Approval",
      "suggested_filename": "ai_easy_ai_process_wordpress_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "easy",
      "key_integrations": [
        "stickyNote",
        "formTrigger",
        "extractFromFile",
        "@n8n/langchain.lmChatOpenAi",
        "httpRequest",
        "wordpress",
        "telegram",
        "if",
        "merge",
        "markdown"
      ],
      "trigger_type": "chat",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.extractFromFile": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates easy processes using stickyNote, formTrigger, extractFromFile",
      "analysis_timestamp": "2025-06-01T16:06:48.904254"
    },
    {
      "original_filename": "data_2678_workflow_2678_automate_strava_schedule_cron.json",
      "workflow_name": "data_2678_workflow_2678_automate_strava_schedule_cron",
      "suggested_filename": "data_2678_workflow_2678_automate_strava_schedule_cron.json",
      "category": "DATA",
      "business_function": "2678",
      "key_integrations": [
        "scheduleTrigger",
        "strava",
        "code",
        "googleSheets",
        "set",
        "removeDuplicates",
        "sort",
        "limit"
      ],
      "trigger_type": "cron",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.strava": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.sort": 3,
        "n8n-nodes-base.limit": 2
      },
      "business_value": "Automates 2678 processes using scheduleTrigger, strava, code",
      "analysis_timestamp": "2025-06-01T16:06:48.904596"
    },
    {
      "original_filename": "comm_3453_workflow_3453_automate_schedule_microsoftoutlook_cron.json",
      "workflow_name": "comm_3453_workflow_3453_automate_schedule_microsoftoutlook_cron",
      "suggested_filename": "comm_3453_workflow_3453_automate_schedule_microsoftoutlook_cron.json",
      "category": "COMM",
      "business_function": "3453",
      "key_integrations": [
        "mySql",
        "scheduleTrigger",
        "switch",
        "microsoftOutlook"
      ],
      "trigger_type": "cron",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.mySql": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.microsoftOutlook": 3
      },
      "business_value": "Automates 3453 processes using mySql, scheduleTrigger, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.904876"
    },
    {
      "original_filename": "ai_line_ai_process_webhook_httprequest_webhook.json",
      "workflow_name": "Line Chatbot Handling AI Responses with Groq and Llama3",
      "suggested_filename": "ai_line_ai_process_webhook_httprequest_webhook.json",
      "category": "AI",
      "business_function": "line",
      "key_integrations": [
        "stickyNote",
        "webhook",
        "set",
        "httpRequest"
      ],
      "trigger_type": "webhook",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 2
      },
      "business_value": "Automates line processes using stickyNote, webhook, set",
      "analysis_timestamp": "2025-06-01T16:06:48.905129"
    },
    {
      "original_filename": "ai_analyze_analyze_httprequest_manual_1.json",
      "workflow_name": "Analyze Screenshots with AI",
      "suggested_filename": "ai_analyze_analyze_httprequest_manual_1.json",
      "category": "AI",
      "business_function": "analyze",
      "key_integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "@n8n/langchain.openAi",
        "merge",
        "manualTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates analyze processes using stickyNote, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.905403"
    },
    {
      "original_filename": "ai_summarize_ai_process_gmail_markdown_2.json",
      "workflow_name": "Summarize Google Sheets form feedback via OpenAI's GPT-4",
      "suggested_filename": "ai_summarize_ai_process_gmail_markdown_2.json",
      "category": "AI",
      "business_function": "summarize",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "googleSheets",
        "aggregate",
        "openAi",
        "markdown",
        "gmail"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates summarize processes using manualTrigger, stickyNote, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.905601"
    },
    {
      "original_filename": "comm_3796_workflow_3796_automate_splitinbatches_gmail.json",
      "workflow_name": "comm_3796_workflow_3796_automate_splitinbatches_gmail",
      "suggested_filename": "comm_3796_workflow_3796_automate_splitinbatches_gmail.json",
      "category": "COMM",
      "business_function": "3796",
      "key_integrations": [
        "httpRequest",
        "googleCalendarTrigger",
        "filter",
        "splitOut",
        "splitInBatches",
        "if",
        "aggregate",
        "set",
        "stickyNote",
        "markdown"
      ],
      "trigger_type": "manual",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleCalendarTrigger": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates 3796 processes using httpRequest, googleCalendarTrigger, filter",
      "analysis_timestamp": "2025-06-01T16:06:48.905874"
    },
    {
      "original_filename": "util_553_workflow_553_automate_keap_manual.json",
      "workflow_name": "util_553_workflow_553_automate_keap_manual",
      "suggested_filename": "util_553_workflow_553_automate_keap_manual.json",
      "category": "UTIL",
      "business_function": "553",
      "key_integrations": [
        "manualTrigger",
        "keap"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.keap": 1
      },
      "business_value": "Automates 553 processes using manualTrigger, keap",
      "analysis_timestamp": "2025-06-01T16:06:48.906067"
    },
    {
      "original_filename": "util_find_automate_splitinbatches_nocodb_cron.json",
      "workflow_name": "Find Top Keywords",
      "suggested_filename": "util_find_automate_splitinbatches_nocodb_cron.json",
      "category": "UTIL",
      "business_function": "find",
      "key_integrations": [
        "manualTrigger",
        "scheduleTrigger",
        "code",
        "stickyNote",
        "nocoDb",
        "httpRequest",
        "splitOut",
        "filter",
        "if",
        "splitInBatches"
      ],
      "trigger_type": "cron",
      "complexity_score": 35,
      "complexity": "High",
      "total_nodes": 35,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.code": 5,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.nocoDb": 5,
        "n8n-nodes-base.httpRequest": 8,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.splitInBatches": 2
      },
      "business_value": "Automates find processes using manualTrigger, scheduleTrigger, code",
      "analysis_timestamp": "2025-06-01T16:06:48.906501"
    },
    {
      "original_filename": "util_create_create_contact_gsuiteadmin_manual.json",
      "workflow_name": "Create, update, and get a user using the G Suite Admin node",
      "suggested_filename": "util_create_create_contact_gsuiteadmin_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "gSuiteAdmin"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.gSuiteAdmin": 3
      },
      "business_value": "Automates create processes using manualTrigger, gSuiteAdmin",
      "analysis_timestamp": "2025-06-01T16:06:48.906754"
    },
    {
      "original_filename": "util_wordpress_automate_mautic_webhook_webhook.json",
      "workflow_name": "Wordpress Form to Mautic",
      "suggested_filename": "util_wordpress_automate_mautic_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "wordpress",
      "key_integrations": [
        "set",
        "stickyNote",
        "webhook",
        "if",
        "mautic"
      ],
      "trigger_type": "webhook",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.mautic": 2,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates wordpress processes using set, stickyNote, webhook",
      "analysis_timestamp": "2025-06-01T16:06:48.906989"
    },
    {
      "original_filename": "data_sync_sync_schedule_todoist_cron.json",
      "workflow_name": "Sync Todoist tasks to Notion",
      "suggested_filename": "data_sync_sync_schedule_todoist_cron.json",
      "category": "DATA",
      "business_function": "sync",
      "key_integrations": [
        "scheduleTrigger",
        "todoist",
        "notion"
      ],
      "trigger_type": "cron",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.todoist": 2,
        "n8n-nodes-base.notion": 1
      },
      "business_value": "Automates sync processes using scheduleTrigger, todoist, notion",
      "analysis_timestamp": "2025-06-01T16:06:48.907214"
    },
    {
      "original_filename": "util_2523_workflow_2523_automate_splitinbatches_httprequest_cron.json",
      "workflow_name": "util_2523_workflow_2523_automate_splitinbatches_httprequest_cron",
      "suggested_filename": "util_2523_workflow_2523_automate_splitinbatches_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "2523",
      "key_integrations": [
        "httpRequest",
        "scheduleTrigger",
        "if",
        "splitInBatches"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.splitInBatches": 1
      },
      "business_value": "Automates 2523 processes using httpRequest, scheduleTrigger, if",
      "analysis_timestamp": "2025-06-01T16:06:48.907435"
    },
    {
      "original_filename": "ai_hugging_automate_splitinbatches_httprequest_cron_1.json",
      "workflow_name": "Hugging Face  to Notion",
      "suggested_filename": "ai_hugging_automate_splitinbatches_httprequest_cron_1.json",
      "category": "AI",
      "business_function": "hugging",
      "key_integrations": [
        "scheduleTrigger",
        "if",
        "splitInBatches",
        "splitOut",
        "httpRequest",
        "html",
        "notion",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "cron",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.notion": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates hugging processes using scheduleTrigger, if, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.907730"
    },
    {
      "original_filename": "util_2494_workflow_2494_automate_httprequest_manual.json",
      "workflow_name": "util_2494_workflow_2494_automate_httprequest_manual",
      "suggested_filename": "util_2494_workflow_2494_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "2494",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "splitOut",
        "set",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 2494 processes using manualTrigger, stickyNote, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.907996"
    },
    {
      "original_filename": "util_ppshljlsphpqjp4q_workflow_ppshljlsphpqjp4q_automate_schedule_httprequest_cr.json",
      "workflow_name": "util_ppshljlsphpqjp4q_workflow_ppshljlsphpqjp4q_automate_schedule_httprequest_cr",
      "suggested_filename": "util_ppshljlsphpqjp4q_workflow_ppshljlsphpqjp4q_automate_schedule_httprequest_cr.json",
      "category": "UTIL",
      "business_function": "ppshljlsphpqjp4q",
      "key_integrations": [
        "scheduleTrigger",
        "httpRequest",
        "twilio",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.twilio": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates ppshljlsphpqjp4q processes using scheduleTrigger, httpRequest, twilio",
      "analysis_timestamp": "2025-06-01T16:06:48.908119"
    },
    {
      "original_filename": "ai_discord_automate_n8nnodeslangchainchat_n8nnodeslangchainlmchatopenai.json",
      "workflow_name": "Discord MCP Chat Agent",
      "suggested_filename": "ai_discord_automate_n8nnodeslangchainchat_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "discord",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.mcpClientTool",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.mcpClientTool": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates discord processes using @n8n/langchain.agent, @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.908241"
    },
    {
      "original_filename": "data_3588_workflow_3588_automate_httprequest_schedule_cron.json",
      "workflow_name": "data_3588_workflow_3588_automate_httprequest_schedule_cron",
      "suggested_filename": "data_3588_workflow_3588_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "3588",
      "key_integrations": [
        "scheduleTrigger",
        "set",
        "stickyNote",
        "httpRequest",
        "code",
        "function",
        "googleSheets"
      ],
      "trigger_type": "cron",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates 3588 processes using scheduleTrigger, set, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.908526"
    },
    {
      "original_filename": "ai_piepdrive_automate_pipedrive_pipedrive_1.json",
      "workflow_name": "piepdrive-test",
      "suggested_filename": "ai_piepdrive_automate_pipedrive_pipedrive_1.json",
      "category": "AI",
      "business_function": "piepdrive",
      "key_integrations": [
        "pipedriveTrigger",
        "stickyNote",
        "pipedrive",
        "code",
        "httpRequest",
        "markdown",
        "slack",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.pipedriveTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.pipedrive": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.slack": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates piepdrive processes using pipedriveTrigger, stickyNote, pipedrive",
      "analysis_timestamp": "2025-06-01T16:06:48.908789"
    },
    {
      "original_filename": "ai_notify_user_in_slack_of_quarantined_email_and_create_jira_ticket_if_opened_ai.json",
      "workflow_name": "Notify_user_in_Slack_of_quarantined_email_and_create_Jira_ticket_if_opened",
      "suggested_filename": "ai_notify_user_in_slack_of_quarantined_email_and_create_jira_ticket_if_opened_ai.json",
      "category": "AI",
      "business_function": "notify",
      "key_integrations": [
        "if",
        "webhook",
        "httpRequest",
        "jira",
        "stickyNote",
        "slack",
        "code"
      ],
      "trigger_type": "webhook",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.jira": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates notify processes using if, webhook, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.909073"
    },
    {
      "original_filename": "biz_1840_workflow_1840_automate_hubspot_functionitem_cron.json",
      "workflow_name": "biz_1840_workflow_1840_automate_hubspot_functionitem_cron",
      "suggested_filename": "biz_1840_workflow_1840_automate_hubspot_functionitem_cron.json",
      "category": "BIZ",
      "business_function": "1840",
      "key_integrations": [
        "merge",
        "functionItem",
        "hubspot",
        "zendesk",
        "if",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.functionItem": 2,
        "n8n-nodes-base.hubspot": 1,
        "n8n-nodes-base.zendesk": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates 1840 processes using merge, functionItem, hubspot",
      "analysis_timestamp": "2025-06-01T16:06:48.909305"
    },
    {
      "original_filename": "data_1373_workflow_1373_automate_notion_webhook_webhook.json",
      "workflow_name": "data_1373_workflow_1373_automate_notion_webhook_webhook",
      "suggested_filename": "data_1373_workflow_1373_automate_notion_webhook_webhook.json",
      "category": "DATA",
      "business_function": "1373",
      "key_integrations": [
        "set",
        "webhook",
        "if",
        "notion",
        "merge",
        "function"
      ],
      "trigger_type": "webhook",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.notion": 5,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.function": 1
      },
      "business_value": "Automates 1373 processes using set, webhook, if",
      "analysis_timestamp": "2025-06-01T16:06:48.909567"
    },
    {
      "original_filename": "ai_chat_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalculat.json",
      "workflow_name": "ai_chat_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalculat",
      "suggested_filename": "ai_chat_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalculat.json",
      "category": "AI",
      "business_function": "chat",
      "key_integrations": [
        "@n8n/langchain.openAiAssistant",
        "@n8n/langchain.toolCalculator",
        "@n8n/langchain.memoryManager",
        "aggregate",
        "set",
        "limit",
        "@n8n/langchain.chatTrigger",
        "stickyNote",
        "@n8n/langchain.memoryBufferWindow"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "@n8n/n8n-nodes-langchain.openAiAssistant": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "@n8n/n8n-nodes-langchain.memoryManager": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.limit": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1
      },
      "business_value": "Automates chat processes using @n8n/langchain.openAiAssistant, @n8n/langchain.toolCalculator, @n8n/langchain.memoryManager",
      "analysis_timestamp": "2025-06-01T16:06:48.909809"
    },
    {
      "original_filename": "ai_3499_workflow_3499_automate_n8nnodeslangchainmemorybufferwindow_airtable.json",
      "workflow_name": "ai_3499_workflow_3499_automate_n8nnodeslangchainmemorybufferwindow_airtable",
      "suggested_filename": "ai_3499_workflow_3499_automate_n8nnodeslangchainmemorybufferwindow_airtable.json",
      "category": "AI",
      "business_function": "3499",
      "key_integrations": [
        "twilioTrigger",
        "airtableTool",
        "set",
        "twilio",
        "airtable",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.twilioTrigger": 1,
        "n8n-nodes-base.airtableTool": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.twilio": 1,
        "n8n-nodes-base.airtable": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 3499 processes using twilioTrigger, airtableTool, set",
      "analysis_timestamp": "2025-06-01T16:06:48.910086"
    },
    {
      "original_filename": "ai_airtable_ai_process_airtable_webhook_webhook_1.json",
      "workflow_name": "Get Airtable data in Obsidian Notes",
      "suggested_filename": "ai_airtable_ai_process_airtable_webhook_webhook_1.json",
      "category": "AI",
      "business_function": "airtable",
      "key_integrations": [
        "airtableTool",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.agent",
        "stickyNote",
        "respondToWebhook",
        "webhook"
      ],
      "trigger_type": "chat",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.airtableTool": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates airtable processes using airtableTool, @n8n/langchain.lmChatOpenAi, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.910323"
    },
    {
      "original_filename": "biz_2807_workflow_2807_automate_quickbooks_stripe.json",
      "workflow_name": "biz_2807_workflow_2807_automate_quickbooks_stripe",
      "suggested_filename": "biz_2807_workflow_2807_automate_quickbooks_stripe.json",
      "category": "BIZ",
      "business_function": "2807",
      "key_integrations": [
        "httpRequest",
        "stripe",
        "stripeTrigger",
        "if",
        "merge",
        "quickbooks"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.stripe": 1,
        "n8n-nodes-base.stripeTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.quickbooks": 1
      },
      "business_value": "Automates 2807 processes using httpRequest, stripe, stripeTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.910593"
    },
    {
      "original_filename": "ai_send_ai_process_openweathermap_pushover_cron.json",
      "workflow_name": "Send daily weather updates via a push notification",
      "suggested_filename": "ai_send_ai_process_openweathermap_pushover_cron.json",
      "category": "AI",
      "business_function": "send",
      "key_integrations": [
        "pushover",
        "cron",
        "openWeatherMap"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.pushover": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.openWeatherMap": 1
      },
      "business_value": "Automates send processes using pushover, cron, openWeatherMap",
      "analysis_timestamp": "2025-06-01T16:06:48.910714"
    },
    {
      "original_filename": "ai_slack_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalcula.json",
      "workflow_name": "Slack AI Chatbot with RAG for company staff",
      "suggested_filename": "ai_slack_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalcula.json",
      "category": "AI",
      "business_function": "slack",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.vectorStoreQdrant",
        "@n8n/langchain.toolCalculator",
        "slackTrigger",
        "slack",
        "manualTrigger",
        "httpRequest",
        "googleDrive"
      ],
      "trigger_type": "chat",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "n8n-nodes-base.slackTrigger": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleDrive": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 1
      },
      "business_value": "Automates slack processes using @n8n/langchain.agent, @n8n/langchain.memoryBufferWindow, @n8n/langchain.embeddingsOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.911022"
    },
    {
      "original_filename": "ops_restore_automate_httprequest_manual_1.json",
      "workflow_name": "Restore your workflows from GitHub",
      "suggested_filename": "ops_restore_automate_httprequest_manual_1.json",
      "category": "OPS",
      "business_function": "restore",
      "key_integrations": [
        "manualTrigger",
        "set",
        "stickyNote",
        "httpRequest",
        "splitOut",
        "github",
        "extractFromFile",
        "n8n"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.github": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.n8n": 1
      },
      "business_value": "Automates restore processes using manualTrigger, set, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.911168"
    },
    {
      "original_filename": "biz_1333_workflow_1333_automate_pipedrive_hubspot_cron.json",
      "workflow_name": "biz_1333_workflow_1333_automate_pipedrive_hubspot_cron",
      "suggested_filename": "biz_1333_workflow_1333_automate_pipedrive_hubspot_cron.json",
      "category": "BIZ",
      "business_function": "1333",
      "key_integrations": [
        "cron",
        "pipedrive",
        "hubspot",
        "merge"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.pipedrive": 2,
        "n8n-nodes-base.hubspot": 2,
        "n8n-nodes-base.merge": 2
      },
      "business_value": "Automates 1333 processes using cron, pipedrive, hubspot",
      "analysis_timestamp": "2025-06-01T16:06:48.911386"
    },
    {
      "original_filename": "data_syncro_sync_webhook_clockify_webhook.json",
      "workflow_name": "Syncro to Clockify",
      "suggested_filename": "data_syncro_sync_webhook_clockify_webhook.json",
      "category": "DATA",
      "business_function": "syncro",
      "key_integrations": [
        "webhook",
        "clockify"
      ],
      "trigger_type": "webhook",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.clockify": 1
      },
      "business_value": "Automates syncro processes using webhook, clockify",
      "analysis_timestamp": "2025-06-01T16:06:48.911569"
    },
    {
      "original_filename": "util_scaleway_read_splitinbatches_httprequest_webhook.json",
      "workflow_name": "Get all scaleway server info copy",
      "suggested_filename": "util_scaleway_read_splitinbatches_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "scaleway",
      "key_integrations": [
        "code",
        "set",
        "switch",
        "webhook",
        "respondToWebhook",
        "stickyNote",
        "httpRequest",
        "splitInBatches",
        "splitOut",
        "if"
      ],
      "trigger_type": "webhook",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.code": 5,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 6,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates scaleway processes using code, set, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.911928"
    },
    {
      "original_filename": "ai_build_ai_process_n8nnodeslangchainmemorybufferwindow_airtable.json",
      "workflow_name": "Build an MCP server with Airtable",
      "suggested_filename": "ai_build_ai_process_n8nnodeslangchainmemorybufferwindow_airtable.json",
      "category": "AI",
      "business_function": "build",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.mcpClientTool",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.mcpTrigger",
        "airtableTool",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.mcpClientTool": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.mcpTrigger": 1,
        "n8n-nodes-base.airtableTool": 5,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates build processes using @n8n/langchain.chatTrigger, @n8n/langchain.agent, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:48.912304"
    },
    {
      "original_filename": "util_908_workflow_908_automate_httprequest_compression.json",
      "workflow_name": "util_908_workflow_908_automate_httprequest_compression",
      "suggested_filename": "util_908_workflow_908_automate_httprequest_compression.json",
      "category": "UTIL",
      "business_function": "908",
      "key_integrations": [
        "dropbox",
        "compression",
        "httpRequest",
        "manualTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.dropbox": 1,
        "n8n-nodes-base.compression": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates 908 processes using dropbox, compression, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.912451"
    },
    {
      "original_filename": "data_2015_workflow_2015_automate_httprequest_manual.json",
      "workflow_name": "data_2015_workflow_2015_automate_httprequest_manual",
      "suggested_filename": "data_2015_workflow_2015_automate_httprequest_manual.json",
      "category": "DATA",
      "business_function": "2015",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "code",
        "googleSheets",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 2015 processes using manualTrigger, stickyNote, code",
      "analysis_timestamp": "2025-06-01T16:06:48.912790"
    },
    {
      "original_filename": "ai_discord_ai_process_webhook_openai_webhook_2.json",
      "workflow_name": "Discord AI bot",
      "suggested_filename": "ai_discord_ai_process_webhook_openai_webhook_2.json",
      "category": "AI",
      "business_function": "discord",
      "key_integrations": [
        "manualTrigger",
        "webhook",
        "openAi",
        "switch",
        "set",
        "discord"
      ],
      "trigger_type": "webhook",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.discord": 3
      },
      "business_value": "Automates discord processes using manualTrigger, webhook, openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.913064"
    },
    {
      "original_filename": "comm_send_notify_webhook_telegram_webhook.json",
      "workflow_name": "Send Telegram Alerts for New WooCommerce Orders",
      "suggested_filename": "comm_send_notify_webhook_telegram_webhook.json",
      "category": "COMM",
      "business_function": "send",
      "key_integrations": [
        "if",
        "code",
        "stickyNote",
        "webhook",
        "telegram"
      ],
      "trigger_type": "webhook",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates send processes using if, code, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.913386"
    },
    {
      "original_filename": "ai_focused_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr_1.json",
      "workflow_name": "HR-focused automation pipeline with AI",
      "suggested_filename": "ai_focused_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr_1.json",
      "category": "AI",
      "business_function": "focused",
      "key_integrations": [
        "formTrigger",
        "extractFromFile",
        "@n8n/langchain.informationExtractor",
        "@n8n/langchain.chainSummarization",
        "merge",
        "set",
        "googleSheets",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.chainLlm",
        "googleDrive"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 2,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleSheets": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.stickyNote": 6
      },
      "business_value": "Automates focused processes using formTrigger, extractFromFile, @n8n/langchain.informationExtractor",
      "analysis_timestamp": "2025-06-01T16:06:48.913807"
    },
    {
      "original_filename": "ops_docker_automate_ssh_httprequest_webhook.json",
      "workflow_name": "PUQ Docker NextCloud deploy",
      "suggested_filename": "ops_docker_automate_ssh_httprequest_webhook.json",
      "category": "OPS",
      "business_function": "docker",
      "key_integrations": [
        "if",
        "set",
        "webhook",
        "respondToWebhook",
        "switch",
        "stickyNote",
        "code",
        "httpRequest",
        "ssh"
      ],
      "trigger_type": "webhook",
      "complexity_score": 44,
      "complexity": "High",
      "total_nodes": 44,
      "node_types": {
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.set": 24,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 3,
        "n8n-nodes-base.switch": 6,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.ssh": 2
      },
      "business_value": "Automates docker processes using if, set, webhook",
      "analysis_timestamp": "2025-06-01T16:06:48.915012"
    },
    {
      "original_filename": "ai_amazon_ai_process_n8nnodeslangchainchainllm_gmail.json",
      "workflow_name": "Amazon Ads AI Optimization",
      "suggested_filename": "ai_amazon_ai_process_n8nnodeslangchainchainllm_gmail.json",
      "category": "AI",
      "business_function": "amazon",
      "key_integrations": [
        "googleDrive",
        "@n8n/langchain.lmChatOpenAi",
        "if",
        "merge",
        "code",
        "set",
        "stickyNote",
        "gmail",
        "extractFromFile",
        "manualTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.googleDrive": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.extractFromFile": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates amazon processes using googleDrive, @n8n/langchain.lmChatOpenAi, if",
      "analysis_timestamp": "2025-06-01T16:06:48.915349"
    },
    {
      "original_filename": "comm_1277_workflow_1277_automate_slack_datetime_cron.json",
      "workflow_name": "comm_1277_workflow_1277_automate_slack_datetime_cron",
      "suggested_filename": "comm_1277_workflow_1277_automate_slack_datetime_cron.json",
      "category": "COMM",
      "business_function": "1277",
      "key_integrations": [
        "googleCalendar",
        "function",
        "dateTime",
        "if",
        "set",
        "merge",
        "slack",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.googleCalendar": 1,
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.dateTime": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates 1277 processes using googleCalendar, function, dateTime",
      "analysis_timestamp": "2025-06-01T16:06:48.915653"
    },
    {
      "original_filename": "util_2297_workflow_2297_automate_httprequest_readwritefile.json",
      "workflow_name": "util_2297_workflow_2297_automate_httprequest_readwritefile",
      "suggested_filename": "util_2297_workflow_2297_automate_httprequest_readwritefile.json",
      "category": "UTIL",
      "business_function": "2297",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "readWriteFile",
        "stickyNote",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 2297 processes using manualTrigger, httpRequest, readWriteFile",
      "analysis_timestamp": "2025-06-01T16:06:48.915943"
    },
    {
      "original_filename": "ai_2183_workflow_2183_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangcha.json",
      "workflow_name": "ai_2183_workflow_2183_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangcha",
      "suggested_filename": "ai_2183_workflow_2183_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangcha.json",
      "category": "AI",
      "business_function": "2183",
      "key_integrations": [
        "stickyNote",
        "manualTrigger",
        "googleDrive",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.vectorStoreQdrant",
        "@n8n/langchain.chatTrigger",
        "webhook",
        "@n8n/langchain.chainRetrievalQa",
        "@n8n/langchain.retrieverVectorStore"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "n8n-nodes-base.respondToWebhook": 1
      },
      "business_value": "Automates 2183 processes using stickyNote, manualTrigger, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.916251"
    },
    {
      "original_filename": "ai_2462_workflow_2462_automate_n8nnodeslangchainmemorybufferwindow_baserow.json",
      "workflow_name": "ai_2462_workflow_2462_automate_n8nnodeslangchainmemorybufferwindow_baserow",
      "suggested_filename": "ai_2462_workflow_2462_automate_n8nnodeslangchainmemorybufferwindow_baserow.json",
      "category": "AI",
      "business_function": "2462",
      "key_integrations": [
        "googleCalendarTool",
        "@n8n/langchain.memoryBufferWindow",
        "gmailTool",
        "@n8n/langchain.lmChatOpenAi",
        "telegramTrigger",
        "telegram",
        "if",
        "@n8n/langchain.openAi",
        "set",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.googleCalendarTool": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.gmailTool": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.baserowTool": 2
      },
      "business_value": "Automates 2462 processes using googleCalendarTool, @n8n/langchain.memoryBufferWindow, gmailTool",
      "analysis_timestamp": "2025-06-01T16:06:48.916632"
    },
    {
      "original_filename": "ai_testing_automate_n8nnodeslangchainchainllm_datetime_2.json",
      "workflow_name": "Testing Mulitple Local LLM with LM Studio",
      "suggested_filename": "ai_testing_automate_n8nnodeslangchainchainllm_datetime_2.json",
      "category": "AI",
      "business_function": "testing",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "@n8n/langchain.chatTrigger",
        "dateTime",
        "@n8n/langchain.lmChatOpenAi",
        "code",
        "googleSheets",
        "set",
        "splitOut",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.dateTime": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates testing processes using stickyNote, httpRequest, @n8n/langchain.chatTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.917043"
    },
    {
      "original_filename": "content_3216_workflow_3216_automate_emailsend_httprequest_cron.json",
      "workflow_name": "content_3216_workflow_3216_automate_emailsend_httprequest_cron",
      "suggested_filename": "content_3216_workflow_3216_automate_emailsend_httprequest_cron.json",
      "category": "CONTENT",
      "business_function": "3216",
      "key_integrations": [
        "youTube",
        "scheduleTrigger",
        "if",
        "stickyNote",
        "rssFeedRead",
        "httpRequest",
        "filter",
        "emailSend",
        "stopAndError",
        "splitOut"
      ],
      "trigger_type": "cron",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.youTube": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.rssFeedRead": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.filter": 3,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.stopAndError": 1,
        "n8n-nodes-base.splitOut": 1
      },
      "business_value": "Automates 3216 processes using youTube, scheduleTrigger, if",
      "analysis_timestamp": "2025-06-01T16:06:48.917422"
    },
    {
      "original_filename": "comm_2058_workflow_2058_automate_spreadsheetfile_telegram.json",
      "workflow_name": "comm_2058_workflow_2058_automate_spreadsheetfile_telegram",
      "suggested_filename": "comm_2058_workflow_2058_automate_spreadsheetfile_telegram.json",
      "category": "COMM",
      "business_function": "2058",
      "key_integrations": [
        "telegramTrigger",
        "if",
        "code",
        "facebookGraphApi",
        "spreadsheetFile",
        "telegram",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 4,
        "n8n-nodes-base.facebookGraphApi": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 2058 processes using telegramTrigger, if, code",
      "analysis_timestamp": "2025-06-01T16:06:48.917707"
    },
    {
      "original_filename": "ai_gratitude_automate_n8nnodeslangchainlmchatazureopenai_n8nnodeslangchainchainl.json",
      "workflow_name": "Gratitude Jar Reminder",
      "suggested_filename": "ai_gratitude_automate_n8nnodeslangchainlmchatazureopenai_n8nnodeslangchainchainl.json",
      "category": "AI",
      "business_function": "gratitude",
      "key_integrations": [
        "scheduleTrigger",
        "@n8n/langchain.chainLlm",
        "stickyNote",
        "set",
        "@n8n/langchain.lmChatAzureOpenAi",
        "httpRequest"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates gratitude processes using scheduleTrigger, @n8n/langchain.chainLlm, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.917892"
    },
    {
      "original_filename": "ai_generate_generate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "workflow_name": "Generate SQL queries from schema only - AI-powered",
      "suggested_filename": "ai_generate_generate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "category": "AI",
      "business_function": "generate",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "mySql",
        "set",
        "convertToFile",
        "readWriteFile",
        "extractFromFile",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.mySql": 3,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.readWriteFile": 2,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates generate processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow, mySql",
      "analysis_timestamp": "2025-06-01T16:06:48.918321"
    },
    {
      "original_filename": "ai_automate_ai_process_slack_n8nnodeslangchainchainllm_cron.json",
      "workflow_name": "ai_automate_ai_process_slack_n8nnodeslangchainchainllm_cron",
      "suggested_filename": "ai_automate_ai_process_slack_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "scheduleTrigger",
        "jira",
        "aggregate",
        "set",
        "if",
        "@n8n/langchain.outputParserStructured",
        "slack",
        "stickyNote",
        "executeWorkflow"
      ],
      "trigger_type": "chat",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 4,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.jira": 8,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.if": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.slack": 2,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.sentimentAnalysis": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.jiraTool": 1,
        "n8n-nodes-base.notionTool": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1
      },
      "business_value": "Automates automate processes using @n8n/langchain.lmChatOpenAi, scheduleTrigger, jira",
      "analysis_timestamp": "2025-06-01T16:06:48.918878"
    },
    {
      "original_filename": "comm_billbot_automate_httprequest_telegram.json",
      "workflow_name": "BillBot",
      "suggested_filename": "comm_billbot_automate_httprequest_telegram.json",
      "category": "COMM",
      "business_function": "billbot",
      "key_integrations": [
        "set",
        "telegram",
        "telegramTrigger",
        "httpRequest",
        "googleSheets",
        "twilio"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.twilio": 1
      },
      "business_value": "Automates billbot processes using set, telegram, telegramTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.919197"
    },
    {
      "original_filename": "ai_openai_ai_process_n8nnodeslangchainchat_httprequest.json",
      "workflow_name": "OpenAI ImageGen1 Template",
      "suggested_filename": "ai_openai_ai_process_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "openai",
      "key_integrations": [
        "httpRequest",
        "convertToFile",
        "@n8n/langchain.chatTrigger",
        "stickyNote",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.convertToFile": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates openai processes using httpRequest, convertToFile, @n8n/langchain.chatTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.919356"
    },
    {
      "original_filename": "data_1751_workflow_1751_automate_n8ntrainingcustomerdatastore_manual.json",
      "workflow_name": "data_1751_workflow_1751_automate_n8ntrainingcustomerdatastore_manual",
      "suggested_filename": "data_1751_workflow_1751_automate_n8ntrainingcustomerdatastore_manual.json",
      "category": "DATA",
      "business_function": "1751",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "googleSheets",
        "set",
        "n8nTrainingCustomerDatastore"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.n8nTrainingCustomerDatastore": 1
      },
      "business_value": "Automates 1751 processes using manualTrigger, stickyNote, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.919598"
    },
    {
      "original_filename": "ai_automated_ai_process_telegram_telegram.json",
      "workflow_name": "ai_automated_ai_process_telegram_telegram",
      "suggested_filename": "ai_automated_ai_process_telegram_telegram.json",
      "category": "AI",
      "business_function": "automated",
      "key_integrations": [
        "telegramTrigger",
        "telegram",
        "stickyNote",
        "wait",
        "@n8n/langchain.openAi",
        "switch"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.wait": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates automated processes using telegramTrigger, telegram, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.919848"
    },
    {
      "original_filename": "ai_image_ai_process_telegram_telegram.json",
      "workflow_name": "ai_image_ai_process_telegram_telegram",
      "suggested_filename": "ai_image_ai_process_telegram_telegram.json",
      "category": "AI",
      "business_function": "image",
      "key_integrations": [
        "telegramTrigger",
        "@n8n/langchain.openAi",
        "telegram",
        "merge",
        "aggregate",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates image processes using telegramTrigger, @n8n/langchain.openAi, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.920164"
    },
    {
      "original_filename": "comm_woocommerce_automate_slack_woocommerce_3.json",
      "workflow_name": "New WooCommerce order to Slack",
      "suggested_filename": "comm_woocommerce_automate_slack_woocommerce_3.json",
      "category": "COMM",
      "business_function": "woocommerce",
      "key_integrations": [
        "wooCommerceTrigger",
        "slack",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.wooCommerceTrigger": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates woocommerce processes using wooCommerceTrigger, slack, if",
      "analysis_timestamp": "2025-06-01T16:06:48.920327"
    },
    {
      "original_filename": "data_2555_workflow_2555_automate_googlesheets_webflow.json",
      "workflow_name": "data_2555_workflow_2555_automate_googlesheets_webflow",
      "suggested_filename": "data_2555_workflow_2555_automate_googlesheets_webflow.json",
      "category": "DATA",
      "business_function": "2555",
      "key_integrations": [
        "code",
        "stickyNote",
        "webflowTrigger",
        "googleSheets"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.webflowTrigger": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates 2555 processes using code, stickyNote, webflowTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.920575"
    },
    {
      "original_filename": "data_classifier_automate_httprequest_executeworkflow_2.json",
      "workflow_name": "[2/2] KNN classifier (lands dataset)",
      "suggested_filename": "data_classifier_automate_httprequest_executeworkflow_2.json",
      "category": "DATA",
      "business_function": "classifier",
      "key_integrations": [
        "httpRequest",
        "code",
        "set",
        "if",
        "stickyNote",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.executeWorkflowTrigger": 1
      },
      "business_value": "Automates classifier processes using httpRequest, code, set",
      "analysis_timestamp": "2025-06-01T16:06:48.920890"
    },
    {
      "original_filename": "util_554_workflow_554_automate_keap.json",
      "workflow_name": "util_554_workflow_554_automate_keap",
      "suggested_filename": "util_554_workflow_554_automate_keap.json",
      "category": "UTIL",
      "business_function": "554",
      "key_integrations": [
        "keapTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.keapTrigger": 1
      },
      "business_value": "Automates 554 processes using keapTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.921110"
    },
    {
      "original_filename": "data_1810_workflow_1810_automate_itemlists_httprequest.json",
      "workflow_name": "data_1810_workflow_1810_automate_itemlists_httprequest",
      "suggested_filename": "data_1810_workflow_1810_automate_itemlists_httprequest.json",
      "category": "DATA",
      "business_function": "1810",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "httpRequest",
        "xml",
        "googleSheets",
        "set",
        "itemLists",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.xml": 1,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates 1810 processes using manualTrigger, stickyNote, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.921375"
    },
    {
      "original_filename": "ai_2667_workflow_2667_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangcha.json",
      "workflow_name": "ai_2667_workflow_2667_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangcha",
      "suggested_filename": "ai_2667_workflow_2667_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangcha.json",
      "category": "AI",
      "business_function": "2667",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.retrieverVectorStore",
        "@n8n/langchain.vectorStoreInMemory",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.chainRetrievalQa",
        "switch"
      ],
      "trigger_type": "chat",
      "complexity_score": 34,
      "complexity": "High",
      "total_nodes": 34,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 10,
        "n8n-nodes-base.splitInBatches": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 2,
        "n8n-nodes-base.n8n": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates 2667 processes using manualTrigger, stickyNote, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.921802"
    },
    {
      "original_filename": "content_3786_workflow_3786_automate_facebookleadads.json",
      "workflow_name": "content_3786_workflow_3786_automate_facebookleadads",
      "suggested_filename": "content_3786_workflow_3786_automate_facebookleadads.json",
      "category": "CONTENT",
      "business_function": "3786",
      "key_integrations": [
        "stickyNote",
        "facebookLeadAdsTrigger",
        "klicktipp.klicktipp"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.facebookLeadAdsTrigger": 1,
        "n8n-nodes-klicktipp.klicktipp": 1
      },
      "business_value": "Automates 3786 processes using stickyNote, facebookLeadAdsTrigger, klicktipp.klicktipp",
      "analysis_timestamp": "2025-06-01T16:06:48.921978"
    },
    {
      "original_filename": "comm_3621_workflow_3621_automate_httprequest_schedule_cron.json",
      "workflow_name": "comm_3621_workflow_3621_automate_httprequest_schedule_cron",
      "suggested_filename": "comm_3621_workflow_3621_automate_httprequest_schedule_cron.json",
      "category": "COMM",
      "business_function": "3621",
      "key_integrations": [
        "scheduleTrigger",
        "httpRequest",
        "telegram",
        "function",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates 3621 processes using scheduleTrigger, httpRequest, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.922279"
    },
    {
      "original_filename": "util_2027_workflow_2027_automate_httprequest_graphql_webhook.json",
      "workflow_name": "util_2027_workflow_2027_automate_httprequest_graphql_webhook",
      "suggested_filename": "util_2027_workflow_2027_automate_httprequest_graphql_webhook.json",
      "category": "UTIL",
      "business_function": "2027",
      "key_integrations": [
        "webhook",
        "code",
        "if",
        "httpRequest",
        "graphql",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.graphql": 2,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates 2027 processes using webhook, code, if",
      "analysis_timestamp": "2025-06-01T16:06:48.922625"
    },
    {
      "original_filename": "ai_telegram_automate_n8nnodeslangchaintextclassifier_httprequest_webhook_2.json",
      "workflow_name": "🤖 Telegram Messaging Agent for Text/Audio/Images",
      "suggested_filename": "ai_telegram_automate_n8nnodeslangchaintextclassifier_httprequest_webhook_2.json",
      "category": "AI",
      "business_function": "telegram",
      "key_integrations": [
        "if",
        "telegram",
        "stickyNote",
        "webhook",
        "httpRequest",
        "set",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.openAi",
        "convertToFile",
        "extractFromFile"
      ],
      "trigger_type": "webhook",
      "complexity_score": 39,
      "complexity": "High",
      "total_nodes": 39,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.telegram": 11,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.set": 4,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 2,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates telegram processes using if, telegram, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.923151"
    },
    {
      "original_filename": "ai_agent_automate_n8nnodeslangchainchat_httprequest.json",
      "workflow_name": "Agent Milvus tool",
      "suggested_filename": "ai_agent_automate_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "html",
        "splitOut",
        "limit",
        "stickyNote",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.vectorStoreMilvus",
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreMilvus": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates agent processes using manualTrigger, httpRequest, html",
      "analysis_timestamp": "2025-06-01T16:06:48.923529"
    },
    {
      "original_filename": "ai_langchain_ai_process_n8nnodeslangchainlmopenai_n8nnodeslangchaincode.json",
      "workflow_name": "LangChain - Example - Code Node Example",
      "suggested_filename": "ai_langchain_ai_process_n8nnodeslangchainlmopenai_n8nnodeslangchaincode.json",
      "category": "AI",
      "business_function": "langchain",
      "key_integrations": [
        "@n8n/langchain.lmOpenAi",
        "stickyNote",
        "manualTrigger",
        "set",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.code",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmOpenAi": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.code": 2,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates langchain processes using @n8n/langchain.lmOpenAi, stickyNote, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.923786"
    },
    {
      "original_filename": "comm_2353_workflow_2353_automate_slack_httprequest_cron.json",
      "workflow_name": "comm_2353_workflow_2353_automate_slack_httprequest_cron",
      "suggested_filename": "comm_2353_workflow_2353_automate_slack_httprequest_cron.json",
      "category": "COMM",
      "business_function": "2353",
      "key_integrations": [
        "httpRequest",
        "scheduleTrigger",
        "code",
        "stickyNote",
        "if",
        "slack"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates 2353 processes using httpRequest, scheduleTrigger, code",
      "analysis_timestamp": "2025-06-01T16:06:48.924035"
    },
    {
      "original_filename": "data_3849_workflow_3849_automate_n8nnodeslangchainchainllm_reddit.json",
      "workflow_name": "data_3849_workflow_3849_automate_n8nnodeslangchainchainllm_reddit",
      "suggested_filename": "data_3849_workflow_3849_automate_n8nnodeslangchainchainllm_reddit.json",
      "category": "DATA",
      "business_function": "3849",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.chainSummarization",
        "merge",
        "googleSheets",
        "if",
        "set",
        "reddit",
        "stickyNote",
        "@n8n/langchain.lmChatOpenRouter",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.reddit": 1,
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates 3849 processes using manualTrigger, @n8n/langchain.chainSummarization, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.924435"
    },
    {
      "original_filename": "comm_post_automate_googlecalendar_telegram.json",
      "workflow_name": "Post new Google Calendar events to Telegram",
      "suggested_filename": "comm_post_automate_googlecalendar_telegram.json",
      "category": "COMM",
      "business_function": "post",
      "key_integrations": [
        "googleCalendarTrigger",
        "telegram",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.googleCalendarTrigger": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates post processes using googleCalendarTrigger, telegram, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.924574"
    },
    {
      "original_filename": "util_3333_workflow_3333_automate_webhook_respondtowebhook_webhook.json",
      "workflow_name": "util_3333_workflow_3333_automate_webhook_respondtowebhook_webhook",
      "suggested_filename": "util_3333_workflow_3333_automate_webhook_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "3333",
      "key_integrations": [
        "@custom-js/pdf-toolkit.html2Pdf",
        "code",
        "set",
        "webhook",
        "respondToWebhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "@custom-js/n8n-nodes-pdf-toolkit.html2Pdf": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1
      },
      "business_value": "Automates 3333 processes using @custom-js/pdf-toolkit.html2Pdf, code, set",
      "analysis_timestamp": "2025-06-01T16:06:48.924817"
    },
    {
      "original_filename": "util_448_workflow_448_automate_freshdesk_manual.json",
      "workflow_name": "util_448_workflow_448_automate_freshdesk_manual",
      "suggested_filename": "util_448_workflow_448_automate_freshdesk_manual.json",
      "category": "UTIL",
      "business_function": "448",
      "key_integrations": [
        "manualTrigger",
        "freshdesk"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.freshdesk": 1
      },
      "business_value": "Automates 448 processes using manualTrigger, freshdesk",
      "analysis_timestamp": "2025-06-01T16:06:48.925006"
    },
    {
      "original_filename": "data_3463_workflow_3463_automate_splitinbatches_rssfeedread_cron.json",
      "workflow_name": "data_3463_workflow_3463_automate_splitinbatches_rssfeedread_cron",
      "suggested_filename": "data_3463_workflow_3463_automate_splitinbatches_rssfeedread_cron.json",
      "category": "DATA",
      "business_function": "3463",
      "key_integrations": [
        "scheduleTrigger",
        "set",
        "code",
        "markdown",
        "splitInBatches",
        "wait",
        "rssFeedRead",
        "stickyNote",
        "googleSheets"
      ],
      "trigger_type": "cron",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.splitInBatches": 3,
        "n8n-nodes-base.wait": 3,
        "n8n-nodes-base.rssFeedRead": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.googleSheets": 4
      },
      "business_value": "Automates 3463 processes using scheduleTrigger, set, code",
      "analysis_timestamp": "2025-06-01T16:06:48.925304"
    },
    {
      "original_filename": "ai_perplexity_ai_process_generic.json",
      "workflow_name": "ai_perplexity_ai_process_generic",
      "suggested_filename": "ai_perplexity_ai_process_generic.json",
      "category": "AI",
      "business_function": "perplexity",
      "key_integrations": [],
      "trigger_type": "manual",
      "complexity_score": 0,
      "complexity": "Low",
      "total_nodes": 0,
      "node_types": {},
      "business_value": "Automates perplexity processes using ",
      "analysis_timestamp": "2025-06-01T16:06:48.925600"
    },
    {
      "original_filename": "biz_create_create_pipedrive_manual.json",
      "workflow_name": "Create an deal in Pipedrive",
      "suggested_filename": "biz_create_create_pipedrive_manual.json",
      "category": "BIZ",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "pipedrive"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.pipedrive": 1
      },
      "business_value": "Automates create processes using manualTrigger, pipedrive",
      "analysis_timestamp": "2025-06-01T16:06:48.925779"
    },
    {
      "original_filename": "util_156_workflow_156_automate_functionitem_executecommand.json",
      "workflow_name": "util_156_workflow_156_automate_functionitem_executecommand",
      "suggested_filename": "util_156_workflow_156_automate_functionitem_executecommand.json",
      "category": "UTIL",
      "business_function": "156",
      "key_integrations": [
        "executeCommand",
        "if",
        "functionItem"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.executeCommand": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.functionItem": 1
      },
      "business_value": "Automates 156 processes using executeCommand, if, functionItem",
      "analysis_timestamp": "2025-06-01T16:06:48.925957"
    },
    {
      "original_filename": "ai_2418_workflow_2418_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "workflow_name": "ai_2418_workflow_2418_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput",
      "suggested_filename": "ai_2418_workflow_2418_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "2418",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.outputParserStructured",
        "editImage",
        "code",
        "stickyNote",
        "merge",
        "httpRequest",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.editImage": 3,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates 2418 processes using manualTrigger, @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.926290"
    },
    {
      "original_filename": "ai_automate_automate_wordpress_httprequest_1.json",
      "workflow_name": "Automate Content Generator for WordPress with DeepSeek R1",
      "suggested_filename": "ai_automate_automate_wordpress_httprequest_1.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "manualTrigger",
        "googleSheets",
        "set",
        "wordpress",
        "httpRequest",
        "stickyNote",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.openAi": 3
      },
      "business_value": "Automates automate processes using manualTrigger, googleSheets, set",
      "analysis_timestamp": "2025-06-01T16:06:48.926598"
    },
    {
      "original_filename": "ai_extract_extract_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainchai_3.json",
      "workflow_name": "Extract personal data with a self-hosted LLM Mistral NeMo",
      "suggested_filename": "ai_extract_extract_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainchai_3.json",
      "category": "AI",
      "business_function": "extract",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOllama",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.chainLlm",
        "stickyNote",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 1,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates extract processes using @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOllama, @n8n/langchain.outputParserAutofixing",
      "analysis_timestamp": "2025-06-01T16:06:48.926849"
    },
    {
      "original_filename": "ai_agent_ai_process_n8nnodeslangchainmemorypostgreschat_httprequest_webhook_1.json",
      "workflow_name": "AI Agent to chat with you Search Console Data, using OpenAI and Postgres",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorypostgreschat_httprequest_webhook_1.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "@n8n/langchain.memoryPostgresChat",
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "stickyNote",
        "webhook",
        "respondToWebhook",
        "@n8n/langchain.toolWorkflow",
        "executeWorkflowTrigger",
        "switch",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 30,
      "complexity": "High",
      "total_nodes": 30,
      "node_types": {
        "@n8n/n8n-nodes-langchain.memoryPostgresChat": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.stickyNote": 14,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.aggregate": 2,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates agent processes using @n8n/langchain.memoryPostgresChat, @n8n/langchain.lmChatOpenAi, set",
      "analysis_timestamp": "2025-06-01T16:06:48.927274"
    },
    {
      "original_filename": "comm_phishing_analysis_urlscan_io_and_virustotal_automate_splitinbatches_slack_c.json",
      "workflow_name": "Phishing_analysis__URLScan_io_and_Virustotal_",
      "suggested_filename": "comm_phishing_analysis_urlscan_io_and_virustotal_automate_splitinbatches_slack_c.json",
      "category": "COMM",
      "business_function": "phishing",
      "key_integrations": [
        "manualTrigger",
        "slack",
        "splitInBatches",
        "microsoftOutlook",
        "httpRequest",
        "scheduleTrigger",
        "code",
        "urlScanIo",
        "if",
        "filter"
      ],
      "trigger_type": "cron",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.microsoftOutlook": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.urlScanIo": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates phishing processes using manualTrigger, slack, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.927611"
    },
    {
      "original_filename": "data_amazon_automate_httprequest_webhook_webhook.json",
      "workflow_name": "Amazon keywords",
      "suggested_filename": "data_amazon_automate_httprequest_webhook_webhook.json",
      "category": "DATA",
      "business_function": "amazon",
      "key_integrations": [
        "set",
        "airtable",
        "httpRequest",
        "splitOut",
        "aggregate",
        "code",
        "webhook",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates amazon processes using set, airtable, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.927884"
    },
    {
      "original_filename": "ai_gmail_ai_process_gmail_n8nnodeslangchainmcp.json",
      "workflow_name": "Gmail MCP Server",
      "suggested_filename": "ai_gmail_ai_process_gmail_n8nnodeslangchainmcp.json",
      "category": "AI",
      "business_function": "gmail",
      "key_integrations": [
        "gmailTool",
        "stickyNote",
        "@n8n/langchain.mcpTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "n8n-nodes-base.gmailTool": 21,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.mcpTrigger": 1
      },
      "business_value": "Automates gmail processes using gmailTool, stickyNote, @n8n/langchain.mcpTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.928215"
    },
    {
      "original_filename": "util_company_read_functionitem_uproc.json",
      "workflow_name": "Get Company by Name",
      "suggested_filename": "util_company_read_functionitem_uproc.json",
      "category": "UTIL",
      "business_function": "company",
      "key_integrations": [
        "manualTrigger",
        "functionItem",
        "uproc",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.uproc": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates company processes using manualTrigger, functionItem, uproc",
      "analysis_timestamp": "2025-06-01T16:06:48.928406"
    },
    {
      "original_filename": "data_2063_workflow_2063_automate_itemlists_httprequest_cron.json",
      "workflow_name": "data_2063_workflow_2063_automate_itemlists_httprequest_cron",
      "suggested_filename": "data_2063_workflow_2063_automate_itemlists_httprequest_cron.json",
      "category": "DATA",
      "business_function": "2063",
      "key_integrations": [
        "manualTrigger",
        "code",
        "googleSheets",
        "httpRequest",
        "itemLists",
        "filter",
        "set",
        "stickyNote",
        "scheduleTrigger",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.googleSheets": 4,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.itemLists": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 2063 processes using manualTrigger, code, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.928816"
    },
    {
      "original_filename": "data_3427_workflow_3427_automate_itemlists_webhook_webhook.json",
      "workflow_name": "data_3427_workflow_3427_automate_itemlists_webhook_webhook",
      "suggested_filename": "data_3427_workflow_3427_automate_itemlists_webhook_webhook.json",
      "category": "DATA",
      "business_function": "3427",
      "key_integrations": [
        "set",
        "itemLists",
        "code",
        "if",
        "respondToWebhook",
        "stickyNote",
        "webhook",
        "googleCalendar",
        "airtable"
      ],
      "trigger_type": "webhook",
      "complexity_score": 92,
      "complexity": "High",
      "total_nodes": 92,
      "node_types": {
        "n8n-nodes-base.set": 17,
        "n8n-nodes-base.itemLists": 2,
        "n8n-nodes-base.code": 7,
        "n8n-nodes-base.if": 5,
        "n8n-nodes-base.respondToWebhook": 8,
        "n8n-nodes-base.stickyNote": 37,
        "n8n-nodes-base.webhook": 5,
        "n8n-nodes-base.googleCalendar": 5,
        "n8n-nodes-base.airtable": 6
      },
      "business_value": "Automates 3427 processes using set, itemLists, code",
      "analysis_timestamp": "2025-06-01T16:06:48.929849"
    },
    {
      "original_filename": "ai_chat_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "workflow_name": "Chat with Postgresql Database",
      "suggested_filename": "ai_chat_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "category": "AI",
      "business_function": "chat",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "postgresTool",
        "stickyNote",
        "@n8n/langchain.memoryBufferWindow"
      ],
      "trigger_type": "chat",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.postgresTool": 3,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1
      },
      "business_value": "Automates chat processes using @n8n/langchain.chatTrigger, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.930232"
    },
    {
      "original_filename": "ai_chaining_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchai.json",
      "workflow_name": "LLM Chaining examples",
      "suggested_filename": "ai_chaining_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchai.json",
      "category": "AI",
      "business_function": "chaining",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "markdown",
        "stickyNote",
        "@n8n/langchain.lmChatAnthropic",
        "merge",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.memoryManager",
        "set",
        "splitOut"
      ],
      "trigger_type": "chat",
      "complexity_score": 38,
      "complexity": "High",
      "total_nodes": 38,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 6,
        "n8n-nodes-base.merge": 4,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.memoryManager": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.splitOut": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 5,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.noOp": 3,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates chaining processes using manualTrigger, httpRequest, markdown",
      "analysis_timestamp": "2025-06-01T16:06:48.930635"
    },
    {
      "original_filename": "ai_telegram_ai_process_baserow_n8nnodeslangchainmemorybufferwindow_webhook.json",
      "workflow_name": "All-in-One Telegram/Baserow AI Assistant 🤖🧠 Voice/Photo/Save Notes/Long Term Mem",
      "suggested_filename": "ai_telegram_ai_process_baserow_n8nnodeslangchainmemorybufferwindow_webhook.json",
      "category": "AI",
      "business_function": "telegram",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "telegram",
        "@n8n/langchain.agent",
        "aggregate",
        "merge",
        "@n8n/langchain.openAi",
        "convertToFile",
        "extractFromFile"
      ],
      "trigger_type": "chat",
      "complexity_score": 48,
      "complexity": "High",
      "total_nodes": 48,
      "node_types": {
        "n8n-nodes-base.stickyNote": 20,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.telegram": 4,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.merge": 2,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.memoryPostgresChat": 1,
        "n8n-nodes-base.baserowTool": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.baserow": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1
      },
      "business_value": "Automates telegram processes using stickyNote, @n8n/langchain.lmChatOpenAi, set",
      "analysis_timestamp": "2025-06-01T16:06:48.931180"
    },
    {
      "original_filename": "util_968_workflow_968_automate_webhook_posthog_webhook.json",
      "workflow_name": "util_968_workflow_968_automate_webhook_posthog_webhook",
      "suggested_filename": "util_968_workflow_968_automate_webhook_posthog_webhook.json",
      "category": "UTIL",
      "business_function": "968",
      "key_integrations": [
        "postHog",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.postHog": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 968 processes using postHog, webhook",
      "analysis_timestamp": "2025-06-01T16:06:48.931326"
    },
    {
      "original_filename": "ai_fetch_extract_n8nnodeslangchaincalculator_googledocs.json",
      "workflow_name": "Fetch the Most Recent Document from Google Drive",
      "suggested_filename": "ai_fetch_extract_n8nnodeslangchaincalculator_googledocs.json",
      "category": "AI",
      "business_function": "fetch",
      "key_integrations": [
        "googleDocs",
        "@n8n/langchain.toolWikipedia",
        "@n8n/langchain.toolCalculator",
        "googleSheets",
        "stickyNote",
        "googleDriveTrigger",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.googleDocs": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates fetch processes using googleDocs, @n8n/langchain.toolWikipedia, @n8n/langchain.toolCalculator",
      "analysis_timestamp": "2025-06-01T16:06:48.931593"
    },
    {
      "original_filename": "util_989_workflow_989_automate_typeform_apitemplateio.json",
      "workflow_name": "util_989_workflow_989_automate_typeform_apitemplateio",
      "suggested_filename": "util_989_workflow_989_automate_typeform_apitemplateio.json",
      "category": "UTIL",
      "business_function": "989",
      "key_integrations": [
        "typeformTrigger",
        "apiTemplateIo"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.apiTemplateIo": 1
      },
      "business_value": "Automates 989 processes using typeformTrigger, apiTemplateIo",
      "analysis_timestamp": "2025-06-01T16:06:48.931723"
    },
    {
      "original_filename": "util_2531_workflow_2531_automate_splitinbatches_httprequest_cron.json",
      "workflow_name": "util_2531_workflow_2531_automate_splitinbatches_httprequest_cron",
      "suggested_filename": "util_2531_workflow_2531_automate_splitinbatches_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "2531",
      "key_integrations": [
        "manualTrigger",
        "set",
        "httpRequest",
        "filter",
        "if",
        "splitInBatches",
        "wait",
        "n8n",
        "executeWorkflow",
        "xml"
      ],
      "trigger_type": "cron",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.xml": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.theHiveProject": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 8
      },
      "business_value": "Automates 2531 processes using manualTrigger, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.932197"
    },
    {
      "original_filename": "ai_hacker_automate_n8nnodeslangchainoutputparserstructured_httprequest_1.json",
      "workflow_name": "Hacker News to Video Template - AlexK1919",
      "suggested_filename": "ai_hacker_automate_n8nnodeslangchainoutputparserstructured_httprequest_1.json",
      "category": "AI",
      "business_function": "hacker",
      "key_integrations": [
        "manualTrigger",
        "hackerNews",
        "splitInBatches",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolHttpRequest",
        "@n8n/langchain.outputParserStructured",
        "s3",
        "set",
        "httpRequest",
        "wait"
      ],
      "trigger_type": "chat",
      "complexity_score": 48,
      "complexity": "High",
      "total_nodes": 48,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.hackerNews": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.s3": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 14,
        "n8n-nodes-base.wait": 5,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.limit": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.dropbox": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.microsoftOneDrive": 1,
        "n8n-nodes-base.youTube": 1,
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.linkedIn": 1
      },
      "business_value": "Automates hacker processes using manualTrigger, hackerNews, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.932836"
    },
    {
      "original_filename": "util_remove_delete_splitinbatches_httprequest_2.json",
      "workflow_name": "Remove Advanced Background from Google Drive Images",
      "suggested_filename": "util_remove_delete_splitinbatches_httprequest_2.json",
      "category": "UTIL",
      "business_function": "remove",
      "key_integrations": [
        "set",
        "httpRequest",
        "splitOut",
        "googleDrive",
        "merge",
        "editImage",
        "stickyNote",
        "googleDriveTrigger",
        "if",
        "splitInBatches"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleDrive": 3,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.editImage": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.splitInBatches": 1
      },
      "business_value": "Automates remove processes using set, httpRequest, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.933200"
    },
    {
      "original_filename": "ai_enrich_ai_process_n8nnodeslangchainoutputparserstructured_httprequest.json",
      "workflow_name": "ai_enrich_ai_process_n8nnodeslangchainoutputparserstructured_httprequest",
      "suggested_filename": "ai_enrich_ai_process_n8nnodeslangchainoutputparserstructured_httprequest.json",
      "category": "AI",
      "business_function": "enrich",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "airtable",
        "executeWorkflowTrigger",
        "set",
        "httpRequest",
        "@n8n/langchain.toolWorkflow",
        "if",
        "@n8n/langchain.outputParserStructured",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 2,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 10,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates enrich processes using manualTrigger, @n8n/langchain.lmChatOpenAi, airtable",
      "analysis_timestamp": "2025-06-01T16:06:48.933675"
    },
    {
      "original_filename": "ai_link_report_n8nnodeslangchainmemorybufferwindow_gmail_cron_1.json",
      "workflow_name": "UTM Link Creator & QR Code Generator with Scheduled Google Analytics Reports",
      "suggested_filename": "ai_link_report_n8nnodeslangchainmemorybufferwindow_gmail_cron_1.json",
      "category": "AI",
      "business_function": "link",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "googleAnalyticsTool",
        "manualTrigger",
        "set",
        "code",
        "airtable",
        "httpRequest",
        "scheduleTrigger",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.googleAnalyticsTool": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates link processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow, googleAnalyticsTool",
      "analysis_timestamp": "2025-06-01T16:06:48.934053"
    },
    {
      "original_filename": "util_3637_workflow_3637_automate_httprequest_n8nnodeslangchainmcp.json",
      "workflow_name": "util_3637_workflow_3637_automate_httprequest_n8nnodeslangchainmcp",
      "suggested_filename": "util_3637_workflow_3637_automate_httprequest_n8nnodeslangchainmcp.json",
      "category": "UTIL",
      "business_function": "3637",
      "key_integrations": [
        "executeWorkflowTrigger",
        "switch",
        "stickyNote",
        "@n8n/langchain.toolWorkflow",
        "httpRequest",
        "set",
        "aggregate",
        "@n8n/langchain.mcpTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 3,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.aggregate": 2,
        "@n8n/n8n-nodes-langchain.mcpTrigger": 1
      },
      "business_value": "Automates 3637 processes using executeWorkflowTrigger, switch, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.934493"
    },
    {
      "original_filename": "comm_3221_workflow_3221_automate_gmail_gmail.json",
      "workflow_name": "comm_3221_workflow_3221_automate_gmail_gmail",
      "suggested_filename": "comm_3221_workflow_3221_automate_gmail_gmail.json",
      "category": "COMM",
      "business_function": "3221",
      "key_integrations": [
        "stickyNote",
        "set",
        "googleSheets",
        "if",
        "gmailTrigger",
        "gmail",
        "code",
        "merge",
        "splitOut"
      ],
      "trigger_type": "manual",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.splitOut": 1
      },
      "business_value": "Automates 3221 processes using stickyNote, set, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.935201"
    },
    {
      "original_filename": "biz_1777_workflow_1777_automate_pipedrive_itemlists.json",
      "workflow_name": "biz_1777_workflow_1777_automate_pipedrive_itemlists",
      "suggested_filename": "biz_1777_workflow_1777_automate_pipedrive_itemlists.json",
      "category": "BIZ",
      "business_function": "1777",
      "key_integrations": [
        "pipedriveTrigger",
        "functionItem",
        "httpRequest",
        "merge",
        "set",
        "itemLists"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.pipedriveTrigger": 1,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.itemLists": 1
      },
      "business_value": "Automates 1777 processes using pipedriveTrigger, functionItem, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.935511"
    },
    {
      "original_filename": "ai_auto_ai_process_splitinbatches_n8nnodeslangchainoutputparserautofixing_1.json",
      "workflow_name": "Auto-Tag Blog Posts in WordPress with AI",
      "suggested_filename": "ai_auto_ai_process_splitinbatches_n8nnodeslangchainoutputparserautofixing_1.json",
      "category": "AI",
      "business_function": "auto",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.outputParserStructured",
        "rssFeedReadTrigger",
        "set",
        "splitOut",
        "splitInBatches",
        "httpRequest",
        "filter",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 32,
      "complexity": "High",
      "total_nodes": 32,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.rssFeedReadTrigger": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates auto processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.outputParserAutofixing, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.935899"
    },
    {
      "original_filename": "util_3836_workflow_3836_automate_splitinbatches_n8nnodeslangchainchat.json",
      "workflow_name": "util_3836_workflow_3836_automate_splitinbatches_n8nnodeslangchainchat",
      "suggested_filename": "util_3836_workflow_3836_automate_splitinbatches_n8nnodeslangchainchat.json",
      "category": "UTIL",
      "business_function": "3836",
      "key_integrations": [
        "code",
        "httpRequest",
        "splitInBatches",
        "wait",
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "respondToWebhook"
      ],
      "trigger_type": "chat",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.respondToWebhook": 1
      },
      "business_value": "Automates 3836 processes using code, httpRequest, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.936097"
    },
    {
      "original_filename": "ai_printify_update_splitinbatches_n8nnodeslangchaincalculator_2.json",
      "workflow_name": "Printify Automation - Update Title and Description - AlexK1919",
      "suggested_filename": "ai_printify_update_splitinbatches_n8nnodeslangchaincalculator_2.json",
      "category": "AI",
      "business_function": "printify",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "splitOut",
        "splitInBatches",
        "@n8n/langchain.toolCalculator",
        "@n8n/langchain.toolWikipedia",
        "set",
        "stickyNote",
        "googleSheetsTrigger",
        "googleSheets"
      ],
      "trigger_type": "manual",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.googleSheetsTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates printify processes using manualTrigger, httpRequest, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.936563"
    },
    {
      "original_filename": "data_983_workflow_983_automate_lemlist_airtable.json",
      "workflow_name": "data_983_workflow_983_automate_lemlist_airtable",
      "suggested_filename": "data_983_workflow_983_automate_lemlist_airtable.json",
      "category": "DATA",
      "business_function": "983",
      "key_integrations": [
        "airtable",
        "lemlist"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.lemlist": 2
      },
      "business_value": "Automates 983 processes using airtable, lemlist",
      "analysis_timestamp": "2025-06-01T16:06:48.936727"
    },
    {
      "original_filename": "comm_2070_workflow_2070_automate_slack_httprequest.json",
      "workflow_name": "comm_2070_workflow_2070_automate_slack_httprequest",
      "suggested_filename": "comm_2070_workflow_2070_automate_slack_httprequest.json",
      "category": "COMM",
      "business_function": "2070",
      "key_integrations": [
        "airtable",
        "httpRequest",
        "code",
        "slack",
        "stickyNote",
        "airtableTrigger",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.airtable": 4,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.airtableTrigger": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 2070 processes using airtable, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:48.937073"
    },
    {
      "original_filename": "biz_1805_workflow_1805_automate_hubspot_shopify.json",
      "workflow_name": "biz_1805_workflow_1805_automate_hubspot_shopify",
      "suggested_filename": "biz_1805_workflow_1805_automate_hubspot_shopify.json",
      "category": "BIZ",
      "business_function": "1805",
      "key_integrations": [
        "shopifyTrigger",
        "set",
        "if",
        "hubspot",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.shopifyTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.hubspot": 3,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates 1805 processes using shopifyTrigger, set, if",
      "analysis_timestamp": "2025-06-01T16:06:48.937368"
    },
    {
      "original_filename": "util_3632_workflow_3632_automate_n8nnodeslangchainmcp_n8nnodeslangchaincode.json",
      "workflow_name": "util_3632_workflow_3632_automate_n8nnodeslangchainmcp_n8nnodeslangchaincode",
      "suggested_filename": "util_3632_workflow_3632_automate_n8nnodeslangchainmcp_n8nnodeslangchaincode.json",
      "category": "UTIL",
      "business_function": "3632",
      "key_integrations": [
        "executeWorkflowTrigger",
        "switch",
        "stickyNote",
        "@n8n/langchain.mcpTrigger",
        "code",
        "@n8n/langchain.toolCode",
        "@n8n/langchain.toolWorkflow"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.mcpTrigger": 1,
        "n8n-nodes-base.code": 3,
        "@n8n/n8n-nodes-langchain.toolCode": 2,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 3
      },
      "business_value": "Automates 3632 processes using executeWorkflowTrigger, switch, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.937762"
    },
    {
      "original_filename": "comm_1583_workflow_1583_automate_nocodb_httprequest.json",
      "workflow_name": "comm_1583_workflow_1583_automate_nocodb_httprequest",
      "suggested_filename": "comm_1583_workflow_1583_automate_nocodb_httprequest.json",
      "category": "COMM",
      "business_function": "1583",
      "key_integrations": [
        "function",
        "merge",
        "switch",
        "if",
        "telegram",
        "nocoDb",
        "telegramTrigger",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.function": 3,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.telegram": 4,
        "n8n-nodes-base.nocoDb": 4,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 1583 processes using function, merge, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.938087"
    },
    {
      "original_filename": "ops_1132_workflow_1132_automate_github_travisci.json",
      "workflow_name": "ops_1132_workflow_1132_automate_github_travisci",
      "suggested_filename": "ops_1132_workflow_1132_automate_github_travisci.json",
      "category": "OPS",
      "business_function": "1132",
      "key_integrations": [
        "githubTrigger",
        "if",
        "travisCi"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.githubTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.travisCi": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 1132 processes using githubTrigger, if, travisCi",
      "analysis_timestamp": "2025-06-01T16:06:48.938337"
    },
    {
      "original_filename": "ai_autonomous_ai_process_supabase_removeduplicates.json",
      "workflow_name": "ai_autonomous_ai_process_supabase_removeduplicates",
      "suggested_filename": "ai_autonomous_ai_process_supabase_removeduplicates.json",
      "category": "AI",
      "business_function": "autonomous",
      "key_integrations": [
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "set",
        "manualTrigger",
        "supabase",
        "merge",
        "markdown",
        "stickyNote",
        "html"
      ],
      "trigger_type": "chat",
      "complexity_score": 38,
      "complexity": "High",
      "total_nodes": 38,
      "node_types": {
        "@n8n/n8n-nodes-langchain.toolWorkflow": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.set": 10,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.supabase": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates autonomous processes using @n8n/langchain.toolWorkflow, @n8n/langchain.lmChatOpenAi, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.938890"
    },
    {
      "original_filename": "util_assign_automate_manual.json",
      "workflow_name": "Assign values to variables using the Set node",
      "suggested_filename": "util_assign_automate_manual.json",
      "category": "UTIL",
      "business_function": "assign",
      "key_integrations": [
        "manualTrigger",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates assign processes using manualTrigger, set",
      "analysis_timestamp": "2025-06-01T16:06:48.939175"
    },
    {
      "original_filename": "biz_receive_update_pipedrive.json",
      "workflow_name": "Receive updates for all changes in Pipedrive",
      "suggested_filename": "biz_receive_update_pipedrive.json",
      "category": "BIZ",
      "business_function": "receive",
      "key_integrations": [
        "pipedriveTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.pipedriveTrigger": 1
      },
      "business_value": "Automates receive processes using pipedriveTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.939375"
    },
    {
      "original_filename": "util_google_automate_datetime_googlecalendar_cron.json",
      "workflow_name": "Google Cal to Zoom meeting",
      "suggested_filename": "util_google_automate_datetime_googlecalendar_cron.json",
      "category": "UTIL",
      "business_function": "google",
      "key_integrations": [
        "manualTrigger",
        "zoom",
        "dateTime",
        "googleCalendar",
        "if",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.zoom": 1,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.googleCalendar": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates google processes using manualTrigger, zoom, dateTime",
      "analysis_timestamp": "2025-06-01T16:06:48.939675"
    },
    {
      "original_filename": "biz_1296_workflow_1296_automate_hubspot_hubspot.json",
      "workflow_name": "biz_1296_workflow_1296_automate_hubspot_hubspot",
      "suggested_filename": "biz_1296_workflow_1296_automate_hubspot_hubspot.json",
      "category": "BIZ",
      "business_function": "1296",
      "key_integrations": [
        "clearbit",
        "hubspotTrigger",
        "hubspot"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.clearbit": 1,
        "n8n-nodes-base.hubspotTrigger": 1,
        "n8n-nodes-base.hubspot": 2
      },
      "business_value": "Automates 1296 processes using clearbit, hubspotTrigger, hubspot",
      "analysis_timestamp": "2025-06-01T16:06:48.939900"
    },
    {
      "original_filename": "ai_2579_workflow_2579_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "workflow_name": "ai_2579_workflow_2579_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput",
      "suggested_filename": "ai_2579_workflow_2579_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "2579",
      "key_integrations": [
        "extractFromFile",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "formTrigger",
        "airtable",
        "@n8n/langchain.textClassifier",
        "httpRequest",
        "form",
        "stickyNote",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.formTrigger": 2,
        "n8n-nodes-base.airtable": 2,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.form": 4,
        "n8n-nodes-base.stickyNote": 8,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates 2579 processes using extractFromFile, @n8n/langchain.lmChatOpenAi, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.940380"
    },
    {
      "original_filename": "ai_powered_ai_process_n8nnodeslangchainchainsummarization_schedule_cron_2.json",
      "workflow_name": "ai_powered_ai_process_n8nnodeslangchainchainsummarization_schedule_cron_2",
      "suggested_filename": "ai_powered_ai_process_n8nnodeslangchainchainsummarization_schedule_cron_2.json",
      "category": "AI",
      "business_function": "powered",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "scheduleTrigger",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.openAi",
        "telegram",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 3,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.telegram": 3,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates powered processes using @n8n/langchain.lmChatOpenAi, scheduleTrigger, @n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
      "analysis_timestamp": "2025-06-01T16:06:48.940773"
    },
    {
      "original_filename": "comm_keep_automate_splitinbatches_schedule_cron.json",
      "workflow_name": "Keep discord clean",
      "suggested_filename": "comm_keep_automate_splitinbatches_schedule_cron.json",
      "category": "COMM",
      "business_function": "keep",
      "key_integrations": [
        "splitInBatches",
        "scheduleTrigger",
        "stickyNote",
        "wait",
        "discord",
        "filter"
      ],
      "trigger_type": "cron",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.wait": 3,
        "n8n-nodes-base.discord": 3,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates keep processes using splitInBatches, scheduleTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.941137"
    },
    {
      "original_filename": "ai_qualify_ai_process_pipedrive_gmail.json",
      "workflow_name": "ai_qualify_ai_process_pipedrive_gmail",
      "suggested_filename": "ai_qualify_ai_process_pipedrive_gmail.json",
      "category": "AI",
      "business_function": "qualify",
      "key_integrations": [
        "pipedrive",
        "if",
        "openAi",
        "set",
        "code",
        "gmailTrigger",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.pipedrive": 3,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.gmailTrigger": 2,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates qualify processes using pipedrive, if, openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.941417"
    },
    {
      "original_filename": "data_2550_workflow_2550_automate_crypto_emailsend.json",
      "workflow_name": "data_2550_workflow_2550_automate_crypto_emailsend",
      "suggested_filename": "data_2550_workflow_2550_automate_crypto_emailsend.json",
      "category": "DATA",
      "business_function": "2550",
      "key_integrations": [
        "googleSheets",
        "set",
        "emailSend",
        "form",
        "stickyNote",
        "if",
        "merge",
        "crypto",
        "formTrigger"
      ],
      "trigger_type": "email",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.form": 3,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.crypto": 1,
        "n8n-nodes-base.formTrigger": 1
      },
      "business_value": "Automates 2550 processes using googleSheets, set, emailSend",
      "analysis_timestamp": "2025-06-01T16:06:48.941902"
    },
    {
      "original_filename": "ai_stock_report_splitinbatches_n8nnodeslangchainvectorstore_2.json",
      "workflow_name": "RAG Workflow For Stock Earnings Report Analysis",
      "suggested_filename": "ai_stock_report_splitinbatches_n8nnodeslangchainvectorstore_2.json",
      "category": "AI",
      "business_function": "stock",
      "key_integrations": [
        "@n8n/langchain.vectorStorePinecone",
        "@n8n/langchain.embeddingsGoogleGemini",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "splitInBatches",
        "manualTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.toolVectorStore",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 2,
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.googleDocs": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates stock processes using @n8n/langchain.vectorStorePinecone, @n8n/langchain.embeddingsGoogleGemini, @n8n/langchain.documentDefaultDataLoader",
      "analysis_timestamp": "2025-06-01T16:06:48.942301"
    },
    {
      "original_filename": "data_notion_automate_httprequest_linkedin_cron.json",
      "workflow_name": "Notion to Linkedin",
      "suggested_filename": "data_notion_automate_httprequest_linkedin_cron.json",
      "category": "DATA",
      "business_function": "notion",
      "key_integrations": [
        "merge",
        "stickyNote",
        "scheduleTrigger",
        "notion",
        "aggregate",
        "code",
        "httpRequest",
        "linkedIn"
      ],
      "trigger_type": "cron",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.notion": 3,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.linkedIn": 1
      },
      "business_value": "Automates notion processes using merge, stickyNote, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.942596"
    },
    {
      "original_filename": "ai_generate_generate_splitinbatches_postgres_cron_1.json",
      "workflow_name": "Generate Instagram Content from Top Trends with AI Image Generation",
      "suggested_filename": "ai_generate_generate_splitinbatches_postgres_cron_1.json",
      "category": "AI",
      "business_function": "generate",
      "key_integrations": [
        "if",
        "telegram",
        "splitInBatches",
        "scheduleTrigger",
        "set",
        "stickyNote",
        "code",
        "httpRequest",
        "merge",
        "postgres"
      ],
      "trigger_type": "cron",
      "complexity_score": 44,
      "complexity": "High",
      "total_nodes": 44,
      "node_types": {
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.telegram": 4,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.stickyNote": 17,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.postgres": 2,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.facebookGraphApi": 4
      },
      "business_value": "Automates generate processes using if, telegram, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.943106"
    },
    {
      "original_filename": "util_clone_automate_splitinbatches_httprequest.json",
      "workflow_name": "Clone n8n Workflows between Instances using n8n API",
      "suggested_filename": "util_clone_automate_splitinbatches_httprequest.json",
      "category": "UTIL",
      "business_function": "clone",
      "key_integrations": [
        "manualTrigger",
        "n8n",
        "httpRequest",
        "set",
        "splitInBatches",
        "stickyNote",
        "code",
        "splitOut",
        "merge",
        "filter"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.n8n": 3,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.splitOut": 3,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates clone processes using manualTrigger, n8n, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.943471"
    },
    {
      "original_filename": "util_566_workflow_566_automate_manual_microsoftexcel.json",
      "workflow_name": "util_566_workflow_566_automate_manual_microsoftexcel",
      "suggested_filename": "util_566_workflow_566_automate_manual_microsoftexcel.json",
      "category": "UTIL",
      "business_function": "566",
      "key_integrations": [
        "manualTrigger",
        "microsoftExcel"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.microsoftExcel": 1
      },
      "business_value": "Automates 566 processes using manualTrigger, microsoftExcel",
      "analysis_timestamp": "2025-06-01T16:06:48.943727"
    },
    {
      "original_filename": "ai_errors_ai_process_error_postgres.json",
      "workflow_name": "Log errors and avoid sending too many emails",
      "suggested_filename": "ai_errors_ai_process_error_postgres.json",
      "category": "AI",
      "business_function": "errors",
      "key_integrations": [
        "errorTrigger",
        "postgres",
        "stickyNote",
        "emailSend",
        "pushover",
        "manualTrigger",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "if",
        "code"
      ],
      "trigger_type": "email",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.errorTrigger": 1,
        "n8n-nodes-base.postgres": 3,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.emailSend": 2,
        "n8n-nodes-base.pushover": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates errors processes using errorTrigger, postgres, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.944099"
    },
    {
      "original_filename": "ai_invoice_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr_1.json",
      "workflow_name": "ai_invoice_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr_1",
      "suggested_filename": "ai_invoice_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr_1.json",
      "category": "AI",
      "business_function": "invoice",
      "key_integrations": [
        "@n8n/langchain.lmOpenAi",
        "@n8n/langchain.outputParserStructured",
        "httpRequest",
        "stickyNote",
        "gmailTrigger",
        "googleSheets",
        "wait",
        "switch",
        "gmail",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates invoice processes using @n8n/langchain.lmOpenAi, @n8n/langchain.outputParserStructured, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.944674"
    },
    {
      "original_filename": "comm_3366_workflow_3366_automate_crypto_gmail_cron.json",
      "workflow_name": "comm_3366_workflow_3366_automate_crypto_gmail_cron",
      "suggested_filename": "comm_3366_workflow_3366_automate_crypto_gmail_cron.json",
      "category": "COMM",
      "business_function": "3366",
      "key_integrations": [
        "scheduleTrigger",
        "crypto",
        "gmail",
        "markdown",
        "set",
        "removeDuplicates",
        "googleSheets",
        "stickyNote",
        "httpRequest",
        "html"
      ],
      "trigger_type": "cron",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.crypto": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.googleDrive": 1
      },
      "business_value": "Automates 3366 processes using scheduleTrigger, crypto, gmail",
      "analysis_timestamp": "2025-06-01T16:06:48.945042"
    },
    {
      "original_filename": "data_3032_workflow_3032_automate_splitinbatches_gong.json",
      "workflow_name": "data_3032_workflow_3032_automate_splitinbatches_gong",
      "suggested_filename": "data_3032_workflow_3032_automate_splitinbatches_gong.json",
      "category": "DATA",
      "business_function": "3032",
      "key_integrations": [
        "manualTrigger",
        "gong",
        "stickyNote",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "aggregate",
        "googleSheets",
        "set",
        "notion",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.gong": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.executeWorkflow": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.aggregate": 4,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.notion": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.compareDatasets": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 3032 processes using manualTrigger, gong, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.945400"
    },
    {
      "original_filename": "ai_ultimate_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "workflow_name": "⚡📽️ Ultimate AI-Powered Chatbot for YouTube Summarization & Analysis",
      "suggested_filename": "ai_ultimate_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ultimate",
      "key_integrations": [
        "code",
        "executeWorkflowTrigger",
        "@n8n/langchain.chatTrigger",
        "stickyNote",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.agent",
        "splitOut",
        "summarize",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.stickyNote": 13,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.summarize": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1
      },
      "business_value": "Automates ultimate processes using code, executeWorkflowTrigger, @n8n/langchain.chatTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.945811"
    },
    {
      "original_filename": "comm_bitrix24_automate_httprequest_webhook_webhook_1.json",
      "workflow_name": "Bitrix24 Chatbot Application Workflow example with Webhook Integration",
      "suggested_filename": "comm_bitrix24_automate_httprequest_webhook_webhook_1.json",
      "category": "COMM",
      "business_function": "bitrix24",
      "key_integrations": [
        "webhook",
        "set",
        "if",
        "switch",
        "function",
        "httpRequest",
        "respondToWebhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.function": 3,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.respondToWebhook": 2
      },
      "business_value": "Automates bitrix24 processes using webhook, set, if",
      "analysis_timestamp": "2025-06-01T16:06:48.946203"
    },
    {
      "original_filename": "ai_youtube_automate_gmail_httprequest.json",
      "workflow_name": "🎦🚀 YouTube Video Comment Analysis Agent",
      "suggested_filename": "ai_youtube_automate_gmail_httprequest.json",
      "category": "AI",
      "business_function": "youtube",
      "key_integrations": [
        "executeWorkflowTrigger",
        "stickyNote",
        "code",
        "httpRequest",
        "merge",
        "aggregate",
        "set",
        "summarize",
        "splitOut",
        "manualTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.summarize": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.gmail": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.markdown": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.googleDrive": 1
      },
      "business_value": "Automates youtube processes using executeWorkflowTrigger, stickyNote, code",
      "analysis_timestamp": "2025-06-01T16:06:48.946652"
    },
    {
      "original_filename": "ai_receive_ai_process_airtable_mattermost.json",
      "workflow_name": "Receive a Mattermost message when new data gets added to Airtable",
      "suggested_filename": "ai_receive_ai_process_airtable_mattermost.json",
      "category": "AI",
      "business_function": "receive",
      "key_integrations": [
        "airtableTrigger",
        "mattermost"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.airtableTrigger": 1,
        "n8n-nodes-base.mattermost": 1
      },
      "business_value": "Automates receive processes using airtableTrigger, mattermost",
      "analysis_timestamp": "2025-06-01T16:06:48.946886"
    },
    {
      "original_filename": "ai_airtable_ai_process_markdown_webhook_webhook.json",
      "workflow_name": "Airtable markdown to html",
      "suggested_filename": "ai_airtable_ai_process_markdown_webhook_webhook.json",
      "category": "AI",
      "business_function": "airtable",
      "key_integrations": [
        "if",
        "airtable",
        "markdown",
        "webhook",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.airtable": 4,
        "n8n-nodes-base.markdown": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates airtable processes using if, airtable, markdown",
      "analysis_timestamp": "2025-06-01T16:06:48.947450"
    },
    {
      "original_filename": "ai_subscriber_ai_process_sendy_manual.json",
      "workflow_name": "Add a subscriber to a list and create and send a campaign",
      "suggested_filename": "ai_subscriber_ai_process_sendy_manual.json",
      "category": "AI",
      "business_function": "subscriber",
      "key_integrations": [
        "manualTrigger",
        "sendy"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.sendy": 2
      },
      "business_value": "Automates subscriber processes using manualTrigger, sendy",
      "analysis_timestamp": "2025-06-01T16:06:48.947795"
    },
    {
      "original_filename": "util_turn_automate_manual_philipshue.json",
      "workflow_name": "Turn on a light and set its brightness",
      "suggested_filename": "util_turn_automate_manual_philipshue.json",
      "category": "UTIL",
      "business_function": "turn",
      "key_integrations": [
        "manualTrigger",
        "philipsHue"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.philipsHue": 1
      },
      "business_value": "Automates turn processes using manualTrigger, philipsHue",
      "analysis_timestamp": "2025-06-01T16:06:48.947982"
    },
    {
      "original_filename": "ai_google_automate_schedule_googlecalendar_cron.json",
      "workflow_name": "Google Calendar Event Reminder",
      "suggested_filename": "ai_google_automate_schedule_googlecalendar_cron.json",
      "category": "AI",
      "business_function": "google",
      "key_integrations": [
        "scheduleTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "googleCalendar",
        "removeDuplicates",
        "@n8n/langchain.agent",
        "telegram",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.googleCalendar": 1,
        "n8n-nodes-base.removeDuplicates": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates google processes using scheduleTrigger, @n8n/langchain.lmChatOpenAi, googleCalendar",
      "analysis_timestamp": "2025-06-01T16:06:48.948331"
    },
    {
      "original_filename": "util_update_update_start_httprequest.json",
      "workflow_name": "util_update_update_start_httprequest",
      "suggested_filename": "util_update_update_start_httprequest.json",
      "category": "UTIL",
      "business_function": "update",
      "key_integrations": [
        "manualTrigger",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.start": 1,
        "n8n-nodes-base.httpRequest": 2
      },
      "business_value": "Automates update processes using manualTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.948458"
    },
    {
      "original_filename": "util_flux_automate_httprequest_webhook_webhook_1.json",
      "workflow_name": "FLUX-fill standalone",
      "suggested_filename": "util_flux_automate_httprequest_webhook_webhook_1.json",
      "category": "UTIL",
      "business_function": "flux",
      "key_integrations": [
        "merge",
        "respondToWebhook",
        "wait",
        "if",
        "stickyNote",
        "httpRequest",
        "set",
        "webhook",
        "html"
      ],
      "trigger_type": "webhook",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates flux processes using merge, respondToWebhook, wait",
      "analysis_timestamp": "2025-06-01T16:06:48.948816"
    },
    {
      "original_filename": "comm_3464_workflow_3464_automate_splitinbatches_gmail.json",
      "workflow_name": "comm_3464_workflow_3464_automate_splitinbatches_gmail",
      "suggested_filename": "comm_3464_workflow_3464_automate_splitinbatches_gmail.json",
      "category": "COMM",
      "business_function": "3464",
      "key_integrations": [
        "googleDrive",
        "if",
        "gmailTrigger",
        "gmail",
        "function",
        "stickyNote",
        "set",
        "splitInBatches",
        "googleSheets"
      ],
      "trigger_type": "manual",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.googleDrive": 5,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates 3464 processes using googleDrive, if, gmailTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.949277"
    },
    {
      "original_filename": "data_2409_workflow_2409_automate_emailsend_pushover_cron.json",
      "workflow_name": "data_2409_workflow_2409_automate_emailsend_pushover_cron",
      "suggested_filename": "data_2409_workflow_2409_automate_emailsend_pushover_cron.json",
      "category": "DATA",
      "business_function": "2409",
      "key_integrations": [
        "manualTrigger",
        "notion",
        "sort",
        "filter",
        "emailSend",
        "html",
        "aggregate",
        "pushover",
        "scheduleTrigger",
        "if"
      ],
      "trigger_type": "email",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.html": 4,
        "n8n-nodes-base.aggregate": 3,
        "n8n-nodes-base.pushover": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 2409 processes using manualTrigger, notion, sort",
      "analysis_timestamp": "2025-06-01T16:06:48.949685"
    },
    {
      "original_filename": "ai_2139_workflow_2139_automate_schedule_manual_cron.json",
      "workflow_name": "ai_2139_workflow_2139_automate_schedule_manual_cron",
      "suggested_filename": "ai_2139_workflow_2139_automate_schedule_manual_cron.json",
      "category": "AI",
      "business_function": "2139",
      "key_integrations": [
        "stickyNote",
        "twitter",
        "scheduleTrigger",
        "manualTrigger",
        "if",
        "@n8n/langchain.openAi",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 2139 processes using stickyNote, twitter, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.949962"
    },
    {
      "original_filename": "comm_2121_workflow_2121_automate_httprequest_hunter.json",
      "workflow_name": "comm_2121_workflow_2121_automate_httprequest_hunter",
      "suggested_filename": "comm_2121_workflow_2121_automate_httprequest_hunter.json",
      "category": "COMM",
      "business_function": "2121",
      "key_integrations": [
        "formTrigger",
        "if",
        "stickyNote",
        "httpRequest",
        "hunter",
        "telegram"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.hunter": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates 2121 processes using formTrigger, if, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.950281"
    },
    {
      "original_filename": "util_545_workflow_545_automate_bannerbear_manual.json",
      "workflow_name": "util_545_workflow_545_automate_bannerbear_manual",
      "suggested_filename": "util_545_workflow_545_automate_bannerbear_manual.json",
      "category": "UTIL",
      "business_function": "545",
      "key_integrations": [
        "manualTrigger",
        "bannerbear"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.bannerbear": 1
      },
      "business_value": "Automates 545 processes using manualTrigger, bannerbear",
      "analysis_timestamp": "2025-06-01T16:06:48.950495"
    },
    {
      "original_filename": "data_2034_workflow_2034_automate_httprequest_webhook_webhook.json",
      "workflow_name": "data_2034_workflow_2034_automate_httprequest_webhook_webhook",
      "suggested_filename": "data_2034_workflow_2034_automate_httprequest_webhook_webhook.json",
      "category": "DATA",
      "business_function": "2034",
      "key_integrations": [
        "mySql",
        "webhook",
        "code",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.mySql": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 2034 processes using mySql, webhook, code",
      "analysis_timestamp": "2025-06-01T16:06:48.950743"
    },
    {
      "original_filename": "util_575_workflow_575_automate_datetime_manual.json",
      "workflow_name": "util_575_workflow_575_automate_datetime_manual",
      "suggested_filename": "util_575_workflow_575_automate_datetime_manual.json",
      "category": "UTIL",
      "business_function": "575",
      "key_integrations": [
        "manualTrigger",
        "dateTime"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.dateTime": 1
      },
      "business_value": "Automates 575 processes using manualTrigger, dateTime",
      "analysis_timestamp": "2025-06-01T16:06:48.950939"
    },
    {
      "original_filename": "comm_1324_workflow_1324_automate_slack_dropcontact.json",
      "workflow_name": "comm_1324_workflow_1324_automate_slack_dropcontact",
      "suggested_filename": "comm_1324_workflow_1324_automate_slack_dropcontact.json",
      "category": "COMM",
      "business_function": "1324",
      "key_integrations": [
        "typeformTrigger",
        "slack",
        "airtable",
        "set",
        "dropcontact",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.slack": 2,
        "n8n-nodes-base.airtable": 3,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.dropcontact": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 1324 processes using typeformTrigger, slack, airtable",
      "analysis_timestamp": "2025-06-01T16:06:48.951232"
    },
    {
      "original_filename": "ai_bitrix24_automate_n8nnodeslangchainchainretrievalqa_httprequest_webhook.json",
      "workflow_name": "Bitrix24 Open Chanel RAG Chatbot Application Workflow example with Webhook Integration",
      "suggested_filename": "ai_bitrix24_automate_n8nnodeslangchainchainretrievalqa_httprequest_webhook.json",
      "category": "AI",
      "business_function": "bitrix24",
      "key_integrations": [
        "webhook",
        "set",
        "if",
        "switch",
        "function",
        "httpRequest",
        "respondToWebhook",
        "merge",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "trigger_type": "webhook",
      "complexity_score": 34,
      "complexity": "High",
      "total_nodes": 34,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.function": 3,
        "n8n-nodes-base.httpRequest": 8,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOllama": 2,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.executeWorkflow": 1
      },
      "business_value": "Automates bitrix24 processes using webhook, set, if",
      "analysis_timestamp": "2025-06-01T16:06:48.951640"
    },
    {
      "original_filename": "util_x2vuvhqv1ytjcin0_workflow_x2vuvhqv1ytjcin0_automate_httprequest_graphql_web.json",
      "workflow_name": "util_x2vuvhqv1ytjcin0_workflow_x2vuvhqv1ytjcin0_automate_httprequest_graphql_web",
      "suggested_filename": "util_x2vuvhqv1ytjcin0_workflow_x2vuvhqv1ytjcin0_automate_httprequest_graphql_web.json",
      "category": "UTIL",
      "business_function": "x2vuvhqv1ytjcin0",
      "key_integrations": [
        "httpRequest",
        "graphql",
        "set",
        "webhook",
        "if",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.graphql": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates x2vuvhqv1ytjcin0 processes using httpRequest, graphql, set",
      "analysis_timestamp": "2025-06-01T16:06:48.951942"
    },
    {
      "original_filename": "ai_generate_generate_n8nnodeslangchainlmchatanthropic_n8nnodeslangchainagent.json",
      "workflow_name": "ai_generate_generate_n8nnodeslangchainlmchatanthropic_n8nnodeslangchainagent",
      "suggested_filename": "ai_generate_generate_n8nnodeslangchainlmchatanthropic_n8nnodeslangchainagent.json",
      "category": "AI",
      "business_function": "generate",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.lmChatAnthropic",
        "splitOut",
        "set",
        "aggregate",
        "@n8n/langchain.agent",
        "manualTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.stickyNote": 8,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates generate processes using stickyNote, @n8n/langchain.lmChatAnthropic, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.952224"
    },
    {
      "original_filename": "ai_daily_ai_process_functionitem_telegram_cron.json",
      "workflow_name": "Daily Journal Reminder",
      "suggested_filename": "ai_daily_ai_process_functionitem_telegram_cron.json",
      "category": "AI",
      "business_function": "daily",
      "key_integrations": [
        "cron",
        "functionItem",
        "telegram"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates daily processes using cron, functionItem, telegram",
      "analysis_timestamp": "2025-06-01T16:06:48.952429"
    },
    {
      "original_filename": "ai_selenium_extract_httprequest_webhook_webhook_2.json",
      "workflow_name": "Selenium Ultimate Scraper Workflow",
      "suggested_filename": "ai_selenium_extract_httprequest_webhook_webhook_2.json",
      "category": "AI",
      "business_function": "selenium",
      "key_integrations": [
        "html",
        "@n8n/langchain.lmChatOpenAi",
        "httpRequest",
        "if",
        "limit",
        "respondToWebhook",
        "code",
        "@n8n/langchain.informationExtractor",
        "convertToFile",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 63,
      "complexity": "High",
      "total_nodes": 63,
      "node_types": {
        "n8n-nodes-base.html": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "n8n-nodes-base.httpRequest": 23,
        "n8n-nodes-base.if": 8,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.respondToWebhook": 9,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 3,
        "n8n-nodes-base.convertToFile": 3,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates selenium processes using html, @n8n/langchain.lmChatOpenAi, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.953008"
    },
    {
      "original_filename": "biz_2136_workflow_2136_automate_pipedrive_hunter.json",
      "workflow_name": "biz_2136_workflow_2136_automate_pipedrive_hunter",
      "suggested_filename": "biz_2136_workflow_2136_automate_pipedrive_hunter.json",
      "category": "BIZ",
      "business_function": "2136",
      "key_integrations": [
        "stickyNote",
        "formTrigger",
        "if",
        "hunter",
        "clearbit",
        "pipedrive"
      ],
      "trigger_type": "manual",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.hunter": 1,
        "n8n-nodes-base.clearbit": 1,
        "n8n-nodes-base.pipedrive": 5
      },
      "business_value": "Automates 2136 processes using stickyNote, formTrigger, if",
      "analysis_timestamp": "2025-06-01T16:06:48.953412"
    },
    {
      "original_filename": "ai_give_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchainllm.json",
      "workflow_name": "🧠 Give Your AI Agent Chatbot Long Term Memory Tools Router",
      "suggested_filename": "ai_give_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "give",
      "key_integrations": [
        "executeWorkflowTrigger",
        "googleDocs",
        "set",
        "telegram",
        "gmail",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 39,
      "complexity": "High",
      "total_nodes": 39,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.googleDocs": 4,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.gmail": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 4,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "n8n-nodes-base.stickyNote": 17,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates give processes using executeWorkflowTrigger, googleDocs, set",
      "analysis_timestamp": "2025-06-01T16:06:48.953842"
    },
    {
      "original_filename": "util_959_workflow_959_automate_raindrop.json",
      "workflow_name": "util_959_workflow_959_automate_raindrop",
      "suggested_filename": "util_959_workflow_959_automate_raindrop.json",
      "category": "UTIL",
      "business_function": "959",
      "key_integrations": [
        "raindrop"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.raindrop": 4
      },
      "business_value": "Automates 959 processes using raindrop",
      "analysis_timestamp": "2025-06-01T16:06:48.953988"
    },
    {
      "original_filename": "ai_opensea_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainhttpreq_1.json",
      "workflow_name": "OpenSea Analytics Agent Tool",
      "suggested_filename": "ai_opensea_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainhttpreq_1.json",
      "category": "AI",
      "business_function": "opensea",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolHttpRequest",
        "@n8n/langchain.agent",
        "executeWorkflowTrigger",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 5,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates opensea processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow, @n8n/langchain.toolHttpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.954356"
    },
    {
      "original_filename": "ai_vector_automate_splitinbatches_schedule_cron.json",
      "workflow_name": "Vector DB Loader from Google Drive",
      "suggested_filename": "ai_vector_automate_splitinbatches_schedule_cron.json",
      "category": "AI",
      "business_function": "vector",
      "key_integrations": [
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.vectorStorePGVector",
        "manualTrigger",
        "splitInBatches",
        "googleDrive",
        "scheduleTrigger",
        "stickyNote",
        "switch"
      ],
      "trigger_type": "cron",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePGVector": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.googleDrive": 3,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.extractFromFile": 3
      },
      "business_value": "Automates vector processes using @n8n/langchain.documentDefaultDataLoader, @n8n/langchain.textSplitterRecursiveCharacterTextSplitter, @n8n/langchain.embeddingsOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.954678"
    },
    {
      "original_filename": "util_receive_update_asana.json",
      "workflow_name": "Receive updates when an event occurs in Asana",
      "suggested_filename": "util_receive_update_asana.json",
      "category": "UTIL",
      "business_function": "receive",
      "key_integrations": [
        "asanaTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.asanaTrigger": 1
      },
      "business_value": "Automates receive processes using asanaTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.954895"
    },
    {
      "original_filename": "util_1005_workflow_1005_automate_plivo_openweathermap_cron.json",
      "workflow_name": "util_1005_workflow_1005_automate_plivo_openweathermap_cron",
      "suggested_filename": "util_1005_workflow_1005_automate_plivo_openweathermap_cron.json",
      "category": "UTIL",
      "business_function": "1005",
      "key_integrations": [
        "plivo",
        "openWeatherMap",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.plivo": 1,
        "n8n-nodes-base.openWeatherMap": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates 1005 processes using plivo, openWeatherMap, cron",
      "analysis_timestamp": "2025-06-01T16:06:48.955131"
    },
    {
      "original_filename": "util_1250_workflow_1250_automate_spreadsheetfile_itemlists.json",
      "workflow_name": "util_1250_workflow_1250_automate_spreadsheetfile_itemlists",
      "suggested_filename": "util_1250_workflow_1250_automate_spreadsheetfile_itemlists.json",
      "category": "UTIL",
      "business_function": "1250",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "htmlExtract",
        "itemLists",
        "merge",
        "spreadsheetFile",
        "emailSend"
      ],
      "trigger_type": "email",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.htmlExtract": 1,
        "n8n-nodes-base.itemLists": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.emailSend": 1
      },
      "business_value": "Automates 1250 processes using manualTrigger, httpRequest, htmlExtract",
      "analysis_timestamp": "2025-06-01T16:06:48.955393"
    },
    {
      "original_filename": "util_920_workflow_920_automate_manual_securityscorecard.json",
      "workflow_name": "util_920_workflow_920_automate_manual_securityscorecard",
      "suggested_filename": "util_920_workflow_920_automate_manual_securityscorecard.json",
      "category": "UTIL",
      "business_function": "920",
      "key_integrations": [
        "manualTrigger",
        "securityScorecard"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.securityScorecard": 3
      },
      "business_value": "Automates 920 processes using manualTrigger, securityScorecard",
      "analysis_timestamp": "2025-06-01T16:06:48.955534"
    },
    {
      "original_filename": "data_automated_automate_webhook_googledrive_webhook.json",
      "workflow_name": "Automated Work Attendance with Location Triggers",
      "suggested_filename": "data_automated_automate_webhook_googledrive_webhook.json",
      "category": "DATA",
      "business_function": "automated",
      "key_integrations": [
        "webhook",
        "stickyNote",
        "googleDrive",
        "googleSheets",
        "code",
        "if",
        "set"
      ],
      "trigger_type": "webhook",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates automated processes using webhook, stickyNote, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.955881"
    },
    {
      "original_filename": "ai_2433_workflow_2433_automate_gmail_httprequest_cron.json",
      "workflow_name": "ai_2433_workflow_2433_automate_gmail_httprequest_cron",
      "suggested_filename": "ai_2433_workflow_2433_automate_gmail_httprequest_cron.json",
      "category": "AI",
      "business_function": "2433",
      "key_integrations": [
        "gmail",
        "httpRequest",
        "set",
        "splitOut",
        "code",
        "html",
        "stickyNote",
        "openAi",
        "scheduleTrigger",
        "wait"
      ],
      "trigger_type": "cron",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.httpRequest": 6,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 2433 processes using gmail, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.956253"
    },
    {
      "original_filename": "ai_conversion_automate_xml_manual.json",
      "workflow_name": "XML Conversion",
      "suggested_filename": "ai_conversion_automate_xml_manual.json",
      "category": "AI",
      "business_function": "conversion",
      "key_integrations": [
        "manualTrigger",
        "set",
        "xml"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.xml": 1
      },
      "business_value": "Automates conversion processes using manualTrigger, set, xml",
      "analysis_timestamp": "2025-06-01T16:06:48.956494"
    },
    {
      "original_filename": "ai_receive_ai_process_mailerlite_manual.json",
      "workflow_name": "Receive updates when a subscriber is added to a group and strore the information in Airtable",
      "suggested_filename": "ai_receive_ai_process_mailerlite_manual.json",
      "category": "AI",
      "business_function": "receive",
      "key_integrations": [
        "manualTrigger",
        "mailerLiteTrigger",
        "set",
        "airtable"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.mailerLiteTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtable": 1
      },
      "business_value": "Automates receive processes using manualTrigger, mailerLiteTrigger, set",
      "analysis_timestamp": "2025-06-01T16:06:48.956706"
    },
    {
      "original_filename": "ai_logo_ai_process_splitinbatches_crypto_1.json",
      "workflow_name": "AI Logo Sheet Extractor to Airtable",
      "suggested_filename": "ai_logo_ai_process_splitinbatches_crypto_1.json",
      "category": "AI",
      "business_function": "logo",
      "key_integrations": [
        "formTrigger",
        "@n8n/langchain.agent",
        "set",
        "@n8n/langchain.outputParserStructured",
        "airtable",
        "merge",
        "splitInBatches",
        "code",
        "stickyNote",
        "splitOut"
      ],
      "trigger_type": "chat",
      "complexity_score": 44,
      "complexity": "High",
      "total_nodes": 44,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.set": 6,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.airtable": 5,
        "n8n-nodes-base.merge": 5,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.code": 4,
        "n8n-nodes-base.stickyNote": 11,
        "n8n-nodes-base.splitOut": 3,
        "n8n-nodes-base.crypto": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.html": 1
      },
      "business_value": "Automates logo processes using formTrigger, @n8n/langchain.agent, set",
      "analysis_timestamp": "2025-06-01T16:06:48.957472"
    },
    {
      "original_filename": "comm_extranet_automate_slack_github.json",
      "workflow_name": "Extranet Releases",
      "suggested_filename": "comm_extranet_automate_slack_github.json",
      "category": "COMM",
      "business_function": "extranet",
      "key_integrations": [
        "slack",
        "githubTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.githubTrigger": 1
      },
      "business_value": "Automates extranet processes using slack, githubTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.957772"
    },
    {
      "original_filename": "util_3697_workflow_3697_automate_emailsend_httprequest_webhook.json",
      "workflow_name": "util_3697_workflow_3697_automate_emailsend_httprequest_webhook",
      "suggested_filename": "util_3697_workflow_3697_automate_emailsend_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "3697",
      "key_integrations": [
        "webhook",
        "switch",
        "httpRequest",
        "set",
        "wait",
        "code",
        "emailSend",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.stickyNote": 6
      },
      "business_value": "Automates 3697 processes using webhook, switch, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.958097"
    },
    {
      "original_filename": "util_966_workflow_966_automate_schedule_openweathermap_cron.json",
      "workflow_name": "util_966_workflow_966_automate_schedule_openweathermap_cron",
      "suggested_filename": "util_966_workflow_966_automate_schedule_openweathermap_cron.json",
      "category": "UTIL",
      "business_function": "966",
      "key_integrations": [
        "manualTrigger",
        "signl4",
        "openWeatherMap",
        "if",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.signl4": 1,
        "n8n-nodes-base.openWeatherMap": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates 966 processes using manualTrigger, signl4, openWeatherMap",
      "analysis_timestamp": "2025-06-01T16:06:48.958370"
    },
    {
      "original_filename": "ops_3635_workflow_3635_automate_httprequest_n8nnodeslangchainmcp.json",
      "workflow_name": "ops_3635_workflow_3635_automate_httprequest_n8nnodeslangchainmcp",
      "suggested_filename": "ops_3635_workflow_3635_automate_httprequest_n8nnodeslangchainmcp.json",
      "category": "OPS",
      "business_function": "3635",
      "key_integrations": [
        "executeWorkflowTrigger",
        "switch",
        "stickyNote",
        "@n8n/langchain.mcpTrigger",
        "@n8n/langchain.toolWorkflow",
        "set",
        "aggregate",
        "httpRequest",
        "github"
      ],
      "trigger_type": "manual",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.mcpTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 3,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.github": 3
      },
      "business_value": "Automates 3635 processes using executeWorkflowTrigger, switch, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.958772"
    },
    {
      "original_filename": "data_capture_automate_httprequest_readwritefile.json",
      "workflow_name": "Capture Website Screenshots with Bright Data Web Unlocker and Save to Disk",
      "suggested_filename": "data_capture_automate_httprequest_readwritefile.json",
      "category": "DATA",
      "business_function": "capture",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "readWriteFile",
        "httpRequest",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates capture processes using manualTrigger, stickyNote, readWriteFile",
      "analysis_timestamp": "2025-06-01T16:06:48.959068"
    },
    {
      "original_filename": "util_calculate_automate_webhook_respondtowebhook_webhook.json",
      "workflow_name": "Calculate the Centroid of a Set of Vectors",
      "suggested_filename": "util_calculate_automate_webhook_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "calculate",
      "key_integrations": [
        "webhook",
        "set",
        "code",
        "respondToWebhook",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates calculate processes using webhook, set, code",
      "analysis_timestamp": "2025-06-01T16:06:48.959398"
    },
    {
      "original_filename": "comm_1089_workflow_1089_automate_notion_mattermost.json",
      "workflow_name": "comm_1089_workflow_1089_automate_notion_mattermost",
      "suggested_filename": "comm_1089_workflow_1089_automate_notion_mattermost.json",
      "category": "COMM",
      "business_function": "1089",
      "key_integrations": [
        "notionTrigger",
        "if",
        "mattermost"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.notionTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.mattermost": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 1089 processes using notionTrigger, if, mattermost",
      "analysis_timestamp": "2025-06-01T16:06:48.959804"
    },
    {
      "original_filename": "util_translate_automate_form_extractfromfile.json",
      "workflow_name": "Translate",
      "suggested_filename": "util_translate_automate_form_extractfromfile.json",
      "category": "UTIL",
      "business_function": "translate",
      "key_integrations": [
        "splitOut",
        "googleTranslate",
        "aggregate",
        "set",
        "convertToFile",
        "code",
        "form",
        "formTrigger",
        "stickyNote",
        "extractFromFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleTranslate": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.code": 6,
        "n8n-nodes-base.form": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.extractFromFile": 1
      },
      "business_value": "Automates translate processes using splitOut, googleTranslate, aggregate",
      "analysis_timestamp": "2025-06-01T16:06:48.960276"
    },
    {
      "original_filename": "ai_effortless_ai_process_n8nnodeslangchainlmchatdeepseek_n8nnodeslangchaintextsp_2.json",
      "workflow_name": "Effortless Email Management with AI",
      "suggested_filename": "ai_effortless_ai_process_n8nnodeslangchainlmchatdeepseek_n8nnodeslangchaintextsp_2.json",
      "category": "AI",
      "business_function": "effortless",
      "key_integrations": [
        "emailReadImap",
        "markdown",
        "emailSend",
        "@n8n/langchain.vectorStoreQdrant",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "gmail",
        "@n8n/langchain.textClassifier"
      ],
      "trigger_type": "email",
      "complexity_score": 31,
      "complexity": "High",
      "total_nodes": 31,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.emailSend": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.gmail": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleDrive": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.stickyNote": 9,
        "@n8n/n8n-nodes-langchain.lmChatDeepSeek": 1
      },
      "business_value": "Automates effortless processes using emailReadImap, markdown, emailSend",
      "analysis_timestamp": "2025-06-01T16:06:48.960707"
    },
    {
      "original_filename": "util_2294_workflow_2294_automate_readwritefile_httprequest.json",
      "workflow_name": "util_2294_workflow_2294_automate_readwritefile_httprequest",
      "suggested_filename": "util_2294_workflow_2294_automate_readwritefile_httprequest.json",
      "category": "UTIL",
      "business_function": "2294",
      "key_integrations": [
        "manualTrigger",
        "readWriteFile",
        "stickyNote",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.httpRequest": 2
      },
      "business_value": "Automates 2294 processes using manualTrigger, readWriteFile, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.961007"
    },
    {
      "original_filename": "util_581_workflow_581_automate_manual.json",
      "workflow_name": "util_581_workflow_581_automate_manual",
      "suggested_filename": "util_581_workflow_581_automate_manual.json",
      "category": "UTIL",
      "business_function": "581",
      "key_integrations": [
        "manualTrigger",
        "function",
        "if",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 2
      },
      "business_value": "Automates 581 processes using manualTrigger, function, if",
      "analysis_timestamp": "2025-06-01T16:06:48.961153"
    },
    {
      "original_filename": "data_2_workflow_2_automate_postgres_writebinaryfile.json",
      "workflow_name": "data_2_workflow_2_automate_postgres_writebinaryfile",
      "suggested_filename": "data_2_workflow_2_automate_postgres_writebinaryfile.json",
      "category": "DATA",
      "business_function": "2",
      "key_integrations": [
        "postgres",
        "spreadsheetFile",
        "writeBinaryFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.postgres": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.writeBinaryFile": 1
      },
      "business_value": "Automates 2 processes using postgres, spreadsheetFile, writeBinaryFile",
      "analysis_timestamp": "2025-06-01T16:06:48.961280"
    },
    {
      "original_filename": "ai_classify_classify_linear_slack.json",
      "workflow_name": "ai_classify_classify_linear_slack",
      "suggested_filename": "ai_classify_classify_linear_slack.json",
      "category": "AI",
      "business_function": "classify",
      "key_integrations": [
        "linearTrigger",
        "filter",
        "stickyNote",
        "linear",
        "httpRequest",
        "set",
        "if",
        "slack",
        "merge",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.linearTrigger": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.linear": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates classify processes using linearTrigger, filter, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.961675"
    },
    {
      "original_filename": "comm_1599_workflow_1599_automate_interval_telegram.json",
      "workflow_name": "comm_1599_workflow_1599_automate_interval_telegram",
      "suggested_filename": "comm_1599_workflow_1599_automate_interval_telegram.json",
      "category": "COMM",
      "business_function": "1599",
      "key_integrations": [
        "set",
        "function",
        "interval",
        "youTube",
        "telegram"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.interval": 1,
        "n8n-nodes-base.youTube": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates 1599 processes using set, function, interval",
      "analysis_timestamp": "2025-06-01T16:06:48.961817"
    },
    {
      "original_filename": "ai_3020_workflow_3020_automate_n8nnodeslangchainchat_n8nnodeslangchainhttpreques.json",
      "workflow_name": "ai_3020_workflow_3020_automate_n8nnodeslangchainchat_n8nnodeslangchainhttpreques",
      "suggested_filename": "ai_3020_workflow_3020_automate_n8nnodeslangchainchat_n8nnodeslangchainhttpreques.json",
      "category": "AI",
      "business_function": "3020",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.toolHttpRequest",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.agent",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 3020 processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.chatTrigger, @n8n/langchain.toolHttpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.962080"
    },
    {
      "original_filename": "ecommerce_import_transfer_schedule_googlechat_cron.json",
      "workflow_name": "Import Odoo Product Images from Google Drive",
      "suggested_filename": "ecommerce_import_transfer_schedule_googlechat_cron.json",
      "category": "ECOMMERCE",
      "business_function": "import",
      "key_integrations": [
        "filter",
        "googleDrive",
        "code",
        "switch",
        "scheduleTrigger",
        "summarize",
        "googleChat",
        "odoo",
        "extractFromFile",
        "manualTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.googleDrive": 6,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.summarize": 1,
        "n8n-nodes-base.googleChat": 1,
        "n8n-nodes-base.odoo": 4,
        "n8n-nodes-base.extractFromFile": 2,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates import processes using filter, googleDrive, code",
      "analysis_timestamp": "2025-06-01T16:06:48.962423"
    },
    {
      "original_filename": "data_1110_workflow_1110_automate_htmlextract_httprequest_webhook.json",
      "workflow_name": "data_1110_workflow_1110_automate_htmlextract_httprequest_webhook",
      "suggested_filename": "data_1110_workflow_1110_automate_htmlextract_httprequest_webhook.json",
      "category": "DATA",
      "business_function": "1110",
      "key_integrations": [
        "webhook",
        "httpRequest",
        "if",
        "htmlExtract",
        "notion",
        "set"
      ],
      "trigger_type": "webhook",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.htmlExtract": 1,
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.set": 2
      },
      "business_value": "Automates 1110 processes using webhook, httpRequest, if",
      "analysis_timestamp": "2025-06-01T16:06:48.962682"
    },
    {
      "original_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "workflow_name": "RAG AI Agent with Milvus and Cohere",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.embeddingsCohere",
        "@n8n/langchain.chatTrigger",
        "googleDriveTrigger",
        "googleDrive",
        "@n8n/langchain.vectorStoreMilvus",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.embeddingsCohere": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreMilvus": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates agent processes using @n8n/langchain.documentDefaultDataLoader, @n8n/langchain.embeddingsCohere, @n8n/langchain.chatTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.963008"
    },
    {
      "original_filename": "util_receive_update_zendesk.json",
      "workflow_name": "Receive updates for support in Zendesk",
      "suggested_filename": "util_receive_update_zendesk.json",
      "category": "UTIL",
      "business_function": "receive",
      "key_integrations": [
        "zendeskTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.zendeskTrigger": 1
      },
      "business_value": "Automates receive processes using zendeskTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.963131"
    },
    {
      "original_filename": "ai_deduplicate_ai_process_gmail_httprequest_cron.json",
      "workflow_name": "ai_deduplicate_ai_process_gmail_httprequest_cron",
      "suggested_filename": "ai_deduplicate_ai_process_gmail_httprequest_cron.json",
      "category": "AI",
      "business_function": "deduplicate",
      "key_integrations": [
        "splitOut",
        "httpRequest",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.informationExtractor",
        "merge",
        "airtable",
        "removeDuplicates",
        "html",
        "scheduleTrigger",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.informationExtractor": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.airtable": 3,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.scheduleTrigger": 2,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates deduplicate processes using splitOut, httpRequest, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.963568"
    },
    {
      "original_filename": "ops_2652_workflow_2652_automate_splitinbatches_httprequest_cron.json",
      "workflow_name": "ops_2652_workflow_2652_automate_splitinbatches_httprequest_cron",
      "suggested_filename": "ops_2652_workflow_2652_automate_splitinbatches_httprequest_cron.json",
      "category": "OPS",
      "business_function": "2652",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "n8n",
        "set",
        "httpRequest",
        "if",
        "merge",
        "code",
        "switch",
        "github"
      ],
      "trigger_type": "cron",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.noOp": 3,
        "n8n-nodes-base.github": 3,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.executeWorkflow": 1
      },
      "business_value": "Automates 2652 processes using manualTrigger, stickyNote, n8n",
      "analysis_timestamp": "2025-06-01T16:06:48.964009"
    },
    {
      "original_filename": "ai_2374_workflow_2374_automate_executeworkflow_httprequest.json",
      "workflow_name": "ai_2374_workflow_2374_automate_executeworkflow_httprequest",
      "suggested_filename": "ai_2374_workflow_2374_automate_executeworkflow_httprequest.json",
      "category": "AI",
      "business_function": "2374",
      "key_integrations": [
        "manualTrigger",
        "hackerNews",
        "splitOut",
        "set",
        "@n8n/langchain.vectorStoreQdrant",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "httpRequest",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.hackerNews": 1,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.set": 5,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.httpRequest": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.stickyNote": 13,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1
      },
      "business_value": "Automates 2374 processes using manualTrigger, hackerNews, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.964624"
    },
    {
      "original_filename": "ai_2125_workflow_2125_automate_gmail_httprequest_cron.json",
      "workflow_name": "ai_2125_workflow_2125_automate_gmail_httprequest_cron",
      "suggested_filename": "ai_2125_workflow_2125_automate_gmail_httprequest_cron.json",
      "category": "AI",
      "business_function": "2125",
      "key_integrations": [
        "set",
        "scheduleTrigger",
        "googleCalendar",
        "splitOut",
        "httpRequest",
        "clearbit",
        "gmail",
        "merge",
        "html",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.googleCalendar": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.clearbit": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates 2125 processes using set, scheduleTrigger, googleCalendar",
      "analysis_timestamp": "2025-06-01T16:06:48.965096"
    },
    {
      "original_filename": "util_1892_workflow_1892_automate_webhook_n8n_webhook.json",
      "workflow_name": "util_1892_workflow_1892_automate_webhook_n8n_webhook",
      "suggested_filename": "util_1892_workflow_1892_automate_webhook_n8n_webhook.json",
      "category": "UTIL",
      "business_function": "1892",
      "key_integrations": [
        "stickyNote",
        "n8n",
        "webhook",
        "code",
        "html",
        "respondToWebhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.respondToWebhook": 1
      },
      "business_value": "Automates 1892 processes using stickyNote, n8n, webhook",
      "analysis_timestamp": "2025-06-01T16:06:48.965508"
    },
    {
      "original_filename": "ai_create_ai_process_httprequest_n8nnodeslangchainopenai.json",
      "workflow_name": "ai_create_ai_process_httprequest_n8nnodeslangchainopenai",
      "suggested_filename": "ai_create_ai_process_httprequest_n8nnodeslangchainopenai.json",
      "category": "AI",
      "business_function": "create",
      "key_integrations": [
        "httpRequest",
        "splitOut",
        "emailReadImap",
        "set",
        "@n8n/langchain.openAi",
        "filter",
        "stickyNote"
      ],
      "trigger_type": "email",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates create processes using httpRequest, splitOut, emailReadImap",
      "analysis_timestamp": "2025-06-01T16:06:48.965864"
    },
    {
      "original_filename": "ai_travel_automate_n8nnodeslangchainmemorymongodbchat_n8nnodeslangchainchat_webh.json",
      "workflow_name": "Travel AssistantAgent",
      "suggested_filename": "ai_travel_automate_n8nnodeslangchainmemorymongodbchat_n8nnodeslangchainchat_webh.json",
      "category": "AI",
      "business_function": "travel",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.memoryMongoDbChat",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.vectorStoreMongoDBAtlas",
        "@n8n/langchain.embeddingsOpenAi",
        "stickyNote",
        "@n8n/langchain.agent",
        "webhook",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.memoryMongoDbChat": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreMongoDBAtlas": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1
      },
      "business_value": "Automates travel processes using @n8n/langchain.chatTrigger, @n8n/langchain.memoryMongoDbChat, @n8n/langchain.lmChatGoogleGemini",
      "analysis_timestamp": "2025-06-01T16:06:48.966172"
    },
    {
      "original_filename": "biz_628_workflow_628_automate_hubspot.json",
      "workflow_name": "biz_628_workflow_628_automate_hubspot",
      "suggested_filename": "biz_628_workflow_628_automate_hubspot.json",
      "category": "BIZ",
      "business_function": "628",
      "key_integrations": [
        "hubspotTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.hubspotTrigger": 1
      },
      "business_value": "Automates 628 processes using hubspotTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.966395"
    },
    {
      "original_filename": "ai_powered_ai_process_n8nnodeslangchainmemorybufferwindow_whatsapp.json",
      "workflow_name": "AI-Powered WhatsApp Chatbot for Text, Voice, Images & PDFs",
      "suggested_filename": "ai_powered_ai_process_n8nnodeslangchainmemorybufferwindow_whatsapp.json",
      "category": "AI",
      "business_function": "powered",
      "key_integrations": [
        "whatsAppTrigger",
        "httpRequest",
        "@n8n/langchain.openAi",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.agent",
        "extractFromFile",
        "@n8n/langchain.memoryBufferWindow",
        "whatsApp",
        "if",
        "code"
      ],
      "trigger_type": "chat",
      "complexity_score": 32,
      "complexity": "High",
      "total_nodes": 32,
      "node_types": {
        "n8n-nodes-base.whatsAppTrigger": 1,
        "n8n-nodes-base.httpRequest": 3,
        "@n8n/n8n-nodes-langchain.openAi": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.whatsApp": 7,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates powered processes using whatsAppTrigger, httpRequest, @n8n/langchain.openAi",
      "analysis_timestamp": "2025-06-01T16:06:48.966877"
    },
    {
      "original_filename": "util_2335_workflow_2335_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangc.json",
      "workflow_name": "util_2335_workflow_2335_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangc",
      "suggested_filename": "util_2335_workflow_2335_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangc.json",
      "category": "UTIL",
      "business_function": "2335",
      "key_integrations": [
        "localFileTrigger",
        "manualTrigger",
        "set",
        "stickyNote",
        "readWriteFile",
        "@n8n/langchain.embeddingsMistralCloud",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.chainRetrievalQa"
      ],
      "trigger_type": "chat",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.localFileTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.readWriteFile": 1,
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud": 1,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2
      },
      "business_value": "Automates 2335 processes using localFileTrigger, manualTrigger, set",
      "analysis_timestamp": "2025-06-01T16:06:48.967310"
    },
    {
      "original_filename": "ai_2187_workflow_2187_automate_wordpress_httprequest.json",
      "workflow_name": "ai_2187_workflow_2187_automate_wordpress_httprequest",
      "suggested_filename": "ai_2187_workflow_2187_automate_wordpress_httprequest.json",
      "category": "AI",
      "business_function": "2187",
      "key_integrations": [
        "stickyNote",
        "formTrigger",
        "splitOut",
        "@n8n/langchain.openAi",
        "set",
        "@n8n/langchain.toolWikipedia",
        "if",
        "form",
        "merge",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 37,
      "complexity": "High",
      "total_nodes": 37,
      "node_types": {
        "n8n-nodes-base.stickyNote": 22,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.openAi": 3,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.form": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.httpRequest": 2
      },
      "business_value": "Automates 2187 processes using stickyNote, formTrigger, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.967728"
    },
    {
      "original_filename": "ops_advanced_automate_splitinbatches_respondtowebhook.json",
      "workflow_name": "[n8n] Advanced URL Parsing and Shortening Workflow - Switchy.io Integration",
      "suggested_filename": "ops_advanced_automate_splitinbatches_respondtowebhook.json",
      "category": "OPS",
      "business_function": "advanced",
      "key_integrations": [
        "splitInBatches",
        "stickyNote",
        "httpRequest",
        "if",
        "html",
        "set",
        "convertToFile",
        "aggregate",
        "github",
        "stopAndError"
      ],
      "trigger_type": "webhook",
      "complexity_score": 56,
      "complexity": "High",
      "total_nodes": 56,
      "node_types": {
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.httpRequest": 14,
        "n8n-nodes-base.if": 9,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.set": 11,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.github": 3,
        "n8n-nodes-base.stopAndError": 2,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.respondToWebhook": 1
      },
      "business_value": "Automates advanced processes using splitInBatches, stickyNote, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.968798"
    },
    {
      "original_filename": "comm_3307_workflow_3307_automate_telegram_telegram.json",
      "workflow_name": "comm_3307_workflow_3307_automate_telegram_telegram",
      "suggested_filename": "comm_3307_workflow_3307_automate_telegram_telegram.json",
      "category": "COMM",
      "business_function": "3307",
      "key_integrations": [
        "stickyNote",
        "telegramTrigger",
        "if",
        "wait",
        "code",
        "googleSheets",
        "telegram"
      ],
      "trigger_type": "manual",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.wait": 2,
        "n8n-nodes-base.code": 4,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.telegram": 6
      },
      "business_value": "Automates 3307 processes using stickyNote, telegramTrigger, if",
      "analysis_timestamp": "2025-06-01T16:06:48.969313"
    },
    {
      "original_filename": "util_2380_workflow_2380_automate_httprequest_webhook_webhook.json",
      "workflow_name": "util_2380_workflow_2380_automate_httprequest_webhook_webhook",
      "suggested_filename": "util_2380_workflow_2380_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "2380",
      "key_integrations": [
        "httpRequest",
        "stickyNote",
        "set",
        "code",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 2380 processes using httpRequest, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:48.969579"
    },
    {
      "original_filename": "data_1736_workflow_1736_automate_googlesheets_movebinarydata.json",
      "workflow_name": "data_1736_workflow_1736_automate_googlesheets_movebinarydata",
      "suggested_filename": "data_1736_workflow_1736_automate_googlesheets_movebinarydata.json",
      "category": "DATA",
      "business_function": "1736",
      "key_integrations": [
        "googleSheets",
        "readBinaryFile",
        "moveBinaryData"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.readBinaryFile": 1,
        "n8n-nodes-base.moveBinaryData": 1
      },
      "business_value": "Automates 1736 processes using googleSheets, readBinaryFile, moveBinaryData",
      "analysis_timestamp": "2025-06-01T16:06:48.969698"
    },
    {
      "original_filename": "ops_automate_automate_github_github.json",
      "workflow_name": "Automate assigning GitHub issues",
      "suggested_filename": "ops_automate_automate_github_github.json",
      "category": "OPS",
      "business_function": "automate",
      "key_integrations": [
        "switch",
        "if",
        "github",
        "githubTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.github": 3,
        "n8n-nodes-base.githubTrigger": 1
      },
      "business_value": "Automates automate processes using switch, if, github",
      "analysis_timestamp": "2025-06-01T16:06:48.969996"
    },
    {
      "original_filename": "util_stories_read_storyblok_manual.json",
      "workflow_name": "Get all the stories starting with `release` and publish them",
      "suggested_filename": "util_stories_read_storyblok_manual.json",
      "category": "UTIL",
      "business_function": "stories",
      "key_integrations": [
        "manualTrigger",
        "storyblok"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.storyblok": 2
      },
      "business_value": "Automates stories processes using manualTrigger, storyblok",
      "analysis_timestamp": "2025-06-01T16:06:48.970272"
    },
    {
      "original_filename": "ai_content_automate_n8nnodeslangchainhttprequest_n8nnodeslangchainlmchatanthropi.json",
      "workflow_name": "🤖Content Creator Agent",
      "suggested_filename": "ai_content_automate_n8nnodeslangchainhttprequest_n8nnodeslangchainlmchatanthropi.json",
      "category": "AI",
      "business_function": "content",
      "key_integrations": [
        "@n8n/langchain.toolHttpRequest",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatAnthropic",
        "set",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1
      },
      "business_value": "Automates content processes using @n8n/langchain.toolHttpRequest, @n8n/langchain.agent, @n8n/langchain.lmChatAnthropic",
      "analysis_timestamp": "2025-06-01T16:06:48.970526"
    },
    {
      "original_filename": "ai_automate_ai_process_splitinbatches_slack_webhook.json",
      "workflow_name": "ai_automate_ai_process_splitinbatches_slack_webhook",
      "suggested_filename": "ai_automate_ai_process_splitinbatches_slack_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "extractFromFile",
        "@n8n/langchain.outputParserItemList",
        "splitInBatches",
        "stickyNote",
        "set",
        "googleDocs",
        "@n8n/langchain.lmChatOpenAi",
        "slack",
        "gmail",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.outputParserItemList": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleDocs": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.gmail": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates automate processes using extractFromFile, @n8n/langchain.outputParserItemList, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.970896"
    },
    {
      "original_filename": "ai_search_ai_process_splitinbatches_httprequest_1.json",
      "workflow_name": "Search LinkedIn companies, Score with AI and add them to Google Sheet CRM",
      "suggested_filename": "ai_search_ai_process_splitinbatches_httprequest_1.json",
      "category": "AI",
      "business_function": "search",
      "key_integrations": [
        "splitInBatches",
        "httpRequest",
        "if",
        "set",
        "splitOut",
        "googleSheets",
        "@n8n/langchain.openAi",
        "stickyNote",
        "wait",
        "manualTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleSheets": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates search processes using splitInBatches, httpRequest, if",
      "analysis_timestamp": "2025-06-01T16:06:48.971383"
    },
    {
      "original_filename": "comm_certificate_automate_googleslides_gmail.json",
      "workflow_name": "DSP Certificate w/ Google Forms",
      "suggested_filename": "comm_certificate_automate_googleslides_gmail.json",
      "category": "COMM",
      "business_function": "certificate",
      "key_integrations": [
        "googleSheetsTrigger",
        "stickyNote",
        "set",
        "if",
        "googleDrive",
        "googleSlides",
        "gmail"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.googleSheetsTrigger": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.googleSlides": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates certificate processes using googleSheetsTrigger, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:48.971728"
    },
    {
      "original_filename": "data_postgresql_transfer_spreadsheetfile_manual.json",
      "workflow_name": "PostgreSQL export to CSV",
      "suggested_filename": "data_postgresql_transfer_spreadsheetfile_manual.json",
      "category": "DATA",
      "business_function": "postgresql",
      "key_integrations": [
        "manualTrigger",
        "spreadsheetFile",
        "set",
        "postgres"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.postgres": 1
      },
      "business_value": "Automates postgresql processes using manualTrigger, spreadsheetFile, set",
      "analysis_timestamp": "2025-06-01T16:06:48.971984"
    },
    {
      "original_filename": "util_1747_workflow_1747_automate_manual.json",
      "workflow_name": "util_1747_workflow_1747_automate_manual",
      "suggested_filename": "util_1747_workflow_1747_automate_manual.json",
      "category": "UTIL",
      "business_function": "1747",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "merge",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.code": 6
      },
      "business_value": "Automates 1747 processes using manualTrigger, stickyNote, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.972257"
    },
    {
      "original_filename": "ai_extract_extract_httprequest_manual.json",
      "workflow_name": "ai_extract_extract_httprequest_manual",
      "suggested_filename": "ai_extract_extract_httprequest_manual.json",
      "category": "AI",
      "business_function": "extract",
      "key_integrations": [
        "manualTrigger",
        "extractFromFile",
        "googleDrive",
        "httpRequest",
        "stickyNote",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates extract processes using manualTrigger, extractFromFile, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:48.972604"
    },
    {
      "original_filename": "data_1394_workflow_1394_automate_awstranscribe_googlesheets.json",
      "workflow_name": "data_1394_workflow_1394_automate_awstranscribe_googlesheets",
      "suggested_filename": "data_1394_workflow_1394_automate_awstranscribe_googlesheets.json",
      "category": "DATA",
      "business_function": "1394",
      "key_integrations": [
        "googleSheets",
        "awsTranscribe",
        "awsS3",
        "set",
        "googleDriveTrigger",
        "wait"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.awsTranscribe": 2,
        "n8n-nodes-base.awsS3": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.wait": 1
      },
      "business_value": "Automates 1394 processes using googleSheets, awsTranscribe, awsS3",
      "analysis_timestamp": "2025-06-01T16:06:48.972876"
    },
    {
      "original_filename": "comm_analyze_analyze_googlecloudnaturallanguage_mattermost_2.json",
      "workflow_name": "Analyze the sentiment of feedback and send a message on Mattermost",
      "suggested_filename": "comm_analyze_analyze_googlecloudnaturallanguage_mattermost_2.json",
      "category": "COMM",
      "business_function": "analyze",
      "key_integrations": [
        "typeformTrigger",
        "googleCloudNaturalLanguage",
        "if",
        "mattermost"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.googleCloudNaturalLanguage": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.mattermost": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates analyze processes using typeformTrigger, googleCloudNaturalLanguage, if",
      "analysis_timestamp": "2025-06-01T16:06:48.973047"
    },
    {
      "original_filename": "comm_2045_workflow_2045_automate_splitinbatches_httprequest.json",
      "workflow_name": "comm_2045_workflow_2045_automate_splitinbatches_httprequest",
      "suggested_filename": "comm_2045_workflow_2045_automate_splitinbatches_httprequest.json",
      "category": "COMM",
      "business_function": "2045",
      "key_integrations": [
        "stickyNote",
        "if",
        "code",
        "set",
        "httpRequest",
        "redis",
        "telegram",
        "telegramTrigger",
        "switch",
        "splitInBatches"
      ],
      "trigger_type": "manual",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.if": 6,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 6,
        "n8n-nodes-base.redis": 8,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates 2045 processes using stickyNote, if, code",
      "analysis_timestamp": "2025-06-01T16:06:48.973435"
    },
    {
      "original_filename": "util_1465_workflow_1465_automate_datetime_emailsend_cron.json",
      "workflow_name": "util_1465_workflow_1465_automate_datetime_emailsend_cron",
      "suggested_filename": "util_1465_workflow_1465_automate_datetime_emailsend_cron.json",
      "category": "UTIL",
      "business_function": "1465",
      "key_integrations": [
        "dateTime",
        "cron",
        "switch",
        "set",
        "merge",
        "googleCalendar",
        "emailSend",
        "code"
      ],
      "trigger_type": "cron",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.googleCalendar": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.code": 3
      },
      "business_value": "Automates 1465 processes using dateTime, cron, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.973790"
    },
    {
      "original_filename": "ai_3500_workflow_3500_automate_splitinbatches_ghost.json",
      "workflow_name": "ai_3500_workflow_3500_automate_splitinbatches_ghost",
      "suggested_filename": "ai_3500_workflow_3500_automate_splitinbatches_ghost.json",
      "category": "AI",
      "business_function": "3500",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "code",
        "ghost",
        "set",
        "stickyNote",
        "googleSheets",
        "merge",
        "splitInBatches"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.ghost": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.splitInBatches": 1
      },
      "business_value": "Automates 3500 processes using manualTrigger, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.974176"
    },
    {
      "original_filename": "ai_perform_ai_process_httprequest_manual_1.json",
      "workflow_name": "Perform a domain search (single) with Icypeas",
      "suggested_filename": "ai_perform_ai_process_httprequest_manual_1.json",
      "category": "AI",
      "business_function": "perform",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "httpRequest",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates perform processes using manualTrigger, stickyNote, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.974475"
    },
    {
      "original_filename": "data_2141_workflow_2141_automate_httprequest_webhook_webhook.json",
      "workflow_name": "data_2141_workflow_2141_automate_httprequest_webhook_webhook",
      "suggested_filename": "data_2141_workflow_2141_automate_httprequest_webhook_webhook.json",
      "category": "DATA",
      "business_function": "2141",
      "key_integrations": [
        "webhook",
        "stickyNote",
        "set",
        "switch",
        "googleSheets",
        "httpRequest"
      ],
      "trigger_type": "webhook",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 2141 processes using webhook, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:48.974758"
    },
    {
      "original_filename": "ai_coinmarketcap_exchange_and_community_agent_tool_automate_n8nnodeslangchainmem.json",
      "workflow_name": "CoinMarketCap_Exchange_and_Community_Agent_Tool",
      "suggested_filename": "ai_coinmarketcap_exchange_and_community_agent_tool_automate_n8nnodeslangchainmem.json",
      "category": "AI",
      "business_function": "coinmarketcap",
      "key_integrations": [
        "executeWorkflowTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolHttpRequest",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 5,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates coinmarketcap processes using executeWorkflowTrigger, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.975139"
    },
    {
      "original_filename": "util_refresh_automate_supabase_httprequest_webhook.json",
      "workflow_name": "2. Refresh Pipedrive tokens",
      "suggested_filename": "util_refresh_automate_supabase_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "refresh",
      "key_integrations": [
        "stopAndError",
        "stickyNote",
        "supabase",
        "httpRequest",
        "if",
        "respondToWebhook",
        "code",
        "set",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.stopAndError": 1,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.supabase": 6,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.webhook": 3
      },
      "business_value": "Automates refresh processes using stopAndError, stickyNote, supabase",
      "analysis_timestamp": "2025-06-01T16:06:48.977613"
    },
    {
      "original_filename": "ai_3123_workflow_3123_automate_splitinbatches_n8nnodeslangchainoutputparserstruc.json",
      "workflow_name": "ai_3123_workflow_3123_automate_splitinbatches_n8nnodeslangchainoutputparserstruc",
      "suggested_filename": "ai_3123_workflow_3123_automate_splitinbatches_n8nnodeslangchainoutputparserstruc.json",
      "category": "AI",
      "business_function": "3123",
      "key_integrations": [
        "scheduleTrigger",
        "googleCalendar",
        "splitInBatches",
        "set",
        "filter",
        "gmail",
        "@n8n/langchain.outputParserStructured",
        "googleCalendarTool",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "cron",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.googleCalendar": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.gmail": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.googleCalendarTool": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.stickyNote": 6
      },
      "business_value": "Automates 3123 processes using scheduleTrigger, googleCalendar, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:48.977983"
    },
    {
      "original_filename": "ai_summarize_ai_process_httprequest_emailreadimap_3.json",
      "workflow_name": "Summarize emails with A.I. then send to messenger",
      "suggested_filename": "ai_summarize_ai_process_httprequest_emailreadimap_3.json",
      "category": "AI",
      "business_function": "summarize",
      "key_integrations": [
        "emailReadImap",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "email",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates summarize processes using emailReadImap, httpRequest, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.978268"
    },
    {
      "original_filename": "util_2301_workflow_2301_automate_httprequest_manual.json",
      "workflow_name": "util_2301_workflow_2301_automate_httprequest_manual",
      "suggested_filename": "util_2301_workflow_2301_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "2301",
      "key_integrations": [
        "httpRequest",
        "manualTrigger",
        "splitOut",
        "if",
        "aggregate",
        "code",
        "summarize",
        "n8n",
        "stickyNote",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.summarize": 1,
        "n8n-nodes-base.n8n": 2,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.set": 3
      },
      "business_value": "Automates 2301 processes using httpRequest, manualTrigger, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.978599"
    },
    {
      "original_filename": "util_435_workflow_435_automate_httprequest.json",
      "workflow_name": "util_435_workflow_435_automate_httprequest",
      "suggested_filename": "util_435_workflow_435_automate_httprequest.json",
      "category": "UTIL",
      "business_function": "435",
      "key_integrations": [
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 435 processes using httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.978753"
    },
    {
      "original_filename": "ecommerce_547_workflow_547_automate_shopify.json",
      "workflow_name": "ecommerce_547_workflow_547_automate_shopify",
      "suggested_filename": "ecommerce_547_workflow_547_automate_shopify.json",
      "category": "ECOMMERCE",
      "business_function": "547",
      "key_integrations": [
        "shopifyTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.shopifyTrigger": 1
      },
      "business_value": "Automates 547 processes using shopifyTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.978892"
    },
    {
      "original_filename": "util_3400_workflow_3400_automate_httprequest_manual.json",
      "workflow_name": "util_3400_workflow_3400_automate_httprequest_manual",
      "suggested_filename": "util_3400_workflow_3400_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "3400",
      "key_integrations": [
        "httpRequest",
        "executeWorkflowTrigger",
        "manualTrigger",
        "executeWorkflow",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates 3400 processes using httpRequest, executeWorkflowTrigger, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.979190"
    },
    {
      "original_filename": "ai_2878_workflow_2878_automate_n8nnodeslangchainoutputparserstructured_httpreque.json",
      "workflow_name": "ai_2878_workflow_2878_automate_n8nnodeslangchainoutputparserstructured_httpreque",
      "suggested_filename": "ai_2878_workflow_2878_automate_n8nnodeslangchainoutputparserstructured_httpreque.json",
      "category": "AI",
      "business_function": "2878",
      "key_integrations": [
        "@n8n/langchain.outputParserStructured",
        "set",
        "@n8n/langchain.lmChatOpenAi",
        "formTrigger",
        "@n8n/langchain.chainLlm",
        "splitOut",
        "splitInBatches",
        "form",
        "executeWorkflowTrigger",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 85,
      "complexity": "High",
      "total_nodes": 85,
      "node_types": {
        "@n8n/n8n-nodes-langchain.outputParserStructured": 4,
        "n8n-nodes-base.set": 12,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 5,
        "n8n-nodes-base.formTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 6,
        "n8n-nodes-base.splitOut": 4,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.splitInBatches": 3,
        "n8n-nodes-base.form": 4,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 21,
        "n8n-nodes-base.executeWorkflow": 3,
        "n8n-nodes-base.executionData": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.notion": 5,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.markdown": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.stopAndError": 1
      },
      "business_value": "Automates 2878 processes using @n8n/langchain.outputParserStructured, set, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.980173"
    },
    {
      "original_filename": "ai_2780_workflow_2780_automate_splitinbatches_n8nnodeslangchainchainllm_webhook.json",
      "workflow_name": "ai_2780_workflow_2780_automate_splitinbatches_n8nnodeslangchainchainllm_webhook",
      "suggested_filename": "ai_2780_workflow_2780_automate_splitinbatches_n8nnodeslangchainchainllm_webhook.json",
      "category": "AI",
      "business_function": "2780",
      "key_integrations": [
        "webhook",
        "switch",
        "httpRequest",
        "code",
        "set",
        "extractFromFile",
        "splitInBatches",
        "@n8n/langchain.chainLlm",
        "splitOut",
        "filter"
      ],
      "trigger_type": "webhook",
      "complexity_score": 45,
      "complexity": "High",
      "total_nodes": 45,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.httpRequest": 7,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.extractFromFile": 2,
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.noOp": 4,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.stickyNote": 15,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2
      },
      "business_value": "Automates 2780 processes using webhook, switch, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.980790"
    },
    {
      "original_filename": "data_1945_workflow_1945_automate_itemlists_datetime_cron.json",
      "workflow_name": "data_1945_workflow_1945_automate_itemlists_datetime_cron",
      "suggested_filename": "data_1945_workflow_1945_automate_itemlists_datetime_cron.json",
      "category": "DATA",
      "business_function": "1945",
      "key_integrations": [
        "scheduleTrigger",
        "notion",
        "merge",
        "if",
        "dateTime",
        "itemLists",
        "httpRequest"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.notion": 3,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 1945 processes using scheduleTrigger, notion, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.981126"
    },
    {
      "original_filename": "data_automate_splitinbatches_httprequest_cron.json",
      "workflow_name": "My workflow 2",
      "suggested_filename": "data_automate_splitinbatches_httprequest_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "key_integrations": [
        "manualTrigger",
        "xml",
        "httpRequest",
        "set",
        "googleSheets",
        "splitInBatches",
        "code",
        "scheduleTrigger",
        "stickyNote",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.xml": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 11,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates automate processes using manualTrigger, xml, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.981574"
    },
    {
      "original_filename": "util_merge_automate_readwritefile_httprequest_2.json",
      "workflow_name": "Merge",
      "suggested_filename": "util_merge_automate_readwritefile_httprequest_2.json",
      "category": "UTIL",
      "business_function": "merge",
      "key_integrations": [
        "manualTrigger",
        "readWriteFile",
        "stickyNote",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.httpRequest": 3
      },
      "business_value": "Automates merge processes using manualTrigger, readWriteFile, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.981883"
    },
    {
      "original_filename": "ai_zoom_ai_process_clickup_httprequest_2.json",
      "workflow_name": "Zoom AI Meeting Assistant",
      "suggested_filename": "ai_zoom_ai_process_clickup_httprequest_2.json",
      "category": "AI",
      "business_function": "zoom",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "manualTrigger",
        "stopAndError",
        "zoom",
        "set",
        "splitInBatches",
        "httpRequest",
        "extractFromFile",
        "@n8n/langchain.openAi",
        "code"
      ],
      "trigger_type": "chat",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stopAndError": 1,
        "n8n-nodes-base.zoom": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.emailSend": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.microsoftOutlookTool": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.clickUp": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates zoom processes using @n8n/langchain.lmChatOpenAi, manualTrigger, stopAndError",
      "analysis_timestamp": "2025-06-01T16:06:48.982286"
    },
    {
      "original_filename": "ai_automate_ai_process_linkedin_httprequest_cron_1.json",
      "workflow_name": "Automate LinkedIn Posts with AI",
      "suggested_filename": "ai_automate_ai_process_linkedin_httprequest_cron_1.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "scheduleTrigger",
        "stickyNote",
        "notion",
        "linkedIn",
        "merge",
        "httpRequest",
        "@n8n/langchain.openAi",
        "aggregate"
      ],
      "trigger_type": "cron",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.notion": 3,
        "n8n-nodes-base.linkedIn": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.aggregate": 1
      },
      "business_value": "Automates automate processes using scheduleTrigger, stickyNote, notion",
      "analysis_timestamp": "2025-06-01T16:06:48.982601"
    },
    {
      "original_filename": "ai_introduction_automate_n8nnodeslangchainhttprequest_n8nnodeslangchainlmchatope.json",
      "workflow_name": "ai_introduction_automate_n8nnodeslangchainhttprequest_n8nnodeslangchainlmchatope",
      "suggested_filename": "ai_introduction_automate_n8nnodeslangchainhttprequest_n8nnodeslangchainlmchatope.json",
      "category": "AI",
      "business_function": "introduction",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolHttpRequest",
        "set",
        "@n8n/langchain.agent",
        "manualTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 2,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates introduction processes using stickyNote, @n8n/langchain.lmChatOpenAi, @n8n/langchain.toolHttpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.982888"
    },
    {
      "original_filename": "util_518_workflow_518_automate_cockpit_manual.json",
      "workflow_name": "util_518_workflow_518_automate_cockpit_manual",
      "suggested_filename": "util_518_workflow_518_automate_cockpit_manual.json",
      "category": "UTIL",
      "business_function": "518",
      "key_integrations": [
        "manualTrigger",
        "cockpit"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.cockpit": 1
      },
      "business_value": "Automates 518 processes using manualTrigger, cockpit",
      "analysis_timestamp": "2025-06-01T16:06:48.983007"
    },
    {
      "original_filename": "comm_receive_automate_mqtt.json",
      "workflow_name": "Receive messages for a MQTT queue",
      "suggested_filename": "comm_receive_automate_mqtt.json",
      "category": "COMM",
      "business_function": "receive",
      "key_integrations": [
        "mqttTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.mqttTrigger": 1
      },
      "business_value": "Automates receive processes using mqttTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.983109"
    },
    {
      "original_filename": "data_moving_automate_googlesheets_orbit.json",
      "workflow_name": "Moving metrics from Google Sheets to Orbit",
      "suggested_filename": "data_moving_automate_googlesheets_orbit.json",
      "category": "DATA",
      "business_function": "moving",
      "key_integrations": [
        "merge",
        "orbit",
        "googleSheets"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.orbit": 3,
        "n8n-nodes-base.googleSheets": 2
      },
      "business_value": "Automates moving processes using merge, orbit, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.983336"
    },
    {
      "original_filename": "content_turn_automate_httprequest_manual.json",
      "workflow_name": "Turn YouTube Videos into Summaries, Transcripts, and Visual Insights",
      "suggested_filename": "content_turn_automate_httprequest_manual.json",
      "category": "CONTENT",
      "business_function": "turn",
      "key_integrations": [
        "manualTrigger",
        "set",
        "switch",
        "stickyNote",
        "httpRequest",
        "if",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 9,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.stickyNote": 12,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates turn processes using manualTrigger, set, switch",
      "analysis_timestamp": "2025-06-01T16:06:48.983907"
    },
    {
      "original_filename": "ai_context_automate_splitinbatches_n8nnodeslangchainembeddingsgooglegemini.json",
      "workflow_name": "RAG:Context-Aware Chunking | Google Drive to Pinecone via OpenRouter & Gemini",
      "suggested_filename": "ai_context_automate_splitinbatches_n8nnodeslangchainembeddingsgooglegemini.json",
      "category": "AI",
      "business_function": "context",
      "key_integrations": [
        "manualTrigger",
        "splitInBatches",
        "@n8n/langchain.lmChatOpenRouter",
        "@n8n/langchain.vectorStorePinecone",
        "@n8n/langchain.embeddingsGoogleGemini",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "googleDrive",
        "extractFromFile",
        "code"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 1,
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates context processes using manualTrigger, splitInBatches, @n8n/langchain.lmChatOpenRouter",
      "analysis_timestamp": "2025-06-01T16:06:48.984237"
    },
    {
      "original_filename": "comm_2367_workflow_2367_automate_slack_httprequest_webhook.json",
      "workflow_name": "comm_2367_workflow_2367_automate_slack_httprequest_webhook",
      "suggested_filename": "comm_2367_workflow_2367_automate_slack_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "2367",
      "key_integrations": [
        "set",
        "httpRequest",
        "slack",
        "stickyNote",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 2367 processes using set, httpRequest, slack",
      "analysis_timestamp": "2025-06-01T16:06:48.984491"
    },
    {
      "original_filename": "util_441_workflow_441_automate_signl4_manual.json",
      "workflow_name": "util_441_workflow_441_automate_signl4_manual",
      "suggested_filename": "util_441_workflow_441_automate_signl4_manual.json",
      "category": "UTIL",
      "business_function": "441",
      "key_integrations": [
        "manualTrigger",
        "signl4"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.signl4": 1
      },
      "business_value": "Automates 441 processes using manualTrigger, signl4",
      "analysis_timestamp": "2025-06-01T16:06:48.984591"
    },
    {
      "original_filename": "content_create_create_orbit_manual.json",
      "workflow_name": "Create a new member, update the information of the member, create a note and a post for the member in Orbit",
      "suggested_filename": "content_create_create_orbit_manual.json",
      "category": "CONTENT",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "orbit"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.orbit": 4
      },
      "business_value": "Automates create processes using manualTrigger, orbit",
      "analysis_timestamp": "2025-06-01T16:06:48.984771"
    },
    {
      "original_filename": "ai_namesilo_ai_process_splitinbatches_httprequest.json",
      "workflow_name": "Namesilo Bulk Domain Availability [Template]",
      "suggested_filename": "ai_namesilo_ai_process_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "namesilo",
      "key_integrations": [
        "set",
        "stickyNote",
        "code",
        "wait",
        "splitInBatches",
        "httpRequest",
        "convertToFile",
        "manualTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates namesilo processes using set, stickyNote, code",
      "analysis_timestamp": "2025-06-01T16:06:48.985008"
    },
    {
      "original_filename": "ai_customer_automate_slack_n8nnodeslangchainchainllm_cron.json",
      "workflow_name": "ai_customer_automate_slack_n8nnodeslangchainchainllm_cron",
      "suggested_filename": "ai_customer_automate_slack_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "customer",
      "key_integrations": [
        "slack",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "scheduleTrigger",
        "stickyNote",
        "set",
        "if",
        "linear",
        "@n8n/langchain.chainLlm",
        "merge"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.slack": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.linear": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.aggregate": 1
      },
      "business_value": "Automates customer processes using slack, @n8n/langchain.lmChatOpenAi, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.985369"
    },
    {
      "original_filename": "ai_powered_ai_process_httprequest_n8nnodeslangchainlmchatopenai.json",
      "workflow_name": "ai_powered_ai_process_httprequest_n8nnodeslangchainlmchatopenai",
      "suggested_filename": "ai_powered_ai_process_httprequest_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "powered",
      "key_integrations": [
        "manualTrigger",
        "splitOut",
        "googleSheets",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.informationExtractor",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleSheets": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates powered processes using manualTrigger, splitOut, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:48.985637"
    },
    {
      "original_filename": "ai_2416_workflow_2416_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "workflow_name": "ai_2416_workflow_2416_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput",
      "suggested_filename": "ai_2416_workflow_2416_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "2416",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "@n8n/langchain.outputParserStructured",
        "if",
        "googleDrive",
        "httpRequest",
        "editImage",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.editImage": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates 2416 processes using manualTrigger, stickyNote, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.985927"
    },
    {
      "original_filename": "ai_outlook_automate_microsoftoutlook_n8nnodeslangchainlmchatopenai.json",
      "workflow_name": "Outlook",
      "suggested_filename": "ai_outlook_automate_microsoftoutlook_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "outlook",
      "key_integrations": [
        "microsoftOutlookTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.agent",
        "stickyNote",
        "microsoftOutlookTool"
      ],
      "trigger_type": "chat",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.microsoftOutlookTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.microsoftOutlookTool": 1
      },
      "business_value": "Automates outlook processes using microsoftOutlookTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.986180"
    },
    {
      "original_filename": "comm_automate_gmail_httprequest_cron.json",
      "workflow_name": "My workflow 3",
      "suggested_filename": "comm_automate_gmail_httprequest_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "key_integrations": [
        "cron",
        "httpRequest",
        "function",
        "stickyNote",
        "gmail"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates automate processes using cron, httpRequest, function",
      "analysis_timestamp": "2025-06-01T16:06:48.986398"
    },
    {
      "original_filename": "util_3913_workflow_3913_automate_webhook_converttofile_webhook.json",
      "workflow_name": "util_3913_workflow_3913_automate_webhook_converttofile_webhook",
      "suggested_filename": "util_3913_workflow_3913_automate_webhook_converttofile_webhook.json",
      "category": "UTIL",
      "business_function": "3913",
      "key_integrations": [
        "set",
        "convertToFile",
        "respondToWebhook",
        "webhook",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 3913 processes using set, convertToFile, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:48.986628"
    },
    {
      "original_filename": "ai_flux_ai_process_httprequest_manual_2.json",
      "workflow_name": "Flux Dev Image Generation Fal.ai",
      "suggested_filename": "ai_flux_ai_process_httprequest_manual_2.json",
      "category": "AI",
      "business_function": "flux",
      "key_integrations": [
        "httpRequest",
        "googleDrive",
        "manualTrigger",
        "stickyNote",
        "wait",
        "if",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates flux processes using httpRequest, googleDrive, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.986888"
    },
    {
      "original_filename": "ai_receive_ai_process_httprequest_microsoftoutlook_cron.json",
      "workflow_name": "ai_receive_ai_process_httprequest_microsoftoutlook_cron",
      "suggested_filename": "ai_receive_ai_process_httprequest_microsoftoutlook_cron.json",
      "category": "AI",
      "business_function": "receive",
      "key_integrations": [
        "html",
        "httpRequest",
        "scheduleTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "set",
        "@n8n/langchain.agent",
        "stickyNote",
        "microsoftOutlook"
      ],
      "trigger_type": "cron",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.microsoftOutlook": 1
      },
      "business_value": "Automates receive processes using html, httpRequest, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.987155"
    },
    {
      "original_filename": "ops_2307_workflow_2307_automate_splitinbatches_httprequest_cron.json",
      "workflow_name": "ops_2307_workflow_2307_automate_splitinbatches_httprequest_cron",
      "suggested_filename": "ops_2307_workflow_2307_automate_splitinbatches_httprequest_cron.json",
      "category": "OPS",
      "business_function": "2307",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "set",
        "httpRequest",
        "if",
        "merge",
        "code",
        "switch",
        "github",
        "splitInBatches"
      ],
      "trigger_type": "cron",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.noOp": 3,
        "n8n-nodes-base.github": 3,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.executeCommand": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1
      },
      "business_value": "Automates 2307 processes using manualTrigger, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:48.987514"
    },
    {
      "original_filename": "util_917_workflow_917_automate_httprequest_timescaledb_cron.json",
      "workflow_name": "util_917_workflow_917_automate_httprequest_timescaledb_cron",
      "suggested_filename": "util_917_workflow_917_automate_httprequest_timescaledb_cron.json",
      "category": "UTIL",
      "business_function": "917",
      "key_integrations": [
        "timescaleDb",
        "set",
        "httpRequest",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.timescaleDb": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates 917 processes using timescaleDb, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.987636"
    },
    {
      "original_filename": "comm_1463_workflow_1463_automate_hubspot_slack.json",
      "workflow_name": "comm_1463_workflow_1463_automate_hubspot_slack",
      "suggested_filename": "comm_1463_workflow_1463_automate_hubspot_slack.json",
      "category": "COMM",
      "business_function": "1463",
      "key_integrations": [
        "if",
        "slack",
        "hubspotTrigger",
        "hubspot",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.hubspotTrigger": 1,
        "n8n-nodes-base.hubspot": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 1463 processes using if, slack, hubspotTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.987870"
    },
    {
      "original_filename": "util_2171_workflow_2171_automate_highlevel_httprequest_webhook.json",
      "workflow_name": "util_2171_workflow_2171_automate_highlevel_httprequest_webhook",
      "suggested_filename": "util_2171_workflow_2171_automate_highlevel_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "2171",
      "key_integrations": [
        "stickyNote",
        "set",
        "webhook",
        "httpRequest",
        "highLevel",
        "switch"
      ],
      "trigger_type": "webhook",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.highLevel": 2,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates 2171 processes using stickyNote, set, webhook",
      "analysis_timestamp": "2025-06-01T16:06:48.988137"
    },
    {
      "original_filename": "ai_translate_ai_process_postgres_n8nnodeslangchainchat.json",
      "workflow_name": "Translate questions about e-mails into SQL queries and run them",
      "suggested_filename": "ai_translate_ai_process_postgres_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "translate",
      "key_integrations": [
        "set",
        "convertToFile",
        "readWriteFile",
        "extractFromFile",
        "@n8n/langchain.chatTrigger",
        "stickyNote",
        "manualTrigger",
        "if",
        "merge",
        "postgres"
      ],
      "trigger_type": "chat",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "n8n-nodes-base.set": 6,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.readWriteFile": 2,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.postgres": 3,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates translate processes using set, convertToFile, readWriteFile",
      "analysis_timestamp": "2025-06-01T16:06:48.988558"
    },
    {
      "original_filename": "util_1833_workflow_1833_automate_webhook_jira_webhook.json",
      "workflow_name": "util_1833_workflow_1833_automate_webhook_jira_webhook",
      "suggested_filename": "util_1833_workflow_1833_automate_webhook_jira_webhook.json",
      "category": "UTIL",
      "business_function": "1833",
      "key_integrations": [
        "if",
        "jira",
        "zendesk",
        "function",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.jira": 2,
        "n8n-nodes-base.zendesk": 2,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 1833 processes using if, jira, zendesk",
      "analysis_timestamp": "2025-06-01T16:06:48.988849"
    },
    {
      "original_filename": "ai_3420_workflow_3420_automate_n8nnodeslangchainoutputparserstructured_gmail.json",
      "workflow_name": "ai_3420_workflow_3420_automate_n8nnodeslangchainoutputparserstructured_gmail",
      "suggested_filename": "ai_3420_workflow_3420_automate_n8nnodeslangchainoutputparserstructured_gmail.json",
      "category": "AI",
      "business_function": "3420",
      "key_integrations": [
        "if",
        "code",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "gmail",
        "stickyNote",
        "extractFromFile",
        "gmailTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.gmailTrigger": 1
      },
      "business_value": "Automates 3420 processes using if, code, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:48.989152"
    },
    {
      "original_filename": "ai_forward_ai_process_mailjet_gmail.json",
      "workflow_name": "Forward Netflix emails to multiple email addresses with GMail and Mailjet",
      "suggested_filename": "ai_forward_ai_process_mailjet_gmail.json",
      "category": "AI",
      "business_function": "forward",
      "key_integrations": [
        "gmailTrigger",
        "mailjet",
        "set",
        "splitOut",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.mailjet": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates forward processes using gmailTrigger, mailjet, set",
      "analysis_timestamp": "2025-06-01T16:06:48.989399"
    },
    {
      "original_filename": "data_1835_workflow_1835_automate_notion_clickup.json",
      "workflow_name": "data_1835_workflow_1835_automate_notion_clickup",
      "suggested_filename": "data_1835_workflow_1835_automate_notion_clickup.json",
      "category": "DATA",
      "business_function": "1835",
      "key_integrations": [
        "notionTrigger",
        "clickUp",
        "clickUpTrigger",
        "notion"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.notionTrigger": 1,
        "n8n-nodes-base.clickUp": 1,
        "n8n-nodes-base.clickUpTrigger": 1,
        "n8n-nodes-base.notion": 2
      },
      "business_value": "Automates 1835 processes using notionTrigger, clickUp, clickUpTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.989574"
    },
    {
      "original_filename": "util_766_workflow_766_automate_generic.json",
      "workflow_name": "util_766_workflow_766_automate_generic",
      "suggested_filename": "util_766_workflow_766_automate_generic.json",
      "category": "UTIL",
      "business_function": "766",
      "key_integrations": [
        "function"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.function": 2
      },
      "business_value": "Automates 766 processes using function",
      "analysis_timestamp": "2025-06-01T16:06:48.989755"
    },
    {
      "original_filename": "comm_2272_workflow_2272_automate_postgres_splitinbatches_cron.json",
      "workflow_name": "comm_2272_workflow_2272_automate_postgres_splitinbatches_cron",
      "suggested_filename": "comm_2272_workflow_2272_automate_postgres_splitinbatches_cron.json",
      "category": "COMM",
      "business_function": "2272",
      "key_integrations": [
        "stickyNote",
        "aggregate",
        "postgres",
        "httpRequest",
        "splitInBatches",
        "splitOut",
        "wait",
        "code",
        "slack",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.postgres": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates 2272 processes using stickyNote, aggregate, postgres",
      "analysis_timestamp": "2025-06-01T16:06:48.990042"
    },
    {
      "original_filename": "comm_receive_create_convertkit.json",
      "workflow_name": "Receive updates when a subscriber is added through a form in ConvertKit",
      "suggested_filename": "comm_receive_create_convertkit.json",
      "category": "COMM",
      "business_function": "receive",
      "key_integrations": [
        "convertKitTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.convertKitTrigger": 1
      },
      "business_value": "Automates receive processes using convertKitTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.990147"
    },
    {
      "original_filename": "ecommerce_creating_automate_onfleet_shopify.json",
      "workflow_name": "Creating an Onfleet Task for a new Shopify Fulfillment",
      "suggested_filename": "ecommerce_creating_automate_onfleet_shopify.json",
      "category": "ECOMMERCE",
      "business_function": "creating",
      "key_integrations": [
        "shopifyTrigger",
        "onfleet"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.shopifyTrigger": 1,
        "n8n-nodes-base.onfleet": 1
      },
      "business_value": "Automates creating processes using shopifyTrigger, onfleet",
      "analysis_timestamp": "2025-06-01T16:06:48.990248"
    },
    {
      "original_filename": "ai_tavily_extract_n8nnodeslangchainchainllm_n8nnodeslangchainchat.json",
      "workflow_name": "🔍🛠️ Tavily Search & Extract - Template",
      "suggested_filename": "ai_tavily_extract_n8nnodeslangchainchainllm_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "tavily",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "set",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.set": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1
      },
      "business_value": "Automates tavily processes using stickyNote, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:48.990617"
    },
    {
      "original_filename": "ai_automate_extract_splitinbatches_httprequest.json",
      "workflow_name": "Automate Etsy Data Mining with Bright Data Scrape & Google Gemini",
      "suggested_filename": "ai_automate_extract_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "set",
        "httpRequest",
        "@n8n/langchain.lmChatGoogleGemini",
        "splitInBatches",
        "@n8n/langchain.informationExtractor",
        "readWriteFile",
        "function",
        "splitOut"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 3,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 3,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates automate processes using manualTrigger, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:48.991080"
    },
    {
      "original_filename": "ai_agentic_ai_process_n8nnodeslangchainmemorybufferwindow_telegram_1.json",
      "workflow_name": "Agentic Telegram AI bot with LangChain nodes and new tools",
      "suggested_filename": "ai_agentic_ai_process_n8nnodeslangchainmemorybufferwindow_telegram_1.json",
      "category": "AI",
      "business_function": "agentic",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "telegramTrigger",
        "stickyNote",
        "telegram",
        "telegramTool",
        "@n8n/langchain.toolHttpRequest",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.telegramTool": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates agentic processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow, telegramTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.991419"
    },
    {
      "original_filename": "ai_play_automate_telegram_telegram_1.json",
      "workflow_name": "Play with Spotify from Telegram",
      "suggested_filename": "ai_play_automate_telegram_telegram_1.json",
      "category": "AI",
      "business_function": "play",
      "key_integrations": [
        "telegramTrigger",
        "@n8n/langchain.openAi",
        "spotify",
        "stickyNote",
        "merge",
        "if",
        "set",
        "telegram"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.spotify": 5,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates play processes using telegramTrigger, @n8n/langchain.openAi, spotify",
      "analysis_timestamp": "2025-06-01T16:06:48.991725"
    },
    {
      "original_filename": "ai_deepseek_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchainl_1.json",
      "workflow_name": "🐋DeepSeek V3 Chat & R1 Reasoning Quick Start",
      "suggested_filename": "ai_deepseek_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchainl_1.json",
      "category": "AI",
      "business_function": "deepseek",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.chainLlm",
        "stickyNote",
        "@n8n/langchain.lmChatOllama",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 1,
        "n8n-nodes-base.httpRequest": 2
      },
      "business_value": "Automates deepseek processes using @n8n/langchain.chatTrigger, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:48.992030"
    },
    {
      "original_filename": "ai_3509_workflow_3509_automate_gmail_linkedin.json",
      "workflow_name": "ai_3509_workflow_3509_automate_gmail_linkedin",
      "suggested_filename": "ai_3509_workflow_3509_automate_gmail_linkedin.json",
      "category": "AI",
      "business_function": "3509",
      "key_integrations": [
        "manualTrigger",
        "gmail",
        "splitOut",
        "@n8n/langchain.openAi",
        "linkedIn",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.linkedIn": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 3509 processes using manualTrigger, gmail, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.992316"
    },
    {
      "original_filename": "data_600_workflow_600_automate_googlesheets_manual.json",
      "workflow_name": "data_600_workflow_600_automate_googlesheets_manual",
      "suggested_filename": "data_600_workflow_600_automate_googlesheets_manual.json",
      "category": "DATA",
      "business_function": "600",
      "key_integrations": [
        "manualTrigger",
        "googleSheets",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 600 processes using manualTrigger, googleSheets, set",
      "analysis_timestamp": "2025-06-01T16:06:48.992579"
    },
    {
      "original_filename": "util_schedule_automate_schedule_n8n_cron.json",
      "workflow_name": "💻 Schedule workflow activity time",
      "suggested_filename": "util_schedule_automate_schedule_n8n_cron.json",
      "category": "UTIL",
      "business_function": "schedule",
      "key_integrations": [
        "n8n",
        "set",
        "merge",
        "scheduleTrigger",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.n8n": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.scheduleTrigger": 2,
        "n8n-nodes-base.stickyNote": 6
      },
      "business_value": "Automates schedule processes using n8n, set, merge",
      "analysis_timestamp": "2025-06-01T16:06:48.992884"
    },
    {
      "original_filename": "ai_2779_workflow_2779_automate_extractfromfile_googledrive.json",
      "workflow_name": "ai_2779_workflow_2779_automate_extractfromfile_googledrive",
      "suggested_filename": "ai_2779_workflow_2779_automate_extractfromfile_googledrive.json",
      "category": "AI",
      "business_function": "2779",
      "key_integrations": [
        "googleDriveTrigger",
        "googleDrive",
        "extractFromFile",
        "@n8n/langchain.openAi",
        "merge",
        "splitOut",
        "code",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 2779 processes using googleDriveTrigger, googleDrive, extractFromFile",
      "analysis_timestamp": "2025-06-01T16:06:48.993128"
    },
    {
      "original_filename": "biz_shopify_automate_splitinbatches_shopify_cron.json",
      "workflow_name": "[n8n] - Shopify Orders to D365 Business Central Sales Orders / Sales Invoices",
      "suggested_filename": "biz_shopify_automate_splitinbatches_shopify_cron.json",
      "category": "BIZ",
      "business_function": "shopify",
      "key_integrations": [
        "httpRequest",
        "stickyNote",
        "shopify",
        "scheduleTrigger",
        "splitInBatches",
        "if",
        "set",
        "code",
        "splitOut",
        "filter"
      ],
      "trigger_type": "cron",
      "complexity_score": 39,
      "complexity": "High",
      "total_nodes": 39,
      "node_types": {
        "n8n-nodes-base.httpRequest": 11,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.shopify": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.set": 7,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates shopify processes using httpRequest, stickyNote, shopify",
      "analysis_timestamp": "2025-06-01T16:06:48.993673"
    },
    {
      "original_filename": "ai_1958_workflow_1958_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangcha.json",
      "workflow_name": "ai_1958_workflow_1958_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangcha",
      "suggested_filename": "ai_1958_workflow_1958_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangcha.json",
      "category": "AI",
      "business_function": "1958",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "set",
        "@n8n/langchain.chainRetrievalQa",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.retrieverWorkflow"
      ],
      "trigger_type": "chat",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.retrieverWorkflow": 1
      },
      "business_value": "Automates 1958 processes using manualTrigger, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:48.993956"
    },
    {
      "original_filename": "util_2501_workflow_2501_automate_httprequest_manual.json",
      "workflow_name": "util_2501_workflow_2501_automate_httprequest_manual",
      "suggested_filename": "util_2501_workflow_2501_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "2501",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "httpRequest",
        "googleDrive",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleDrive": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 2501 processes using manualTrigger, stickyNote, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.994263"
    },
    {
      "original_filename": "comm_471_workflow_471_automate_httprequest_cron_cron.json",
      "workflow_name": "comm_471_workflow_471_automate_httprequest_cron_cron",
      "suggested_filename": "comm_471_workflow_471_automate_httprequest_cron_cron.json",
      "category": "COMM",
      "business_function": "471",
      "key_integrations": [
        "httpRequest",
        "cron",
        "discord",
        "function",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.discord": 1,
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 471 processes using httpRequest, cron, discord",
      "analysis_timestamp": "2025-06-01T16:06:48.994472"
    },
    {
      "original_filename": "ai_telegram_ai_process_supabase_httprequest.json",
      "workflow_name": "ai_telegram_ai_process_supabase_httprequest",
      "suggested_filename": "ai_telegram_ai_process_supabase_httprequest.json",
      "category": "AI",
      "business_function": "telegram",
      "key_integrations": [
        "telegramTrigger",
        "httpRequest",
        "supabase",
        "merge",
        "telegram",
        "if",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.supabase": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates telegram processes using telegramTrigger, httpRequest, supabase",
      "analysis_timestamp": "2025-06-01T16:06:48.994857"
    },
    {
      "original_filename": "ai_automated_ai_process_httprequest_schedule_cron.json",
      "workflow_name": "AI Automated TikTok/Youtube Shorts/Reels Generator",
      "suggested_filename": "ai_automated_ai_process_httprequest_schedule_cron.json",
      "category": "AI",
      "business_function": "automated",
      "key_integrations": [
        "httpRequest",
        "code",
        "wait",
        "if",
        "@n8n/langchain.openAi",
        "stickyNote",
        "merge",
        "googleDrive",
        "discord",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 41,
      "complexity": "High",
      "total_nodes": 41,
      "node_types": {
        "n8n-nodes-base.httpRequest": 8,
        "n8n-nodes-base.code": 4,
        "n8n-nodes-base.wait": 5,
        "n8n-nodes-base.if": 3,
        "@n8n/n8n-nodes-langchain.openAi": 3,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.googleDrive": 4,
        "n8n-nodes-base.discord": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates automated processes using httpRequest, code, wait",
      "analysis_timestamp": "2025-06-01T16:06:48.995640"
    },
    {
      "original_filename": "util_recipe_automate_generic.json",
      "workflow_name": "util_recipe_automate_generic",
      "suggested_filename": "util_recipe_automate_generic.json",
      "category": "UTIL",
      "business_function": "recipe",
      "key_integrations": [],
      "trigger_type": "manual",
      "complexity_score": 0,
      "complexity": "Low",
      "total_nodes": 0,
      "node_types": {},
      "business_value": "Automates recipe processes using ",
      "analysis_timestamp": "2025-06-01T16:06:48.995901"
    },
    {
      "original_filename": "comm_real_automate_slack_emailsend_cron.json",
      "workflow_name": "Real Estate Market Scanning",
      "suggested_filename": "comm_real_automate_slack_emailsend_cron.json",
      "category": "COMM",
      "business_function": "real",
      "key_integrations": [
        "scheduleTrigger",
        "set",
        "httpRequest",
        "code",
        "splitOut",
        "filter",
        "emailSend",
        "slack",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates real processes using scheduleTrigger, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.996170"
    },
    {
      "original_filename": "ai_narrating_ai_process_splitinbatches_n8nnodeslangchainchainllm.json",
      "workflow_name": "ai_narrating_ai_process_splitinbatches_n8nnodeslangchainchainllm",
      "suggested_filename": "ai_narrating_ai_process_splitinbatches_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "narrating",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "code",
        "splitOut",
        "httpRequest",
        "convertToFile",
        "manualTrigger",
        "aggregate",
        "googleDrive",
        "stickyNote",
        "wait"
      ],
      "trigger_type": "chat",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.editImage": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates narrating processes using @n8n/langchain.lmChatOpenAi, code, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:48.996558"
    },
    {
      "original_filename": "data_amazon_monitor_splitinbatches_emailsend_cron.json",
      "workflow_name": "Amazon Product Price Tracker",
      "suggested_filename": "data_amazon_monitor_splitinbatches_emailsend_cron.json",
      "category": "DATA",
      "business_function": "amazon",
      "key_integrations": [
        "googleSheets",
        "splitInBatches",
        "httpRequest",
        "set",
        "emailSend",
        "if",
        "stickyNote",
        "scheduleTrigger"
      ],
      "trigger_type": "email",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates amazon processes using googleSheets, splitInBatches, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.997018"
    },
    {
      "original_filename": "ai_2647_workflow_2647_automate_splitinbatches_removeduplicates_cron.json",
      "workflow_name": "ai_2647_workflow_2647_automate_splitinbatches_removeduplicates_cron",
      "suggested_filename": "ai_2647_workflow_2647_automate_splitinbatches_removeduplicates_cron.json",
      "category": "AI",
      "business_function": "2647",
      "key_integrations": [
        "splitOut",
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "@n8n/langchain.informationExtractor",
        "splitInBatches",
        "airtable",
        "airtableTrigger",
        "switch",
        "graphql",
        "scheduleTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.airtableTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.graphql": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates 2647 processes using splitOut, @n8n/langchain.lmChatOpenAi, set",
      "analysis_timestamp": "2025-06-01T16:06:48.997488"
    },
    {
      "original_filename": "ai_helpdesk_automate_n8nnodeslangchainvectorstore_n8nnodeslangchainmemorypostgre_2.json",
      "workflow_name": "HR & IT Helpdesk Chatbot with Audio Transcription",
      "suggested_filename": "ai_helpdesk_automate_n8nnodeslangchainvectorstore_n8nnodeslangchainmemorypostgre_2.json",
      "category": "AI",
      "business_function": "helpdesk",
      "key_integrations": [
        "stickyNote",
        "manualTrigger",
        "httpRequest",
        "extractFromFile",
        "@n8n/langchain.vectorStorePGVector",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "telegramTrigger",
        "switch"
      ],
      "trigger_type": "chat",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePGVector": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.telegram": 3,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.memoryPostgresChat": 1,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates helpdesk processes using stickyNote, manualTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:48.997987"
    },
    {
      "original_filename": "util_automate_sse.json",
      "workflow_name": "",
      "suggested_filename": "util_automate_sse.json",
      "category": "UTIL",
      "business_function": "automate",
      "key_integrations": [
        "sseTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.sseTrigger": 1
      },
      "business_value": "Automates automate processes using sseTrigger",
      "analysis_timestamp": "2025-06-01T16:06:48.998270"
    },
    {
      "original_filename": "biz_1758_workflow_1758_automate_pipedrive_typeform.json",
      "workflow_name": "biz_1758_workflow_1758_automate_pipedrive_typeform",
      "suggested_filename": "biz_1758_workflow_1758_automate_pipedrive_typeform.json",
      "category": "BIZ",
      "business_function": "1758",
      "key_integrations": [
        "set",
        "stickyNote",
        "pipedrive",
        "typeformTrigger",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.pipedrive": 4,
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates 1758 processes using set, stickyNote, pipedrive",
      "analysis_timestamp": "2025-06-01T16:06:48.998498"
    },
    {
      "original_filename": "data_2037_workflow_2037_automate_manual_airtable.json",
      "workflow_name": "data_2037_workflow_2037_automate_manual_airtable",
      "suggested_filename": "data_2037_workflow_2037_automate_manual_airtable.json",
      "category": "DATA",
      "business_function": "2037",
      "key_integrations": [
        "manualTrigger",
        "airtable",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 2037 processes using manualTrigger, airtable, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:48.998732"
    },
    {
      "original_filename": "biz_create_create_contact_chargebee_manual.json",
      "workflow_name": "Create a new customer in Chargebee",
      "suggested_filename": "biz_create_create_contact_chargebee_manual.json",
      "category": "BIZ",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "chargebee"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.chargebee": 1
      },
      "business_value": "Automates create processes using manualTrigger, chargebee",
      "analysis_timestamp": "2025-06-01T16:06:48.998885"
    },
    {
      "original_filename": "comm_1471_workflow_1471_automate_httprequest_telegram_cron.json",
      "workflow_name": "comm_1471_workflow_1471_automate_httprequest_telegram_cron",
      "suggested_filename": "comm_1471_workflow_1471_automate_httprequest_telegram_cron.json",
      "category": "COMM",
      "business_function": "1471",
      "key_integrations": [
        "httpRequest",
        "wait",
        "if",
        "cron",
        "telegram"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 1471 processes using httpRequest, wait, if",
      "analysis_timestamp": "2025-06-01T16:06:48.999008"
    },
    {
      "original_filename": "ai_resume_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstru.json",
      "workflow_name": "ai_resume_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstru",
      "suggested_filename": "ai_resume_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstru.json",
      "category": "AI",
      "business_function": "resume",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "@n8n/langchain.outputParserStructured",
        "if",
        "googleDrive",
        "httpRequest",
        "editImage",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.editImage": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates resume processes using manualTrigger, stickyNote, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:48.999326"
    },
    {
      "original_filename": "comm_post_automate_slack_datetime_cron.json",
      "workflow_name": "Post RSS feed items from yesterday to Slack",
      "suggested_filename": "comm_post_automate_slack_datetime_cron.json",
      "category": "COMM",
      "business_function": "post",
      "key_integrations": [
        "function",
        "cron",
        "dateTime",
        "rssFeedRead",
        "if",
        "slack"
      ],
      "trigger_type": "cron",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.rssFeedRead": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates post processes using function, cron, dateTime",
      "analysis_timestamp": "2025-06-01T16:06:48.999553"
    },
    {
      "original_filename": "comm_1058_workflow_1058_automate_n8n_mattermost.json",
      "workflow_name": "comm_1058_workflow_1058_automate_n8n_mattermost",
      "suggested_filename": "comm_1058_workflow_1058_automate_n8n_mattermost.json",
      "category": "COMM",
      "business_function": "1058",
      "key_integrations": [
        "n8nTrigger",
        "mattermost"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.n8nTrigger": 1,
        "n8n-nodes-base.mattermost": 1
      },
      "business_value": "Automates 1058 processes using n8nTrigger, mattermost",
      "analysis_timestamp": "2025-06-01T16:06:48.999723"
    },
    {
      "original_filename": "data_1088_workflow_1088_automate_calendly_notion.json",
      "workflow_name": "data_1088_workflow_1088_automate_calendly_notion",
      "suggested_filename": "data_1088_workflow_1088_automate_calendly_notion.json",
      "category": "DATA",
      "business_function": "1088",
      "key_integrations": [
        "calendlyTrigger",
        "notion"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.calendlyTrigger": 1,
        "n8n-nodes-base.notion": 1
      },
      "business_value": "Automates 1088 processes using calendlyTrigger, notion",
      "analysis_timestamp": "2025-06-01T16:06:48.999918"
    },
    {
      "original_filename": "ai_confluence_ai_process_n8nnodeslangchainmemorybufferwindow_httprequest.json",
      "workflow_name": "🌐 Confluence Page AI Powered Chatbot",
      "suggested_filename": "ai_confluence_ai_process_n8nnodeslangchainmemorybufferwindow_httprequest.json",
      "category": "AI",
      "business_function": "confluence",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "markdown",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.manualChatTrigger",
        "@n8n/langchain.memoryBufferWindow",
        "set",
        "@n8n/langchain.agent",
        "telegram",
        "splitOut"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.markdown": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.manualChatTrigger": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.set": 3,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.splitOut": 1
      },
      "business_value": "Automates confluence processes using stickyNote, httpRequest, markdown",
      "analysis_timestamp": "2025-06-01T16:06:49.000175"
    },
    {
      "original_filename": "util_2755_workflow_2755_automate_jotform.json",
      "workflow_name": "util_2755_workflow_2755_automate_jotform",
      "suggested_filename": "util_2755_workflow_2755_automate_jotform.json",
      "category": "UTIL",
      "business_function": "2755",
      "key_integrations": [
        "klicktipp.klicktipp",
        "set",
        "jotFormTrigger",
        "stickyNote",
        "splitOut",
        "if",
        "aggregate",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-klicktipp.klicktipp": 5,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.jotFormTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates 2755 processes using klicktipp.klicktipp, set, jotFormTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.000669"
    },
    {
      "original_filename": "data_2566_workflow_2566_automate_n8nnodeslangchainmemorybufferwindow_respondtowe.json",
      "workflow_name": "data_2566_workflow_2566_automate_n8nnodeslangchainmemorybufferwindow_respondtowe",
      "suggested_filename": "data_2566_workflow_2566_automate_n8nnodeslangchainmemorybufferwindow_respondtowe.json",
      "category": "DATA",
      "business_function": "2566",
      "key_integrations": [
        "if",
        "set",
        "@n8n/langchain.memoryManager",
        "stickyNote",
        "formTrigger",
        "form",
        "crypto",
        "redis",
        "respondToWebhook",
        "@n8n/langchain.memoryBufferWindow"
      ],
      "trigger_type": "webhook",
      "complexity_score": 40,
      "complexity": "High",
      "total_nodes": 40,
      "node_types": {
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.set": 7,
        "@n8n/n8n-nodes-langchain.memoryManager": 1,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.form": 2,
        "n8n-nodes-base.crypto": 1,
        "n8n-nodes-base.redis": 6,
        "n8n-nodes-base.respondToWebhook": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.html": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatGroq": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.splitOut": 1
      },
      "business_value": "Automates 2566 processes using if, set, @n8n/langchain.memoryManager",
      "analysis_timestamp": "2025-06-01T16:06:49.001420"
    },
    {
      "original_filename": "util_1799_workflow_1799_automate_itemlists_htmlextract_webhook.json",
      "workflow_name": "util_1799_workflow_1799_automate_itemlists_htmlextract_webhook",
      "suggested_filename": "util_1799_workflow_1799_automate_itemlists_htmlextract_webhook.json",
      "category": "UTIL",
      "business_function": "1799",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "htmlExtract",
        "itemLists",
        "set",
        "function",
        "webhook",
        "respondToWebhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.htmlExtract": 2,
        "n8n-nodes-base.itemLists": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1
      },
      "business_value": "Automates 1799 processes using manualTrigger, httpRequest, htmlExtract",
      "analysis_timestamp": "2025-06-01T16:06:49.001846"
    },
    {
      "original_filename": "ai_posting_ai_process_airtable_n8nnodeslangchainoutputparserstructured_1.json",
      "workflow_name": "HR Job Posting and Evaluation with AI",
      "suggested_filename": "ai_posting_ai_process_airtable_n8nnodeslangchainoutputparserstructured_1.json",
      "category": "AI",
      "business_function": "posting",
      "key_integrations": [
        "formTrigger",
        "airtable",
        "googleDrive",
        "set",
        "stickyNote",
        "extractFromFile",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "airtableTool",
        "@n8n/langchain.outputParserStructured"
      ],
      "trigger_type": "chat",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.airtable": 6,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.airtableTool": 6,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.openAi": 4,
        "n8n-nodes-base.form": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.googleCalendarTool": 1
      },
      "business_value": "Automates posting processes using formTrigger, airtable, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:49.002648"
    },
    {
      "original_filename": "ai_image_automate_webhook_n8nnodeslangchainopenai_webhook_1.json",
      "workflow_name": "Image Generation API",
      "suggested_filename": "ai_image_automate_webhook_n8nnodeslangchainopenai_webhook_1.json",
      "category": "AI",
      "business_function": "image",
      "key_integrations": [
        "webhook",
        "respondToWebhook",
        "stickyNote",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "webhook",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates image processes using webhook, respondToWebhook, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.002948"
    },
    {
      "original_filename": "comm_2157_workflow_2157_automate_postgres_slack_webhook.json",
      "workflow_name": "comm_2157_workflow_2157_automate_postgres_slack_webhook",
      "suggested_filename": "comm_2157_workflow_2157_automate_postgres_slack_webhook.json",
      "category": "COMM",
      "business_function": "2157",
      "key_integrations": [
        "slack",
        "httpRequest",
        "if",
        "stickyNote",
        "set",
        "executeWorkflow",
        "merge",
        "switch",
        "webhook",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "webhook",
      "complexity_score": 34,
      "complexity": "High",
      "total_nodes": 34,
      "node_types": {
        "n8n-nodes-base.slack": 4,
        "n8n-nodes-base.httpRequest": 7,
        "n8n-nodes-base.if": 5,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.postgres": 2
      },
      "business_value": "Automates 2157 processes using slack, httpRequest, if",
      "analysis_timestamp": "2025-06-01T16:06:49.003460"
    },
    {
      "original_filename": "comm_2159_workflow_2159_automate_error_telegram.json",
      "workflow_name": "comm_2159_workflow_2159_automate_error_telegram",
      "suggested_filename": "comm_2159_workflow_2159_automate_error_telegram.json",
      "category": "COMM",
      "business_function": "2159",
      "key_integrations": [
        "errorTrigger",
        "set",
        "stickyNote",
        "telegram"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.errorTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates 2159 processes using errorTrigger, set, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.003611"
    },
    {
      "original_filename": "ai_translate_ai_process_httprequest_manual.json",
      "workflow_name": "Translate cocktail instructions using LingvaNex",
      "suggested_filename": "ai_translate_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "translate",
      "key_integrations": [
        "manualTrigger",
        "lingvaNex",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.lingvaNex": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates translate processes using manualTrigger, lingvaNex, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.003709"
    },
    {
      "original_filename": "data_3631_workflow_3631_automate_postgres_postgres.json",
      "workflow_name": "data_3631_workflow_3631_automate_postgres_postgres",
      "suggested_filename": "data_3631_workflow_3631_automate_postgres_postgres.json",
      "category": "DATA",
      "business_function": "3631",
      "key_integrations": [
        "postgresTool",
        "executeWorkflowTrigger",
        "@n8n/langchain.toolWorkflow",
        "postgres",
        "switch",
        "stickyNote",
        "@n8n/langchain.mcpTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.postgresTool": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 3,
        "n8n-nodes-base.postgres": 3,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.mcpTrigger": 1
      },
      "business_value": "Automates 3631 processes using postgresTool, executeWorkflowTrigger, @n8n/langchain.toolWorkflow",
      "analysis_timestamp": "2025-06-01T16:06:49.003998"
    },
    {
      "original_filename": "util_2538_workflow_2538_automate_httprequest_schedule_webhook.json",
      "workflow_name": "util_2538_workflow_2538_automate_httprequest_schedule_webhook",
      "suggested_filename": "util_2538_workflow_2538_automate_httprequest_schedule_webhook.json",
      "category": "UTIL",
      "business_function": "2538",
      "key_integrations": [
        "webhook",
        "httpRequest",
        "code",
        "scheduleTrigger",
        "stickyNote",
        "if"
      ],
      "trigger_type": "webhook",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 2538 processes using webhook, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:49.004261"
    },
    {
      "original_filename": "comm_984_workflow_984_automate_lemlist_mattermost.json",
      "workflow_name": "comm_984_workflow_984_automate_lemlist_mattermost",
      "suggested_filename": "comm_984_workflow_984_automate_lemlist_mattermost.json",
      "category": "COMM",
      "business_function": "984",
      "key_integrations": [
        "lemlistTrigger",
        "mattermost"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.lemlistTrigger": 1,
        "n8n-nodes-base.mattermost": 1
      },
      "business_value": "Automates 984 processes using lemlistTrigger, mattermost",
      "analysis_timestamp": "2025-06-01T16:06:49.004693"
    },
    {
      "original_filename": "util_2123_workflow_2123_automate_splitinbatches_httprequest_cron.json",
      "workflow_name": "util_2123_workflow_2123_automate_splitinbatches_httprequest_cron",
      "suggested_filename": "util_2123_workflow_2123_automate_splitinbatches_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "2123",
      "key_integrations": [
        "manualTrigger",
        "scheduleTrigger",
        "splitInBatches",
        "httpRequest",
        "xml",
        "splitOut",
        "set",
        "if",
        "wait",
        "stopAndError"
      ],
      "trigger_type": "cron",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.xml": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.stopAndError": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 2123 processes using manualTrigger, scheduleTrigger, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:49.004835"
    },
    {
      "original_filename": "ai_3574_workflow_3574_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangcha.json",
      "workflow_name": "ai_3574_workflow_3574_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangcha",
      "suggested_filename": "ai_3574_workflow_3574_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangcha.json",
      "category": "AI",
      "business_function": "3574",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "manualTrigger",
        "httpRequest",
        "html",
        "splitOut",
        "limit",
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.vectorStoreMilvus",
        "@n8n/langchain.documentDefaultDataLoader"
      ],
      "trigger_type": "chat",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreMilvus": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1
      },
      "business_value": "Automates 3574 processes using @n8n/langchain.lmChatOpenAi, manualTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.005104"
    },
    {
      "original_filename": "data_orders_read_httprequest_schedule_cron.json",
      "workflow_name": "Get all orders in Squarespace to Google Sheets",
      "suggested_filename": "data_orders_read_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "orders",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "splitOut",
        "googleSheets",
        "set",
        "stickyNote",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates orders processes using manualTrigger, httpRequest, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:49.005504"
    },
    {
      "original_filename": "ai_3351_workflow_3351_automate_splitinbatches_n8nnodeslangchaintextclassifier_cr.json",
      "workflow_name": "ai_3351_workflow_3351_automate_splitinbatches_n8nnodeslangchaintextclassifier_cr",
      "suggested_filename": "ai_3351_workflow_3351_automate_splitinbatches_n8nnodeslangchaintextclassifier_cr.json",
      "category": "AI",
      "business_function": "3351",
      "key_integrations": [
        "@n8n/langchain.textClassifier",
        "discord",
        "removeDuplicates",
        "@n8n/langchain.lmChatOpenAi",
        "code",
        "splitInBatches",
        "splitOut",
        "set",
        "merge",
        "filter"
      ],
      "trigger_type": "chat",
      "complexity_score": 30,
      "complexity": "High",
      "total_nodes": 30,
      "node_types": {
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "n8n-nodes-base.discord": 5,
        "n8n-nodes-base.removeDuplicates": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates 3351 processes using @n8n/langchain.textClassifier, discord, removeDuplicates",
      "analysis_timestamp": "2025-06-01T16:06:49.005893"
    },
    {
      "original_filename": "ai_3053_workflow_3053_automate_n8nnodeslangchainmemorybufferwindow_airtable_webh.json",
      "workflow_name": "ai_3053_workflow_3053_automate_n8nnodeslangchainmemorybufferwindow_airtable_webh",
      "suggested_filename": "ai_3053_workflow_3053_automate_n8nnodeslangchainmemorybufferwindow_airtable_webh.json",
      "category": "AI",
      "business_function": "3053",
      "key_integrations": [
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.agent",
        "telegramTrigger",
        "telegram",
        "executeWorkflowTrigger",
        "set",
        "httpRequest",
        "@n8n/langchain.lmChatOpenAi",
        "switch"
      ],
      "trigger_type": "chat",
      "complexity_score": 35,
      "complexity": "High",
      "total_nodes": 35,
      "node_types": {
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.telegram": 3,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.httpRequest": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.airtableTool": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.stickyNote": 11
      },
      "business_value": "Automates 3053 processes using @n8n/langchain.memoryBufferWindow, @n8n/langchain.toolWorkflow, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:49.006351"
    },
    {
      "original_filename": "ai_gmail_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruc.json",
      "workflow_name": "Gmail AI auto-responder: create draft replies to incoming emails",
      "suggested_filename": "ai_gmail_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruc.json",
      "category": "AI",
      "business_function": "gmail",
      "key_integrations": [
        "gmailTrigger",
        "if",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.lmChatOpenAi",
        "stickyNote",
        "gmail",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.gmail": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 2
      },
      "business_value": "Automates gmail processes using gmailTrigger, if, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:49.006694"
    },
    {
      "original_filename": "ai_2413_workflow_2413_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_2413_workflow_2413_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_2413_workflow_2413_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "2413",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolHttpRequest",
        "notion",
        "@n8n/langchain.memoryBufferWindow",
        "set",
        "stickyNote",
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 2,
        "n8n-nodes-base.notion": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1
      },
      "business_value": "Automates 2413 processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.toolHttpRequest, notion",
      "analysis_timestamp": "2025-06-01T16:06:49.007017"
    },
    {
      "original_filename": "ai_dynamically_ai_process_httprequest_webflow.json",
      "workflow_name": "Dynamically create tables in Airtable for your Webflow form submissions",
      "suggested_filename": "ai_dynamically_ai_process_httprequest_webflow.json",
      "category": "AI",
      "business_function": "dynamically",
      "key_integrations": [
        "webflowTrigger",
        "set",
        "code",
        "if",
        "httpRequest",
        "airtable",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.webflowTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.airtable": 4,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates dynamically processes using webflowTrigger, set, code",
      "analysis_timestamp": "2025-06-01T16:06:49.007397"
    },
    {
      "original_filename": "util_snowflake_automate_spreadsheetfile_httprequest.json",
      "workflow_name": "Snowflake CSV",
      "suggested_filename": "util_snowflake_automate_spreadsheetfile_httprequest.json",
      "category": "UTIL",
      "business_function": "snowflake",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "spreadsheetFile",
        "set",
        "snowflake"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.snowflake": 1
      },
      "business_value": "Automates snowflake processes using manualTrigger, httpRequest, spreadsheetFile",
      "analysis_timestamp": "2025-06-01T16:06:49.007540"
    },
    {
      "original_filename": "biz_2116_workflow_2116_automate_hubspot_hunter.json",
      "workflow_name": "biz_2116_workflow_2116_automate_hubspot_hunter",
      "suggested_filename": "biz_2116_workflow_2116_automate_hubspot_hunter.json",
      "category": "BIZ",
      "business_function": "2116",
      "key_integrations": [
        "formTrigger",
        "hunter",
        "if",
        "stickyNote",
        "clearbit",
        "hubspot"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.hunter": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.clearbit": 2,
        "n8n-nodes-base.hubspot": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 2116 processes using formTrigger, hunter, if",
      "analysis_timestamp": "2025-06-01T16:06:49.007924"
    },
    {
      "original_filename": "ai_analyze_analyze_gmail_httprequest_1.json",
      "workflow_name": "ai_analyze_analyze_gmail_httprequest_1",
      "suggested_filename": "ai_analyze_analyze_gmail_httprequest_1.json",
      "category": "AI",
      "business_function": "analyze",
      "key_integrations": [
        "gmailTrigger",
        "microsoftOutlookTrigger",
        "httpRequest",
        "set",
        "code",
        "@n8n/langchain.openAi",
        "jira",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.microsoftOutlookTrigger": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.code": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.jira": 2,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates analyze processes using gmailTrigger, microsoftOutlookTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.008303"
    },
    {
      "original_filename": "data_selection_automate_trello_bannerbear.json",
      "workflow_name": "CFP Selection 2",
      "suggested_filename": "data_selection_automate_trello_bannerbear.json",
      "category": "DATA",
      "business_function": "selection",
      "key_integrations": [
        "manualTrigger",
        "airtable",
        "bannerbear",
        "trello"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.bannerbear": 1,
        "n8n-nodes-base.trello": 1
      },
      "business_value": "Automates selection processes using manualTrigger, airtable, bannerbear",
      "analysis_timestamp": "2025-06-01T16:06:49.008548"
    },
    {
      "original_filename": "util_2590_workflow_2590_automate_emailsend_httprequest_cron.json",
      "workflow_name": "util_2590_workflow_2590_automate_emailsend_httprequest_cron",
      "suggested_filename": "util_2590_workflow_2590_automate_emailsend_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "2590",
      "key_integrations": [
        "httpRequest",
        "splitOut",
        "markdown",
        "scheduleTrigger",
        "stickyNote",
        "emailSend",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 2590 processes using httpRequest, splitOut, markdown",
      "analysis_timestamp": "2025-06-01T16:06:49.008886"
    },
    {
      "original_filename": "util_1828_workflow_1828_automate_mautic_calendly.json",
      "workflow_name": "util_1828_workflow_1828_automate_mautic_calendly",
      "suggested_filename": "util_1828_workflow_1828_automate_mautic_calendly.json",
      "category": "UTIL",
      "business_function": "1828",
      "key_integrations": [
        "calendlyTrigger",
        "mautic",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.calendlyTrigger": 1,
        "n8n-nodes-base.mautic": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 1828 processes using calendlyTrigger, mautic, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.009150"
    },
    {
      "original_filename": "util_send_automate_manual_msg91.json",
      "workflow_name": "Send an SMS using MSG91",
      "suggested_filename": "util_send_automate_manual_msg91.json",
      "category": "UTIL",
      "business_function": "send",
      "key_integrations": [
        "manualTrigger",
        "msg91"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.msg91": 1
      },
      "business_value": "Automates send processes using manualTrigger, msg91",
      "analysis_timestamp": "2025-06-01T16:06:49.009309"
    },
    {
      "original_filename": "ai_brand_analyze_n8nnodeslangchainchainllm_httprequest.json",
      "workflow_name": "Brand Content Extract, Summarize & Sentiment Analysis with Bright Data",
      "suggested_filename": "ai_brand_analyze_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "brand",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "@n8n/langchain.chainLlm",
        "set",
        "@n8n/langchain.informationExtractor",
        "httpRequest",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.chainSummarization",
        "function",
        "readWriteFile"
      ],
      "trigger_type": "chat",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.httpRequest": 4,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 3,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.function": 3,
        "n8n-nodes-base.readWriteFile": 3
      },
      "business_value": "Automates brand processes using manualTrigger, stickyNote, @n8n/langchain.chainLlm",
      "analysis_timestamp": "2025-06-01T16:06:49.009724"
    },
    {
      "original_filename": "util_602_workflow_602_automate_httprequest_manual.json",
      "workflow_name": "util_602_workflow_602_automate_httprequest_manual",
      "suggested_filename": "util_602_workflow_602_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "602",
      "key_integrations": [
        "manualTrigger",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 3
      },
      "business_value": "Automates 602 processes using manualTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.009978"
    },
    {
      "original_filename": "data_1055_workflow_1055_automate_mailcheck_airtable.json",
      "workflow_name": "data_1055_workflow_1055_automate_mailcheck_airtable",
      "suggested_filename": "data_1055_workflow_1055_automate_mailcheck_airtable.json",
      "category": "DATA",
      "business_function": "1055",
      "key_integrations": [
        "airtable",
        "mailcheck",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.mailcheck": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 1055 processes using airtable, mailcheck, set",
      "analysis_timestamp": "2025-06-01T16:06:49.010082"
    },
    {
      "original_filename": "util_smart_automate_pagerduty_amqp.json",
      "workflow_name": "Smart Factory Use Case",
      "suggested_filename": "util_smart_automate_pagerduty_amqp.json",
      "category": "UTIL",
      "business_function": "smart",
      "key_integrations": [
        "if",
        "amqpTrigger",
        "set",
        "crateDb",
        "pagerDuty",
        "function"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.amqpTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.crateDb": 2,
        "n8n-nodes-base.pagerDuty": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates smart processes using if, amqpTrigger, set",
      "analysis_timestamp": "2025-06-01T16:06:49.010322"
    },
    {
      "original_filename": "comm_create_create_uproc_manual.json",
      "workflow_name": "Create a screenshot of a website and send it to a telegram channel",
      "suggested_filename": "comm_create_create_uproc_manual.json",
      "category": "COMM",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "telegram",
        "uproc"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.uproc": 1
      },
      "business_value": "Automates create processes using manualTrigger, telegram, uproc",
      "analysis_timestamp": "2025-06-01T16:06:49.010419"
    },
    {
      "original_filename": "util_scrape_extract_httprequest_manual_2.json",
      "workflow_name": "Scrape Today's Github Trend 13 Top Repositories",
      "suggested_filename": "util_scrape_extract_httprequest_manual_2.json",
      "category": "UTIL",
      "business_function": "scrape",
      "key_integrations": [
        "manualTrigger",
        "html",
        "httpRequest",
        "splitOut",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.html": 3,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates scrape processes using manualTrigger, html, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.010656"
    },
    {
      "original_filename": "comm_3549_workflow_3549_automate_splitinbatches_gmail_cron.json",
      "workflow_name": "comm_3549_workflow_3549_automate_splitinbatches_gmail_cron",
      "suggested_filename": "comm_3549_workflow_3549_automate_splitinbatches_gmail_cron.json",
      "category": "COMM",
      "business_function": "3549",
      "key_integrations": [
        "filter",
        "googleSheets",
        "set",
        "splitInBatches",
        "splitOut",
        "aggregate",
        "gmail",
        "googleDrive",
        "stickyNote",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates 3549 processes using filter, googleSheets, set",
      "analysis_timestamp": "2025-06-01T16:06:49.011027"
    },
    {
      "original_filename": "ai_2491_workflow_2491_automate_nocodb_slack_cron.json",
      "workflow_name": "ai_2491_workflow_2491_automate_nocodb_slack_cron",
      "suggested_filename": "ai_2491_workflow_2491_automate_nocodb_slack_cron.json",
      "category": "AI",
      "business_function": "2491",
      "key_integrations": [
        "httpRequest",
        "stickyNote",
        "manualTrigger",
        "merge",
        "code",
        "splitOut",
        "scheduleTrigger",
        "@n8n/langchain.openAi",
        "nocoDb",
        "slack"
      ],
      "trigger_type": "cron",
      "complexity_score": 33,
      "complexity": "High",
      "total_nodes": 33,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 17,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.nocoDb": 3,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 2491 processes using httpRequest, stickyNote, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.011426"
    },
    {
      "original_filename": "util_create_create_contact_manual_automizy.json",
      "workflow_name": "Create a new list, add a new contact to the list, update the contact, and get all contacts in the list",
      "suggested_filename": "util_create_create_contact_manual_automizy.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "automizy"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.automizy": 4
      },
      "business_value": "Automates create processes using manualTrigger, automizy",
      "analysis_timestamp": "2025-06-01T16:06:49.011696"
    },
    {
      "original_filename": "util_1377_workflow_1377_automate_manual.json",
      "workflow_name": "util_1377_workflow_1377_automate_manual",
      "suggested_filename": "util_1377_workflow_1377_automate_manual.json",
      "category": "UTIL",
      "business_function": "1377",
      "key_integrations": [
        "manualTrigger",
        "function",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 1377 processes using manualTrigger, function, set",
      "analysis_timestamp": "2025-06-01T16:06:49.011795"
    },
    {
      "original_filename": "ai_google_report_n8nnodeslangchaincalculator_emailsend_cron.json",
      "workflow_name": "Google Analytics: Weekly Report",
      "suggested_filename": "ai_google_report_n8nnodeslangchaincalculator_emailsend_cron.json",
      "category": "AI",
      "business_function": "google",
      "key_integrations": [
        "scheduleTrigger",
        "googleAnalytics",
        "emailSend",
        "telegram",
        "@n8n/langchain.openAi",
        "@n8n/langchain.toolCalculator",
        "summarize",
        "code",
        "set",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.googleAnalytics": 2,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.telegram": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "n8n-nodes-base.summarize": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates google processes using scheduleTrigger, googleAnalytics, emailSend",
      "analysis_timestamp": "2025-06-01T16:06:49.012151"
    },
    {
      "original_filename": "util_2835_workflow_2835_automate_ssh_emailsend_cron.json",
      "workflow_name": "util_2835_workflow_2835_automate_ssh_emailsend_cron",
      "suggested_filename": "util_2835_workflow_2835_automate_ssh_emailsend_cron.json",
      "category": "UTIL",
      "business_function": "2835",
      "key_integrations": [
        "httpRequest",
        "code",
        "scheduleTrigger",
        "emailSend",
        "splitOut",
        "filter",
        "set",
        "sort",
        "ssh"
      ],
      "trigger_type": "cron",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.emailSend": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.ssh": 1
      },
      "business_value": "Automates 2835 processes using httpRequest, code, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.012526"
    },
    {
      "original_filename": "util_1328_workflow_1328_automate_manual.json",
      "workflow_name": "util_1328_workflow_1328_automate_manual",
      "suggested_filename": "util_1328_workflow_1328_automate_manual.json",
      "category": "UTIL",
      "business_function": "1328",
      "key_integrations": [
        "manualTrigger",
        "if",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 1328 processes using manualTrigger, if, set",
      "analysis_timestamp": "2025-06-01T16:06:49.012655"
    },
    {
      "original_filename": "util_2371_workflow_2371_automate_schedule_ftp_cron.json",
      "workflow_name": "util_2371_workflow_2371_automate_schedule_ftp_cron",
      "suggested_filename": "util_2371_workflow_2371_automate_schedule_ftp_cron.json",
      "category": "UTIL",
      "business_function": "2371",
      "key_integrations": [
        "ftp",
        "scheduleTrigger",
        "mqtt",
        "mqttTrigger",
        "code",
        "convertToFile"
      ],
      "trigger_type": "cron",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.ftp": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.mqtt": 1,
        "n8n-nodes-base.mqttTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.convertToFile": 1
      },
      "business_value": "Automates 2371 processes using ftp, scheduleTrigger, mqtt",
      "analysis_timestamp": "2025-06-01T16:06:49.012759"
    },
    {
      "original_filename": "util_2459_workflow_2459_automate_httprequest_manual.json",
      "workflow_name": "util_2459_workflow_2459_automate_httprequest_manual",
      "suggested_filename": "util_2459_workflow_2459_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "2459",
      "key_integrations": [
        "manualTrigger",
        "editImage",
        "set",
        "code",
        "httpRequest",
        "merge",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.editImage": 3,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates 2459 processes using manualTrigger, editImage, set",
      "analysis_timestamp": "2025-06-01T16:06:49.013027"
    },
    {
      "original_filename": "data_receipts_automate_httprequest_manual.json",
      "workflow_name": "OCR receipts from Google Drive",
      "suggested_filename": "data_receipts_automate_httprequest_manual.json",
      "category": "DATA",
      "business_function": "receipts",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "httpRequest",
        "code",
        "googleDriveTrigger",
        "googleDrive",
        "merge",
        "googleSheets"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.googleSheets": 2
      },
      "business_value": "Automates receipts processes using manualTrigger, stickyNote, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.013327"
    },
    {
      "original_filename": "ai_code_automate_github_googlesheets.json",
      "workflow_name": "Code Review workflow",
      "suggested_filename": "ai_code_automate_github_googlesheets.json",
      "category": "AI",
      "business_function": "code",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "githubTrigger",
        "httpRequest",
        "code",
        "github",
        "googleSheetsTool",
        "stickyNote",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.githubTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.github": 2,
        "n8n-nodes-base.googleSheetsTool": 1,
        "n8n-nodes-base.stickyNote": 6,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates code processes using @n8n/langchain.lmChatOpenAi, githubTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.013595"
    },
    {
      "original_filename": "ai_chatbot_ai_process_n8nnodeslangchainlmchatazureopenai_httprequest_webhook.json",
      "workflow_name": "Chatbot AI",
      "suggested_filename": "ai_chatbot_ai_process_n8nnodeslangchainlmchatazureopenai_httprequest_webhook.json",
      "category": "AI",
      "business_function": "chatbot",
      "key_integrations": [
        "httpRequest",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatAzureOpenAi",
        "stickyNote",
        "webhook",
        "if",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.httpRequest": 3,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates chatbot processes using httpRequest, @n8n/langchain.agent, @n8n/langchain.lmChatAzureOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.013930"
    },
    {
      "original_filename": "biz_stripe_sync_stripe_httprequest.json",
      "workflow_name": "Stripe Payment Order Sync – Auto Retrieve Customer & Product Purchased",
      "suggested_filename": "biz_stripe_sync_stripe_httprequest.json",
      "category": "BIZ",
      "business_function": "stripe",
      "key_integrations": [
        "stripeTrigger",
        "httpRequest",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.stripeTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates stripe processes using stripeTrigger, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:49.014190"
    },
    {
      "original_filename": "util_992_workflow_992_automate_wise.json",
      "workflow_name": "util_992_workflow_992_automate_wise",
      "suggested_filename": "util_992_workflow_992_automate_wise.json",
      "category": "UTIL",
      "business_function": "992",
      "key_integrations": [
        "wise"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.wise": 4
      },
      "business_value": "Automates 992 processes using wise",
      "analysis_timestamp": "2025-06-01T16:06:49.014423"
    },
    {
      "original_filename": "comm_2455_workflow_2455_automate_splitinbatches_gmail_cron.json",
      "workflow_name": "comm_2455_workflow_2455_automate_splitinbatches_gmail_cron",
      "suggested_filename": "comm_2455_workflow_2455_automate_splitinbatches_gmail_cron.json",
      "category": "COMM",
      "business_function": "2455",
      "key_integrations": [
        "code",
        "gmail",
        "splitInBatches",
        "wait",
        "filter",
        "set",
        "httpRequest",
        "stickyNote",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates 2455 processes using code, gmail, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:49.015801"
    },
    {
      "original_filename": "comm_receive_automate_amqp.json",
      "workflow_name": "Receive messages for an ActiveMQ queue via AMQP Trigger",
      "suggested_filename": "comm_receive_automate_amqp.json",
      "category": "COMM",
      "business_function": "receive",
      "key_integrations": [
        "amqpTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.amqpTrigger": 1
      },
      "business_value": "Automates receive processes using amqpTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.016000"
    },
    {
      "original_filename": "ai_3314_workflow_3314_automate_gmail_httprequest.json",
      "workflow_name": "ai_3314_workflow_3314_automate_gmail_httprequest",
      "suggested_filename": "ai_3314_workflow_3314_automate_gmail_httprequest.json",
      "category": "AI",
      "business_function": "3314",
      "key_integrations": [
        "formTrigger",
        "httpRequest",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.agent",
        "merge",
        "aggregate",
        "code",
        "gmail",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates 3314 processes using formTrigger, httpRequest, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.016387"
    },
    {
      "original_filename": "ai_baserow_automate_markdown_baserow_webhook.json",
      "workflow_name": "Baserow markdown to html",
      "suggested_filename": "ai_baserow_automate_markdown_baserow_webhook.json",
      "category": "AI",
      "business_function": "baserow",
      "key_integrations": [
        "baserow",
        "if",
        "webhook",
        "markdown",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.baserow": 4,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.markdown": 2,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates baserow processes using baserow, if, webhook",
      "analysis_timestamp": "2025-06-01T16:06:49.016709"
    },
    {
      "original_filename": "data_live_validate_splitinbatches_httprequest.json",
      "workflow_name": "Live link checker",
      "suggested_filename": "data_live_validate_splitinbatches_httprequest.json",
      "category": "DATA",
      "business_function": "live",
      "key_integrations": [
        "splitInBatches",
        "manualTrigger",
        "googleSheets",
        "code",
        "httpRequest",
        "wait",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates live processes using splitInBatches, manualTrigger, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:49.017086"
    },
    {
      "original_filename": "ai_mongodb_automate_n8nnodeslangchainmemorybufferwindow_mongodb_1.json",
      "workflow_name": "MongoDB Agent",
      "suggested_filename": "ai_mongodb_automate_n8nnodeslangchainmemorybufferwindow_mongodb_1.json",
      "category": "AI",
      "business_function": "mongodb",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "mongoDbTool",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.agent",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.mongoDbTool": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates mongodb processes using @n8n/langchain.lmChatOpenAi, mongoDbTool, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:49.017396"
    },
    {
      "original_filename": "ai_scrape_analyze_httprequest_manual_2.json",
      "workflow_name": "Scrape Trustpilot Reviews with DeepSeek, Analyze Sentiment with OpenAI",
      "suggested_filename": "ai_scrape_analyze_httprequest_manual_2.json",
      "category": "AI",
      "business_function": "scrape",
      "key_integrations": [
        "splitOut",
        "@n8n/langchain.informationExtractor",
        "if",
        "manualTrigger",
        "limit",
        "stickyNote",
        "set",
        "httpRequest",
        "html",
        "googleSheets"
      ],
      "trigger_type": "chat",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.googleSheets": 3,
        "@n8n/n8n-nodes-langchain.sentimentAnalysis": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2
      },
      "business_value": "Automates scrape processes using splitOut, @n8n/langchain.informationExtractor, if",
      "analysis_timestamp": "2025-06-01T16:06:49.017764"
    },
    {
      "original_filename": "biz_automate_automate_respondtowebhook_httprequest_webhook.json",
      "workflow_name": "Automate Drive-To-Store Lead Generation System (with coupon) on SuiteCRM",
      "suggested_filename": "biz_automate_automate_respondtowebhook_httprequest_webhook.json",
      "category": "BIZ",
      "business_function": "automate",
      "key_integrations": [
        "httpRequest",
        "webhook",
        "formTrigger",
        "googleSheets",
        "set",
        "respondToWebhook",
        "if",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates automate processes using httpRequest, webhook, formTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.018055"
    },
    {
      "original_filename": "biz_1334_workflow_1334_automate_pipedrive_hubspot_cron.json",
      "workflow_name": "biz_1334_workflow_1334_automate_pipedrive_hubspot_cron",
      "suggested_filename": "biz_1334_workflow_1334_automate_pipedrive_hubspot_cron.json",
      "category": "BIZ",
      "business_function": "1334",
      "key_integrations": [
        "hubspot",
        "pipedrive",
        "merge",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.hubspot": 2,
        "n8n-nodes-base.pipedrive": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates 1334 processes using hubspot, pipedrive, merge",
      "analysis_timestamp": "2025-06-01T16:06:49.018219"
    },
    {
      "original_filename": "ai_jira_automate_n8nnodeslangchainmemorybufferwindow_googledocs.json",
      "workflow_name": "Jira Retrospective",
      "suggested_filename": "ai_jira_automate_n8nnodeslangchainmemorybufferwindow_googledocs.json",
      "category": "AI",
      "business_function": "jira",
      "key_integrations": [
        "jira",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "summarize",
        "googleDocs",
        "jiraTrigger",
        "if",
        "@n8n/langchain.memoryBufferWindow",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.jira": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.summarize": 1,
        "n8n-nodes-base.googleDocs": 1,
        "n8n-nodes-base.jiraTrigger": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates jira processes using jira, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.018523"
    },
    {
      "original_filename": "ai_google_automate_error_httprequest.json",
      "workflow_name": "google drive to instagram, tiktok and youtube",
      "suggested_filename": "ai_google_automate_error_httprequest.json",
      "category": "AI",
      "business_function": "google",
      "key_integrations": [
        "googleDriveTrigger",
        "googleDrive",
        "errorTrigger",
        "telegram",
        "if",
        "stickyNote",
        "@n8n/langchain.openAi",
        "writeBinaryFile",
        "readBinaryFile",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.errorTrigger": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.writeBinaryFile": 1,
        "n8n-nodes-base.readBinaryFile": 3,
        "n8n-nodes-base.httpRequest": 3
      },
      "business_value": "Automates google processes using googleDriveTrigger, googleDrive, errorTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.018841"
    },
    {
      "original_filename": "ai_2235_workflow_2235_automate_telegram_telegram.json",
      "workflow_name": "ai_2235_workflow_2235_automate_telegram_telegram",
      "suggested_filename": "ai_2235_workflow_2235_automate_telegram_telegram.json",
      "category": "AI",
      "business_function": "2235",
      "key_integrations": [
        "telegramTrigger",
        "telegram",
        "stickyNote",
        "wait",
        "@n8n/langchain.openAi",
        "switch"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.wait": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates 2235 processes using telegramTrigger, telegram, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.019133"
    },
    {
      "original_filename": "ai_2234_workflow_2234_automate_n8nnodeslangchainchainsummarization_schedule_cron.json",
      "workflow_name": "ai_2234_workflow_2234_automate_n8nnodeslangchainchainsummarization_schedule_cron",
      "suggested_filename": "ai_2234_workflow_2234_automate_n8nnodeslangchainchainsummarization_schedule_cron.json",
      "category": "AI",
      "business_function": "2234",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "scheduleTrigger",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.openAi",
        "telegram",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 3,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.telegram": 3,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 2234 processes using @n8n/langchain.lmChatOpenAi, scheduleTrigger, @n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
      "analysis_timestamp": "2025-06-01T16:06:49.019408"
    },
    {
      "original_filename": "ai_3505_workflow_3505_automate_gmail_httprequest.json",
      "workflow_name": "ai_3505_workflow_3505_automate_gmail_httprequest",
      "suggested_filename": "ai_3505_workflow_3505_automate_gmail_httprequest.json",
      "category": "AI",
      "business_function": "3505",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "@n8n/langchain.informationExtractor",
        "set",
        "@n8n/langchain.lmChatGoogleGemini",
        "convertToFile",
        "code",
        "sort",
        "stickyNote",
        "splitOut"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates 3505 processes using manualTrigger, httpRequest, @n8n/langchain.informationExtractor",
      "analysis_timestamp": "2025-06-01T16:06:49.019708"
    },
    {
      "original_filename": "ai_save_automate_gmail_n8nnodeslangchainlmopenai.json",
      "workflow_name": "Save New Sales Opportunities",
      "suggested_filename": "ai_save_automate_gmail_n8nnodeslangchainlmopenai.json",
      "category": "AI",
      "business_function": "save",
      "key_integrations": [
        "gmailTrigger",
        "odoo",
        "@n8n/langchain.lmOpenAi",
        "stickyNote",
        "@n8n/langchain.chainSummarization"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.odoo": 1,
        "@n8n/n8n-nodes-langchain.lmOpenAi": 1,
        "n8n-nodes-base.stickyNote": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1
      },
      "business_value": "Automates save processes using gmailTrigger, odoo, @n8n/langchain.lmOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.019967"
    },
    {
      "original_filename": "ecommerce_shopify_automate_crypto_mautic_webhook.json",
      "workflow_name": "Shopify + Mautic",
      "suggested_filename": "ecommerce_shopify_automate_crypto_mautic_webhook.json",
      "category": "ECOMMERCE",
      "business_function": "shopify",
      "key_integrations": [
        "shopifyTrigger",
        "if",
        "mautic",
        "webhook",
        "crypto",
        "graphql",
        "stickyNote",
        "set"
      ],
      "trigger_type": "webhook",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "n8n-nodes-base.shopifyTrigger": 1,
        "n8n-nodes-base.if": 6,
        "n8n-nodes-base.noOp": 3,
        "n8n-nodes-base.mautic": 4,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.crypto": 1,
        "n8n-nodes-base.graphql": 3,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates shopify processes using shopifyTrigger, if, mautic",
      "analysis_timestamp": "2025-06-01T16:06:49.020268"
    },
    {
      "original_filename": "data_3332_workflow_3332_automate_googlesheets_googledrive.json",
      "workflow_name": "data_3332_workflow_3332_automate_googlesheets_googledrive",
      "suggested_filename": "data_3332_workflow_3332_automate_googlesheets_googledrive.json",
      "category": "DATA",
      "business_function": "3332",
      "key_integrations": [
        "googleSheetsTrigger",
        "@custom-js/pdf-toolkit.websiteScreenshot",
        "googleDrive"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.googleSheetsTrigger": 1,
        "@custom-js/n8n-nodes-pdf-toolkit.websiteScreenshot": 1,
        "n8n-nodes-base.googleDrive": 1
      },
      "business_value": "Automates 3332 processes using googleSheetsTrigger, @custom-js/pdf-toolkit.websiteScreenshot, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:49.020419"
    },
    {
      "original_filename": "ai_conversational_ai_process_n8nnodeslangchainmemorybufferwindow_respondtowebhoo.json",
      "workflow_name": "ai_conversational_ai_process_n8nnodeslangchainmemorybufferwindow_respondtowebhoo",
      "suggested_filename": "ai_conversational_ai_process_n8nnodeslangchainmemorybufferwindow_respondtowebhoo.json",
      "category": "AI",
      "business_function": "conversational",
      "key_integrations": [
        "if",
        "set",
        "@n8n/langchain.memoryManager",
        "stickyNote",
        "formTrigger",
        "form",
        "crypto",
        "redis",
        "respondToWebhook",
        "@n8n/langchain.memoryBufferWindow"
      ],
      "trigger_type": "webhook",
      "complexity_score": 40,
      "complexity": "High",
      "total_nodes": 40,
      "node_types": {
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.set": 7,
        "@n8n/n8n-nodes-langchain.memoryManager": 1,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.form": 2,
        "n8n-nodes-base.crypto": 1,
        "n8n-nodes-base.redis": 6,
        "n8n-nodes-base.respondToWebhook": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.html": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatGroq": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.splitOut": 1
      },
      "business_value": "Automates conversational processes using if, set, @n8n/langchain.memoryManager",
      "analysis_timestamp": "2025-06-01T16:06:49.020901"
    },
    {
      "original_filename": "content_2889_workflow_2889_automate_wordpress_manual.json",
      "workflow_name": "content_2889_workflow_2889_automate_wordpress_manual",
      "suggested_filename": "content_2889_workflow_2889_automate_wordpress_manual.json",
      "category": "CONTENT",
      "business_function": "2889",
      "key_integrations": [
        "manualTrigger",
        "wordpress",
        "set",
        "convertToFile",
        "googleDrive",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 2889 processes using manualTrigger, wordpress, set",
      "analysis_timestamp": "2025-06-01T16:06:49.021226"
    },
    {
      "original_filename": "data_1374_workflow_1374_automate_notion_webhook_webhook.json",
      "workflow_name": "data_1374_workflow_1374_automate_notion_webhook_webhook",
      "suggested_filename": "data_1374_workflow_1374_automate_notion_webhook_webhook.json",
      "category": "DATA",
      "business_function": "1374",
      "key_integrations": [
        "function",
        "merge",
        "notion",
        "set",
        "if",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.function": 3,
        "n8n-nodes-base.merge": 5,
        "n8n-nodes-base.notion": 7,
        "n8n-nodes-base.set": 6,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 1374 processes using function, merge, notion",
      "analysis_timestamp": "2025-06-01T16:06:49.021527"
    },
    {
      "original_filename": "ai_document_ai_process_telegram_extractfromfile.json",
      "workflow_name": "AI Document Assistant via Telegram + Supabase",
      "suggested_filename": "ai_document_ai_process_telegram_extractfromfile.json",
      "category": "AI",
      "business_function": "document",
      "key_integrations": [
        "@n8n/langchain.lmChatGoogleGemini",
        "openWeatherMapTool",
        "@n8n/langchain.agent",
        "telegramTrigger",
        "telegram",
        "@n8n/langchain.toolThink",
        "@n8n/langchain.embeddingsGoogleGemini",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "extractFromFile"
      ],
      "trigger_type": "chat",
      "complexity_score": 28,
      "complexity": "High",
      "total_nodes": 28,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.openWeatherMapTool": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.telegram": 7,
        "@n8n/n8n-nodes-langchain.toolThink": 1,
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase": 2,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates document processes using @n8n/langchain.lmChatGoogleGemini, openWeatherMapTool, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:49.021964"
    },
    {
      "original_filename": "comm_916_workflow_916_automate_typeform_slack.json",
      "workflow_name": "comm_916_workflow_916_automate_typeform_slack",
      "suggested_filename": "comm_916_workflow_916_automate_typeform_slack.json",
      "category": "COMM",
      "business_function": "916",
      "key_integrations": [
        "typeformTrigger",
        "set",
        "airtable",
        "slack"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates 916 processes using typeformTrigger, set, airtable",
      "analysis_timestamp": "2025-06-01T16:06:49.022330"
    },
    {
      "original_filename": "data_1076_workflow_1076_automate_googlesheets_webhook_webhook.json",
      "workflow_name": "data_1076_workflow_1076_automate_googlesheets_webhook_webhook",
      "suggested_filename": "data_1076_workflow_1076_automate_googlesheets_webhook_webhook.json",
      "category": "DATA",
      "business_function": "1076",
      "key_integrations": [
        "googleSheets",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 1076 processes using googleSheets, webhook",
      "analysis_timestamp": "2025-06-01T16:06:49.022462"
    },
    {
      "original_filename": "ai_email_ai_process_sendgrid_hunter.json",
      "workflow_name": "Email form",
      "suggested_filename": "ai_email_ai_process_sendgrid_hunter.json",
      "category": "AI",
      "business_function": "email",
      "key_integrations": [
        "if",
        "hunter",
        "formTrigger",
        "sendGrid",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.hunter": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.sendGrid": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates email processes using if, hunter, formTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.022607"
    },
    {
      "original_filename": "ai_3840_workflow_3840_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "workflow_name": "ai_3840_workflow_3840_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput",
      "suggested_filename": "ai_3840_workflow_3840_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "3840",
      "key_integrations": [
        "scheduleTrigger",
        "googleSheets",
        "set",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.outputParserStructured",
        "httpRequest",
        "facebookGraphApi",
        "wait",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 3,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 3,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 3,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.facebookGraphApi": 2,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.stickyNote": 8
      },
      "business_value": "Automates 3840 processes using scheduleTrigger, googleSheets, set",
      "analysis_timestamp": "2025-06-01T16:06:49.023059"
    },
    {
      "original_filename": "biz_2111_workflow_2111_automate_hubspot_httprequest.json",
      "workflow_name": "biz_2111_workflow_2111_automate_hubspot_httprequest",
      "suggested_filename": "biz_2111_workflow_2111_automate_hubspot_httprequest.json",
      "category": "BIZ",
      "business_function": "2111",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "set",
        "if",
        "hubspot",
        "hubspotTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.hubspot": 2,
        "n8n-nodes-base.hubspotTrigger": 1
      },
      "business_value": "Automates 2111 processes using stickyNote, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:49.023367"
    },
    {
      "original_filename": "ai_2771_workflow_2771_automate_splitinbatches_n8nnodeslangchainchainllm_webhook.json",
      "workflow_name": "ai_2771_workflow_2771_automate_splitinbatches_n8nnodeslangchainchainllm_webhook",
      "suggested_filename": "ai_2771_workflow_2771_automate_splitinbatches_n8nnodeslangchainchainllm_webhook.json",
      "category": "AI",
      "business_function": "2771",
      "key_integrations": [
        "switch",
        "code",
        "httpRequest",
        "extractFromFile",
        "set",
        "splitInBatches",
        "@n8n/langchain.chainLlm",
        "filter",
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 51,
      "complexity": "High",
      "total_nodes": 51,
      "node_types": {
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.extractFromFile": 2,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.noOp": 4,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.stickyNote": 15,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.airtable": 6,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates 2771 processes using switch, code, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.023900"
    },
    {
      "original_filename": "util_890_workflow_890_automate_spreadsheetfile_manual.json",
      "workflow_name": "util_890_workflow_890_automate_spreadsheetfile_manual",
      "suggested_filename": "util_890_workflow_890_automate_spreadsheetfile_manual.json",
      "category": "UTIL",
      "business_function": "890",
      "key_integrations": [
        "manualTrigger",
        "spreadsheetFile",
        "readBinaryFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.readBinaryFile": 1
      },
      "business_value": "Automates 890 processes using manualTrigger, spreadsheetFile, readBinaryFile",
      "analysis_timestamp": "2025-06-01T16:06:49.024183"
    },
    {
      "original_filename": "ai_respond_ai_process_n8nnodeslangchainmemorybufferwindow_whatsapp.json",
      "workflow_name": "ai_respond_ai_process_n8nnodeslangchainmemorybufferwindow_whatsapp",
      "suggested_filename": "ai_respond_ai_process_n8nnodeslangchainmemorybufferwindow_whatsapp.json",
      "category": "AI",
      "business_function": "respond",
      "key_integrations": [
        "whatsAppTrigger",
        "whatsApp",
        "httpRequest",
        "@n8n/langchain.memoryBufferWindow",
        "set",
        "splitOut",
        "@n8n/langchain.toolWikipedia",
        "switch",
        "stickyNote",
        "wait"
      ],
      "trigger_type": "chat",
      "complexity_score": 35,
      "complexity": "High",
      "total_nodes": 35,
      "node_types": {
        "n8n-nodes-base.whatsAppTrigger": 1,
        "n8n-nodes-base.whatsApp": 4,
        "n8n-nodes-base.httpRequest": 5,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.stickyNote": 11,
        "n8n-nodes-base.wait": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 3,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates respond processes using whatsAppTrigger, whatsApp, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.024624"
    },
    {
      "original_filename": "util_2305_workflow_2305_automate_readwritefile_httprequest.json",
      "workflow_name": "util_2305_workflow_2305_automate_readwritefile_httprequest",
      "suggested_filename": "util_2305_workflow_2305_automate_readwritefile_httprequest.json",
      "category": "UTIL",
      "business_function": "2305",
      "key_integrations": [
        "manualTrigger",
        "readWriteFile",
        "stickyNote",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.httpRequest": 2
      },
      "business_value": "Automates 2305 processes using manualTrigger, readWriteFile, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.024971"
    },
    {
      "original_filename": "ai_siri_ai_process_webhook_n8nnodeslangchainlmchatopenai_webhook.json",
      "workflow_name": "ai_siri_ai_process_webhook_n8nnodeslangchainlmchatopenai_webhook",
      "suggested_filename": "ai_siri_ai_process_webhook_n8nnodeslangchainlmchatopenai_webhook.json",
      "category": "AI",
      "business_function": "siri",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "stickyNote",
        "respondToWebhook",
        "@n8n/langchain.agent",
        "webhook"
      ],
      "trigger_type": "chat",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.respondToWebhook": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates siri processes using @n8n/langchain.lmChatOpenAi, stickyNote, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:49.025193"
    },
    {
      "original_filename": "util_3996_workflow_3996_automate_n8n_manual.json",
      "workflow_name": "util_3996_workflow_3996_automate_n8n_manual",
      "suggested_filename": "util_3996_workflow_3996_automate_n8n_manual.json",
      "category": "UTIL",
      "business_function": "3996",
      "key_integrations": [
        "n8n",
        "if",
        "manualTrigger",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.n8n": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 3996 processes using n8n, if, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.025403"
    },
    {
      "original_filename": "util_receive_update_wufoo.json",
      "workflow_name": "Receive updates when a form is submitted in Wufoo",
      "suggested_filename": "util_receive_update_wufoo.json",
      "category": "UTIL",
      "business_function": "receive",
      "key_integrations": [
        "wufooTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.wufooTrigger": 1
      },
      "business_value": "Automates receive processes using wufooTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.025594"
    },
    {
      "original_filename": "util_2274_workflow_2274_automate_n8ntrainingcustomerdatastore_webhook_webhook.json",
      "workflow_name": "util_2274_workflow_2274_automate_n8ntrainingcustomerdatastore_webhook_webhook",
      "suggested_filename": "util_2274_workflow_2274_automate_n8ntrainingcustomerdatastore_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "2274",
      "key_integrations": [
        "n8nTrainingCustomerDatastore",
        "set",
        "aggregate",
        "stickyNote",
        "webhook",
        "respondToWebhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.n8nTrainingCustomerDatastore": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1
      },
      "business_value": "Automates 2274 processes using n8nTrainingCustomerDatastore, set, aggregate",
      "analysis_timestamp": "2025-06-01T16:06:49.025829"
    },
    {
      "original_filename": "ai_2945_workflow_2945_automate_splitinbatches_n8nnodeslangchainoutputparserstruc.json",
      "workflow_name": "ai_2945_workflow_2945_automate_splitinbatches_n8nnodeslangchainoutputparserstruc",
      "suggested_filename": "ai_2945_workflow_2945_automate_splitinbatches_n8nnodeslangchainoutputparserstruc.json",
      "category": "AI",
      "business_function": "2945",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "googleSheets",
        "splitInBatches",
        "wait"
      ],
      "trigger_type": "chat",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.wait": 1
      },
      "business_value": "Automates 2945 processes using manualTrigger, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.026115"
    },
    {
      "original_filename": "util_2451_workflow_2451_automate_manual_compression.json",
      "workflow_name": "util_2451_workflow_2451_automate_manual_compression",
      "suggested_filename": "util_2451_workflow_2451_automate_manual_compression.json",
      "category": "UTIL",
      "business_function": "2451",
      "key_integrations": [
        "manualTrigger",
        "awsS3",
        "aggregate",
        "stickyNote",
        "compression"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.awsS3": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.compression": 1
      },
      "business_value": "Automates 2451 processes using manualTrigger, awsS3, aggregate",
      "analysis_timestamp": "2025-06-01T16:06:49.026335"
    },
    {
      "original_filename": "util_3_workflow_3_automate_httprequest_webhook_webhook.json",
      "workflow_name": "util_3_workflow_3_automate_httprequest_webhook_webhook",
      "suggested_filename": "util_3_workflow_3_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "3",
      "key_integrations": [
        "webhook",
        "editImage",
        "httpRequest"
      ],
      "trigger_type": "webhook",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.editImage": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 3 processes using webhook, editImage, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.026470"
    },
    {
      "original_filename": "util_986_workflow_986_automate_openweathermap_webhook_webhook.json",
      "workflow_name": "util_986_workflow_986_automate_openweathermap_webhook_webhook",
      "suggested_filename": "util_986_workflow_986_automate_openweathermap_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "986",
      "key_integrations": [
        "openWeatherMap",
        "webhook",
        "set"
      ],
      "trigger_type": "webhook",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.openWeatherMap": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 2
      },
      "business_value": "Automates 986 processes using openWeatherMap, webhook, set",
      "analysis_timestamp": "2025-06-01T16:06:49.026770"
    },
    {
      "original_filename": "util_1821_workflow_1821_automate_asana_webhook_webhook.json",
      "workflow_name": "util_1821_workflow_1821_automate_asana_webhook_webhook",
      "suggested_filename": "util_1821_workflow_1821_automate_asana_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "1821",
      "key_integrations": [
        "zendesk",
        "asana",
        "if",
        "function",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.zendesk": 2,
        "n8n-nodes-base.asana": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 1821 processes using zendesk, asana, if",
      "analysis_timestamp": "2025-06-01T16:06:49.026929"
    },
    {
      "original_filename": "comm_1039_workflow_1039_automate_emelia_mattermost.json",
      "workflow_name": "comm_1039_workflow_1039_automate_emelia_mattermost",
      "suggested_filename": "comm_1039_workflow_1039_automate_emelia_mattermost.json",
      "category": "COMM",
      "business_function": "1039",
      "key_integrations": [
        "mattermost",
        "emeliaTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.mattermost": 1,
        "n8n-nodes-base.emeliaTrigger": 1
      },
      "business_value": "Automates 1039 processes using mattermost, emeliaTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.027056"
    },
    {
      "original_filename": "ai_2346_workflow_2346_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_2346_workflow_2346_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_2346_workflow_2346_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "2346",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "redis",
        "if",
        "@n8n/langchain.memoryBufferWindow",
        "twilioTrigger",
        "stickyNote",
        "twilio",
        "wait",
        "@n8n/langchain.memoryManager",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.redis": 2,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 2,
        "n8n-nodes-base.twilioTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.twilio": 1,
        "n8n-nodes-base.wait": 1,
        "@n8n/n8n-nodes-langchain.memoryManager": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates 2346 processes using @n8n/langchain.lmChatOpenAi, redis, if",
      "analysis_timestamp": "2025-06-01T16:06:49.027349"
    },
    {
      "original_filename": "util_2368_workflow_2368_automate_httprequest.json",
      "workflow_name": "util_2368_workflow_2368_automate_httprequest",
      "suggested_filename": "util_2368_workflow_2368_automate_httprequest.json",
      "category": "UTIL",
      "business_function": "2368",
      "key_integrations": [
        "httpRequest",
        "splitOut",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.splitOut": 3,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates 2368 processes using httpRequest, splitOut, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.027661"
    },
    {
      "original_filename": "ai_telegram_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "workflow_name": "Telegram-bot AI Da Nang",
      "suggested_filename": "ai_telegram_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "category": "AI",
      "business_function": "telegram",
      "key_integrations": [
        "telegram",
        "set",
        "googleSheets",
        "code",
        "@n8n/langchain.agent",
        "telegramTrigger",
        "@n8n/langchain.chatTrigger",
        "switch",
        "@n8n/langchain.lmChatOpenRouter",
        "@n8n/langchain.memoryBufferWindow"
      ],
      "trigger_type": "chat",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.noOp": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.stickyNote": 8
      },
      "business_value": "Automates telegram processes using telegram, set, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:49.028029"
    },
    {
      "original_filename": "data_1_workflow_1_automate_spreadsheetfile_postgres.json",
      "workflow_name": "data_1_workflow_1_automate_spreadsheetfile_postgres",
      "suggested_filename": "data_1_workflow_1_automate_spreadsheetfile_postgres.json",
      "category": "DATA",
      "business_function": "1",
      "key_integrations": [
        "readBinaryFile",
        "spreadsheetFile",
        "postgres"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.readBinaryFile": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.postgres": 1
      },
      "business_value": "Automates 1 processes using readBinaryFile, spreadsheetFile, postgres",
      "analysis_timestamp": "2025-06-01T16:06:49.028164"
    },
    {
      "original_filename": "ai_sentiment_analyze_splitinbatches_removeduplicates_cron_1.json",
      "workflow_name": "ai_sentiment_analyze_splitinbatches_removeduplicates_cron_1",
      "suggested_filename": "ai_sentiment_analyze_splitinbatches_removeduplicates_cron_1.json",
      "category": "AI",
      "business_function": "sentiment",
      "key_integrations": [
        "splitOut",
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "@n8n/langchain.informationExtractor",
        "splitInBatches",
        "airtable",
        "airtableTrigger",
        "switch",
        "graphql",
        "scheduleTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.airtableTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.graphql": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates sentiment processes using splitOut, @n8n/langchain.lmChatOpenAi, set",
      "analysis_timestamp": "2025-06-01T16:06:49.028520"
    },
    {
      "original_filename": "comm_send_automate_zulip_manual.json",
      "workflow_name": "Send a private message on Zulip",
      "suggested_filename": "comm_send_automate_zulip_manual.json",
      "category": "COMM",
      "business_function": "send",
      "key_integrations": [
        "manualTrigger",
        "zulip"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.zulip": 1
      },
      "business_value": "Automates send processes using manualTrigger, zulip",
      "analysis_timestamp": "2025-06-01T16:06:49.028656"
    },
    {
      "original_filename": "content_2211_workflow_2211_automate_manual_youtube.json",
      "workflow_name": "content_2211_workflow_2211_automate_manual_youtube",
      "suggested_filename": "content_2211_workflow_2211_automate_manual_youtube.json",
      "category": "CONTENT",
      "business_function": "2211",
      "key_integrations": [
        "set",
        "if",
        "youTube",
        "stickyNote",
        "manualTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.youTube": 2,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates 2211 processes using set, if, youTube",
      "analysis_timestamp": "2025-06-01T16:06:49.028940"
    },
    {
      "original_filename": "analytics_google_automate_googleanalytics_httprequest_cron_2.json",
      "workflow_name": "Google analytics template",
      "suggested_filename": "analytics_google_automate_googleanalytics_httprequest_cron_2.json",
      "category": "ANALYTICS",
      "business_function": "google",
      "key_integrations": [
        "scheduleTrigger",
        "manualTrigger",
        "stickyNote",
        "googleAnalytics",
        "code",
        "httpRequest",
        "baserow"
      ],
      "trigger_type": "cron",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.googleAnalytics": 6,
        "n8n-nodes-base.code": 6,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.baserow": 1
      },
      "business_value": "Automates google processes using scheduleTrigger, manualTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.029364"
    },
    {
      "original_filename": "ai_bamboohr_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchain_1.json",
      "workflow_name": "BambooHR AI-Powered Company Policies and Benefits Chatbot",
      "suggested_filename": "ai_bamboohr_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchain_1.json",
      "category": "AI",
      "business_function": "bamboohr",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolVectorStore",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.outputParserStructured"
      ],
      "trigger_type": "chat",
      "complexity_score": 50,
      "complexity": "High",
      "total_nodes": 50,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 6,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 11,
        "n8n-nodes-base.bambooHr": 5,
        "n8n-nodes-base.filter": 4,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.aggregate": 2,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates bamboohr processes using manualTrigger, @n8n/langchain.documentDefaultDataLoader, @n8n/langchain.embeddingsOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.029929"
    },
    {
      "original_filename": "ai_reconcile_ai_process_n8nnodeslangchainoutputparserstructured_readwritefile.json",
      "workflow_name": "ai_reconcile_ai_process_n8nnodeslangchainoutputparserstructured_readwritefile",
      "suggested_filename": "ai_reconcile_ai_process_n8nnodeslangchainoutputparserstructured_readwritefile.json",
      "category": "AI",
      "business_function": "reconcile",
      "key_integrations": [
        "localFileTrigger",
        "@n8n/langchain.toolCode",
        "@n8n/langchain.outputParserStructured",
        "readWriteFile",
        "extractFromFile",
        "splitOut",
        "stickyNote",
        "set",
        "code",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.localFileTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolCode": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates reconcile processes using localFileTrigger, @n8n/langchain.toolCode, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:49.030317"
    },
    {
      "original_filename": "util_read_read_httprequest_xml.json",
      "workflow_name": "Read sitemap and filter URLs",
      "suggested_filename": "util_read_read_httprequest_xml.json",
      "category": "UTIL",
      "business_function": "read",
      "key_integrations": [
        "manualTrigger",
        "set",
        "splitOut",
        "httpRequest",
        "xml",
        "filter",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.xml": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates read processes using manualTrigger, set, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:49.030569"
    },
    {
      "original_filename": "util_2155_workflow_2155_automate_httprequest_webhook_webhook.json",
      "workflow_name": "util_2155_workflow_2155_automate_httprequest_webhook_webhook",
      "suggested_filename": "util_2155_workflow_2155_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "2155",
      "key_integrations": [
        "splitOut",
        "aggregate",
        "stickyNote",
        "webhook",
        "httpRequest",
        "xml",
        "set",
        "respondToWebhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.xml": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.respondToWebhook": 1
      },
      "business_value": "Automates 2155 processes using splitOut, aggregate, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.030720"
    },
    {
      "original_filename": "util_synonyms_read_manual_openthesaurus.json",
      "workflow_name": "Get synonyms of a German word",
      "suggested_filename": "util_synonyms_read_manual_openthesaurus.json",
      "category": "UTIL",
      "business_function": "synonyms",
      "key_integrations": [
        "manualTrigger",
        "openThesaurus"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.openThesaurus": 1
      },
      "business_value": "Automates synonyms processes using manualTrigger, openThesaurus",
      "analysis_timestamp": "2025-06-01T16:06:49.030900"
    },
    {
      "original_filename": "ai_venafi_automate_venafitlsprotectcloud_slack_webhook.json",
      "workflow_name": "ai_venafi_automate_venafitlsprotectcloud_slack_webhook",
      "suggested_filename": "ai_venafi_automate_venafitlsprotectcloud_slack_webhook.json",
      "category": "AI",
      "business_function": "venafi",
      "key_integrations": [
        "venafiTlsProtectCloud",
        "set",
        "stickyNote",
        "respondToWebhook",
        "httpRequest",
        "executeWorkflow",
        "if",
        "merge",
        "@n8n/langchain.openAi",
        "slack"
      ],
      "trigger_type": "webhook",
      "complexity_score": 38,
      "complexity": "High",
      "total_nodes": 38,
      "node_types": {
        "n8n-nodes-base.venafiTlsProtectCloud": 2,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.stickyNote": 12,
        "n8n-nodes-base.respondToWebhook": 3,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.executeWorkflow": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 3,
        "n8n-nodes-base.merge": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.slack": 3,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates venafi processes using venafiTlsProtectCloud, set, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.031524"
    },
    {
      "original_filename": "ai_3607_workflow_3607_automate_n8nnodeslangchainchainllm_httprequest.json",
      "workflow_name": "ai_3607_workflow_3607_automate_n8nnodeslangchainchainllm_httprequest",
      "suggested_filename": "ai_3607_workflow_3607_automate_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "3607",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "formTrigger",
        "wait",
        "if",
        "googleSheets",
        "splitOut",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates 3607 processes using stickyNote, httpRequest, formTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.032275"
    },
    {
      "original_filename": "data_738_workflow_738_automate_openweathermap_webhook_webhook.json",
      "workflow_name": "data_738_workflow_738_automate_openweathermap_webhook_webhook",
      "suggested_filename": "data_738_workflow_738_automate_openweathermap_webhook_webhook.json",
      "category": "DATA",
      "business_function": "738",
      "key_integrations": [
        "webhook",
        "set",
        "airtable",
        "openWeatherMap",
        "twilio"
      ],
      "trigger_type": "webhook",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.openWeatherMap": 1,
        "n8n-nodes-base.twilio": 1
      },
      "business_value": "Automates 738 processes using webhook, set, airtable",
      "analysis_timestamp": "2025-06-01T16:06:49.032584"
    },
    {
      "original_filename": "ai_easy_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstructur.json",
      "workflow_name": "ai_easy_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstructur",
      "suggested_filename": "ai_easy_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstructur.json",
      "category": "AI",
      "business_function": "easy",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.outputParserStructured",
        "editImage",
        "code",
        "stickyNote",
        "merge",
        "httpRequest",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.editImage": 3,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates easy processes using manualTrigger, @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:49.032908"
    },
    {
      "original_filename": "ai_monthly_monitor_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruct.json",
      "workflow_name": "ai_monthly_monitor_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruct",
      "suggested_filename": "ai_monthly_monitor_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruct.json",
      "category": "AI",
      "business_function": "monthly",
      "key_integrations": [
        "set",
        "code",
        "httpRequest",
        "splitOut",
        "@n8n/langchain.lmChatAnthropic",
        "spotify",
        "@n8n/langchain.outputParserStructured",
        "filter",
        "merge",
        "limit"
      ],
      "trigger_type": "chat",
      "complexity_score": 37,
      "complexity": "High",
      "total_nodes": 37,
      "node_types": {
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 3,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 1,
        "n8n-nodes-base.spotify": 3,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.merge": 4,
        "n8n-nodes-base.limit": 2,
        "n8n-nodes-base.googleSheets": 4,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.noOp": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates monthly processes using set, code, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.033496"
    },
    {
      "original_filename": "ai_2582_workflow_2582_automate_n8nnodeslangchainchainllm_gmail_cron.json",
      "workflow_name": "ai_2582_workflow_2582_automate_n8nnodeslangchainchainllm_gmail_cron",
      "suggested_filename": "ai_2582_workflow_2582_automate_n8nnodeslangchainchainllm_gmail_cron.json",
      "category": "AI",
      "business_function": "2582",
      "key_integrations": [
        "gmail",
        "set",
        "googleCalendar",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.informationExtractor",
        "executeWorkflowTrigger",
        "whatsApp",
        "stickyNote",
        "scheduleTrigger",
        "switch"
      ],
      "trigger_type": "chat",
      "complexity_score": 61,
      "complexity": "High",
      "total_nodes": 61,
      "node_types": {
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.set": 13,
        "n8n-nodes-base.googleCalendar": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 4,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.whatsApp": 1,
        "n8n-nodes-base.stickyNote": 14,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.splitOut": 3,
        "n8n-nodes-base.executeWorkflow": 2,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.html": 5,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 3
      },
      "business_value": "Automates 2582 processes using gmail, set, googleCalendar",
      "analysis_timestamp": "2025-06-01T16:06:49.034270"
    },
    {
      "original_filename": "util_digialoceanupload_automate_form_form.json",
      "workflow_name": "DigialOceanUpload",
      "suggested_filename": "util_digialoceanupload_automate_form_form.json",
      "category": "UTIL",
      "business_function": "digialoceanupload",
      "key_integrations": [
        "formTrigger",
        "s3",
        "form"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.s3": 1,
        "n8n-nodes-base.form": 1
      },
      "business_value": "Automates digialoceanupload processes using formTrigger, s3, form",
      "analysis_timestamp": "2025-06-01T16:06:49.034625"
    },
    {
      "original_filename": "util_520_workflow_520_automate_mailjet_manual.json",
      "workflow_name": "util_520_workflow_520_automate_mailjet_manual",
      "suggested_filename": "util_520_workflow_520_automate_mailjet_manual.json",
      "category": "UTIL",
      "business_function": "520",
      "key_integrations": [
        "manualTrigger",
        "mailjet"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.mailjet": 1
      },
      "business_value": "Automates 520 processes using manualTrigger, mailjet",
      "analysis_timestamp": "2025-06-01T16:06:49.034754"
    },
    {
      "original_filename": "util_1047_workflow_1047_automate_httprequest_awssqs_cron.json",
      "workflow_name": "util_1047_workflow_1047_automate_httprequest_awssqs_cron",
      "suggested_filename": "util_1047_workflow_1047_automate_httprequest_awssqs_cron.json",
      "category": "UTIL",
      "business_function": "1047",
      "key_integrations": [
        "awsSqs",
        "set",
        "httpRequest",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.awsSqs": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates 1047 processes using awsSqs, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.034890"
    },
    {
      "original_filename": "ai_receive_ai_process_postmark.json",
      "workflow_name": "Receive updates when an email is bounced or opened",
      "suggested_filename": "ai_receive_ai_process_postmark.json",
      "category": "AI",
      "business_function": "receive",
      "key_integrations": [
        "postmarkTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.postmarkTrigger": 1
      },
      "business_value": "Automates receive processes using postmarkTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.035011"
    },
    {
      "original_filename": "util_537_workflow_537_automate_copper.json",
      "workflow_name": "util_537_workflow_537_automate_copper",
      "suggested_filename": "util_537_workflow_537_automate_copper.json",
      "category": "UTIL",
      "business_function": "537",
      "key_integrations": [
        "copperTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.copperTrigger": 1
      },
      "business_value": "Automates 537 processes using copperTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.035122"
    },
    {
      "original_filename": "ai_2085_workflow_2085_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "workflow_name": "ai_2085_workflow_2085_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc",
      "suggested_filename": "ai_2085_workflow_2085_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "2085",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "executeWorkflowTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.toolWorkflow",
        "set",
        "googleSheets",
        "switch"
      ],
      "trigger_type": "chat",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 3,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates 2085 processes using stickyNote, @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.035453"
    },
    {
      "original_filename": "util_text_automate_manual.json",
      "workflow_name": "pdf to text",
      "suggested_filename": "util_text_automate_manual.json",
      "category": "UTIL",
      "business_function": "text",
      "key_integrations": [
        "@custom-js/pdf-toolkit.PdfToText",
        "@custom-js/pdf-toolkit.html2Pdf",
        "code",
        "manualTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "@custom-js/n8n-nodes-pdf-toolkit.PdfToText": 2,
        "@custom-js/n8n-nodes-pdf-toolkit.html2Pdf": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates text processes using @custom-js/pdf-toolkit.PdfToText, @custom-js/pdf-toolkit.html2Pdf, code",
      "analysis_timestamp": "2025-06-01T16:06:49.035685"
    },
    {
      "original_filename": "util_418_workflow_418_automate_medium_webhook_webhook.json",
      "workflow_name": "util_418_workflow_418_automate_medium_webhook_webhook",
      "suggested_filename": "util_418_workflow_418_automate_medium_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "418",
      "key_integrations": [
        "medium",
        "webhook",
        "httpRequest"
      ],
      "trigger_type": "webhook",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.medium": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 418 processes using medium, webhook, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.035801"
    },
    {
      "original_filename": "data_2140_workflow_2140_automate_httprequest_notion_webhook.json",
      "workflow_name": "data_2140_workflow_2140_automate_httprequest_notion_webhook",
      "suggested_filename": "data_2140_workflow_2140_automate_httprequest_notion_webhook.json",
      "category": "DATA",
      "business_function": "2140",
      "key_integrations": [
        "webhook",
        "stickyNote",
        "notion",
        "switch",
        "httpRequest",
        "set"
      ],
      "trigger_type": "webhook",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 2140 processes using webhook, stickyNote, notion",
      "analysis_timestamp": "2025-06-01T16:06:49.036066"
    },
    {
      "original_filename": "ai_woocommerce_ai_process_telegram_httprequest.json",
      "workflow_name": "WooCommerce AI Chatbot Workflow for Post-Sales Support",
      "suggested_filename": "ai_woocommerce_ai_process_telegram_httprequest.json",
      "category": "AI",
      "business_function": "woocommerce",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.memoryBufferWindow",
        "wooCommerceTool",
        "@n8n/langchain.toolCalculator",
        "manualTrigger",
        "httpRequest",
        "googleDrive",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterTokenSplitter",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 31,
      "complexity": "High",
      "total_nodes": 31,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.wooCommerceTool": 3,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.googleDrive": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.telegramTool": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates woocommerce processes using @n8n/langchain.chatTrigger, @n8n/langchain.memoryBufferWindow, wooCommerceTool",
      "analysis_timestamp": "2025-06-01T16:06:49.036476"
    },
    {
      "original_filename": "ai_line_ai_process_n8nnodeslangchainmemorybufferwindow_httprequest_webhook_1.json",
      "workflow_name": "LINE Assistant with Google Calendar and Gmail Integration",
      "suggested_filename": "ai_line_ai_process_n8nnodeslangchainmemorybufferwindow_httprequest_webhook_1.json",
      "category": "AI",
      "business_function": "line",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolWikipedia",
        "@n8n/langchain.openAi",
        "switch",
        "webhook",
        "set",
        "httpRequest",
        "googleCalendarTool"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleCalendarTool": 2,
        "n8n-nodes-base.gmailTool": 1
      },
      "business_value": "Automates line processes using @n8n/langchain.agent, @n8n/langchain.memoryBufferWindow, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.036871"
    },
    {
      "original_filename": "data_postgres_automate_postgres_cron_cron.json",
      "workflow_name": "Postgres Data Ingestion",
      "suggested_filename": "data_postgres_automate_postgres_cron_cron.json",
      "category": "DATA",
      "business_function": "postgres",
      "key_integrations": [
        "cron",
        "function",
        "postgres"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.postgres": 1
      },
      "business_value": "Automates postgres processes using cron, function, postgres",
      "analysis_timestamp": "2025-06-01T16:06:49.036994"
    },
    {
      "original_filename": "comm_whatsapp_automate_webhook_whatsapp_webhook.json",
      "workflow_name": "WhatsApp starter workflow",
      "suggested_filename": "comm_whatsapp_automate_webhook_whatsapp_webhook.json",
      "category": "COMM",
      "business_function": "whatsapp",
      "key_integrations": [
        "webhook",
        "respondToWebhook",
        "whatsApp",
        "if",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.webhook": 2,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.whatsApp": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates whatsapp processes using webhook, respondToWebhook, whatsApp",
      "analysis_timestamp": "2025-06-01T16:06:49.037226"
    },
    {
      "original_filename": "ai_send_ai_process_nasa_telegram_cron.json",
      "workflow_name": "Send the Astronomy Picture of the day daily to a Telegram channel",
      "suggested_filename": "ai_send_ai_process_nasa_telegram_cron.json",
      "category": "AI",
      "business_function": "send",
      "key_integrations": [
        "cron",
        "nasa",
        "telegram"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.nasa": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates send processes using cron, nasa, telegram",
      "analysis_timestamp": "2025-06-01T16:06:49.037360"
    },
    {
      "original_filename": "data_1520_workflow_1520_automate_httprequest_functionitem.json",
      "workflow_name": "data_1520_workflow_1520_automate_httprequest_functionitem",
      "suggested_filename": "data_1520_workflow_1520_automate_httprequest_functionitem.json",
      "category": "DATA",
      "business_function": "1520",
      "key_integrations": [
        "manualTrigger",
        "functionItem",
        "httpRequest",
        "airtable",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 1520 processes using manualTrigger, functionItem, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.037479"
    },
    {
      "original_filename": "data_503_workflow_503_automate_mongodb_manual.json",
      "workflow_name": "data_503_workflow_503_automate_mongodb_manual",
      "suggested_filename": "data_503_workflow_503_automate_mongodb_manual.json",
      "category": "DATA",
      "business_function": "503",
      "key_integrations": [
        "manualTrigger",
        "set",
        "mongoDb"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.mongoDb": 1
      },
      "business_value": "Automates 503 processes using manualTrigger, set, mongoDb",
      "analysis_timestamp": "2025-06-01T16:06:49.037583"
    },
    {
      "original_filename": "ai_1980_workflow_1980_automate_n8nnodeslangchainchat_n8nnodeslangchainchainllm.json",
      "workflow_name": "ai_1980_workflow_1980_automate_n8nnodeslangchainchat_n8nnodeslangchainchainllm",
      "suggested_filename": "ai_1980_workflow_1980_automate_n8nnodeslangchainchat_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "1980",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmOpenHuggingFaceInference"
      ],
      "trigger_type": "chat",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.stickyNote": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmOpenHuggingFaceInference": 1
      },
      "business_value": "Automates 1980 processes using stickyNote, @n8n/langchain.chatTrigger, @n8n/langchain.chainLlm",
      "analysis_timestamp": "2025-06-01T16:06:49.037687"
    },
    {
      "original_filename": "comm_2488_workflow_2488_automate_slack_notion_cron.json",
      "workflow_name": "comm_2488_workflow_2488_automate_slack_notion_cron",
      "suggested_filename": "comm_2488_workflow_2488_automate_slack_notion_cron.json",
      "category": "COMM",
      "business_function": "2488",
      "key_integrations": [
        "filter",
        "slack",
        "notion",
        "cron",
        "set",
        "switch",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.filter": 3,
        "n8n-nodes-base.slack": 3,
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.stickyNote": 13
      },
      "business_value": "Automates 2488 processes using filter, slack, notion",
      "analysis_timestamp": "2025-06-01T16:06:49.038053"
    },
    {
      "original_filename": "comm_template_notify_gmail_httprequest_cron.json",
      "workflow_name": "Template - SSL Expiry Alert System",
      "suggested_filename": "comm_template_notify_gmail_httprequest_cron.json",
      "category": "COMM",
      "business_function": "template",
      "key_integrations": [
        "googleSheets",
        "scheduleTrigger",
        "httpRequest",
        "stickyNote",
        "switch",
        "gmail",
        "ntfy.Ntfy",
        "telegram"
      ],
      "trigger_type": "cron",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.gmail": 4,
        "n8n-nodes-ntfy.Ntfy": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates template processes using googleSheets, scheduleTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.038384"
    },
    {
      "original_filename": "ai_2233_workflow_2233_automate_n8nnodeslangchainchainsummarization_schedule_cron.json",
      "workflow_name": "ai_2233_workflow_2233_automate_n8nnodeslangchainchainsummarization_schedule_cron",
      "suggested_filename": "ai_2233_workflow_2233_automate_n8nnodeslangchainchainsummarization_schedule_cron.json",
      "category": "AI",
      "business_function": "2233",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "scheduleTrigger",
        "stickyNote",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.openAi",
        "telegram",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.chainSummarization": 2,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.telegram": 3,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 2233 processes using @n8n/langchain.lmChatOpenAi, scheduleTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.038693"
    },
    {
      "original_filename": "data_archive_backup_notion_schedule_cron.json",
      "workflow_name": "🧹 Archive (delete) duplicate items from a Notion database",
      "suggested_filename": "data_archive_backup_notion_schedule_cron.json",
      "category": "DATA",
      "business_function": "archive",
      "key_integrations": [
        "scheduleTrigger",
        "notion",
        "aggregate",
        "set",
        "code",
        "notionTrigger",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.notion": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.notionTrigger": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates archive processes using scheduleTrigger, notion, aggregate",
      "analysis_timestamp": "2025-06-01T16:06:49.038940"
    },
    {
      "original_filename": "util_529_workflow_529_automate_bitbucket.json",
      "workflow_name": "util_529_workflow_529_automate_bitbucket",
      "suggested_filename": "util_529_workflow_529_automate_bitbucket.json",
      "category": "UTIL",
      "business_function": "529",
      "key_integrations": [
        "bitbucketTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.bitbucketTrigger": 1
      },
      "business_value": "Automates 529 processes using bitbucketTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.039053"
    },
    {
      "original_filename": "ai_3601_workflow_3601_automate_n8nnodeslangchainchainllm_httprequest.json",
      "workflow_name": "ai_3601_workflow_3601_automate_n8nnodeslangchainchainllm_httprequest",
      "suggested_filename": "ai_3601_workflow_3601_automate_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "3601",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "formTrigger",
        "wait",
        "if",
        "googleSheets",
        "splitOut",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates 3601 processes using stickyNote, httpRequest, formTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.039557"
    },
    {
      "original_filename": "ai_2688_workflow_2688_automate_n8nnodeslangchainchainllm_httprequest_cron.json",
      "workflow_name": "ai_2688_workflow_2688_automate_n8nnodeslangchainchainllm_httprequest_cron",
      "suggested_filename": "ai_2688_workflow_2688_automate_n8nnodeslangchainchainllm_httprequest_cron.json",
      "category": "AI",
      "business_function": "2688",
      "key_integrations": [
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatGoogleGemini",
        "scheduleTrigger",
        "code",
        "set",
        "splitOut",
        "httpRequest",
        "html",
        "merge",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates 2688 processes using @n8n/langchain.chainLlm, @n8n/langchain.lmChatGoogleGemini, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.039889"
    },
    {
      "original_filename": "ai_1955_workflow_1955_automate_n8nnodeslangchaincode_n8nnodeslangchainlmchatopen.json",
      "workflow_name": "ai_1955_workflow_1955_automate_n8nnodeslangchaincode_n8nnodeslangchainlmchatopen",
      "suggested_filename": "ai_1955_workflow_1955_automate_n8nnodeslangchaincode_n8nnodeslangchainlmchatopen.json",
      "category": "AI",
      "business_function": "1955",
      "key_integrations": [
        "stickyNote",
        "manualTrigger",
        "set",
        "@n8n/langchain.code",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.agent",
        "@n8n/langchain.toolCode"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.code": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.toolCode": 1
      },
      "business_value": "Automates 1955 processes using stickyNote, manualTrigger, set",
      "analysis_timestamp": "2025-06-01T16:06:49.040173"
    },
    {
      "original_filename": "biz_1782_workflow_1782_automate_pipedrive_pipedrive.json",
      "workflow_name": "biz_1782_workflow_1782_automate_pipedrive_pipedrive",
      "suggested_filename": "biz_1782_workflow_1782_automate_pipedrive_pipedrive.json",
      "category": "BIZ",
      "business_function": "1782",
      "key_integrations": [
        "itemLists",
        "pipedrive",
        "httpRequest",
        "merge",
        "if",
        "set",
        "pipedriveTrigger",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.pipedrive": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.pipedriveTrigger": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 1782 processes using itemLists, pipedrive, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.040456"
    },
    {
      "original_filename": "comm_fetchgithubissues_extract_schedule_telegram_cron.json",
      "workflow_name": "FetchGithubIssues",
      "suggested_filename": "comm_fetchgithubissues_extract_schedule_telegram_cron.json",
      "category": "COMM",
      "business_function": "fetchgithubissues",
      "key_integrations": [
        "stickyNote",
        "telegram",
        "filter",
        "set",
        "scheduleTrigger",
        "github"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.github": 1
      },
      "business_value": "Automates fetchgithubissues processes using stickyNote, telegram, filter",
      "analysis_timestamp": "2025-06-01T16:06:49.040705"
    },
    {
      "original_filename": "util_itemmatching_automate_n8ntrainingcustomerdatastore_manual.json",
      "workflow_name": "itemMatching() example",
      "suggested_filename": "util_itemmatching_automate_n8ntrainingcustomerdatastore_manual.json",
      "category": "UTIL",
      "business_function": "itemmatching",
      "key_integrations": [
        "manualTrigger",
        "n8nTrainingCustomerDatastore",
        "code",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.n8nTrainingCustomerDatastore": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates itemmatching processes using manualTrigger, n8nTrainingCustomerDatastore, code",
      "analysis_timestamp": "2025-06-01T16:06:49.040956"
    },
    {
      "original_filename": "util_2042_workflow_2042_automate_splitinbatches_manual.json",
      "workflow_name": "util_2042_workflow_2042_automate_splitinbatches_manual",
      "suggested_filename": "util_2042_workflow_2042_automate_splitinbatches_manual.json",
      "category": "UTIL",
      "business_function": "2042",
      "key_integrations": [
        "googleDrive",
        "splitInBatches",
        "merge",
        "set",
        "manualTrigger",
        "code",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 2042 processes using googleDrive, splitInBatches, merge",
      "analysis_timestamp": "2025-06-01T16:06:49.041103"
    },
    {
      "original_filename": "ai_social_ai_process_httprequest_linkedin_cron_2.json",
      "workflow_name": "Social Media AI Agent - Telegram",
      "suggested_filename": "ai_social_ai_process_httprequest_linkedin_cron_2.json",
      "category": "AI",
      "business_function": "social",
      "key_integrations": [
        "httpRequest",
        "code",
        "markdown",
        "filter",
        "airtable",
        "linkedIn",
        "twitter",
        "scheduleTrigger",
        "merge",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "cron",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.airtable": 4,
        "n8n-nodes-base.linkedIn": 1,
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.wait": 1
      },
      "business_value": "Automates social processes using httpRequest, code, markdown",
      "analysis_timestamp": "2025-06-01T16:06:49.041618"
    },
    {
      "original_filename": "util_create_create_contact_manual_iterable.json",
      "workflow_name": "Create, update and get a user from Iterable",
      "suggested_filename": "util_create_create_contact_manual_iterable.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "iterable"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.iterable": 3
      },
      "business_value": "Automates create processes using manualTrigger, iterable",
      "analysis_timestamp": "2025-06-01T16:06:49.041763"
    },
    {
      "original_filename": "util_motion_generate_httprequest_manual.json",
      "workflow_name": "Motion-illustration Workflow Generated with Midjourney and Kling API",
      "suggested_filename": "util_motion_generate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "motion",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "code",
        "if",
        "wait",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.wait": 2,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates motion processes using manualTrigger, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:49.042051"
    },
    {
      "original_filename": "data_1455_workflow_1455_automate_crypto_httprequest_webhook.json",
      "workflow_name": "data_1455_workflow_1455_automate_crypto_httprequest_webhook",
      "suggested_filename": "data_1455_workflow_1455_automate_crypto_httprequest_webhook.json",
      "category": "DATA",
      "business_function": "1455",
      "key_integrations": [
        "webhook",
        "respondToWebhook",
        "set",
        "switch",
        "if",
        "executeWorkflow",
        "airtable",
        "function",
        "crypto",
        "httpRequest"
      ],
      "trigger_type": "webhook",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.executeWorkflow": 3,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.crypto": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 1455 processes using webhook, respondToWebhook, set",
      "analysis_timestamp": "2025-06-01T16:06:49.042353"
    },
    {
      "original_filename": "content_automated_report_splitinbatches_httprequest.json",
      "workflow_name": "Automated Content SEO Audit Report",
      "suggested_filename": "content_automated_report_splitinbatches_httprequest.json",
      "category": "CONTENT",
      "business_function": "automated",
      "key_integrations": [
        "set",
        "manualTrigger",
        "httpRequest",
        "if",
        "wait",
        "code",
        "splitInBatches",
        "stickyNote",
        "convertToFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.wait": 2,
        "n8n-nodes-base.code": 6,
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.convertToFile": 1
      },
      "business_value": "Automates automated processes using set, manualTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.043011"
    },
    {
      "original_filename": "ai_tool_automate_httprequest_n8nnodeslangchainlmchatopenai.json",
      "workflow_name": "spy tool",
      "suggested_filename": "ai_tool_automate_httprequest_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "tool",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "gmailTool",
        "code",
        "stickyNote",
        "httpRequest",
        "formTrigger",
        "wait",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.gmailTool": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.wait": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates tool processes using @n8n/langchain.lmChatOpenAi, gmailTool, code",
      "analysis_timestamp": "2025-06-01T16:06:49.043326"
    },
    {
      "original_filename": "ai_business_automate_n8nnodeslangchainchat_n8nnodeslangchainlmchatollama.json",
      "workflow_name": "Business Canvas Generator",
      "suggested_filename": "ai_business_automate_n8nnodeslangchainchat_n8nnodeslangchainlmchatollama.json",
      "category": "AI",
      "business_function": "business",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOllama",
        "code",
        "convertToFile",
        "stickyNote",
        "merge"
      ],
      "trigger_type": "chat",
      "complexity_score": 28,
      "complexity": "High",
      "total_nodes": 28,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 10,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 1,
        "n8n-nodes-base.code": 11,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates business processes using @n8n/langchain.chatTrigger, @n8n/langchain.agent, @n8n/langchain.lmChatOllama",
      "analysis_timestamp": "2025-06-01T16:06:49.043808"
    },
    {
      "original_filename": "ai_analyze_email_headers_for_ips_and_spoofing_3_analyze_itemlists_httprequest_we.json",
      "workflow_name": "Analyze_email_headers_for_IPs_and_spoofing__3",
      "suggested_filename": "ai_analyze_email_headers_for_ips_and_spoofing_3_analyze_itemlists_httprequest_we.json",
      "category": "AI",
      "business_function": "analyze",
      "key_integrations": [
        "webhook",
        "stickyNote",
        "code",
        "respondToWebhook",
        "itemLists",
        "httpRequest",
        "set",
        "switch",
        "if",
        "merge"
      ],
      "trigger_type": "webhook",
      "complexity_score": 35,
      "complexity": "High",
      "total_nodes": 35,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.code": 7,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.itemLists": 3,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 7,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.merge": 2
      },
      "business_value": "Automates analyze processes using webhook, stickyNote, code",
      "analysis_timestamp": "2025-06-01T16:06:49.044326"
    },
    {
      "original_filename": "comm_n_01_simple_lead_tracker_automation_v4_monitor_hubspot_slack.json",
      "workflow_name": "N_01_Simple_Lead_Tracker_Automation_v4",
      "suggested_filename": "comm_n_01_simple_lead_tracker_automation_v4_monitor_hubspot_slack.json",
      "category": "COMM",
      "business_function": "n",
      "key_integrations": [
        "googleSheetsTrigger",
        "slack",
        "gmail",
        "hubspot",
        "if",
        "wait",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.googleSheetsTrigger": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.hubspot": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.stickyNote": 6
      },
      "business_value": "Automates n processes using googleSheetsTrigger, slack, gmail",
      "analysis_timestamp": "2025-06-01T16:06:49.044667"
    },
    {
      "original_filename": "ai_building_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvector_2.json",
      "workflow_name": "ai_building_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvector_2",
      "suggested_filename": "ai_building_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvector_2.json",
      "category": "AI",
      "business_function": "building",
      "key_integrations": [
        "whatsAppTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolVectorStore",
        "@n8n/langchain.embeddingsOpenAi",
        "manualTrigger",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "extractFromFile",
        "httpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 28,
      "complexity": "High",
      "total_nodes": 28,
      "node_types": {
        "n8n-nodes-base.whatsAppTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.whatsApp": 2,
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory": 2,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates building processes using whatsAppTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:49.045018"
    },
    {
      "original_filename": "ai_2397_workflow_2397_automate_n8nnodeslangchainmemorybufferwindow_slack_webhook.json",
      "workflow_name": "ai_2397_workflow_2397_automate_n8nnodeslangchainmemorybufferwindow_slack_webhook",
      "suggested_filename": "ai_2397_workflow_2397_automate_n8nnodeslangchainmemorybufferwindow_slack_webhook.json",
      "category": "AI",
      "business_function": "2397",
      "key_integrations": [
        "respondToWebhook",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "if",
        "slack",
        "stickyNote",
        "webhook",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "webhook",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.respondToWebhook": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.noOp": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 3,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates 2397 processes using respondToWebhook, @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:49.045349"
    },
    {
      "original_filename": "comm_2222_workflow_2222_automate_slack_webhook_webhook.json",
      "workflow_name": "comm_2222_workflow_2222_automate_slack_webhook_webhook",
      "suggested_filename": "comm_2222_workflow_2222_automate_slack_webhook_webhook.json",
      "category": "COMM",
      "business_function": "2222",
      "key_integrations": [
        "stickyNote",
        "extractFromFile",
        "respondToWebhook",
        "webhook",
        "xml",
        "set",
        "switch",
        "slack"
      ],
      "trigger_type": "webhook",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.xml": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates 2222 processes using stickyNote, extractFromFile, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:49.045615"
    },
    {
      "original_filename": "util_1001_workflow_1001_automate_bitwarden.json",
      "workflow_name": "util_1001_workflow_1001_automate_bitwarden",
      "suggested_filename": "util_1001_workflow_1001_automate_bitwarden.json",
      "category": "UTIL",
      "business_function": "1001",
      "key_integrations": [
        "bitwarden"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.bitwarden": 4
      },
      "business_value": "Automates 1001 processes using bitwarden",
      "analysis_timestamp": "2025-06-01T16:06:49.045724"
    },
    {
      "original_filename": "biz_woocommerce_automate_mautic_woocommerce.json",
      "workflow_name": "New WooCommerce Customer to Mautic",
      "suggested_filename": "biz_woocommerce_automate_mautic_woocommerce.json",
      "category": "BIZ",
      "business_function": "woocommerce",
      "key_integrations": [
        "mautic",
        "if",
        "wooCommerceTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.mautic": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.wooCommerceTrigger": 1
      },
      "business_value": "Automates woocommerce processes using mautic, if, wooCommerceTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.045924"
    },
    {
      "original_filename": "data_1754_workflow_1754_automate_interval_manual.json",
      "workflow_name": "data_1754_workflow_1754_automate_interval_manual",
      "suggested_filename": "data_1754_workflow_1754_automate_interval_manual.json",
      "category": "DATA",
      "business_function": "1754",
      "key_integrations": [
        "manualTrigger",
        "if",
        "googleSheets",
        "set",
        "interval"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.interval": 1
      },
      "business_value": "Automates 1754 processes using manualTrigger, if, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:49.046140"
    },
    {
      "original_filename": "content_publish_automate_medium_manual.json",
      "workflow_name": "Publish post to a publication",
      "suggested_filename": "content_publish_automate_medium_manual.json",
      "category": "CONTENT",
      "business_function": "publish",
      "key_integrations": [
        "manualTrigger",
        "medium"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.medium": 1
      },
      "business_value": "Automates publish processes using manualTrigger, medium",
      "analysis_timestamp": "2025-06-01T16:06:49.046325"
    },
    {
      "original_filename": "ai_connect_ai_process_httprequest_airtable.json",
      "workflow_name": "Connect Airtable Contacts to telli for Automated AI Voice Call Scheduling",
      "suggested_filename": "ai_connect_ai_process_httprequest_airtable.json",
      "category": "AI",
      "business_function": "connect",
      "key_integrations": [
        "airtableTrigger",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.airtableTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates connect processes using airtableTrigger, httpRequest, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.046561"
    },
    {
      "original_filename": "comm_website_validate_cron_httprequest_cron.json",
      "workflow_name": "Website check",
      "suggested_filename": "comm_website_validate_cron_httprequest_cron.json",
      "category": "COMM",
      "business_function": "website",
      "key_integrations": [
        "httpRequest",
        "if",
        "discord",
        "cron"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.discord": 2,
        "n8n-nodes-base.cron": 1
      },
      "business_value": "Automates website processes using httpRequest, if, discord",
      "analysis_timestamp": "2025-06-01T16:06:49.046662"
    },
    {
      "original_filename": "util_totp_automate_manual.json",
      "workflow_name": "TOTP VALIDATION (WITHOUT CREATING CREDENTIAL)",
      "suggested_filename": "util_totp_automate_manual.json",
      "category": "UTIL",
      "business_function": "totp",
      "key_integrations": [
        "manualTrigger",
        "code",
        "if",
        "stickyNote",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates totp processes using manualTrigger, code, if",
      "analysis_timestamp": "2025-06-01T16:06:49.046875"
    },
    {
      "original_filename": "ai_chatbot_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalcu.json",
      "workflow_name": "ERP AI chatbot for Odoo sales module",
      "suggested_filename": "ai_chatbot_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalcu.json",
      "category": "AI",
      "business_function": "chatbot",
      "key_integrations": [
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolCalculator",
        "scheduleTrigger",
        "convertToFile",
        "readWriteFile",
        "odoo",
        "if",
        "aggregate",
        "extractFromFile"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.readWriteFile": 2,
        "n8n-nodes-base.odoo": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "@n8n/n8n-nodes-langchain.lmOpenAi": 1,
        "n8n-nodes-base.stickyNote": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1
      },
      "business_value": "Automates chatbot processes using @n8n/langchain.memoryBufferWindow, @n8n/langchain.lmChatOpenAi, @n8n/langchain.toolCalculator",
      "analysis_timestamp": "2025-06-01T16:06:49.047314"
    },
    {
      "original_filename": "ai_3700_workflow_3700_automate_n8nnodeslangchainchainllm_httprequest.json",
      "workflow_name": "ai_3700_workflow_3700_automate_n8nnodeslangchainchainllm_httprequest",
      "suggested_filename": "ai_3700_workflow_3700_automate_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "3700",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "merge",
        "googleSheets",
        "httpRequest",
        "@n8n/langchain.openAi",
        "@n8n/langchain.chainLlm",
        "convertToFile",
        "googleDrive",
        "stickyNote",
        "manualTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.httpRequest": 3,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.convertToFile": 2,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates 3700 processes using @n8n/langchain.lmChatOpenAi, merge, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:49.047706"
    },
    {
      "original_filename": "comm_import_transfer_splitinbatches_slack_cron.json",
      "workflow_name": "Import Productboard Notes, Companies and Features into Snowflake",
      "suggested_filename": "comm_import_transfer_splitinbatches_slack_cron.json",
      "category": "COMM",
      "business_function": "import",
      "key_integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "snowflake",
        "splitInBatches",
        "scheduleTrigger",
        "slack"
      ],
      "trigger_type": "cron",
      "complexity_score": 35,
      "complexity": "High",
      "total_nodes": 35,
      "node_types": {
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 8,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.splitOut": 4,
        "n8n-nodes-base.snowflake": 13,
        "n8n-nodes-base.splitInBatches": 3,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates import processes using stickyNote, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.048177"
    },
    {
      "original_filename": "util_947_workflow_947_automate_typeform_demio.json",
      "workflow_name": "util_947_workflow_947_automate_typeform_demio",
      "suggested_filename": "util_947_workflow_947_automate_typeform_demio.json",
      "category": "UTIL",
      "business_function": "947",
      "key_integrations": [
        "typeformTrigger",
        "demio"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.demio": 1
      },
      "business_value": "Automates 947 processes using typeformTrigger, demio",
      "analysis_timestamp": "2025-06-01T16:06:49.048486"
    },
    {
      "original_filename": "ai_3942_workflow_3942_automate_splitinbatches_n8nnodeslangchainmemorybufferwindo.json",
      "workflow_name": "ai_3942_workflow_3942_automate_splitinbatches_n8nnodeslangchainmemorybufferwindo",
      "suggested_filename": "ai_3942_workflow_3942_automate_splitinbatches_n8nnodeslangchainmemorybufferwindo.json",
      "category": "AI",
      "business_function": "3942",
      "key_integrations": [
        "@n8n/langchain.informationExtractor",
        "@n8n/langchain.lmChatOpenAi",
        "if",
        "googleSheets",
        "code",
        "splitInBatches",
        "stickyNote",
        "executeWorkflowTrigger",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1
      },
      "business_value": "Automates 3942 processes using @n8n/langchain.informationExtractor, @n8n/langchain.lmChatOpenAi, if",
      "analysis_timestamp": "2025-06-01T16:06:49.048845"
    },
    {
      "original_filename": "ai_agente_automate_googletasks_telegram_cron.json",
      "workflow_name": "agente",
      "suggested_filename": "ai_agente_automate_googletasks_telegram_cron.json",
      "category": "AI",
      "business_function": "agente",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.agent",
        "googleTasksTool",
        "@n8n/langchain.mcpClientTool",
        "telegramTrigger",
        "@n8n/langchain.memoryPostgresChat",
        "telegramTool",
        "scheduleTrigger",
        "stickyNote",
        "telegram"
      ],
      "trigger_type": "chat",
      "complexity_score": 38,
      "complexity": "High",
      "total_nodes": 38,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "@n8n/n8n-nodes-langchain.agent": 5,
        "n8n-nodes-base.googleTasksTool": 1,
        "@n8n/n8n-nodes-langchain.mcpClientTool": 4,
        "n8n-nodes-base.telegramTrigger": 1,
        "@n8n/n8n-nodes-langchain.memoryPostgresChat": 2,
        "n8n-nodes-base.telegramTool": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.telegram": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-evolution-api.evolutionApi": 3,
        "n8n-nodes-base.convertToFile": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1
      },
      "business_value": "Automates agente processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.agent, googleTasksTool",
      "analysis_timestamp": "2025-06-01T16:06:49.049405"
    },
    {
      "original_filename": "ai_1961_workflow_1961_automate_n8nnodeslangchainmemorybufferwindow_slack_webhook.json",
      "workflow_name": "ai_1961_workflow_1961_automate_n8nnodeslangchainmemorybufferwindow_slack_webhook",
      "suggested_filename": "ai_1961_workflow_1961_automate_n8nnodeslangchainmemorybufferwindow_slack_webhook.json",
      "category": "AI",
      "business_function": "1961",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "if",
        "@n8n/langchain.toolSerpApi",
        "@n8n/langchain.toolWikipedia",
        "slack",
        "webhook"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "@n8n/n8n-nodes-langchain.toolSerpApi": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 1961 processes using stickyNote, @n8n/langchain.agent, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.049767"
    },
    {
      "original_filename": "ai_send_ai_process_twilio_manual.json",
      "workflow_name": "Send SMS to numbers stored in Airtable with Twilio",
      "suggested_filename": "ai_send_ai_process_twilio_manual.json",
      "category": "AI",
      "business_function": "send",
      "key_integrations": [
        "manualTrigger",
        "airtable",
        "twilio"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.twilio": 1
      },
      "business_value": "Automates send processes using manualTrigger, airtable, twilio",
      "analysis_timestamp": "2025-06-01T16:06:49.049889"
    },
    {
      "original_filename": "comm_automate_emailsend_httprequest_webhook.json",
      "workflow_name": "My workflow 4",
      "suggested_filename": "comm_automate_emailsend_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "key_integrations": [
        "webhook",
        "function",
        "httpRequest",
        "emailSend",
        "telegram"
      ],
      "trigger_type": "webhook",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates automate processes using webhook, function, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.050123"
    },
    {
      "original_filename": "ai_2468_workflow_2468_automate_slack_n8nnodeslangchainchainllm_cron.json",
      "workflow_name": "ai_2468_workflow_2468_automate_slack_n8nnodeslangchainchainllm_cron",
      "suggested_filename": "ai_2468_workflow_2468_automate_slack_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "2468",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "scheduleTrigger",
        "jira",
        "aggregate",
        "set",
        "if",
        "@n8n/langchain.outputParserStructured",
        "slack",
        "stickyNote",
        "executeWorkflow"
      ],
      "trigger_type": "chat",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 4,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.jira": 8,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.if": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.slack": 2,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.sentimentAnalysis": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.jiraTool": 1,
        "n8n-nodes-base.notionTool": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1
      },
      "business_value": "Automates 2468 processes using @n8n/langchain.lmChatOpenAi, scheduleTrigger, jira",
      "analysis_timestamp": "2025-06-01T16:06:49.050656"
    },
    {
      "original_filename": "comm_1153_workflow_1153_automate_splitinbatches_gmail.json",
      "workflow_name": "comm_1153_workflow_1153_automate_splitinbatches_gmail",
      "suggested_filename": "comm_1153_workflow_1153_automate_splitinbatches_gmail.json",
      "category": "COMM",
      "business_function": "1153",
      "key_integrations": [
        "manualTrigger",
        "gmail",
        "splitInBatches"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.splitInBatches": 1
      },
      "business_value": "Automates 1153 processes using manualTrigger, gmail, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:49.050806"
    },
    {
      "original_filename": "ai_qualify_ai_process_openai_googlesheets_1.json",
      "workflow_name": "Qualify new leads in Google Sheets via OpenAI's GPT-4",
      "suggested_filename": "ai_qualify_ai_process_openai_googlesheets_1.json",
      "category": "AI",
      "business_function": "qualify",
      "key_integrations": [
        "merge",
        "stickyNote",
        "googleSheets",
        "set",
        "openAi",
        "googleSheetsTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.googleSheetsTrigger": 1
      },
      "business_value": "Automates qualify processes using merge, stickyNote, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:49.051064"
    },
    {
      "original_filename": "util_2245_workflow_2245_automate_httprequest_webhook_webhook.json",
      "workflow_name": "util_2245_workflow_2245_automate_httprequest_webhook_webhook",
      "suggested_filename": "util_2245_workflow_2245_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "2245",
      "key_integrations": [
        "if",
        "respondToWebhook",
        "webhook",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 2245 processes using if, respondToWebhook, webhook",
      "analysis_timestamp": "2025-06-01T16:06:49.051305"
    },
    {
      "original_filename": "ai_airtable_ai_process_splitinbatches_httprequest.json",
      "workflow_name": "↔️ Airtable Batch Processing",
      "suggested_filename": "ai_airtable_ai_process_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "airtable",
      "key_integrations": [
        "httpRequest",
        "debugHelper",
        "manualTrigger",
        "splitOut",
        "splitInBatches",
        "executeWorkflowTrigger",
        "switch",
        "if",
        "wait",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 35,
      "complexity": "High",
      "total_nodes": 35,
      "node_types": {
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.debugHelper": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.wait": 4,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.aggregate": 4,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates airtable processes using httpRequest, debugHelper, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.051714"
    },
    {
      "original_filename": "data_entra_sync_httprequest_comparedatasets_1.json",
      "workflow_name": "Entra Contacts to Zammad User Sync",
      "suggested_filename": "data_entra_sync_httprequest_comparedatasets_1.json",
      "category": "DATA",
      "business_function": "entra",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "set",
        "zammad",
        "merge",
        "compareDatasets",
        "httpRequest",
        "splitOut",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.zammad": 4,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.compareDatasets": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.if": 2
      },
      "business_value": "Automates entra processes using manualTrigger, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:49.052064"
    },
    {
      "original_filename": "util_send_automate_pushcut_twilio.json",
      "workflow_name": "Send an SMS to a number whenever you go out",
      "suggested_filename": "util_send_automate_pushcut_twilio.json",
      "category": "UTIL",
      "business_function": "send",
      "key_integrations": [
        "pushcutTrigger",
        "twilio"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.pushcutTrigger": 1,
        "n8n-nodes-base.twilio": 1
      },
      "business_value": "Automates send processes using pushcutTrigger, twilio",
      "analysis_timestamp": "2025-06-01T16:06:49.052282"
    },
    {
      "original_filename": "data_medoids_automate_httprequest_manual_1.json",
      "workflow_name": "[2/3] Set up medoids (2 types) for anomaly detection (crops dataset)",
      "suggested_filename": "data_medoids_automate_httprequest_manual_1.json",
      "category": "DATA",
      "business_function": "medoids",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "code",
        "set",
        "splitOut",
        "merge",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 48,
      "complexity": "High",
      "total_nodes": 48,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 12,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 9,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.stickyNote": 22
      },
      "business_value": "Automates medoids processes using manualTrigger, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:49.052762"
    },
    {
      "original_filename": "comm_onfleet_automate_onfleet_slack.json",
      "workflow_name": "Onfleet Driver signup message in Slack",
      "suggested_filename": "comm_onfleet_automate_onfleet_slack.json",
      "category": "COMM",
      "business_function": "onfleet",
      "key_integrations": [
        "onfleetTrigger",
        "slack"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.onfleetTrigger": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates onfleet processes using onfleetTrigger, slack",
      "analysis_timestamp": "2025-06-01T16:06:49.052887"
    },
    {
      "original_filename": "ai_powered_ai_process_n8nnodeslangchaininformationextractor_extractfromfile_webh.json",
      "workflow_name": "🤖 AI Powered RAG Chatbot for Your Docs + Google Drive + Gemini + Qdrant",
      "suggested_filename": "ai_powered_ai_process_n8nnodeslangchaininformationextractor_extractfromfile_webh.json",
      "category": "AI",
      "business_function": "powered",
      "key_integrations": [
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterTokenSplitter",
        "@n8n/langchain.vectorStoreQdrant",
        "splitInBatches",
        "wait",
        "manualTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "merge",
        "@n8n/langchain.informationExtractor",
        "extractFromFile"
      ],
      "trigger_type": "chat",
      "complexity_score": 50,
      "complexity": "High",
      "total_nodes": 50,
      "node_types": {
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2,
        "n8n-nodes-base.merge": 3,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.googleDrive": 3,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "n8n-nodes-base.set": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.code": 1,
        "n8n-nodes-base.summarize": 1,
        "n8n-nodes-base.stickyNote": 15,
        "n8n-nodes-base.telegram": 3,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.googleDocs": 1
      },
      "business_value": "Automates powered processes using @n8n/langchain.documentDefaultDataLoader, @n8n/langchain.textSplitterTokenSplitter, @n8n/langchain.vectorStoreQdrant",
      "analysis_timestamp": "2025-06-01T16:06:49.053406"
    },
    {
      "original_filename": "data_1804_workflow_1804_automate_github_notion.json",
      "workflow_name": "data_1804_workflow_1804_automate_github_notion",
      "suggested_filename": "data_1804_workflow_1804_automate_github_notion.json",
      "category": "DATA",
      "business_function": "1804",
      "key_integrations": [
        "notion",
        "stickyNote",
        "switch",
        "if",
        "function",
        "githubTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.notion": 6,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.githubTrigger": 1
      },
      "business_value": "Automates 1804 processes using notion, stickyNote, switch",
      "analysis_timestamp": "2025-06-01T16:06:49.053750"
    },
    {
      "original_filename": "ai_2315_workflow_2315_automate_supabase_removeduplicates.json",
      "workflow_name": "ai_2315_workflow_2315_automate_supabase_removeduplicates",
      "suggested_filename": "ai_2315_workflow_2315_automate_supabase_removeduplicates.json",
      "category": "AI",
      "business_function": "2315",
      "key_integrations": [
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "set",
        "manualTrigger",
        "supabase",
        "merge",
        "markdown",
        "stickyNote",
        "html"
      ],
      "trigger_type": "chat",
      "complexity_score": 38,
      "complexity": "High",
      "total_nodes": 38,
      "node_types": {
        "@n8n/n8n-nodes-langchain.toolWorkflow": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.set": 10,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.supabase": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates 2315 processes using @n8n/langchain.toolWorkflow, @n8n/langchain.lmChatOpenAi, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:49.054302"
    },
    {
      "original_filename": "util_2310_workflow_2310_automate_readwritefile_httprequest.json",
      "workflow_name": "util_2310_workflow_2310_automate_readwritefile_httprequest",
      "suggested_filename": "util_2310_workflow_2310_automate_readwritefile_httprequest.json",
      "category": "UTIL",
      "business_function": "2310",
      "key_integrations": [
        "httpRequest",
        "manualTrigger",
        "readWriteFile",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 2310 processes using httpRequest, manualTrigger, readWriteFile",
      "analysis_timestamp": "2025-06-01T16:06:49.054608"
    },
    {
      "original_filename": "util_560_workflow_560_automate_box.json",
      "workflow_name": "util_560_workflow_560_automate_box",
      "suggested_filename": "util_560_workflow_560_automate_box.json",
      "category": "UTIL",
      "business_function": "560",
      "key_integrations": [
        "boxTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.boxTrigger": 1
      },
      "business_value": "Automates 560 processes using boxTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.054734"
    },
    {
      "original_filename": "util_netsuite_automate_webhook_manual_webhook.json",
      "workflow_name": "NetSuite Rest API workflow",
      "suggested_filename": "util_netsuite_automate_webhook_manual_webhook.json",
      "category": "UTIL",
      "business_function": "netsuite",
      "key_integrations": [
        "manualTrigger",
        "netsuite.netsuite",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-netsuite.netsuite": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates netsuite processes using manualTrigger, netsuite.netsuite, webhook",
      "analysis_timestamp": "2025-06-01T16:06:49.054947"
    },
    {
      "original_filename": "ai_complete_automate_n8nnodeslangchainmemorybufferwindow_splitinbatches_1.json",
      "workflow_name": "Complete Youtube",
      "suggested_filename": "ai_complete_automate_n8nnodeslangchainmemorybufferwindow_splitinbatches_1.json",
      "category": "AI",
      "business_function": "complete",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "stickyNote",
        "httpRequest",
        "youTube",
        "set",
        "code"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.youTube": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates complete processes using @n8n/langchain.agent, @n8n/langchain.chatTrigger, @n8n/langchain.toolWorkflow",
      "analysis_timestamp": "2025-06-01T16:06:49.055249"
    },
    {
      "original_filename": "ai_image_ai_process_httprequest_webhook_webhook.json",
      "workflow_name": "Image-Based Data Extraction API using Gemini AI",
      "suggested_filename": "ai_image_ai_process_httprequest_webhook_webhook.json",
      "category": "AI",
      "business_function": "image",
      "key_integrations": [
        "webhook",
        "respondToWebhook",
        "httpRequest",
        "set",
        "stickyNote",
        "extractFromFile"
      ],
      "trigger_type": "webhook",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.extractFromFile": 1
      },
      "business_value": "Automates image processes using webhook, respondToWebhook, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.055523"
    },
    {
      "original_filename": "comm_1326_workflow_1326_automate_error_slack.json",
      "workflow_name": "comm_1326_workflow_1326_automate_error_slack",
      "suggested_filename": "comm_1326_workflow_1326_automate_error_slack.json",
      "category": "COMM",
      "business_function": "1326",
      "key_integrations": [
        "slack",
        "errorTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.errorTrigger": 1
      },
      "business_value": "Automates 1326 processes using slack, errorTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.055711"
    },
    {
      "original_filename": "comm_detect_automate_generic.json",
      "workflow_name": "comm_detect_automate_generic",
      "suggested_filename": "comm_detect_automate_generic.json",
      "category": "COMM",
      "business_function": "detect",
      "key_integrations": [],
      "trigger_type": "manual",
      "complexity_score": 0,
      "complexity": "Low",
      "total_nodes": 0,
      "node_types": {},
      "business_value": "Automates detect processes using ",
      "analysis_timestamp": "2025-06-01T16:06:49.055934"
    },
    {
      "original_filename": "ai_create_ai_process_hubspot_lemlist_cron.json",
      "workflow_name": "Create Email Campaign From LinkedIn Post Interactions",
      "suggested_filename": "ai_create_ai_process_hubspot_lemlist_cron.json",
      "category": "AI",
      "business_function": "create",
      "key_integrations": [
        "cron",
        "if",
        "airtable",
        "set",
        "lemlist",
        "hubspot",
        "phantombuster",
        "dropcontact",
        "wait"
      ],
      "trigger_type": "cron",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.airtable": 3,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.lemlist": 1,
        "n8n-nodes-base.hubspot": 1,
        "n8n-nodes-base.phantombuster": 5,
        "n8n-nodes-base.dropcontact": 1,
        "n8n-nodes-base.wait": 1
      },
      "business_value": "Automates create processes using cron, if, airtable",
      "analysis_timestamp": "2025-06-01T16:06:49.056248"
    },
    {
      "original_filename": "util_plex_automate_httprequest_webhook_webhook.json",
      "workflow_name": "Plex Automatic Throttler",
      "suggested_filename": "util_plex_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "plex",
      "key_integrations": [
        "webhook",
        "switch",
        "if",
        "httpRequest",
        "set"
      ],
      "trigger_type": "webhook",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.noOp": 9,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.httpRequest": 6,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates plex processes using webhook, switch, if",
      "analysis_timestamp": "2025-06-01T16:06:49.056602"
    },
    {
      "original_filename": "comm_linkedin_automate_httprequest_linkedin_cron.json",
      "workflow_name": "Linkedin Automation",
      "suggested_filename": "comm_linkedin_automate_httprequest_linkedin_cron.json",
      "category": "COMM",
      "business_function": "linkedin",
      "key_integrations": [
        "airtable",
        "code",
        "filter",
        "telegram",
        "scheduleTrigger",
        "stickyNote",
        "httpRequest",
        "if",
        "linkedIn"
      ],
      "trigger_type": "cron",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.linkedIn": 1
      },
      "business_value": "Automates linkedin processes using airtable, code, filter",
      "analysis_timestamp": "2025-06-01T16:06:49.056926"
    },
    {
      "original_filename": "ai_enhance_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "workflow_name": "Enhance Chat Responses with Real-Time Search Data via Bright Data & Gemini AI",
      "suggested_filename": "ai_enhance_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "enhance",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.memoryBufferWindow",
        "manualTrigger",
        "mcp.mcpClient",
        "set",
        "mcp.mcpClientTool",
        "stickyNote",
        "@n8n/langchain.toolHttpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-mcp.mcpClient": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-mcp.mcpClientTool": 4,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 1
      },
      "business_value": "Automates enhance processes using @n8n/langchain.chatTrigger, @n8n/langchain.agent, @n8n/langchain.lmChatGoogleGemini",
      "analysis_timestamp": "2025-06-01T16:06:49.057253"
    },
    {
      "original_filename": "biz_send_automate_typeform_twilio.json",
      "workflow_name": "Send Typeforms leads via Whatsapp (Twilio)",
      "suggested_filename": "biz_send_automate_typeform_twilio.json",
      "category": "BIZ",
      "business_function": "send",
      "key_integrations": [
        "typeformTrigger",
        "twilio",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.twilio": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates send processes using typeformTrigger, twilio, set",
      "analysis_timestamp": "2025-06-01T16:06:49.057390"
    },
    {
      "original_filename": "biz_unique_automate_respondtowebhook_emailsend_webhook.json",
      "workflow_name": "Unique QRcode coupon assignment and validation for Lead Generation system",
      "suggested_filename": "biz_unique_automate_respondtowebhook_emailsend_webhook.json",
      "category": "BIZ",
      "business_function": "unique",
      "key_integrations": [
        "webhook",
        "if",
        "httpRequest",
        "formTrigger",
        "googleSheets",
        "set",
        "stickyNote",
        "emailSend",
        "respondToWebhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.googleSheets": 5,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.respondToWebhook": 3
      },
      "business_value": "Automates unique processes using webhook, if, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.057791"
    },
    {
      "original_filename": "comm_1216_workflow_1216_automate_googleperspective_telegram.json",
      "workflow_name": "comm_1216_workflow_1216_automate_googleperspective_telegram",
      "suggested_filename": "comm_1216_workflow_1216_automate_googleperspective_telegram.json",
      "category": "COMM",
      "business_function": "1216",
      "key_integrations": [
        "telegramTrigger",
        "googlePerspective",
        "if",
        "telegram"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.googlePerspective": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 1216 processes using telegramTrigger, googlePerspective, if",
      "analysis_timestamp": "2025-06-01T16:06:49.057946"
    },
    {
      "original_filename": "util_2074_workflow_2074_automate_datetime_mondaycom.json",
      "workflow_name": "util_2074_workflow_2074_automate_datetime_mondaycom",
      "suggested_filename": "util_2074_workflow_2074_automate_datetime_mondaycom.json",
      "category": "UTIL",
      "business_function": "2074",
      "key_integrations": [
        "mondayCom",
        "dateTime",
        "errorTrigger",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.mondayCom": 2,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.errorTrigger": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates 2074 processes using mondayCom, dateTime, errorTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.058082"
    },
    {
      "original_filename": "data_3504_workflow_3504_automate_notion_webhook_webhook.json",
      "workflow_name": "data_3504_workflow_3504_automate_notion_webhook_webhook",
      "suggested_filename": "data_3504_workflow_3504_automate_notion_webhook_webhook.json",
      "category": "DATA",
      "business_function": "3504",
      "key_integrations": [
        "webhook",
        "set",
        "airtable",
        "googleSheets",
        "notion",
        "stickyNote",
        "filter"
      ],
      "trigger_type": "webhook",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates 3504 processes using webhook, set, airtable",
      "analysis_timestamp": "2025-06-01T16:06:49.059327"
    },
    {
      "original_filename": "ai_make_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "workflow_name": "Make OpenAI Citation for File Retrieval RAG",
      "suggested_filename": "ai_make_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "category": "AI",
      "business_function": "make",
      "key_integrations": [
        "aggregate",
        "@n8n/langchain.memoryBufferWindow",
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.openAi",
        "httpRequest",
        "splitOut",
        "set",
        "markdown",
        "code"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.splitOut": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates make processes using aggregate, @n8n/langchain.memoryBufferWindow, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.059860"
    },
    {
      "original_filename": "ai_news_extract_nocodb_itemlists_cron_2.json",
      "workflow_name": "News Extraction",
      "suggested_filename": "ai_news_extract_nocodb_itemlists_cron_2.json",
      "category": "AI",
      "business_function": "news",
      "key_integrations": [
        "html",
        "openAi",
        "set",
        "merge",
        "code",
        "httpRequest",
        "stickyNote",
        "scheduleTrigger",
        "nocoDb",
        "itemLists"
      ],
      "trigger_type": "cron",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "n8n-nodes-base.html": 3,
        "n8n-nodes-base.openAi": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.merge": 4,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 18,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.nocoDb": 1,
        "n8n-nodes-base.itemLists": 2
      },
      "business_value": "Automates news processes using html, openAi, set",
      "analysis_timestamp": "2025-06-01T16:06:49.060213"
    },
    {
      "original_filename": "util_577_workflow_577_automate_manual_readbinaryfile.json",
      "workflow_name": "util_577_workflow_577_automate_manual_readbinaryfile",
      "suggested_filename": "util_577_workflow_577_automate_manual_readbinaryfile.json",
      "category": "UTIL",
      "business_function": "577",
      "key_integrations": [
        "manualTrigger",
        "readBinaryFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readBinaryFile": 1
      },
      "business_value": "Automates 577 processes using manualTrigger, readBinaryFile",
      "analysis_timestamp": "2025-06-01T16:06:49.060344"
    },
    {
      "original_filename": "ai_email_ai_process_n8nnodeslangchainoutputparserstructured_gmail_cron.json",
      "workflow_name": "Email mailbox as Todoist tasks",
      "suggested_filename": "ai_email_ai_process_n8nnodeslangchainoutputparserstructured_gmail_cron.json",
      "category": "AI",
      "business_function": "email",
      "key_integrations": [
        "manualTrigger",
        "gmail",
        "if",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "todoist",
        "@n8n/langchain.agent",
        "merge",
        "emailReadImap",
        "scheduleTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.gmail": 5,
        "n8n-nodes-base.if": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.todoist": 3,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates email processes using manualTrigger, gmail, if",
      "analysis_timestamp": "2025-06-01T16:06:49.060702"
    },
    {
      "original_filename": "comm_receive_automate_rabbitmq_vonage.json",
      "workflow_name": "Receive messages from a queue via RabbitMQ and send an SMS",
      "suggested_filename": "comm_receive_automate_rabbitmq_vonage.json",
      "category": "COMM",
      "business_function": "receive",
      "key_integrations": [
        "rabbitmqTrigger",
        "if",
        "vonage"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.rabbitmqTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.vonage": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates receive processes using rabbitmqTrigger, if, vonage",
      "analysis_timestamp": "2025-06-01T16:06:49.060978"
    },
    {
      "original_filename": "ai_email_ai_process_gmail_gmail.json",
      "workflow_name": "(G) - Email Classification",
      "suggested_filename": "ai_email_ai_process_gmail_gmail.json",
      "category": "AI",
      "business_function": "email",
      "key_integrations": [
        "gmailTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatGroq",
        "gmail",
        "@n8n/langchain.textClassifier",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatGroq": 1,
        "n8n-nodes-base.gmail": 4,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "n8n-nodes-base.stickyNote": 6
      },
      "business_value": "Automates email processes using gmailTrigger, @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:49.061227"
    },
    {
      "original_filename": "util_2295_workflow_2295_automate_manual_n8n.json",
      "workflow_name": "util_2295_workflow_2295_automate_manual_n8n",
      "suggested_filename": "util_2295_workflow_2295_automate_manual_n8n.json",
      "category": "UTIL",
      "business_function": "2295",
      "key_integrations": [
        "manualTrigger",
        "n8n",
        "convertToFile",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 2295 processes using manualTrigger, n8n, convertToFile",
      "analysis_timestamp": "2025-06-01T16:06:49.061459"
    },
    {
      "original_filename": "ai_personalized_ai_process_n8nnodeslangchainvectorstoreinmemory_gmail_cron.json",
      "workflow_name": "Personalized AI Tech Newsletter Using RSS, OpenAI and Gmail",
      "suggested_filename": "ai_personalized_ai_process_n8nnodeslangchainvectorstoreinmemory_gmail_cron.json",
      "category": "AI",
      "business_function": "personalized",
      "key_integrations": [
        "splitOut",
        "set",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.lmChatOpenAi",
        "scheduleTrigger",
        "stickyNote",
        "@n8n/langchain.agent",
        "gmail"
      ],
      "trigger_type": "chat",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.set": 3,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.scheduleTrigger": 2,
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.markdown": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory": 2,
        "n8n-nodes-base.rssFeedRead": 1
      },
      "business_value": "Automates personalized processes using splitOut, set, @n8n/langchain.embeddingsOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.061818"
    },
    {
      "original_filename": "util_receive_update_flow.json",
      "workflow_name": "Receive updates for specified tasks in Flow",
      "suggested_filename": "util_receive_update_flow.json",
      "category": "UTIL",
      "business_function": "receive",
      "key_integrations": [
        "flowTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.flowTrigger": 1
      },
      "business_value": "Automates receive processes using flowTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.062011"
    },
    {
      "original_filename": "ai_telegram_ai_process_n8nnodeslangchainmemorybufferwindow_telegram_2.json",
      "workflow_name": "Telegram AI multi-format chatbot",
      "suggested_filename": "ai_telegram_ai_process_n8nnodeslangchainmemorybufferwindow_telegram_2.json",
      "category": "AI",
      "business_function": "telegram",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "telegram",
        "telegramTrigger",
        "set",
        "@n8n/langchain.openAi",
        "stickyNote",
        "@n8n/langchain.agent",
        "switch"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.telegram": 5,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates telegram processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow, telegram",
      "analysis_timestamp": "2025-06-01T16:06:49.062309"
    },
    {
      "original_filename": "comm_1393_workflow_1393_automate_awstextract_telegram.json",
      "workflow_name": "comm_1393_workflow_1393_automate_awstextract_telegram",
      "suggested_filename": "comm_1393_workflow_1393_automate_awstextract_telegram.json",
      "category": "COMM",
      "business_function": "1393",
      "key_integrations": [
        "awsTextract",
        "telegramTrigger",
        "airtable",
        "awsS3"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.awsTextract": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.awsS3": 1
      },
      "business_value": "Automates 1393 processes using awsTextract, telegramTrigger, airtable",
      "analysis_timestamp": "2025-06-01T16:06:49.062509"
    },
    {
      "original_filename": "ai_very_ai_process_emailsend_n8nnodeslangchainchainsummarization_1.json",
      "workflow_name": "Very simple Human in the loop system email with AI e IMAP",
      "suggested_filename": "ai_very_ai_process_emailsend_n8nnodeslangchainchainsummarization_1.json",
      "category": "AI",
      "business_function": "very",
      "key_integrations": [
        "emailReadImap",
        "markdown",
        "emailSend",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "stickyNote",
        "set",
        "if"
      ],
      "trigger_type": "email",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.emailSend": 2,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates very processes using emailReadImap, markdown, emailSend",
      "analysis_timestamp": "2025-06-01T16:06:49.062784"
    },
    {
      "original_filename": "util_auth0_automate_httprequest_stopanderror_webhook.json",
      "workflow_name": "Auth0 User Login",
      "suggested_filename": "util_auth0_automate_httprequest_stopanderror_webhook.json",
      "category": "UTIL",
      "business_function": "auth0",
      "key_integrations": [
        "httpRequest",
        "if",
        "stopAndError",
        "respondToWebhook",
        "stickyNote",
        "set",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stopAndError": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.webhook": 2
      },
      "business_value": "Automates auth0 processes using httpRequest, if, stopAndError",
      "analysis_timestamp": "2025-06-01T16:06:49.063075"
    },
    {
      "original_filename": "data_autoqoutesv2_template_automate_httprequest_executecommand.json",
      "workflow_name": "AutoQoutesV2_template",
      "suggested_filename": "data_autoqoutesv2_template_automate_httprequest_executecommand.json",
      "category": "DATA",
      "business_function": "autoqoutesv2",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "stickyNote",
        "googleSheets",
        "wait",
        "googleDrive",
        "readWriteFile",
        "code",
        "executeCommand"
      ],
      "trigger_type": "manual",
      "complexity_score": 28,
      "complexity": "High",
      "total_nodes": 28,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 8,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.googleSheets": 5,
        "n8n-nodes-base.wait": 2,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.readWriteFile": 3,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.executeCommand": 1
      },
      "business_value": "Automates autoqoutesv2 processes using manualTrigger, httpRequest, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.063627"
    },
    {
      "original_filename": "comm_1939_workflow_1939_automate_datetime_gmail_cron.json",
      "workflow_name": "comm_1939_workflow_1939_automate_datetime_gmail_cron",
      "suggested_filename": "comm_1939_workflow_1939_automate_datetime_gmail_cron.json",
      "category": "COMM",
      "business_function": "1939",
      "key_integrations": [
        "scheduleTrigger",
        "dateTime",
        "gmail",
        "notion",
        "if",
        "notionTrigger",
        "merge",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.notion": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.notionTrigger": 1,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 1939 processes using scheduleTrigger, dateTime, gmail",
      "analysis_timestamp": "2025-06-01T16:06:49.063980"
    },
    {
      "original_filename": "util_2214_workflow_2214_automate_grist_webhook_webhook.json",
      "workflow_name": "util_2214_workflow_2214_automate_grist_webhook_webhook",
      "suggested_filename": "util_2214_workflow_2214_automate_grist_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "2214",
      "key_integrations": [
        "webhook",
        "grist",
        "if",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.grist": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 2214 processes using webhook, grist, if",
      "analysis_timestamp": "2025-06-01T16:06:49.064392"
    },
    {
      "original_filename": "comm_zendesk_automate_slack_manual_cron.json",
      "workflow_name": "Zendesk-to-slack",
      "suggested_filename": "comm_zendesk_automate_slack_manual_cron.json",
      "category": "COMM",
      "business_function": "zendesk",
      "key_integrations": [
        "manualTrigger",
        "cron",
        "function",
        "slack",
        "zendesk"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.zendesk": 1
      },
      "business_value": "Automates zendesk processes using manualTrigger, cron, function",
      "analysis_timestamp": "2025-06-01T16:06:49.064696"
    },
    {
      "original_filename": "ai_advanced_ai_process_n8nnodeslangchainchainllm_gmail_webhook.json",
      "workflow_name": "✨🔪 Advanced AI Powered Document Parsing & Text Extraction with Llama Parse",
      "suggested_filename": "ai_advanced_ai_process_n8nnodeslangchainchainllm_gmail_webhook.json",
      "category": "AI",
      "business_function": "advanced",
      "key_integrations": [
        "webhook",
        "gmail",
        "gmailTrigger",
        "limit",
        "stickyNote",
        "httpRequest",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatOpenAi",
        "googleSheets",
        "googleDrive"
      ],
      "trigger_type": "webhook",
      "complexity_score": 54,
      "complexity": "High",
      "total_nodes": 54,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.stickyNote": 18,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 4,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.googleDrive": 3,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.telegram": 4,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.noOp": 2
      },
      "business_value": "Automates advanced processes using webhook, gmail, gmailTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.065531"
    },
    {
      "original_filename": "ai_summarize_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchain.json",
      "workflow_name": "Summarize YouTube Videos & Chat About Content with GPT-4o-mini via Telegram",
      "suggested_filename": "ai_summarize_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchain.json",
      "category": "AI",
      "business_function": "summarize",
      "key_integrations": [
        "splitOut",
        "set",
        "code",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.chainLlm",
        "summarize",
        "@n8n/langchain.chatTrigger",
        "youtube-transcription-kasha.youtubeTranscripter",
        "telegram",
        "webhook"
      ],
      "trigger_type": "chat",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.summarize": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-youtube-transcription-kasha.youtubeTranscripter": 1,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.googleDocs": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.googleDocsTool": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates summarize processes using splitOut, set, code",
      "analysis_timestamp": "2025-06-01T16:06:49.065923"
    },
    {
      "original_filename": "ai_page_automate_gmail_httprequest.json",
      "workflow_name": "🤖 On-Page SEO Audit",
      "suggested_filename": "ai_page_automate_gmail_httprequest.json",
      "category": "AI",
      "business_function": "page",
      "key_integrations": [
        "formTrigger",
        "httpRequest",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.agent",
        "merge",
        "aggregate",
        "markdown",
        "stickyNote",
        "gmail"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates page processes using formTrigger, httpRequest, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.066220"
    },
    {
      "original_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_6.json",
      "workflow_name": "🤖🧠 AI Agent Chatbot + LONG TERM Memory + Note Storage + Telegram",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_6.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "@n8n/langchain.memoryBufferWindow",
        "googleDocsTool",
        "googleDocs",
        "telegram",
        "@n8n/langchain.agent",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.stickyNote": 8,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.googleDocsTool": 2,
        "n8n-nodes-base.googleDocs": 2,
        "n8n-nodes-base.telegram": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates agent processes using @n8n/langchain.chatTrigger, stickyNote, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.066551"
    },
    {
      "original_filename": "ai_2343_workflow_2343_automate_n8nnodeslangchainhttprequest_n8nnodeslangchainlmc.json",
      "workflow_name": "ai_2343_workflow_2343_automate_n8nnodeslangchainhttprequest_n8nnodeslangchainlmc",
      "suggested_filename": "ai_2343_workflow_2343_automate_n8nnodeslangchainhttprequest_n8nnodeslangchainlmc.json",
      "category": "AI",
      "business_function": "2343",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolHttpRequest",
        "set",
        "@n8n/langchain.agent",
        "manualTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 2,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates 2343 processes using stickyNote, @n8n/langchain.lmChatOpenAi, @n8n/langchain.toolHttpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.066810"
    },
    {
      "original_filename": "data_3638_workflow_3638_automate_httprequest_n8nnodeslangchainmcp.json",
      "workflow_name": "data_3638_workflow_3638_automate_httprequest_n8nnodeslangchainmcp",
      "suggested_filename": "data_3638_workflow_3638_automate_httprequest_n8nnodeslangchainmcp.json",
      "category": "DATA",
      "business_function": "3638",
      "key_integrations": [
        "executeWorkflowTrigger",
        "switch",
        "stickyNote",
        "@n8n/langchain.mcpTrigger",
        "@n8n/langchain.toolWorkflow",
        "httpRequest",
        "googleSheets",
        "filter",
        "aggregate",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.mcpTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 3,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 3638 processes using executeWorkflowTrigger, switch, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.067205"
    },
    {
      "original_filename": "comm_2511_workflow_2511_automate_splitinbatches_slack.json",
      "workflow_name": "comm_2511_workflow_2511_automate_splitinbatches_slack",
      "suggested_filename": "comm_2511_workflow_2511_automate_splitinbatches_slack.json",
      "category": "COMM",
      "business_function": "2511",
      "key_integrations": [
        "httpRequest",
        "xml",
        "splitInBatches",
        "stickyNote",
        "wait",
        "if",
        "executeWorkflowTrigger",
        "slack",
        "set",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 28,
      "complexity": "High",
      "total_nodes": 28,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.xml": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.slack": 4,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 2511 processes using httpRequest, xml, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:49.067805"
    },
    {
      "original_filename": "biz_2117_workflow_2117_automate_hubspot_httprequest_cron.json",
      "workflow_name": "biz_2117_workflow_2117_automate_hubspot_httprequest_cron",
      "suggested_filename": "biz_2117_workflow_2117_automate_hubspot_httprequest_cron.json",
      "category": "BIZ",
      "business_function": "2117",
      "key_integrations": [
        "scheduleTrigger",
        "httpRequest",
        "filter",
        "splitOut",
        "switch",
        "hubspot",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.switch": 3,
        "n8n-nodes-base.hubspot": 7,
        "n8n-nodes-base.stickyNote": 6
      },
      "business_value": "Automates 2117 processes using scheduleTrigger, httpRequest, filter",
      "analysis_timestamp": "2025-06-01T16:06:49.068327"
    },
    {
      "original_filename": "ai_qualifying_ai_process_n8nnodeslangchainchainllm_gmail.json",
      "workflow_name": "ai_qualifying_ai_process_n8nnodeslangchainchainllm_gmail",
      "suggested_filename": "ai_qualifying_ai_process_n8nnodeslangchainchainllm_gmail.json",
      "category": "AI",
      "business_function": "qualifying",
      "key_integrations": [
        "formTrigger",
        "form",
        "set",
        "@n8n/langchain.lmChatOpenAi",
        "if",
        "gmail",
        "googleCalendar",
        "stickyNote",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.form": 5,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.gmail": 3,
        "n8n-nodes-base.googleCalendar": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1
      },
      "business_value": "Automates qualifying processes using formTrigger, form, set",
      "analysis_timestamp": "2025-06-01T16:06:49.068798"
    },
    {
      "original_filename": "ai_phone_ai_process_n8nnodeslangchainoutputparserstructured_httprequest_webhook.json",
      "workflow_name": "AI Phone Agent with RetellAI",
      "suggested_filename": "ai_phone_ai_process_n8nnodeslangchainoutputparserstructured_httprequest_webhook.json",
      "category": "AI",
      "business_function": "phone",
      "key_integrations": [
        "filter",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "webhook",
        "@n8n/langchain.vectorStoreQdrant",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.toolVectorStore",
        "respondToWebhook",
        "telegram",
        "googleCalendar"
      ],
      "trigger_type": "chat",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "n8n-nodes-base.filter": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 4,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 2,
        "n8n-nodes-base.webhook": 3,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.googleCalendar": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleDrive": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates phone processes using filter, @n8n/langchain.lmChatOpenAi, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:49.069334"
    },
    {
      "original_filename": "util_534_workflow_534_automate_invoiceninja_manual.json",
      "workflow_name": "util_534_workflow_534_automate_invoiceninja_manual",
      "suggested_filename": "util_534_workflow_534_automate_invoiceninja_manual.json",
      "category": "UTIL",
      "business_function": "534",
      "key_integrations": [
        "manualTrigger",
        "invoiceNinja"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.invoiceNinja": 1
      },
      "business_value": "Automates 534 processes using manualTrigger, invoiceNinja",
      "analysis_timestamp": "2025-06-01T16:06:49.069482"
    },
    {
      "original_filename": "data_loading_read_manual.json",
      "workflow_name": "Loading data into a spreadsheet",
      "suggested_filename": "data_loading_read_manual.json",
      "category": "DATA",
      "business_function": "loading",
      "key_integrations": [
        "manualTrigger",
        "set",
        "function"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates loading processes using manualTrigger, set, function",
      "analysis_timestamp": "2025-06-01T16:06:49.069726"
    },
    {
      "original_filename": "ai_daily_ai_process_httprequest_schedule_cron.json",
      "workflow_name": "Daily AI News Translation & Summary with GPT-4 and Telegram Delivery",
      "suggested_filename": "ai_daily_ai_process_httprequest_schedule_cron.json",
      "category": "AI",
      "business_function": "daily",
      "key_integrations": [
        "stickyNote",
        "scheduleTrigger",
        "httpRequest",
        "set",
        "merge",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "telegram"
      ],
      "trigger_type": "cron",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates daily processes using stickyNote, scheduleTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.070003"
    },
    {
      "original_filename": "util_image_automate_n8nnodeslangchainchainllm_form_2.json",
      "workflow_name": "Image to license plate number",
      "suggested_filename": "util_image_automate_n8nnodeslangchainchainllm_form_2.json",
      "category": "UTIL",
      "business_function": "image",
      "key_integrations": [
        "@n8n/langchain.chainLlm",
        "form",
        "@n8n/langchain.lmChatOpenRouter",
        "set",
        "formTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.form": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.formTrigger": 1
      },
      "business_value": "Automates image processes using @n8n/langchain.chainLlm, form, @n8n/langchain.lmChatOpenRouter",
      "analysis_timestamp": "2025-06-01T16:06:49.070239"
    },
    {
      "original_filename": "ai_2441_workflow_2441_automate_httprequest_n8nnodeslangchainopenai.json",
      "workflow_name": "ai_2441_workflow_2441_automate_httprequest_n8nnodeslangchainopenai",
      "suggested_filename": "ai_2441_workflow_2441_automate_httprequest_n8nnodeslangchainopenai.json",
      "category": "AI",
      "business_function": "2441",
      "key_integrations": [
        "httpRequest",
        "splitOut",
        "emailReadImap",
        "set",
        "@n8n/langchain.openAi",
        "filter",
        "stickyNote"
      ],
      "trigger_type": "email",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 2441 processes using httpRequest, splitOut, emailReadImap",
      "analysis_timestamp": "2025-06-01T16:06:49.070576"
    },
    {
      "original_filename": "util_655_workflow_655_automate_manual.json",
      "workflow_name": "util_655_workflow_655_automate_manual",
      "suggested_filename": "util_655_workflow_655_automate_manual.json",
      "category": "UTIL",
      "business_function": "655",
      "key_integrations": [
        "manualTrigger",
        "code",
        "merge"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates 655 processes using manualTrigger, code, merge",
      "analysis_timestamp": "2025-06-01T16:06:49.070810"
    },
    {
      "original_filename": "util_535_workflow_535_automate_invoiceninja.json",
      "workflow_name": "util_535_workflow_535_automate_invoiceninja",
      "suggested_filename": "util_535_workflow_535_automate_invoiceninja.json",
      "category": "UTIL",
      "business_function": "535",
      "key_integrations": [
        "invoiceNinjaTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.invoiceNinjaTrigger": 1
      },
      "business_value": "Automates 535 processes using invoiceNinjaTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.070930"
    },
    {
      "original_filename": "ai_company_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvectors_1.json",
      "workflow_name": "RAG Workflow For Company Documents stored in Google Drive",
      "suggested_filename": "ai_company_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvectors_1.json",
      "category": "AI",
      "business_function": "company",
      "key_integrations": [
        "@n8n/langchain.vectorStorePinecone",
        "@n8n/langchain.embeddingsGoogleGemini",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.agent",
        "@n8n/langchain.toolVectorStore",
        "googleDrive",
        "stickyNote",
        "googleDriveTrigger",
        "@n8n/langchain.memoryBufferWindow"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 2,
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.googleDriveTrigger": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2
      },
      "business_value": "Automates company processes using @n8n/langchain.vectorStorePinecone, @n8n/langchain.embeddingsGoogleGemini, @n8n/langchain.documentDefaultDataLoader",
      "analysis_timestamp": "2025-06-01T16:06:49.071232"
    },
    {
      "original_filename": "ai_openai_ai_process_httprequest_manual.json",
      "workflow_name": "New OpenAI Image Generation",
      "suggested_filename": "ai_openai_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "openai",
      "key_integrations": [
        "convertToFile",
        "httpRequest",
        "manualTrigger",
        "set",
        "splitOut",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates openai processes using convertToFile, httpRequest, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.071507"
    },
    {
      "original_filename": "ai_tech_automate_n8nnodeslangchainlmchatanthropic_googledrive_cron.json",
      "workflow_name": "Tech Radar",
      "suggested_filename": "ai_tech_automate_n8nnodeslangchainlmchatanthropic_googledrive_cron.json",
      "category": "AI",
      "business_function": "tech",
      "key_integrations": [
        "googleDrive",
        "@n8n/langchain.documentDefaultDataLoader",
        "stickyNote",
        "cron",
        "mySql",
        "googleSheets",
        "code",
        "googleDocs",
        "googleDriveTrigger",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "trigger_type": "cron",
      "complexity_score": 53,
      "complexity": "High",
      "total_nodes": 53,
      "node_types": {
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "n8n-nodes-base.stickyNote": 16,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.mySql": 2,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.googleDocs": 1,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.executeWorkflow": 2,
        "@n8n/n8n-nodes-langchain.agent": 3,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.mySqlTool": 3,
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 2,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini": 2,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 1,
        "@n8n/n8n-nodes-langchain.lmChatGroq": 3,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1
      },
      "business_value": "Automates tech processes using googleDrive, @n8n/langchain.documentDefaultDataLoader, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.072081"
    },
    {
      "original_filename": "util_2769_workflow_2769_automate_webhook_webhook.json",
      "workflow_name": "util_2769_workflow_2769_automate_webhook_webhook",
      "suggested_filename": "util_2769_workflow_2769_automate_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "2769",
      "key_integrations": [
        "klicktipp.klicktipp",
        "set",
        "stickyNote",
        "if",
        "aggregate",
        "merge",
        "splitOut",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-klicktipp.klicktipp": 5,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 2769 processes using klicktipp.klicktipp, set, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.072511"
    },
    {
      "original_filename": "ai_text_ai_process_httprequest_manual_1.json",
      "workflow_name": "Text to Speech (OpenAI)",
      "suggested_filename": "ai_text_ai_process_httprequest_manual_1.json",
      "category": "AI",
      "business_function": "text",
      "key_integrations": [
        "manualTrigger",
        "set",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates text processes using manualTrigger, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.072744"
    },
    {
      "original_filename": "ai_detect_validate_n8nnodeslangchainlmollama_n8nnodeslangchainchainllm.json",
      "workflow_name": "ai_detect_validate_n8nnodeslangchainlmollama_n8nnodeslangchainchainllm",
      "suggested_filename": "ai_detect_validate_n8nnodeslangchainlmollama_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "detect",
      "key_integrations": [
        "code",
        "splitOut",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatOllama",
        "manualTrigger",
        "set",
        "merge",
        "filter",
        "executeWorkflowTrigger",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.lmOllama": 1,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates detect processes using code, splitOut, @n8n/langchain.chainLlm",
      "analysis_timestamp": "2025-06-01T16:06:49.073043"
    },
    {
      "original_filename": "ai_2454_workflow_2454_automate_splitinbatches_microsoftoutlook.json",
      "workflow_name": "ai_2454_workflow_2454_automate_splitinbatches_microsoftoutlook",
      "suggested_filename": "ai_2454_workflow_2454_automate_splitinbatches_microsoftoutlook.json",
      "category": "AI",
      "business_function": "2454",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "@n8n/langchain.lmChatOllama",
        "microsoftOutlook",
        "splitInBatches",
        "markdown",
        "set",
        "filter",
        "if",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 10,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 1,
        "n8n-nodes-base.microsoftOutlook": 13,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates 2454 processes using manualTrigger, stickyNote, @n8n/langchain.lmChatOllama",
      "analysis_timestamp": "2025-06-01T16:06:49.073556"
    },
    {
      "original_filename": "ai_2083_workflow_2083_automate_n8nnodeslangchainchainllm_httprequest.json",
      "workflow_name": "ai_2083_workflow_2083_automate_n8nnodeslangchainchainllm_httprequest",
      "suggested_filename": "ai_2083_workflow_2083_automate_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "2083",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "httpRequest",
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "@n8n/langchain.chainLlm",
        "code"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.httpRequest": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates 2083 processes using manualTrigger, stickyNote, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.073899"
    },
    {
      "original_filename": "ai_2467_workflow_2467_automate_splitinbatches_n8nnodeslangchainchainllm.json",
      "workflow_name": "ai_2467_workflow_2467_automate_splitinbatches_n8nnodeslangchainchainllm",
      "suggested_filename": "ai_2467_workflow_2467_automate_splitinbatches_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "2467",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "code",
        "splitOut",
        "httpRequest",
        "convertToFile",
        "manualTrigger",
        "aggregate",
        "googleDrive",
        "stickyNote",
        "wait"
      ],
      "trigger_type": "chat",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.editImage": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates 2467 processes using @n8n/langchain.lmChatOpenAi, code, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:49.074311"
    },
    {
      "original_filename": "util_automate_httprequest_schedule_cron.json",
      "workflow_name": "My workflow 2",
      "suggested_filename": "util_automate_httprequest_schedule_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "key_integrations": [
        "httpRequest",
        "set",
        "splitOut",
        "merge",
        "if",
        "code",
        "stickyNote",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 28,
      "complexity": "High",
      "total_nodes": 28,
      "node_types": {
        "n8n-nodes-base.httpRequest": 8,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates automate processes using httpRequest, set, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:49.074758"
    },
    {
      "original_filename": "util_2306_workflow_2306_automate_httprequest_readwritefile.json",
      "workflow_name": "util_2306_workflow_2306_automate_httprequest_readwritefile",
      "suggested_filename": "util_2306_workflow_2306_automate_httprequest_readwritefile.json",
      "category": "UTIL",
      "business_function": "2306",
      "key_integrations": [
        "manualTrigger",
        "readWriteFile",
        "stickyNote",
        "httpRequest",
        "googleDrive"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleDrive": 1
      },
      "business_value": "Automates 2306 processes using manualTrigger, readWriteFile, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.075089"
    },
    {
      "original_filename": "ai_online_report_n8nnodeslangchaincalculator_emailsend_cron.json",
      "workflow_name": "Online Marketing Weekly Report",
      "suggested_filename": "ai_online_report_n8nnodeslangchaincalculator_emailsend_cron.json",
      "category": "AI",
      "business_function": "online",
      "key_integrations": [
        "scheduleTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolWorkflow",
        "executeWorkflowTrigger",
        "@n8n/langchain.toolCalculator",
        "stickyNote",
        "googleAnalytics",
        "code",
        "set",
        "summarize"
      ],
      "trigger_type": "cron",
      "complexity_score": 51,
      "complexity": "High",
      "total_nodes": 51,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 7,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 3,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.googleAnalytics": 2,
        "n8n-nodes-base.code": 8,
        "n8n-nodes-base.set": 6,
        "n8n-nodes-base.summarize": 6,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.facebookGraphApi": 2,
        "@n8n/n8n-nodes-langchain.openAi": 4,
        "n8n-nodes-base.emailSend": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates online processes using scheduleTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.toolWorkflow",
      "analysis_timestamp": "2025-06-01T16:06:49.075804"
    },
    {
      "original_filename": "comm_daylight_automate_slack_datetime_cron.json",
      "workflow_name": "Daylight Saving Time Notification",
      "suggested_filename": "comm_daylight_automate_slack_datetime_cron.json",
      "category": "COMM",
      "business_function": "daylight",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "code",
        "set",
        "if",
        "slack",
        "dateTime",
        "scheduleTrigger",
        "emailSend"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.emailSend": 1
      },
      "business_value": "Automates daylight processes using manualTrigger, stickyNote, code",
      "analysis_timestamp": "2025-06-01T16:06:49.076184"
    },
    {
      "original_filename": "util_2620_workflow_2620_automate_calendly.json",
      "workflow_name": "util_2620_workflow_2620_automate_calendly",
      "suggested_filename": "util_2620_workflow_2620_automate_calendly.json",
      "category": "UTIL",
      "business_function": "2620",
      "key_integrations": [
        "klicktipp.klicktipp",
        "splitOut",
        "if",
        "calendlyTrigger",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-klicktipp.klicktipp": 5,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.calendlyTrigger": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.noOp": 3,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 2620 processes using klicktipp.klicktipp, splitOut, if",
      "analysis_timestamp": "2025-06-01T16:06:49.076564"
    },
    {
      "original_filename": "ai_1862_workflow_1862_automate_splitinbatches_htmlextract.json",
      "workflow_name": "ai_1862_workflow_1862_automate_splitinbatches_htmlextract",
      "suggested_filename": "ai_1862_workflow_1862_automate_splitinbatches_htmlextract.json",
      "category": "AI",
      "business_function": "1862",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "htmlExtract",
        "openAi",
        "merge",
        "code",
        "googleSheets",
        "splitInBatches",
        "wait"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.htmlExtract": 1,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.wait": 1
      },
      "business_value": "Automates 1862 processes using manualTrigger, httpRequest, htmlExtract",
      "analysis_timestamp": "2025-06-01T16:06:49.076858"
    },
    {
      "original_filename": "comm_google_automate_slack_httprequest.json",
      "workflow_name": "Google Calendar to Slack Status & Philips Hue",
      "suggested_filename": "comm_google_automate_slack_httprequest.json",
      "category": "COMM",
      "business_function": "google",
      "key_integrations": [
        "manualTrigger",
        "googleCalendar",
        "httpRequest",
        "switch",
        "googleCalendarTrigger",
        "slack",
        "function"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleCalendar": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.googleCalendarTrigger": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.function": 1
      },
      "business_value": "Automates google processes using manualTrigger, googleCalendar, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.077113"
    },
    {
      "original_filename": "analytics_matomo_report_httprequest_schedule_cron.json",
      "workflow_name": "Matomo Analytics Report",
      "suggested_filename": "analytics_matomo_report_httprequest_schedule_cron.json",
      "category": "ANALYTICS",
      "business_function": "matomo",
      "key_integrations": [
        "manualTrigger",
        "scheduleTrigger",
        "httpRequest",
        "code",
        "baserow",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.baserow": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates matomo processes using manualTrigger, scheduleTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.077407"
    },
    {
      "original_filename": "content_create_create_wordpress_manual.json",
      "workflow_name": "Create a post and update the post in WordPress",
      "suggested_filename": "content_create_create_wordpress_manual.json",
      "category": "CONTENT",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "wordpress"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.wordpress": 2
      },
      "business_value": "Automates create processes using manualTrigger, wordpress",
      "analysis_timestamp": "2025-06-01T16:06:49.077617"
    },
    {
      "original_filename": "comm_mattermost_automate_webhook_httprequest_webhook.json",
      "workflow_name": "Mattermost Webhook",
      "suggested_filename": "comm_mattermost_automate_webhook_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "mattermost",
      "key_integrations": [
        "webhook",
        "httpRequest",
        "mattermost"
      ],
      "trigger_type": "webhook",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.mattermost": 1
      },
      "business_value": "Automates mattermost processes using webhook, httpRequest, mattermost",
      "analysis_timestamp": "2025-06-01T16:06:49.077833"
    },
    {
      "original_filename": "comm_2312_workflow_2312_automate_error_gmail_cron.json",
      "workflow_name": "comm_2312_workflow_2312_automate_error_gmail_cron",
      "suggested_filename": "comm_2312_workflow_2312_automate_error_gmail_cron.json",
      "category": "COMM",
      "business_function": "2312",
      "key_integrations": [
        "errorTrigger",
        "n8n",
        "gmail",
        "code",
        "stickyNote",
        "scheduleTrigger",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.errorTrigger": 1,
        "n8n-nodes-base.n8n": 3,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 2312 processes using errorTrigger, n8n, gmail",
      "analysis_timestamp": "2025-06-01T16:06:49.078060"
    },
    {
      "original_filename": "util_automate_manual_wekan.json",
      "workflow_name": "",
      "suggested_filename": "util_automate_manual_wekan.json",
      "category": "UTIL",
      "business_function": "automate",
      "key_integrations": [
        "manualTrigger",
        "wekan"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.wekan": 5
      },
      "business_value": "Automates automate processes using manualTrigger, wekan",
      "analysis_timestamp": "2025-06-01T16:06:49.078288"
    },
    {
      "original_filename": "content_546_workflow_546_automate_wordpress_manual.json",
      "workflow_name": "content_546_workflow_546_automate_wordpress_manual",
      "suggested_filename": "content_546_workflow_546_automate_wordpress_manual.json",
      "category": "CONTENT",
      "business_function": "546",
      "key_integrations": [
        "manualTrigger",
        "wordpress"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.wordpress": 1
      },
      "business_value": "Automates 546 processes using manualTrigger, wordpress",
      "analysis_timestamp": "2025-06-01T16:06:49.078405"
    },
    {
      "original_filename": "util_2536_workflow_2536_automate_splitinbatches_httprequest_webhook.json",
      "workflow_name": "util_2536_workflow_2536_automate_splitinbatches_httprequest_webhook",
      "suggested_filename": "util_2536_workflow_2536_automate_splitinbatches_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "2536",
      "key_integrations": [
        "manualTrigger",
        "splitInBatches",
        "wait",
        "code",
        "set",
        "if",
        "httpRequest",
        "respondToWebhook",
        "stickyNote",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.wait": 2,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 2536 processes using manualTrigger, splitInBatches, wait",
      "analysis_timestamp": "2025-06-01T16:06:49.078732"
    },
    {
      "original_filename": "ai_video_automate_httprequest_youtube.json",
      "workflow_name": "YT New Video Upload",
      "suggested_filename": "ai_video_automate_httprequest_youtube.json",
      "category": "AI",
      "business_function": "video",
      "key_integrations": [
        "googleDrive",
        "googleDriveTrigger",
        "@n8n/langchain.openAi",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.agent",
        "httpRequest",
        "code",
        "youTube",
        "stickyNote",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.googleDriveTrigger": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.youTube": 2,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates video processes using googleDrive, googleDriveTrigger, @n8n/langchain.openAi",
      "analysis_timestamp": "2025-06-01T16:06:49.079118"
    },
    {
      "original_filename": "ai_telegram_ai_process_n8nnodeslangchainmemorybufferwindow_httprequest_2.json",
      "workflow_name": "Telegram AI Langchain bot",
      "suggested_filename": "ai_telegram_ai_process_n8nnodeslangchainmemorybufferwindow_httprequest_2.json",
      "category": "AI",
      "business_function": "telegram",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "telegram",
        "executeWorkflowTrigger",
        "telegramTrigger",
        "set",
        "stickyNote",
        "@n8n/langchain.toolWorkflow",
        "httpRequest",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.telegram": 3,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates telegram processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow, telegram",
      "analysis_timestamp": "2025-06-01T16:06:49.079411"
    },
    {
      "original_filename": "analytics_track_monitor_segment_manual.json",
      "workflow_name": "Track an event in Segment",
      "suggested_filename": "analytics_track_monitor_segment_manual.json",
      "category": "ANALYTICS",
      "business_function": "track",
      "key_integrations": [
        "manualTrigger",
        "segment"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.segment": 1
      },
      "business_value": "Automates track processes using manualTrigger, segment",
      "analysis_timestamp": "2025-06-01T16:06:49.079577"
    },
    {
      "original_filename": "content_2518_workflow_2518_automate_splitinbatches_comparedatasets.json",
      "workflow_name": "content_2518_workflow_2518_automate_splitinbatches_comparedatasets",
      "suggested_filename": "content_2518_workflow_2518_automate_splitinbatches_comparedatasets.json",
      "category": "CONTENT",
      "business_function": "2518",
      "key_integrations": [
        "compareDatasets",
        "set",
        "spotify",
        "youTube",
        "splitInBatches",
        "manualTrigger",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.compareDatasets": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.spotify": 3,
        "n8n-nodes-base.youTube": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates 2518 processes using compareDatasets, set, spotify",
      "analysis_timestamp": "2025-06-01T16:06:49.079872"
    },
    {
      "original_filename": "ai_3684_workflow_3684_automate_splitinbatches_n8nnodeslangchainoutputparserstruc.json",
      "workflow_name": "ai_3684_workflow_3684_automate_splitinbatches_n8nnodeslangchainoutputparserstruc",
      "suggested_filename": "ai_3684_workflow_3684_automate_splitinbatches_n8nnodeslangchainoutputparserstruc.json",
      "category": "AI",
      "business_function": "3684",
      "key_integrations": [
        "if",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.agent",
        "googleSheets",
        "gmail",
        "code",
        "html",
        "scheduleTrigger",
        "httpRequest",
        "splitOut"
      ],
      "trigger_type": "chat",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates 3684 processes using if, @n8n/langchain.lmChatOpenAi, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:49.080399"
    },
    {
      "original_filename": "ai_2219_workflow_2219_automate_gmail_gmail.json",
      "workflow_name": "ai_2219_workflow_2219_automate_gmail_gmail",
      "suggested_filename": "ai_2219_workflow_2219_automate_gmail_gmail.json",
      "category": "AI",
      "business_function": "2219",
      "key_integrations": [
        "stickyNote",
        "gmail",
        "@n8n/langchain.lmChatOpenAi",
        "code",
        "aggregate",
        "gmailTrigger",
        "convertToFile",
        "merge",
        "telegram",
        "@n8n/langchain.chainSummarization"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.gmail": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.telegram": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 2219 processes using stickyNote, gmail, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.080773"
    },
    {
      "original_filename": "comm_3923_workflow_3923_automate_gmail_httprequest.json",
      "workflow_name": "comm_3923_workflow_3923_automate_gmail_httprequest",
      "suggested_filename": "comm_3923_workflow_3923_automate_gmail_httprequest.json",
      "category": "COMM",
      "business_function": "3923",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "stickyNote",
        "if",
        "set",
        "splitOut",
        "code",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "gmail"
      ],
      "trigger_type": "manual",
      "complexity_score": 46,
      "complexity": "High",
      "total_nodes": 46,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.if": 5,
        "n8n-nodes-base.set": 9,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.executeWorkflow": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.googleSheets": 4,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates 3923 processes using manualTrigger, httpRequest, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.081410"
    },
    {
      "original_filename": "util_2239_workflow_2239_automate_manual.json",
      "workflow_name": "util_2239_workflow_2239_automate_manual",
      "suggested_filename": "util_2239_workflow_2239_automate_manual.json",
      "category": "UTIL",
      "business_function": "2239",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "set",
        "debugHelper"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.debugHelper": 1
      },
      "business_value": "Automates 2239 processes using manualTrigger, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:49.081729"
    },
    {
      "original_filename": "util_695_workflow_695_automate_manual.json",
      "workflow_name": "util_695_workflow_695_automate_manual",
      "suggested_filename": "util_695_workflow_695_automate_manual.json",
      "category": "UTIL",
      "business_function": "695",
      "key_integrations": [
        "manualTrigger",
        "function"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.function": 1
      },
      "business_value": "Automates 695 processes using manualTrigger, function",
      "analysis_timestamp": "2025-06-01T16:06:49.081945"
    },
    {
      "original_filename": "ops_automate_manual_github.json",
      "workflow_name": "new",
      "suggested_filename": "ops_automate_manual_github.json",
      "category": "OPS",
      "business_function": "automate",
      "key_integrations": [
        "manualTrigger",
        "github"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.github": 1
      },
      "business_value": "Automates automate processes using manualTrigger, github",
      "analysis_timestamp": "2025-06-01T16:06:49.082060"
    },
    {
      "original_filename": "ai_2740_workflow_2740_automate_n8nnodeslangchainmemorybufferwindow_gmail.json",
      "workflow_name": "ai_2740_workflow_2740_automate_n8nnodeslangchainmemorybufferwindow_gmail",
      "suggested_filename": "ai_2740_workflow_2740_automate_n8nnodeslangchainmemorybufferwindow_gmail.json",
      "category": "AI",
      "business_function": "2740",
      "key_integrations": [
        "gmailTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "gmailTool",
        "@n8n/langchain.agent",
        "@n8n/langchain.memoryBufferWindow",
        "wait",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.gmailTool": 4,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates 2740 processes using gmailTrigger, @n8n/langchain.lmChatOpenAi, gmailTool",
      "analysis_timestamp": "2025-06-01T16:06:49.082341"
    },
    {
      "original_filename": "ai_send_ai_process_slack_googlecontacts_cron.json",
      "workflow_name": "Send Daily Birthday Reminders from Google Contacts to Slack",
      "suggested_filename": "ai_send_ai_process_slack_googlecontacts_cron.json",
      "category": "AI",
      "business_function": "send",
      "key_integrations": [
        "scheduleTrigger",
        "googleContacts",
        "if",
        "slack",
        "filter",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.googleContacts": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates send processes using scheduleTrigger, googleContacts, if",
      "analysis_timestamp": "2025-06-01T16:06:49.082615"
    },
    {
      "original_filename": "ai_generate_generate_webhook_n8nnodeslangchainopenai_webhook_2.json",
      "workflow_name": "Generate audio from text using OpenAI - text-to-speech Workflow",
      "suggested_filename": "ai_generate_generate_webhook_n8nnodeslangchainopenai_webhook_2.json",
      "category": "AI",
      "business_function": "generate",
      "key_integrations": [
        "respondToWebhook",
        "stickyNote",
        "webhook",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "webhook",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates generate processes using respondToWebhook, stickyNote, webhook",
      "analysis_timestamp": "2025-06-01T16:06:49.082849"
    },
    {
      "original_filename": "comm_2119_workflow_2119_automate_slack_httprequest.json",
      "workflow_name": "comm_2119_workflow_2119_automate_slack_httprequest",
      "suggested_filename": "comm_2119_workflow_2119_automate_slack_httprequest.json",
      "category": "COMM",
      "business_function": "2119",
      "key_integrations": [
        "slack",
        "formTrigger",
        "if",
        "stickyNote",
        "httpRequest",
        "hunter"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.hunter": 1
      },
      "business_value": "Automates 2119 processes using slack, formTrigger, if",
      "analysis_timestamp": "2025-06-01T16:06:49.083143"
    },
    {
      "original_filename": "ai_mcp_gmail_ai_process_gmail_n8nnodeslangchainmcp.json",
      "workflow_name": "MCP_GMAIL",
      "suggested_filename": "ai_mcp_gmail_ai_process_gmail_n8nnodeslangchainmcp.json",
      "category": "AI",
      "business_function": "mcp",
      "key_integrations": [
        "gmailTool",
        "@n8n/langchain.mcpTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.gmailTool": 4,
        "@n8n/n8n-nodes-langchain.mcpTrigger": 1
      },
      "business_value": "Automates mcp processes using gmailTool, @n8n/langchain.mcpTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.083376"
    },
    {
      "original_filename": "data_clients_create_notion_clockify.json",
      "workflow_name": "Add new clients from Notion to Clockify",
      "suggested_filename": "data_clients_create_notion_clockify.json",
      "category": "DATA",
      "business_function": "clients",
      "key_integrations": [
        "clockify",
        "notionTrigger",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.clockify": 1,
        "n8n-nodes-base.notionTrigger": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates clients processes using clockify, notionTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.083594"
    },
    {
      "original_filename": "util_998_workflow_998_automate_deepl_httprequest.json",
      "workflow_name": "util_998_workflow_998_automate_deepl_httprequest",
      "suggested_filename": "util_998_workflow_998_automate_deepl_httprequest.json",
      "category": "UTIL",
      "business_function": "998",
      "key_integrations": [
        "httpRequest",
        "deepL"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.deepL": 1
      },
      "business_value": "Automates 998 processes using httpRequest, deepL",
      "analysis_timestamp": "2025-06-01T16:06:49.083832"
    },
    {
      "original_filename": "ai_prompt_automate_httprequest_manual.json",
      "workflow_name": "ai_prompt_automate_httprequest_manual",
      "suggested_filename": "ai_prompt_automate_httprequest_manual.json",
      "category": "AI",
      "business_function": "prompt",
      "key_integrations": [
        "manualTrigger",
        "set",
        "httpRequest",
        "code",
        "editImage",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.editImage": 2,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates prompt processes using manualTrigger, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.084102"
    },
    {
      "original_filename": "ai_data_ai_process_splitinbatches_n8nnodeslangchainchainllm_webhook_2.json",
      "workflow_name": "ai_data_ai_process_splitinbatches_n8nnodeslangchainchainllm_webhook_2",
      "suggested_filename": "ai_data_ai_process_splitinbatches_n8nnodeslangchainchainllm_webhook_2.json",
      "category": "AI",
      "business_function": "data",
      "key_integrations": [
        "webhook",
        "switch",
        "httpRequest",
        "code",
        "set",
        "extractFromFile",
        "splitInBatches",
        "@n8n/langchain.chainLlm",
        "splitOut",
        "filter"
      ],
      "trigger_type": "webhook",
      "complexity_score": 45,
      "complexity": "High",
      "total_nodes": 45,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.httpRequest": 7,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.extractFromFile": 2,
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.noOp": 4,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.stickyNote": 15,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2
      },
      "business_value": "Automates data processes using webhook, switch, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.084591"
    },
    {
      "original_filename": "comm_2122_workflow_2122_automate_hubspot_gmail.json",
      "workflow_name": "comm_2122_workflow_2122_automate_hubspot_gmail",
      "suggested_filename": "comm_2122_workflow_2122_automate_hubspot_gmail.json",
      "category": "COMM",
      "business_function": "2122",
      "key_integrations": [
        "stickyNote",
        "formTrigger",
        "if",
        "httpRequest",
        "hunter",
        "gmail",
        "set",
        "hubspot"
      ],
      "trigger_type": "manual",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.hunter": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.hubspot": 2
      },
      "business_value": "Automates 2122 processes using stickyNote, formTrigger, if",
      "analysis_timestamp": "2025-06-01T16:06:49.084989"
    },
    {
      "original_filename": "comm_monitoring_notify_postgres_twilio_cron.json",
      "workflow_name": "Monitoring and alerting",
      "suggested_filename": "comm_monitoring_notify_postgres_twilio_cron.json",
      "category": "COMM",
      "business_function": "monitoring",
      "key_integrations": [
        "cron",
        "postgres",
        "twilio",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.postgres": 2,
        "n8n-nodes-base.twilio": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates monitoring processes using cron, postgres, twilio",
      "analysis_timestamp": "2025-06-01T16:06:49.085211"
    },
    {
      "original_filename": "data_n8napi_validate_splitinbatches_n8n.json",
      "workflow_name": "n8napi-check-workflow-which-model-is-using",
      "suggested_filename": "data_n8napi_validate_splitinbatches_n8n.json",
      "category": "DATA",
      "business_function": "n8napi",
      "key_integrations": [
        "manualTrigger",
        "splitInBatches",
        "set",
        "googleSheets",
        "n8n",
        "filter",
        "splitOut",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates n8napi processes using manualTrigger, splitInBatches, set",
      "analysis_timestamp": "2025-06-01T16:06:49.085527"
    },
    {
      "original_filename": "comm_syncro_sync_httprequest_webhook_webhook.json",
      "workflow_name": "Syncro Alert to OpsGenie",
      "suggested_filename": "comm_syncro_sync_httprequest_webhook_webhook.json",
      "category": "COMM",
      "business_function": "syncro",
      "key_integrations": [
        "webhook",
        "set",
        "httpRequest",
        "if",
        "switch"
      ],
      "trigger_type": "webhook",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates syncro processes using webhook, set, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.085768"
    },
    {
      "original_filename": "util_1083_workflow_1083_automate_emailsend_manual.json",
      "workflow_name": "util_1083_workflow_1083_automate_emailsend_manual",
      "suggested_filename": "util_1083_workflow_1083_automate_emailsend_manual.json",
      "category": "UTIL",
      "business_function": "1083",
      "key_integrations": [
        "manualTrigger",
        "iCal",
        "emailSend"
      ],
      "trigger_type": "email",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.iCal": 1,
        "n8n-nodes-base.emailSend": 1
      },
      "business_value": "Automates 1083 processes using manualTrigger, iCal, emailSend",
      "analysis_timestamp": "2025-06-01T16:06:49.085902"
    },
    {
      "original_filename": "util_1330_workflow_1330_automate_httprequest_manual.json",
      "workflow_name": "util_1330_workflow_1330_automate_httprequest_manual",
      "suggested_filename": "util_1330_workflow_1330_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "1330",
      "key_integrations": [
        "manualTrigger",
        "set",
        "n8nTrainingCustomerDatastore",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.n8nTrainingCustomerDatastore": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 1330 processes using manualTrigger, set, n8nTrainingCustomerDatastore",
      "analysis_timestamp": "2025-06-01T16:06:49.086082"
    },
    {
      "original_filename": "comm_1298_workflow_1298_automate_itemlists_graphql_cron.json",
      "workflow_name": "comm_1298_workflow_1298_automate_itemlists_graphql_cron",
      "suggested_filename": "comm_1298_workflow_1298_automate_itemlists_graphql_cron.json",
      "category": "COMM",
      "business_function": "1298",
      "key_integrations": [
        "cron",
        "set",
        "graphql",
        "itemLists",
        "discord"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.graphql": 1,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.discord": 1
      },
      "business_value": "Automates 1298 processes using cron, set, graphql",
      "analysis_timestamp": "2025-06-01T16:06:49.086321"
    },
    {
      "original_filename": "ai_openai_ai_process_n8nnodeslangchaintextclassifier_n8nnodeslangchainlmchatopen.json",
      "workflow_name": "OpenAI e-mail classification - application",
      "suggested_filename": "ai_openai_ai_process_n8nnodeslangchaintextclassifier_n8nnodeslangchainlmchatopen.json",
      "category": "AI",
      "business_function": "openai",
      "key_integrations": [
        "emailReadImap",
        "stickyNote",
        "@n8n/langchain.textClassifier",
        "@n8n/langchain.informationExtractor",
        "extractFromFile",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "email",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.stickyNote": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.noOp": 3
      },
      "business_value": "Automates openai processes using emailReadImap, stickyNote, @n8n/langchain.textClassifier",
      "analysis_timestamp": "2025-06-01T16:06:49.086610"
    },
    {
      "original_filename": "ops_docker_automate_ssh_webhook_webhook_1.json",
      "workflow_name": "puq-docker-immich-deploy",
      "suggested_filename": "ops_docker_automate_ssh_webhook_webhook_1.json",
      "category": "OPS",
      "business_function": "docker",
      "key_integrations": [
        "if",
        "set",
        "webhook",
        "respondToWebhook",
        "code",
        "ssh",
        "switch",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 35,
      "complexity": "High",
      "total_nodes": 35,
      "node_types": {
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.set": 23,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.ssh": 1,
        "n8n-nodes-base.switch": 4,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates docker processes using if, set, webhook",
      "analysis_timestamp": "2025-06-01T16:06:49.087479"
    },
    {
      "original_filename": "util_1731_workflow_1731_automate_spreadsheetfile_manual.json",
      "workflow_name": "util_1731_workflow_1731_automate_spreadsheetfile_manual",
      "suggested_filename": "util_1731_workflow_1731_automate_spreadsheetfile_manual.json",
      "category": "UTIL",
      "business_function": "1731",
      "key_integrations": [
        "manualTrigger",
        "readBinaryFile",
        "spreadsheetFile",
        "moveBinaryData",
        "writeBinaryFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readBinaryFile": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.moveBinaryData": 1,
        "n8n-nodes-base.writeBinaryFile": 1
      },
      "business_value": "Automates 1731 processes using manualTrigger, readBinaryFile, spreadsheetFile",
      "analysis_timestamp": "2025-06-01T16:06:49.087753"
    },
    {
      "original_filename": "ai_1898_workflow_1898_automate_crypto_gmail_webhook.json",
      "workflow_name": "ai_1898_workflow_1898_automate_crypto_gmail_webhook",
      "suggested_filename": "ai_1898_workflow_1898_automate_crypto_gmail_webhook.json",
      "category": "AI",
      "business_function": "1898",
      "key_integrations": [
        "openAi",
        "gmailTrigger",
        "if",
        "set",
        "stickyNote",
        "gmail",
        "crypto",
        "html",
        "code",
        "googleSheets"
      ],
      "trigger_type": "webhook",
      "complexity_score": 49,
      "complexity": "High",
      "total_nodes": 49,
      "node_types": {
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.if": 7,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.crypto": 1,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.code": 8,
        "n8n-nodes-base.noOp": 8,
        "n8n-nodes-base.googleSheets": 4,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates 1898 processes using openAi, gmailTrigger, if",
      "analysis_timestamp": "2025-06-01T16:06:49.088567"
    },
    {
      "original_filename": "ai_post_automate_schedule_twitter_cron_1.json",
      "workflow_name": "Post New YouTube Videos to X",
      "suggested_filename": "ai_post_automate_schedule_twitter_cron_1.json",
      "category": "AI",
      "business_function": "post",
      "key_integrations": [
        "twitter",
        "stickyNote",
        "@n8n/langchain.openAi",
        "youTube",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.youTube": 1,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates post processes using twitter, stickyNote, @n8n/langchain.openAi",
      "analysis_timestamp": "2025-06-01T16:06:49.088947"
    },
    {
      "original_filename": "util_2152_workflow_2152_automate_respondtowebhook_httprequest_webhook.json",
      "workflow_name": "util_2152_workflow_2152_automate_respondtowebhook_httprequest_webhook",
      "suggested_filename": "util_2152_workflow_2152_automate_respondtowebhook_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "2152",
      "key_integrations": [
        "httpRequest",
        "splitOut",
        "if",
        "filter",
        "set",
        "aggregate",
        "webhook",
        "respondToWebhook",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates 2152 processes using httpRequest, splitOut, if",
      "analysis_timestamp": "2025-06-01T16:06:49.089298"
    },
    {
      "original_filename": "ai_2287_workflow_2287_automate_slack_n8nnodeslangchainchainllm.json",
      "workflow_name": "ai_2287_workflow_2287_automate_slack_n8nnodeslangchainchainllm",
      "suggested_filename": "ai_2287_workflow_2287_automate_slack_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "2287",
      "key_integrations": [
        "markdown",
        "lemlistTrigger",
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "slack",
        "lemlist",
        "httpRequest",
        "@n8n/langchain.chainLlm",
        "merge"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.lemlistTrigger": 1,
        "n8n-nodes-base.stickyNote": 8,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.lemlist": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates 2287 processes using markdown, lemlistTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.089614"
    },
    {
      "original_filename": "comm_2834_workflow_2834_automate_slack_httprequest_cron.json",
      "workflow_name": "comm_2834_workflow_2834_automate_slack_httprequest_cron",
      "suggested_filename": "comm_2834_workflow_2834_automate_slack_httprequest_cron.json",
      "category": "COMM",
      "business_function": "2834",
      "key_integrations": [
        "set",
        "httpRequest",
        "scheduleTrigger",
        "if",
        "mongoDb",
        "merge",
        "stickyNote",
        "slack"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.mongoDb": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates 2834 processes using set, httpRequest, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.089887"
    },
    {
      "original_filename": "util_monday_read_mondaycom_executeworkflow.json",
      "workflow_name": "MONDAY GET FULL ITEM",
      "suggested_filename": "util_monday_read_mondaycom_executeworkflow.json",
      "category": "UTIL",
      "business_function": "monday",
      "key_integrations": [
        "code",
        "mondayCom",
        "splitOut",
        "aggregate",
        "merge",
        "executeWorkflowTrigger",
        "stickyNote",
        "executeWorkflow",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "n8n-nodes-base.code": 7,
        "n8n-nodes-base.mondayCom": 3,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.merge": 4,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates monday processes using code, mondayCom, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:49.090264"
    },
    {
      "original_filename": "comm_2023_workflow_2023_automate_itemlists_slack_cron.json",
      "workflow_name": "comm_2023_workflow_2023_automate_itemlists_slack_cron",
      "suggested_filename": "comm_2023_workflow_2023_automate_itemlists_slack_cron.json",
      "category": "COMM",
      "business_function": "2023",
      "key_integrations": [
        "code",
        "stickyNote",
        "scheduleTrigger",
        "httpRequest",
        "html",
        "itemLists",
        "markdown",
        "googleSheets",
        "merge",
        "slack"
      ],
      "trigger_type": "cron",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates 2023 processes using code, stickyNote, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.090576"
    },
    {
      "original_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_7.json",
      "workflow_name": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_7",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_7.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolSerpApi",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolSerpApi": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates agent processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow, @n8n/langchain.toolSerpApi",
      "analysis_timestamp": "2025-06-01T16:06:49.090709"
    },
    {
      "original_filename": "comm_hiroshidigital_send_httprequest_manual.json",
      "workflow_name": "[hiroshidigital.com] Send Message In Larksuite",
      "suggested_filename": "comm_hiroshidigital_send_httprequest_manual.json",
      "category": "COMM",
      "business_function": "hiroshidigital",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates hiroshidigital processes using manualTrigger, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:49.090942"
    },
    {
      "original_filename": "ai_automate_slack_n8nnodeslangchainchainllm_webhook_1.json",
      "workflow_name": "My workflow 6",
      "suggested_filename": "ai_automate_slack_n8nnodeslangchainchainllm_webhook_1.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "stickyNote",
        "webhook",
        "switch",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatOpenAi",
        "slack"
      ],
      "trigger_type": "webhook",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates automate processes using stickyNote, webhook, switch",
      "analysis_timestamp": "2025-06-01T16:06:49.091187"
    },
    {
      "original_filename": "comm_gumroad_automate_mailerlite_httprequest.json",
      "workflow_name": "Gumroad sale trigger",
      "suggested_filename": "comm_gumroad_automate_mailerlite_httprequest.json",
      "category": "COMM",
      "business_function": "gumroad",
      "key_integrations": [
        "httpRequest",
        "gumroadTrigger",
        "googleSheets",
        "stickyNote",
        "mailerLite"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.gumroadTrigger": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.mailerLite": 1
      },
      "business_value": "Automates gumroad processes using httpRequest, gumroadTrigger, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:49.091467"
    },
    {
      "original_filename": "ai_google_extract_n8nnodeslangchainchainllm_gmail.json",
      "workflow_name": "Google Trend Data Extract, Summarization with Bright Data & Google Gemini",
      "suggested_filename": "ai_google_extract_n8nnodeslangchainchainllm_gmail.json",
      "category": "AI",
      "business_function": "google",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "@n8n/langchain.chainLlm",
        "set",
        "httpRequest",
        "@n8n/langchain.lmChatGoogleGemini",
        "function",
        "@n8n/langchain.informationExtractor",
        "@n8n/langchain.chainSummarization",
        "readWriteFile"
      ],
      "trigger_type": "chat",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 3,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 3,
        "n8n-nodes-base.function": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates google processes using manualTrigger, stickyNote, @n8n/langchain.chainLlm",
      "analysis_timestamp": "2025-06-01T16:06:49.091782"
    },
    {
      "original_filename": "util_easiest_automate_httprequest_manual.json",
      "workflow_name": "The Easiest Way to Send SMS Worldwide",
      "suggested_filename": "util_easiest_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "easiest",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates easiest processes using manualTrigger, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:49.092041"
    },
    {
      "original_filename": "util_1692_workflow_1692_automate_itemlists_movebinarydata.json",
      "workflow_name": "util_1692_workflow_1692_automate_itemlists_movebinarydata",
      "suggested_filename": "util_1692_workflow_1692_automate_itemlists_movebinarydata.json",
      "category": "UTIL",
      "business_function": "1692",
      "key_integrations": [
        "manualTrigger",
        "itemLists",
        "markdown",
        "function",
        "emailSend",
        "httpRequest",
        "merge",
        "moveBinaryData"
      ],
      "trigger_type": "email",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.itemLists": 2,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.moveBinaryData": 1
      },
      "business_value": "Automates 1692 processes using manualTrigger, itemLists, markdown",
      "analysis_timestamp": "2025-06-01T16:06:49.092358"
    },
    {
      "original_filename": "comm_create_unique_jira_tickets_from_splunk_alerts_notify_jira_webhook_webhook.json",
      "workflow_name": "Create_Unique_Jira_tickets_from_Splunk_alerts",
      "suggested_filename": "comm_create_unique_jira_tickets_from_splunk_alerts_notify_jira_webhook_webhook.json",
      "category": "COMM",
      "business_function": "create",
      "key_integrations": [
        "webhook",
        "jira",
        "set",
        "if",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.jira": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates create processes using webhook, jira, set",
      "analysis_timestamp": "2025-06-01T16:06:49.092729"
    },
    {
      "original_filename": "ai_agent_ai_process_n8nnodeslangchainchat_postgres.json",
      "workflow_name": "ai_agent_ai_process_n8nnodeslangchainchat_postgres",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainchat_postgres.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "postgresTool",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.postgresTool": 3,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates agent processes using stickyNote, @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.093054"
    },
    {
      "original_filename": "ai_youtube_ai_process_rssfeedread_httprequest_2.json",
      "workflow_name": "YouTube Videos with AI Summaries on Discord",
      "suggested_filename": "ai_youtube_ai_process_rssfeedread_httprequest_2.json",
      "category": "AI",
      "business_function": "youtube",
      "key_integrations": [
        "rssFeedReadTrigger",
        "httpRequest",
        "extractFromFile",
        "@n8n/langchain.openAi",
        "discord",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.rssFeedReadTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.discord": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates youtube processes using rssFeedReadTrigger, httpRequest, extractFromFile",
      "analysis_timestamp": "2025-06-01T16:06:49.093369"
    },
    {
      "original_filename": "data_form_automate_googlesheets_n8n.json",
      "workflow_name": "Form with Dynamic Dropdown Field",
      "suggested_filename": "data_form_automate_googlesheets_n8n.json",
      "category": "DATA",
      "business_function": "form",
      "key_integrations": [
        "n8n",
        "formTrigger",
        "googleSheetsTrigger",
        "executeWorkflow",
        "stickyNote",
        "code",
        "set",
        "googleSheets"
      ],
      "trigger_type": "manual",
      "complexity_score": 16,
      "complexity": "High",
      "total_nodes": 16,
      "node_types": {
        "n8n-nodes-base.n8n": 2,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.googleSheetsTrigger": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates form processes using n8n, formTrigger, googleSheetsTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.093718"
    },
    {
      "original_filename": "util_2684_workflow_2684_automate_graphql_manual.json",
      "workflow_name": "util_2684_workflow_2684_automate_graphql_manual",
      "suggested_filename": "util_2684_workflow_2684_automate_graphql_manual.json",
      "category": "UTIL",
      "business_function": "2684",
      "key_integrations": [
        "set",
        "graphql",
        "if",
        "manualTrigger",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.graphql": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates 2684 processes using set, graphql, if",
      "analysis_timestamp": "2025-06-01T16:06:49.093984"
    },
    {
      "original_filename": "data_extract_swifts_extract_splitinbatches_htmlextract.json",
      "workflow_name": "extract_swifts",
      "suggested_filename": "data_extract_swifts_extract_splitinbatches_htmlextract.json",
      "category": "DATA",
      "business_function": "extract",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "htmlExtract",
        "splitInBatches",
        "mongoDb",
        "uproc",
        "function",
        "if",
        "functionItem",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.htmlExtract": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.mongoDb": 2,
        "n8n-nodes-base.uproc": 1,
        "n8n-nodes-base.function": 4,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.functionItem": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.readBinaryFile": 2,
        "n8n-nodes-base.writeBinaryFile": 1,
        "n8n-nodes-base.executeCommand": 1
      },
      "business_value": "Automates extract processes using manualTrigger, httpRequest, htmlExtract",
      "analysis_timestamp": "2025-06-01T16:06:49.094193"
    },
    {
      "original_filename": "comm_send_automate_cron_httprequest_cron.json",
      "workflow_name": "comm_send_automate_cron_httprequest_cron",
      "suggested_filename": "comm_send_automate_cron_httprequest_cron.json",
      "category": "COMM",
      "business_function": "send",
      "key_integrations": [
        "cron",
        "airtable",
        "set",
        "telegram",
        "if",
        "httpRequest",
        "telegramTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.airtable": 3,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.telegram": 5,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.telegramTrigger": 1
      },
      "business_value": "Automates send processes using cron, airtable, set",
      "analysis_timestamp": "2025-06-01T16:06:49.094487"
    },
    {
      "original_filename": "comm_2348_workflow_2348_automate_gmail_googledrive.json",
      "workflow_name": "comm_2348_workflow_2348_automate_gmail_googledrive",
      "suggested_filename": "comm_2348_workflow_2348_automate_gmail_googledrive.json",
      "category": "COMM",
      "business_function": "2348",
      "key_integrations": [
        "gmailTrigger",
        "function",
        "googleDrive"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.googleDrive": 1
      },
      "business_value": "Automates 2348 processes using gmailTrigger, function, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:49.094626"
    },
    {
      "original_filename": "ai_4001_workflow_4001_automate_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "workflow_name": "ai_4001_workflow_4001_automate_splitinbatches_n8nnodeslangchainchainllm_cron",
      "suggested_filename": "ai_4001_workflow_4001_automate_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "4001",
      "key_integrations": [
        "scheduleTrigger",
        "googleSheets",
        "filter",
        "if",
        "splitInBatches",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.outputParserStructured",
        "gmail",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates 4001 processes using scheduleTrigger, googleSheets, filter",
      "analysis_timestamp": "2025-06-01T16:06:49.095098"
    },
    {
      "original_filename": "util_tiktok_automate_httprequest_manual.json",
      "workflow_name": "Tiktok Downloader",
      "suggested_filename": "util_tiktok_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "tiktok",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "code",
        "stickyNote",
        "googleDrive"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.googleDrive": 2
      },
      "business_value": "Automates tiktok processes using manualTrigger, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:49.095396"
    },
    {
      "original_filename": "comm_woocommerce_automate_woocommerce_telegram.json",
      "workflow_name": "New WooCommerce Product to Twitter and Telegram",
      "suggested_filename": "comm_woocommerce_automate_woocommerce_telegram.json",
      "category": "COMM",
      "business_function": "woocommerce",
      "key_integrations": [
        "twitter",
        "telegram",
        "wooCommerceTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.twitter": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.wooCommerceTrigger": 1
      },
      "business_value": "Automates woocommerce processes using twitter, telegram, wooCommerceTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.095520"
    },
    {
      "original_filename": "util_2359_workflow_2359_automate_httprequest.json",
      "workflow_name": "util_2359_workflow_2359_automate_httprequest",
      "suggested_filename": "util_2359_workflow_2359_automate_httprequest.json",
      "category": "UTIL",
      "business_function": "2359",
      "key_integrations": [
        "splitOut",
        "httpRequest",
        "stickyNote",
        "filter"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates 2359 processes using splitOut, httpRequest, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.095767"
    },
    {
      "original_filename": "ai_contact_automate_n8nnodeslangchaintextclassifier_emailsend_1.json",
      "workflow_name": "Contact Form Text Classifier for eCommerce",
      "suggested_filename": "ai_contact_automate_n8nnodeslangchaintextclassifier_emailsend_1.json",
      "category": "AI",
      "business_function": "contact",
      "key_integrations": [
        "formTrigger",
        "@n8n/langchain.textClassifier",
        "@n8n/langchain.lmChatOpenAi",
        "emailSend",
        "googleSheets",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.emailSend": 5,
        "n8n-nodes-base.googleSheets": 5,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates contact processes using formTrigger, @n8n/langchain.textClassifier, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.096120"
    },
    {
      "original_filename": "ai_3706_workflow_3706_automate_hubspot_n8nnodeslangchainchainsummarization.json",
      "workflow_name": "ai_3706_workflow_3706_automate_hubspot_n8nnodeslangchainchainsummarization",
      "suggested_filename": "ai_3706_workflow_3706_automate_hubspot_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "3706",
      "key_integrations": [
        "hubspot",
        "stickyNote",
        "@n8n/langchain.agent",
        "@n8n/langchain.chainSummarization",
        "formTrigger",
        "form",
        "@n8n/langchain.lmChatOpenAi",
        "set",
        "gmailTool"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.hubspot": 2,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.form": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.gmailTool": 1
      },
      "business_value": "Automates 3706 processes using hubspot, stickyNote, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:49.096402"
    },
    {
      "original_filename": "ai_2358_workflow_2358_automate_n8nnodeslangchainchainretrievalqa_httprequest_web.json",
      "workflow_name": "ai_2358_workflow_2358_automate_n8nnodeslangchainchainretrievalqa_httprequest_web",
      "suggested_filename": "ai_2358_workflow_2358_automate_n8nnodeslangchainchainretrievalqa_httprequest_web.json",
      "category": "AI",
      "business_function": "2358",
      "key_integrations": [
        "slack",
        "stickyNote",
        "code",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.retrieverVectorStore",
        "httpRequest",
        "@n8n/langchain.vectorStorePinecone"
      ],
      "trigger_type": "chat",
      "complexity_score": 39,
      "complexity": "High",
      "total_nodes": 39,
      "node_types": {
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.stickyNote": 13,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.noOp": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 2,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.gmailTrigger": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 2358 processes using slack, stickyNote, code",
      "analysis_timestamp": "2025-06-01T16:06:49.096807"
    },
    {
      "original_filename": "ai_hiring_extract_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstructu_1.json",
      "workflow_name": "HN Who is Hiring Scrape",
      "suggested_filename": "ai_hiring_extract_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstructu_1.json",
      "category": "AI",
      "business_function": "hiring",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "splitOut",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "httpRequest",
        "set",
        "filter",
        "@n8n/langchain.chainLlm",
        "code"
      ],
      "trigger_type": "chat",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.splitOut": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.filter": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.airtable": 1
      },
      "business_value": "Automates hiring processes using manualTrigger, stickyNote, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:49.097326"
    },
    {
      "original_filename": "ai_1838_workflow_1838_automate_hubspot_slack.json",
      "workflow_name": "ai_1838_workflow_1838_automate_hubspot_slack",
      "suggested_filename": "ai_1838_workflow_1838_automate_hubspot_slack.json",
      "category": "AI",
      "business_function": "1838",
      "key_integrations": [
        "lemlist",
        "hubspot",
        "switch",
        "merge",
        "httpRequest",
        "slack",
        "lemlistTrigger",
        "openAi"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.lemlist": 1,
        "n8n-nodes-base.hubspot": 4,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.slack": 2,
        "n8n-nodes-base.lemlistTrigger": 1,
        "n8n-nodes-base.openAi": 1
      },
      "business_value": "Automates 1838 processes using lemlist, hubspot, switch",
      "analysis_timestamp": "2025-06-01T16:06:49.097634"
    },
    {
      "original_filename": "ai_gemini_ai_process_httprequest_manual.json",
      "workflow_name": "🎥 Gemini AI Video Analysis",
      "suggested_filename": "ai_gemini_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "gemini",
      "key_integrations": [
        "wait",
        "httpRequest",
        "manualTrigger",
        "set",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates gemini processes using wait, httpRequest, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.097939"
    },
    {
      "original_filename": "ai_easily_ai_process_splitinbatches_n8nnodeslangchainmemorybufferwindow.json",
      "workflow_name": "Easily Compare LLMs Using OpenAI and Google Sheets",
      "suggested_filename": "ai_easily_ai_process_splitinbatches_n8nnodeslangchainmemorybufferwindow.json",
      "category": "AI",
      "business_function": "easily",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "splitInBatches",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.memoryManager",
        "stickyNote",
        "@n8n/langchain.lmChatOpenRouter",
        "set",
        "@n8n/langchain.agent",
        "summarize",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.memoryManager": 1,
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 1,
        "n8n-nodes-base.set": 4,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.summarize": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.splitOut": 1
      },
      "business_value": "Automates easily processes using @n8n/langchain.chatTrigger, splitInBatches, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:49.098296"
    },
    {
      "original_filename": "ai_dgbdnnny0622jwgy_workflow_dgbdnnny0622jwgy_automate_n8nnodeslangchainoutputpa.json",
      "workflow_name": "ai_dgbdnnny0622jwgy_workflow_dgbdnnny0622jwgy_automate_n8nnodeslangchainoutputpa",
      "suggested_filename": "ai_dgbdnnny0622jwgy_workflow_dgbdnnny0622jwgy_automate_n8nnodeslangchainoutputpa.json",
      "category": "AI",
      "business_function": "dgbdnnny0622jwgy",
      "key_integrations": [
        "gmail",
        "manualTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.agent",
        "@n8n/langchain.outputParserStructured",
        "if",
        "telegram",
        "set",
        "aggregate"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.gmail": 3,
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.telegram": 4,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.aggregate": 1
      },
      "business_value": "Automates dgbdnnny0622jwgy processes using gmail, manualTrigger, @n8n/langchain.lmChatGoogleGemini",
      "analysis_timestamp": "2025-06-01T16:06:49.098613"
    },
    {
      "original_filename": "biz_automate_paypal_manual.json",
      "workflow_name": "",
      "suggested_filename": "biz_automate_paypal_manual.json",
      "category": "BIZ",
      "business_function": "automate",
      "key_integrations": [
        "manualTrigger",
        "payPal"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.payPal": 1
      },
      "business_value": "Automates automate processes using manualTrigger, payPal",
      "analysis_timestamp": "2025-06-01T16:06:49.098812"
    },
    {
      "original_filename": "ai_2464_workflow_2464_automate_httprequest_sort.json",
      "workflow_name": "ai_2464_workflow_2464_automate_httprequest_sort",
      "suggested_filename": "ai_2464_workflow_2464_automate_httprequest_sort.json",
      "category": "AI",
      "business_function": "2464",
      "key_integrations": [
        "manualTrigger",
        "sort",
        "httpRequest",
        "compression",
        "code",
        "stickyNote",
        "editImage",
        "aggregate",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "trigger_type": "chat",
      "complexity_score": 50,
      "complexity": "High",
      "total_nodes": 50,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.compression": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 11,
        "n8n-nodes-base.editImage": 1,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 5,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.convertToFile": 1,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 2,
        "n8n-nodes-base.airtableTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.airtableTool": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1
      },
      "business_value": "Automates 2464 processes using manualTrigger, sort, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.099379"
    },
    {
      "original_filename": "ai_mails2notion_ai_process_n8nnodeslangchaincalculator_n8nnodeslangchainoutputpa_1.json",
      "workflow_name": "mails2notion V2",
      "suggested_filename": "ai_mails2notion_ai_process_n8nnodeslangchaincalculator_n8nnodeslangchainoutputpa_1.json",
      "category": "AI",
      "business_function": "mails2notion",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolCalculator",
        "@n8n/langchain.outputParserStructured",
        "gmail",
        "filter",
        "set",
        "airtable",
        "httpRequest",
        "gmailTrigger",
        "manualTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 38,
      "complexity": "High",
      "total_nodes": 38,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.toolCalculator": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 2,
        "n8n-nodes-base.gmail": 5,
        "n8n-nodes-base.filter": 3,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 13,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.agent": 2
      },
      "business_value": "Automates mails2notion processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.toolCalculator, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:49.099860"
    },
    {
      "original_filename": "ai_stock_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangchaindocumentbin.json",
      "workflow_name": "Stock Q&A Workflow",
      "suggested_filename": "ai_stock_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangchaindocumentbin.json",
      "category": "AI",
      "business_function": "stock",
      "key_integrations": [
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.manualChatTrigger",
        "stickyNote",
        "@n8n/langchain.chainRetrievalQa",
        "respondToWebhook",
        "@n8n/langchain.retrieverVectorStore",
        "webhook",
        "manualTrigger",
        "googleDrive",
        "@n8n/langchain.documentBinaryInputLoader"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.manualChatTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.documentBinaryInputLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates stock processes using @n8n/langchain.embeddingsOpenAi, @n8n/langchain.manualChatTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.100167"
    },
    {
      "original_filename": "ai_translate_ai_process_n8nnodeslangchainchainllm_httprequest.json",
      "workflow_name": "ai_translate_ai_process_n8nnodeslangchainchainllm_httprequest",
      "suggested_filename": "ai_translate_ai_process_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "translate",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "manualTrigger",
        "httpRequest",
        "set",
        "@n8n/langchain.chainLlm",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.stickyNote": 5
      },
      "business_value": "Automates translate processes using @n8n/langchain.lmChatOpenAi, manualTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.100430"
    },
    {
      "original_filename": "content_514_workflow_514_automate_manual_facebookgraphapi.json",
      "workflow_name": "content_514_workflow_514_automate_manual_facebookgraphapi",
      "suggested_filename": "content_514_workflow_514_automate_manual_facebookgraphapi.json",
      "category": "CONTENT",
      "business_function": "514",
      "key_integrations": [
        "manualTrigger",
        "facebookGraphApi"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.facebookGraphApi": 1
      },
      "business_value": "Automates 514 processes using manualTrigger, facebookGraphApi",
      "analysis_timestamp": "2025-06-01T16:06:49.100627"
    },
    {
      "original_filename": "comm_2144_workflow_2144_automate_splitinbatches_gmail_cron.json",
      "workflow_name": "comm_2144_workflow_2144_automate_splitinbatches_gmail_cron",
      "suggested_filename": "comm_2144_workflow_2144_automate_splitinbatches_gmail_cron.json",
      "category": "COMM",
      "business_function": "2144",
      "key_integrations": [
        "scheduleTrigger",
        "splitInBatches",
        "rssFeedRead",
        "stickyNote",
        "if",
        "gmail",
        "splitOut",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.rssFeedRead": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 2144 processes using scheduleTrigger, splitInBatches, rssFeedRead",
      "analysis_timestamp": "2025-06-01T16:06:49.100879"
    },
    {
      "original_filename": "util_screenshot_automate_awsses_uproc.json",
      "workflow_name": "screenshot",
      "suggested_filename": "util_screenshot_automate_awsses_uproc.json",
      "category": "UTIL",
      "business_function": "screenshot",
      "key_integrations": [
        "manualTrigger",
        "functionItem",
        "awsSes",
        "uproc",
        "httpRequest",
        "merge",
        "dropbox"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.functionItem": 1,
        "n8n-nodes-base.awsSes": 1,
        "n8n-nodes-base.uproc": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.dropbox": 2
      },
      "business_value": "Automates screenshot processes using manualTrigger, functionItem, awsSes",
      "analysis_timestamp": "2025-06-01T16:06:49.101125"
    },
    {
      "original_filename": "comm_parse_report_slack_datetime.json",
      "workflow_name": "Parse DMARC reports",
      "suggested_filename": "comm_parse_report_slack_datetime.json",
      "category": "COMM",
      "business_function": "parse",
      "key_integrations": [
        "emailReadImap",
        "dateTime",
        "if",
        "set",
        "mySql",
        "renameKeys",
        "stickyNote",
        "compression",
        "extractFromFile",
        "xml"
      ],
      "trigger_type": "email",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.dateTime": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.mySql": 1,
        "n8n-nodes-base.renameKeys": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.compression": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.xml": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.emailSend": 1
      },
      "business_value": "Automates parse processes using emailReadImap, dateTime, if",
      "analysis_timestamp": "2025-06-01T16:06:49.101426"
    },
    {
      "original_filename": "util_1744_workflow_1744_automate_datetime_manual.json",
      "workflow_name": "util_1744_workflow_1744_automate_datetime_manual",
      "suggested_filename": "util_1744_workflow_1744_automate_datetime_manual.json",
      "category": "UTIL",
      "business_function": "1744",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "dateTime",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.dateTime": 2,
        "n8n-nodes-base.set": 2
      },
      "business_value": "Automates 1744 processes using manualTrigger, stickyNote, dateTime",
      "analysis_timestamp": "2025-06-01T16:06:49.101660"
    },
    {
      "original_filename": "ai_2419_workflow_2419_automate_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "workflow_name": "ai_2419_workflow_2419_automate_splitinbatches_n8nnodeslangchainchainllm_cron",
      "suggested_filename": "ai_2419_workflow_2419_automate_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "2419",
      "key_integrations": [
        "googleDrive",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.outputParserStructured",
        "stickyNote",
        "splitInBatches",
        "wait",
        "httpRequest",
        "googleSheets",
        "merge",
        "scheduleTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 34,
      "complexity": "High",
      "total_nodes": 34,
      "node_types": {
        "n8n-nodes-base.googleDrive": 2,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.wait": 2,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.googleSheets": 3,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.linear": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates 2419 processes using googleDrive, @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:49.102048"
    },
    {
      "original_filename": "ai_automate_ai_process_generic.json",
      "workflow_name": "ai_automate_ai_process_generic",
      "suggested_filename": "ai_automate_ai_process_generic.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [],
      "trigger_type": "manual",
      "complexity_score": 0,
      "complexity": "Low",
      "total_nodes": 0,
      "node_types": {},
      "business_value": "Automates automate processes using ",
      "analysis_timestamp": "2025-06-01T16:06:49.102337"
    },
    {
      "original_filename": "ai_send_ai_process_crypto_gmail_webhook.json",
      "workflow_name": "ai_send_ai_process_crypto_gmail_webhook",
      "suggested_filename": "ai_send_ai_process_crypto_gmail_webhook.json",
      "category": "AI",
      "business_function": "send",
      "key_integrations": [
        "openAi",
        "gmailTrigger",
        "if",
        "set",
        "stickyNote",
        "gmail",
        "crypto",
        "html",
        "code",
        "googleSheets"
      ],
      "trigger_type": "webhook",
      "complexity_score": 49,
      "complexity": "High",
      "total_nodes": 49,
      "node_types": {
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.if": 7,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.crypto": 1,
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.code": 8,
        "n8n-nodes-base.noOp": 8,
        "n8n-nodes-base.googleSheets": 4,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates send processes using openAi, gmailTrigger, if",
      "analysis_timestamp": "2025-06-01T16:06:49.102954"
    },
    {
      "original_filename": "ai_2658_workflow_2658_automate_httprequest_n8nnodeslangchaininformationextractor.json",
      "workflow_name": "ai_2658_workflow_2658_automate_httprequest_n8nnodeslangchaininformationextractor",
      "suggested_filename": "ai_2658_workflow_2658_automate_httprequest_n8nnodeslangchaininformationextractor.json",
      "category": "AI",
      "business_function": "2658",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "splitOut",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "set",
        "@n8n/langchain.documentDefaultDataLoader",
        "executeWorkflowTrigger",
        "executionData",
        "switch",
        "@n8n/langchain.lmChatGoogleGemini"
      ],
      "trigger_type": "chat",
      "complexity_score": 88,
      "complexity": "High",
      "total_nodes": 88,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.splitOut": 3,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.set": 17,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.executionData": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 3,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.splitInBatches": 6,
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini": 3,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 3,
        "@n8n/n8n-nodes-langchain.informationExtractor": 2,
        "n8n-nodes-base.wait": 3,
        "n8n-nodes-base.removeDuplicates": 2,
        "n8n-nodes-base.executeWorkflow": 3,
        "n8n-nodes-base.if": 7,
        "n8n-nodes-base.aggregate": 2,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.googleSheets": 14,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.stickyNote": 6
      },
      "business_value": "Automates 2658 processes using manualTrigger, httpRequest, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:49.103888"
    },
    {
      "original_filename": "comm_monitor_security_advisories_monitor_n8ntrainingcustomerdatastore_gmail_cron.json",
      "workflow_name": "Monitor_security_advisories",
      "suggested_filename": "comm_monitor_security_advisories_monitor_n8ntrainingcustomerdatastore_gmail_cron.json",
      "category": "COMM",
      "business_function": "monitor",
      "key_integrations": [
        "manualTrigger",
        "rssFeedRead",
        "filter",
        "jira",
        "n8nTrainingCustomerDatastore",
        "stickyNote",
        "gmail",
        "set",
        "if",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.rssFeedRead": 1,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.jira": 1,
        "n8n-nodes-base.n8nTrainingCustomerDatastore": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates monitor processes using manualTrigger, rssFeedRead, filter",
      "analysis_timestamp": "2025-06-01T16:06:49.104258"
    },
    {
      "original_filename": "util_receive_create_affinity.json",
      "workflow_name": "Receive updates when a new list is created in Affinity",
      "suggested_filename": "util_receive_create_affinity.json",
      "category": "UTIL",
      "business_function": "receive",
      "key_integrations": [
        "affinityTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 1,
      "complexity": "Low",
      "total_nodes": 1,
      "node_types": {
        "n8n-nodes-base.affinityTrigger": 1
      },
      "business_value": "Automates receive processes using affinityTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.104465"
    },
    {
      "original_filename": "data_2071_workflow_2071_automate_spreadsheetfile_httprequest.json",
      "workflow_name": "data_2071_workflow_2071_automate_spreadsheetfile_httprequest",
      "suggested_filename": "data_2071_workflow_2071_automate_spreadsheetfile_httprequest.json",
      "category": "DATA",
      "business_function": "2071",
      "key_integrations": [
        "airtable",
        "httpRequest",
        "stickyNote",
        "if",
        "set",
        "spreadsheetFile",
        "airtableTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.airtableTrigger": 1
      },
      "business_value": "Automates 2071 processes using airtable, httpRequest, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.104746"
    },
    {
      "original_filename": "util_2033_workflow_2033_automate_httprequest_webhook_webhook.json",
      "workflow_name": "util_2033_workflow_2033_automate_httprequest_webhook_webhook",
      "suggested_filename": "util_2033_workflow_2033_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "2033",
      "key_integrations": [
        "set",
        "code",
        "stickyNote",
        "httpRequest",
        "webhook",
        "respondToWebhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1
      },
      "business_value": "Automates 2033 processes using set, code, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.105225"
    },
    {
      "original_filename": "ai_1897_workflow_1897_automate_gmail_openai.json",
      "workflow_name": "ai_1897_workflow_1897_automate_gmail_openai",
      "suggested_filename": "ai_1897_workflow_1897_automate_gmail_openai.json",
      "category": "AI",
      "business_function": "1897",
      "key_integrations": [
        "readPDF",
        "stickyNote",
        "set",
        "if",
        "code",
        "openAi",
        "merge",
        "googleDrive",
        "gmailTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.readPDF": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.noOp": 5,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.gmailTrigger": 1
      },
      "business_value": "Automates 1897 processes using readPDF, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:49.105560"
    },
    {
      "original_filename": "data_1872_workflow_1872_automate_spreadsheetfile_manual.json",
      "workflow_name": "data_1872_workflow_1872_automate_spreadsheetfile_manual",
      "suggested_filename": "data_1872_workflow_1872_automate_spreadsheetfile_manual.json",
      "category": "DATA",
      "business_function": "1872",
      "key_integrations": [
        "manualTrigger",
        "set",
        "mySql",
        "spreadsheetFile",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.mySql": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 1872 processes using manualTrigger, set, mySql",
      "analysis_timestamp": "2025-06-01T16:06:49.105703"
    },
    {
      "original_filename": "ai_send_ai_process_gmail_openai.json",
      "workflow_name": "ai_send_ai_process_gmail_openai",
      "suggested_filename": "ai_send_ai_process_gmail_openai.json",
      "category": "AI",
      "business_function": "send",
      "key_integrations": [
        "readPDF",
        "stickyNote",
        "set",
        "if",
        "code",
        "openAi",
        "merge",
        "googleDrive",
        "gmailTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.readPDF": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.noOp": 5,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.gmailTrigger": 1
      },
      "business_value": "Automates send processes using readPDF, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:49.105959"
    },
    {
      "original_filename": "ai_chrome_ai_process_webhook_n8nnodeslangchainopenai_webhook_1.json",
      "workflow_name": "chrome extension backend with AI",
      "suggested_filename": "ai_chrome_ai_process_webhook_n8nnodeslangchainopenai_webhook_1.json",
      "category": "AI",
      "business_function": "chrome",
      "key_integrations": [
        "webhook",
        "@n8n/langchain.openAi",
        "respondToWebhook",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates chrome processes using webhook, @n8n/langchain.openAi, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:49.106191"
    },
    {
      "original_filename": "data_import_transfer_spreadsheetfile_httprequest.json",
      "workflow_name": "Import CSV from URL to GoogleSheet",
      "suggested_filename": "data_import_transfer_spreadsheetfile_httprequest.json",
      "category": "DATA",
      "business_function": "import",
      "key_integrations": [
        "manualTrigger",
        "googleSheets",
        "set",
        "spreadsheetFile",
        "httpRequest",
        "filter",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates import processes using manualTrigger, googleSheets, set",
      "analysis_timestamp": "2025-06-01T16:06:49.106461"
    },
    {
      "original_filename": "ai_speech_automate_n8nnodeslangchainmemorybufferwindow_telegram.json",
      "workflow_name": "Speech Support Workflow",
      "suggested_filename": "ai_speech_automate_n8nnodeslangchainmemorybufferwindow_telegram.json",
      "category": "AI",
      "business_function": "speech",
      "key_integrations": [
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatGoogleGemini",
        "telegramTrigger",
        "set",
        "telegram",
        "@n8n/langchain.openAi",
        "if",
        "code",
        "@n8n/langchain.memoryManager",
        "@n8n/langchain.memoryBufferWindow"
      ],
      "trigger_type": "chat",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.telegram": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 2,
        "@n8n/n8n-nodes-langchain.memoryManager": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.stickyNote": 6
      },
      "business_value": "Automates speech processes using @n8n/langchain.agent, @n8n/langchain.lmChatGoogleGemini, telegramTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.106767"
    },
    {
      "original_filename": "ai_openai_ai_process_httprequest_webhook_webhook_2.json",
      "workflow_name": "OpenAI Assistant for Hubspot Chat",
      "suggested_filename": "ai_openai_ai_process_httprequest_webhook_webhook_2.json",
      "category": "AI",
      "business_function": "openai",
      "key_integrations": [
        "httpRequest",
        "switch",
        "wait",
        "code",
        "if",
        "airtable",
        "stickyNote",
        "@n8n/langchain.openAi",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 34,
      "complexity": "High",
      "total_nodes": 34,
      "node_types": {
        "n8n-nodes-base.httpRequest": 11,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.wait": 4,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.stickyNote": 8,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates openai processes using httpRequest, switch, wait",
      "analysis_timestamp": "2025-06-01T16:06:49.107160"
    },
    {
      "original_filename": "ai_breakdown_ai_process_n8nnodeslangchainchainretrievalqa_extractfromfile.json",
      "workflow_name": "ai_breakdown_ai_process_n8nnodeslangchainchainretrievalqa_extractfromfile",
      "suggested_filename": "ai_breakdown_ai_process_n8nnodeslangchainchainretrievalqa_extractfromfile.json",
      "category": "AI",
      "business_function": "breakdown",
      "key_integrations": [
        "localFileTrigger",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.embeddingsMistralCloud",
        "@n8n/langchain.lmChatMistralCloud",
        "set",
        "merge",
        "splitOut",
        "splitInBatches",
        "@n8n/langchain.outputParserItemList"
      ],
      "trigger_type": "chat",
      "complexity_score": 42,
      "complexity": "High",
      "total_nodes": 42,
      "node_types": {
        "n8n-nodes-base.localFileTrigger": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud": 2,
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud": 4,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "@n8n/n8n-nodes-langchain.outputParserItemList": 1,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "n8n-nodes-base.wait": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.readWriteFile": 2,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.extractFromFile": 3,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates breakdown processes using localFileTrigger, @n8n/langchain.documentDefaultDataLoader, @n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
      "analysis_timestamp": "2025-06-01T16:06:49.107613"
    },
    {
      "original_filename": "comm_orlen_automate_slack_gmail_cron.json",
      "workflow_name": "Orlen",
      "suggested_filename": "comm_orlen_automate_slack_gmail_cron.json",
      "category": "COMM",
      "business_function": "orlen",
      "key_integrations": [
        "manualTrigger",
        "function",
        "cron",
        "googleDrive",
        "gmail",
        "merge",
        "slack"
      ],
      "trigger_type": "cron",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.googleDrive": 3,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates orlen processes using manualTrigger, function, cron",
      "analysis_timestamp": "2025-06-01T16:06:49.107914"
    },
    {
      "original_filename": "ai_store_ai_process_n8nnodeslangchaintextsplittertokensplitter_n8nnodeslangchain_2.json",
      "workflow_name": "Store Notion's Pages as Vector Documents into Supabase with OpenAI",
      "suggested_filename": "ai_store_ai_process_n8nnodeslangchaintextsplittertokensplitter_n8nnodeslangchain_2.json",
      "category": "AI",
      "business_function": "store",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.textSplitterTokenSplitter",
        "notionTrigger",
        "notion",
        "filter",
        "summarize",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.vectorStoreSupabase"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.stickyNote": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.notionTrigger": 1,
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.summarize": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase": 1
      },
      "business_value": "Automates store processes using stickyNote, @n8n/langchain.embeddingsOpenAi, @n8n/langchain.textSplitterTokenSplitter",
      "analysis_timestamp": "2025-06-01T16:06:49.108149"
    },
    {
      "original_filename": "ai_opensea_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "workflow_name": "OpenSea AI-Powered Insights via Telegram",
      "suggested_filename": "ai_opensea_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "opensea",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "telegramTrigger",
        "set",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolWorkflow",
        "telegram",
        "@n8n/langchain.agent",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 3,
        "n8n-nodes-base.telegram": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates opensea processes using @n8n/langchain.chatTrigger, telegramTrigger, set",
      "analysis_timestamp": "2025-06-01T16:06:49.108553"
    },
    {
      "original_filename": "data_import_transfer_spreadsheetfile_splitinbatches.json",
      "workflow_name": "Import multiple CSV to GoogleSheet",
      "suggested_filename": "data_import_transfer_spreadsheetfile_splitinbatches.json",
      "category": "DATA",
      "business_function": "import",
      "key_integrations": [
        "manualTrigger",
        "readBinaryFiles",
        "splitInBatches",
        "spreadsheetFile",
        "itemLists",
        "filter",
        "googleSheets",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readBinaryFiles": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.itemLists": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates import processes using manualTrigger, readBinaryFiles, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:49.108822"
    },
    {
      "original_filename": "ai_2330_workflow_2330_automate_n8nnodeslangchainoutputparserstructured_httpreque.json",
      "workflow_name": "ai_2330_workflow_2330_automate_n8nnodeslangchainoutputparserstructured_httpreque",
      "suggested_filename": "ai_2330_workflow_2330_automate_n8nnodeslangchainoutputparserstructured_httpreque.json",
      "category": "AI",
      "business_function": "2330",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "airtable",
        "executeWorkflowTrigger",
        "set",
        "httpRequest",
        "@n8n/langchain.toolWorkflow",
        "if",
        "@n8n/langchain.outputParserStructured",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.airtable": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 2,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 10,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates 2330 processes using manualTrigger, @n8n/langchain.lmChatOpenAi, airtable",
      "analysis_timestamp": "2025-06-01T16:06:49.109218"
    },
    {
      "original_filename": "ai_daily_ai_process_httprequest_telegram_cron.json",
      "workflow_name": "Daily Text Affirmations",
      "suggested_filename": "ai_daily_ai_process_httprequest_telegram_cron.json",
      "category": "AI",
      "business_function": "daily",
      "key_integrations": [
        "cron",
        "httpRequest",
        "telegram"
      ],
      "trigger_type": "cron",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.telegram": 1
      },
      "business_value": "Automates daily processes using cron, httpRequest, telegram",
      "analysis_timestamp": "2025-06-01T16:06:49.109336"
    },
    {
      "original_filename": "util_1749_workflow_1749_automate_splitinbatches_n8ntrainingcustomerdatastore.json",
      "workflow_name": "util_1749_workflow_1749_automate_splitinbatches_n8ntrainingcustomerdatastore",
      "suggested_filename": "util_1749_workflow_1749_automate_splitinbatches_n8ntrainingcustomerdatastore.json",
      "category": "UTIL",
      "business_function": "1749",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "set",
        "wait",
        "n8nTrainingCustomerDatastore",
        "splitInBatches",
        "if",
        "n8nTrainingCustomerMessenger"
      ],
      "trigger_type": "manual",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.wait": 2,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.n8nTrainingCustomerDatastore": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.n8nTrainingCustomerMessenger": 2
      },
      "business_value": "Automates 1749 processes using manualTrigger, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:49.109548"
    },
    {
      "original_filename": "data_validate_validate_crypto_webhook_webhook.json",
      "workflow_name": "Validate Seatable Webhooks with HMAC SHA256 Authentication",
      "suggested_filename": "data_validate_validate_crypto_webhook_webhook.json",
      "category": "DATA",
      "business_function": "validate",
      "key_integrations": [
        "respondToWebhook",
        "crypto",
        "webhook",
        "if",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.respondToWebhook": 2,
        "n8n-nodes-base.crypto": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates validate processes using respondToWebhook, crypto, webhook",
      "analysis_timestamp": "2025-06-01T16:06:49.109772"
    },
    {
      "original_filename": "comm_stripe_notify_stripe_hubspot.json",
      "workflow_name": "On new Stripe Invoice Payment update Hubspot and notify the team in Slack",
      "suggested_filename": "comm_stripe_notify_stripe_hubspot.json",
      "category": "COMM",
      "business_function": "stripe",
      "key_integrations": [
        "stripeTrigger",
        "hubspot",
        "if",
        "slack"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.stripeTrigger": 1,
        "n8n-nodes-base.hubspot": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.slack": 3
      },
      "business_value": "Automates stripe processes using stripeTrigger, hubspot, if",
      "analysis_timestamp": "2025-06-01T16:06:49.110025"
    },
    {
      "original_filename": "ai_auto_ai_process_httprequest_telegram.json",
      "workflow_name": "Auto-create and publish AI social videos with Telegram, GPT-4 and Blotato",
      "suggested_filename": "ai_auto_ai_process_httprequest_telegram.json",
      "category": "AI",
      "business_function": "auto",
      "key_integrations": [
        "httpRequest",
        "stickyNote",
        "telegramTrigger",
        "code",
        "if",
        "telegram",
        "wait",
        "set",
        "@n8n/langchain.openAi",
        "googleSheets"
      ],
      "trigger_type": "manual",
      "complexity_score": 42,
      "complexity": "High",
      "total_nodes": 42,
      "node_types": {
        "n8n-nodes-base.httpRequest": 20,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.telegram": 3,
        "n8n-nodes-base.wait": 4,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.openAi": 3,
        "n8n-nodes-base.googleSheets": 1
      },
      "business_value": "Automates auto processes using httpRequest, stickyNote, telegramTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.110601"
    },
    {
      "original_filename": "data_create_create_task_spreadsheetfile_onfleet.json",
      "workflow_name": "Create Onfleet tasks from Spreadsheets",
      "suggested_filename": "data_create_create_task_spreadsheetfile_onfleet.json",
      "category": "DATA",
      "business_function": "create",
      "key_integrations": [
        "onfleet",
        "readBinaryFile",
        "spreadsheetFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.onfleet": 1,
        "n8n-nodes-base.readBinaryFile": 1,
        "n8n-nodes-base.spreadsheetFile": 1
      },
      "business_value": "Automates create processes using onfleet, readBinaryFile, spreadsheetFile",
      "analysis_timestamp": "2025-06-01T16:06:49.110740"
    },
    {
      "original_filename": "comm_groq_automate_httprequest_telegram.json",
      "workflow_name": "GROQ LLAVA V1.5 7B",
      "suggested_filename": "comm_groq_automate_httprequest_telegram.json",
      "category": "COMM",
      "business_function": "groq",
      "key_integrations": [
        "telegramTrigger",
        "telegram",
        "set",
        "httpRequest",
        "extractFromFile",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates groq processes using telegramTrigger, telegram, set",
      "analysis_timestamp": "2025-06-01T16:06:49.110981"
    },
    {
      "original_filename": "ai_notion_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "workflow_name": "ai_notion_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat",
      "suggested_filename": "ai_notion_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "notion",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolHttpRequest",
        "notion",
        "@n8n/langchain.memoryBufferWindow",
        "set",
        "stickyNote",
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 2,
        "n8n-nodes-base.notion": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1
      },
      "business_value": "Automates notion processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.toolHttpRequest, notion",
      "analysis_timestamp": "2025-06-01T16:06:49.111289"
    },
    {
      "original_filename": "data_autoclip_generate_httprequest_executecommand.json",
      "workflow_name": "AutoClip – Automatically Generate Video Clips and Upload to YouTube",
      "suggested_filename": "data_autoclip_generate_httprequest_executecommand.json",
      "category": "DATA",
      "business_function": "autoclip",
      "key_integrations": [
        "manualTrigger",
        "googleSheets",
        "googleDrive",
        "set",
        "merge",
        "code",
        "stickyNote",
        "readWriteFile",
        "executeCommand",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 5,
        "n8n-nodes-base.googleDrive": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.readWriteFile": 3,
        "n8n-nodes-base.executeCommand": 1,
        "n8n-nodes-base.httpRequest": 2
      },
      "business_value": "Automates autoclip processes using manualTrigger, googleSheets, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:49.111679"
    },
    {
      "original_filename": "data_3233_workflow_3233_automate_httprequest_schedule_cron.json",
      "workflow_name": "data_3233_workflow_3233_automate_httprequest_schedule_cron",
      "suggested_filename": "data_3233_workflow_3233_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "3233",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "googleSheets",
        "merge",
        "scheduleTrigger",
        "set",
        "stickyNote",
        "code"
      ],
      "trigger_type": "cron",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates 3233 processes using manualTrigger, httpRequest, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:49.111981"
    },
    {
      "original_filename": "ai_dynamically_generate_httprequest_webhook_webhook_1.json",
      "workflow_name": "Dynamically generate HTML page from user request using OpenAI Structured Output",
      "suggested_filename": "ai_dynamically_generate_httprequest_webhook_webhook_1.json",
      "category": "AI",
      "business_function": "dynamically",
      "key_integrations": [
        "respondToWebhook",
        "httpRequest",
        "@n8n/langchain.openAi",
        "html",
        "stickyNote",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates dynamically processes using respondToWebhook, httpRequest, @n8n/langchain.openAi",
      "analysis_timestamp": "2025-06-01T16:06:49.112213"
    },
    {
      "original_filename": "ai_ahrefs_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "workflow_name": "Ahrefs Keyword Research Workflow",
      "suggested_filename": "ai_ahrefs_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ahrefs",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.agent",
        "code",
        "aggregate",
        "httpRequest",
        "stickyNote",
        "@n8n/langchain.memoryBufferWindow"
      ],
      "trigger_type": "chat",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1
      },
      "business_value": "Automates ahrefs processes using @n8n/langchain.chatTrigger, @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:49.112526"
    },
    {
      "original_filename": "util_2527_workflow_2527_automate_schedule_httprequest_cron.json",
      "workflow_name": "util_2527_workflow_2527_automate_schedule_httprequest_cron",
      "suggested_filename": "util_2527_workflow_2527_automate_schedule_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "2527",
      "key_integrations": [
        "httpRequest",
        "scheduleTrigger",
        "set",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates 2527 processes using httpRequest, scheduleTrigger, set",
      "analysis_timestamp": "2025-06-01T16:06:49.112749"
    },
    {
      "original_filename": "util_standup_automate_writebinaryfile_movebinarydata_2.json",
      "workflow_name": "Standup Bot - Initialize",
      "suggested_filename": "util_standup_automate_writebinaryfile_movebinarydata_2.json",
      "category": "UTIL",
      "business_function": "standup",
      "key_integrations": [
        "manualTrigger",
        "writeBinaryFile",
        "moveBinaryData",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.writeBinaryFile": 1,
        "n8n-nodes-base.moveBinaryData": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates standup processes using manualTrigger, writeBinaryFile, moveBinaryData",
      "analysis_timestamp": "2025-06-01T16:06:49.112857"
    },
    {
      "original_filename": "ai_2320_workflow_2320_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "workflow_name": "ai_2320_workflow_2320_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput",
      "suggested_filename": "ai_2320_workflow_2320_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "2320",
      "key_integrations": [
        "@n8n/langchain.lmOpenAi",
        "@n8n/langchain.outputParserStructured",
        "httpRequest",
        "stickyNote",
        "gmailTrigger",
        "googleSheets",
        "wait",
        "switch",
        "gmail",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates 2320 processes using @n8n/langchain.lmOpenAi, @n8n/langchain.outputParserStructured, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.113381"
    },
    {
      "original_filename": "util_1748_workflow_1748_automate_itemlists_htmlextract.json",
      "workflow_name": "util_1748_workflow_1748_automate_itemlists_htmlextract",
      "suggested_filename": "util_1748_workflow_1748_automate_itemlists_htmlextract.json",
      "category": "UTIL",
      "business_function": "1748",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "set",
        "itemLists",
        "htmlExtract",
        "if",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.itemLists": 2,
        "n8n-nodes-base.htmlExtract": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.httpRequest": 3
      },
      "business_value": "Automates 1748 processes using manualTrigger, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:49.113689"
    },
    {
      "original_filename": "ai_openai_ai_process_n8nnodeslangchainchat_manual.json",
      "workflow_name": "OpenAI Assistant workflow: uploa file, create an Assistant, chat with it!",
      "suggested_filename": "ai_openai_ai_process_n8nnodeslangchainchat_manual.json",
      "category": "AI",
      "business_function": "openai",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "googleDrive",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.openAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.openAi": 3
      },
      "business_value": "Automates openai processes using manualTrigger, stickyNote, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:49.113990"
    },
    {
      "original_filename": "util_todoist_automate_emailsend_httprequest_cron.json",
      "workflow_name": "Todoist Weekly Review Template",
      "suggested_filename": "util_todoist_automate_emailsend_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "todoist",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "code",
        "scheduleTrigger",
        "emailSend"
      ],
      "trigger_type": "cron",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.emailSend": 1
      },
      "business_value": "Automates todoist processes using manualTrigger, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:49.114316"
    },
    {
      "original_filename": "util_2510_workflow_2510_automate_httprequest_webhook_webhook.json",
      "workflow_name": "util_2510_workflow_2510_automate_httprequest_webhook_webhook",
      "suggested_filename": "util_2510_workflow_2510_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "2510",
      "key_integrations": [
        "set",
        "executeWorkflow",
        "httpRequest",
        "switch",
        "stickyNote",
        "respondToWebhook",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.executeWorkflow": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.respondToWebhook": 3,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 2510 processes using set, executeWorkflow, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.114723"
    },
    {
      "original_filename": "ai_generate_generate_wordpress_n8nnodeslangchainoutputparserstructured.json",
      "workflow_name": "🔍🛠️Generate SEO-Optimized WordPress Content with Perplexity Research",
      "suggested_filename": "ai_generate_generate_wordpress_n8nnodeslangchainoutputparserstructured.json",
      "category": "AI",
      "business_function": "generate",
      "key_integrations": [
        "stickyNote",
        "wordpress",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.agent",
        "@n8n/langchain.openAi",
        "merge",
        "httpRequest",
        "formTrigger",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.wordpress": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.aggregate": 1
      },
      "business_value": "Automates generate processes using stickyNote, wordpress, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.115202"
    },
    {
      "original_filename": "ai_inverview_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainoutpu.json",
      "workflow_name": "Inverview Scheduler",
      "suggested_filename": "ai_inverview_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainoutpu.json",
      "category": "AI",
      "business_function": "inverview",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolWorkflow",
        "stickyNote",
        "@n8n/langchain.agent",
        "if",
        "@n8n/langchain.outputParserStructured",
        "googleCalendar",
        "code",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 2,
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.noOp": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.googleCalendar": 2,
        "n8n-nodes-base.code": 5,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1
      },
      "business_value": "Automates inverview processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow, @n8n/langchain.toolWorkflow",
      "analysis_timestamp": "2025-06-01T16:06:49.115725"
    },
    {
      "original_filename": "ai_microsoft_ai_process_splitinbatches_n8nnodeslangchainoutputparserstructured_c_1.json",
      "workflow_name": "Microsoft Outlook AI Email Assistant",
      "suggested_filename": "ai_microsoft_ai_process_splitinbatches_n8nnodeslangchainoutputparserstructured_c_1.json",
      "category": "AI",
      "business_function": "microsoft",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "microsoftOutlook",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "if",
        "@n8n/langchain.agent",
        "scheduleTrigger",
        "mondayCom",
        "airtable"
      ],
      "trigger_type": "chat",
      "complexity_score": 28,
      "complexity": "High",
      "total_nodes": 28,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.microsoftOutlook": 3,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.scheduleTrigger": 2,
        "n8n-nodes-base.mondayCom": 1,
        "n8n-nodes-base.airtable": 5,
        "n8n-nodes-base.markdown": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates microsoft processes using manualTrigger, stickyNote, microsoftOutlook",
      "analysis_timestamp": "2025-06-01T16:06:49.116161"
    },
    {
      "original_filename": "util_584_workflow_584_automate_emailsend_manual.json",
      "workflow_name": "util_584_workflow_584_automate_emailsend_manual",
      "suggested_filename": "util_584_workflow_584_automate_emailsend_manual.json",
      "category": "UTIL",
      "business_function": "584",
      "key_integrations": [
        "manualTrigger",
        "emailSend"
      ],
      "trigger_type": "email",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.emailSend": 1
      },
      "business_value": "Automates 584 processes using manualTrigger, emailSend",
      "analysis_timestamp": "2025-06-01T16:06:49.116437"
    },
    {
      "original_filename": "util_execute_automate_executecommand_cron_cron.json",
      "workflow_name": "Execute a command that gives the hard disk memory used on the host machine",
      "suggested_filename": "util_execute_automate_executecommand_cron_cron.json",
      "category": "UTIL",
      "business_function": "execute",
      "key_integrations": [
        "executeCommand",
        "cron",
        "if",
        "twilio"
      ],
      "trigger_type": "cron",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.executeCommand": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.twilio": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates execute processes using executeCommand, cron, if",
      "analysis_timestamp": "2025-06-01T16:06:49.116556"
    },
    {
      "original_filename": "ai_youtube_automate_n8nnodeslangchainmemorybufferwindow_webhook_webhook.json",
      "workflow_name": "Youtube Discord Bot",
      "suggested_filename": "ai_youtube_automate_n8nnodeslangchainmemorybufferwindow_webhook_webhook.json",
      "category": "AI",
      "business_function": "youtube",
      "key_integrations": [
        "webhook",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.lmChatGoogleGemini",
        "respondToWebhook",
        "code",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "webhook",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates youtube processes using webhook, @n8n/langchain.memoryBufferWindow, @n8n/langchain.lmChatGoogleGemini",
      "analysis_timestamp": "2025-06-01T16:06:49.116781"
    },
    {
      "original_filename": "ai_analytics_ai_process_googleanalytics_manual.json",
      "workflow_name": "Get analytics of a website and store it Airtable",
      "suggested_filename": "ai_analytics_ai_process_googleanalytics_manual.json",
      "category": "AI",
      "business_function": "analytics",
      "key_integrations": [
        "manualTrigger",
        "googleAnalytics",
        "set",
        "airtable"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleAnalytics": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtable": 1
      },
      "business_value": "Automates analytics processes using manualTrigger, googleAnalytics, set",
      "analysis_timestamp": "2025-06-01T16:06:49.116891"
    },
    {
      "original_filename": "ai_open_ai_process_splitinbatches_n8nnodeslangchainmemorybufferwindow_2.json",
      "workflow_name": "Open Deep Research - AI-Powered Autonomous Research Workflow",
      "suggested_filename": "ai_open_ai_process_splitinbatches_n8nnodeslangchainmemorybufferwindow_2.json",
      "category": "AI",
      "business_function": "open",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.lmChatOpenRouter",
        "code",
        "httpRequest",
        "@n8n/langchain.agent",
        "splitInBatches",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolWikipedia",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "n8n-nodes-base.splitInBatches": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 2,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates open processes using @n8n/langchain.chatTrigger, @n8n/langchain.chainLlm, @n8n/langchain.lmChatOpenRouter",
      "analysis_timestamp": "2025-06-01T16:06:49.117165"
    },
    {
      "original_filename": "data_linkedin_automate_splitinbatches_httprequest.json",
      "workflow_name": "Linkedin Chrome Extensions",
      "suggested_filename": "data_linkedin_automate_splitinbatches_httprequest.json",
      "category": "DATA",
      "business_function": "linkedin",
      "key_integrations": [
        "manualTrigger",
        "splitInBatches",
        "limit",
        "code",
        "googleSheets",
        "merge",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates linkedin processes using manualTrigger, splitInBatches, limit",
      "analysis_timestamp": "2025-06-01T16:06:49.117992"
    },
    {
      "original_filename": "ai_build_ai_process_n8nnodeslangchainchainretrievalqa_n8nnodeslangchainchat.json",
      "workflow_name": "ai_build_ai_process_n8nnodeslangchainchainretrievalqa_n8nnodeslangchainchat",
      "suggested_filename": "ai_build_ai_process_n8nnodeslangchainchainretrievalqa_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "build",
      "key_integrations": [
        "localFileTrigger",
        "manualTrigger",
        "set",
        "stickyNote",
        "readWriteFile",
        "@n8n/langchain.embeddingsMistralCloud",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.chainRetrievalQa"
      ],
      "trigger_type": "chat",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.localFileTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.readWriteFile": 1,
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud": 1,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2
      },
      "business_value": "Automates build processes using localFileTrigger, manualTrigger, set",
      "analysis_timestamp": "2025-06-01T16:06:49.118377"
    },
    {
      "original_filename": "data_1839_workflow_1839_automate_spreadsheetfile_mysql.json",
      "workflow_name": "data_1839_workflow_1839_automate_spreadsheetfile_mysql",
      "suggested_filename": "data_1839_workflow_1839_automate_spreadsheetfile_mysql.json",
      "category": "DATA",
      "business_function": "1839",
      "key_integrations": [
        "manualTrigger",
        "readBinaryFile",
        "spreadsheetFile",
        "mySql"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readBinaryFile": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.mySql": 1
      },
      "business_value": "Automates 1839 processes using manualTrigger, readBinaryFile, spreadsheetFile",
      "analysis_timestamp": "2025-06-01T16:06:49.118525"
    },
    {
      "original_filename": "util_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstructured.json",
      "workflow_name": "My workflow",
      "suggested_filename": "util_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstructured.json",
      "category": "UTIL",
      "business_function": "automate",
      "key_integrations": [
        "executeWorkflowTrigger",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.lmChatOpenRouter",
        "code",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 7
      },
      "business_value": "Automates automate processes using executeWorkflowTrigger, @n8n/langchain.chainLlm, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:49.118821"
    },
    {
      "original_filename": "ai_retry_ai_process_stopanderror_manual.json",
      "workflow_name": "Retry on fail except for known error Template",
      "suggested_filename": "ai_retry_ai_process_stopanderror_manual.json",
      "category": "AI",
      "business_function": "retry",
      "key_integrations": [
        "stopAndError",
        "set",
        "wait",
        "if",
        "stickyNote",
        "manualTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.stopAndError": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.noOp": 3,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.manualTrigger": 1
      },
      "business_value": "Automates retry processes using stopAndError, set, wait",
      "analysis_timestamp": "2025-06-01T16:06:49.119093"
    },
    {
      "original_filename": "ops_remote_monitor_mqtt_httprequest.json",
      "workflow_name": "Remote IOT Sensor monitoring via MQTT and InfluxDB",
      "suggested_filename": "ops_remote_monitor_mqtt_httprequest.json",
      "category": "OPS",
      "business_function": "remote",
      "key_integrations": [
        "stickyNote",
        "mqttTrigger",
        "httpRequest",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 6,
      "complexity": "Medium",
      "total_nodes": 6,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.mqttTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates remote processes using stickyNote, mqttTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.119310"
    },
    {
      "original_filename": "ai_simple_automate_nocodb_httprequest.json",
      "workflow_name": "Simple LinkedIn profile collector",
      "suggested_filename": "ai_simple_automate_nocodb_httprequest.json",
      "category": "AI",
      "business_function": "simple",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "set",
        "stickyNote",
        "convertToFile",
        "splitOut",
        "@n8n/langchain.openAi",
        "merge",
        "nocoDb"
      ],
      "trigger_type": "manual",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.stickyNote": 13,
        "n8n-nodes-base.convertToFile": 1,
        "n8n-nodes-base.splitOut": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.nocoDb": 1
      },
      "business_value": "Automates simple processes using manualTrigger, httpRequest, set",
      "analysis_timestamp": "2025-06-01T16:06:49.119597"
    },
    {
      "original_filename": "ai_2395_workflow_2395_automate_n8nnodeslangchainchainretrievalqa_supabase.json",
      "workflow_name": "ai_2395_workflow_2395_automate_n8nnodeslangchainchainretrievalqa_supabase",
      "suggested_filename": "ai_2395_workflow_2395_automate_n8nnodeslangchainchainretrievalqa_supabase.json",
      "category": "AI",
      "business_function": "2395",
      "key_integrations": [
        "googleDrive",
        "@n8n/langchain.documentDefaultDataLoader",
        "stickyNote",
        "@n8n/langchain.chainRetrievalQa",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.retrieverVectorStore",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "set",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.vectorStoreSupabase"
      ],
      "trigger_type": "chat",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.googleDrive": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase": 3,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 3,
        "n8n-nodes-base.supabase": 1
      },
      "business_value": "Automates 2395 processes using googleDrive, @n8n/langchain.documentDefaultDataLoader, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.119901"
    },
    {
      "original_filename": "data_selection_automate_typeform_airtable.json",
      "workflow_name": "CFP Selection 1",
      "suggested_filename": "data_selection_automate_typeform_airtable.json",
      "category": "DATA",
      "business_function": "selection",
      "key_integrations": [
        "typeformTrigger",
        "airtable"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.typeformTrigger": 1,
        "n8n-nodes-base.airtable": 1
      },
      "business_value": "Automates selection processes using typeformTrigger, airtable",
      "analysis_timestamp": "2025-06-01T16:06:49.120109"
    },
    {
      "original_filename": "util_559_workflow_559_automate_box_manual.json",
      "workflow_name": "util_559_workflow_559_automate_box_manual",
      "suggested_filename": "util_559_workflow_559_automate_box_manual.json",
      "category": "UTIL",
      "business_function": "559",
      "key_integrations": [
        "manualTrigger",
        "box"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.box": 1
      },
      "business_value": "Automates 559 processes using manualTrigger, box",
      "analysis_timestamp": "2025-06-01T16:06:49.120308"
    },
    {
      "original_filename": "ai_automate_ai_process_airtable_gmail_cron_1.json",
      "workflow_name": "Automate Pinterest Analysis & AI-Powered Content Suggestions With Pinterest API",
      "suggested_filename": "ai_automate_ai_process_airtable_gmail_cron_1.json",
      "category": "AI",
      "business_function": "automate",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "airtableTool",
        "scheduleTrigger",
        "httpRequest",
        "code",
        "airtable",
        "@n8n/langchain.agent",
        "@n8n/langchain.chainSummarization",
        "gmail",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.airtableTool": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.airtable": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates automate processes using @n8n/langchain.lmChatOpenAi, airtableTool, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.120618"
    },
    {
      "original_filename": "ai_incoming_ai_process_gmail_googlesheets.json",
      "workflow_name": "Add new incoming emails to a Google Sheets spreadsheet as a new row.",
      "suggested_filename": "ai_incoming_ai_process_gmail_googlesheets.json",
      "category": "AI",
      "business_function": "incoming",
      "key_integrations": [
        "gmailTrigger",
        "googleSheets",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates incoming processes using gmailTrigger, googleSheets, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.120845"
    },
    {
      "original_filename": "util_2349_workflow_2349_automate_error_n8n.json",
      "workflow_name": "util_2349_workflow_2349_automate_error_n8n",
      "suggested_filename": "util_2349_workflow_2349_automate_error_n8n.json",
      "category": "UTIL",
      "business_function": "2349",
      "key_integrations": [
        "errorTrigger",
        "code",
        "n8n"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.errorTrigger": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.n8n": 1
      },
      "business_value": "Automates 2349 processes using errorTrigger, code, n8n",
      "analysis_timestamp": "2025-06-01T16:06:49.120948"
    },
    {
      "original_filename": "comm_lead_automate_slack_httprequest_webhook.json",
      "workflow_name": "Lead Qualification with BatchData",
      "suggested_filename": "comm_lead_automate_slack_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "lead",
      "key_integrations": [
        "webhook",
        "stickyNote",
        "httpRequest",
        "code",
        "if",
        "slack"
      ],
      "trigger_type": "webhook",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates lead processes using webhook, stickyNote, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.121225"
    },
    {
      "original_filename": "comm_analyze_analyze_awscomprehend_mattermost.json",
      "workflow_name": "comm_analyze_analyze_awscomprehend_mattermost",
      "suggested_filename": "comm_analyze_analyze_awscomprehend_mattermost.json",
      "category": "COMM",
      "business_function": "analyze",
      "key_integrations": [
        "mattermost",
        "if",
        "awsComprehend",
        "typeformTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.mattermost": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.awsComprehend": 1,
        "n8n-nodes-base.typeformTrigger": 1
      },
      "business_value": "Automates analyze processes using mattermost, if, awsComprehend",
      "analysis_timestamp": "2025-06-01T16:06:49.121335"
    },
    {
      "original_filename": "ai_adaptive_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "workflow_name": "Adaptive RAG",
      "suggested_filename": "ai_adaptive_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "adaptive",
      "key_integrations": [
        "@n8n/langchain.agent",
        "switch",
        "@n8n/langchain.chatTrigger",
        "set",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.embeddingsGoogleGemini",
        "stickyNote",
        "summarize",
        "@n8n/langchain.vectorStoreQdrant"
      ],
      "trigger_type": "chat",
      "complexity_score": 39,
      "complexity": "High",
      "total_nodes": 39,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 6,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "n8n-nodes-base.set": 6,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 6,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 5,
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini": 1,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.summarize": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1
      },
      "business_value": "Automates adaptive processes using @n8n/langchain.agent, switch, @n8n/langchain.chatTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.121771"
    },
    {
      "original_filename": "util_merge_automate_splitinbatches_n8ntrainingcustomerdatastore.json",
      "workflow_name": "Merge multiple runs into one",
      "suggested_filename": "util_merge_automate_splitinbatches_n8ntrainingcustomerdatastore.json",
      "category": "UTIL",
      "business_function": "merge",
      "key_integrations": [
        "manualTrigger",
        "n8nTrainingCustomerDatastore",
        "wait",
        "if",
        "code",
        "splitInBatches"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.n8nTrainingCustomerDatastore": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.splitInBatches": 1
      },
      "business_value": "Automates merge processes using manualTrigger, n8nTrainingCustomerDatastore, wait",
      "analysis_timestamp": "2025-06-01T16:06:49.122044"
    },
    {
      "original_filename": "ai_results_automate_n8nnodeslangchainoutputparserstructured_n8nnodeslangchainlmc.json",
      "workflow_name": "Workflow Results to Markdown Notes in Your Obsidian Vault, via Google Drive",
      "suggested_filename": "ai_results_automate_n8nnodeslangchainoutputparserstructured_n8nnodeslangchainlmc.json",
      "category": "AI",
      "business_function": "results",
      "key_integrations": [
        "stickyNote",
        "googleDrive",
        "executeWorkflowTrigger",
        "if",
        "@n8n/langchain.agent",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.lmChatOpenAi",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.agent": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates results processes using stickyNote, googleDrive, executeWorkflowTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.122325"
    },
    {
      "original_filename": "ai_2342_workflow_2342_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "workflow_name": "ai_2342_workflow_2342_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl",
      "suggested_filename": "ai_2342_workflow_2342_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "category": "AI",
      "business_function": "2342",
      "key_integrations": [
        "twilioTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "airtable",
        "twilio",
        "stickyNote",
        "scheduleTrigger",
        "switch",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 36,
      "complexity": "High",
      "total_nodes": 36,
      "node_types": {
        "n8n-nodes-base.twilioTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "n8n-nodes-base.airtable": 5,
        "n8n-nodes-base.twilio": 3,
        "n8n-nodes-base.stickyNote": 12,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 6,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates 2342 processes using twilioTrigger, @n8n/langchain.lmChatOpenAi, airtable",
      "analysis_timestamp": "2025-06-01T16:06:49.122908"
    },
    {
      "original_filename": "util_send_automate_httprequest_form.json",
      "workflow_name": "Send TTS (Text-to-speech) voice calls",
      "suggested_filename": "util_send_automate_httprequest_form.json",
      "category": "UTIL",
      "business_function": "send",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "formTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.formTrigger": 1
      },
      "business_value": "Automates send processes using stickyNote, httpRequest, formTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.123161"
    },
    {
      "original_filename": "util_565_workflow_565_automate_microsoftonedrive_manual.json",
      "workflow_name": "util_565_workflow_565_automate_microsoftonedrive_manual",
      "suggested_filename": "util_565_workflow_565_automate_microsoftonedrive_manual.json",
      "category": "UTIL",
      "business_function": "565",
      "key_integrations": [
        "manualTrigger",
        "microsoftOneDrive"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.microsoftOneDrive": 1
      },
      "business_value": "Automates 565 processes using manualTrigger, microsoftOneDrive",
      "analysis_timestamp": "2025-06-01T16:06:49.123260"
    },
    {
      "original_filename": "util_create_create_paddle_manual.json",
      "workflow_name": "Create a coupon on Paddle",
      "suggested_filename": "util_create_create_paddle_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "paddle"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.paddle": 1
      },
      "business_value": "Automates create processes using manualTrigger, paddle",
      "analysis_timestamp": "2025-06-01T16:06:49.123351"
    },
    {
      "original_filename": "ai_model_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "workflow_name": "Use any LLM-Model via OpenRouter",
      "suggested_filename": "ai_model_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_2.json",
      "category": "AI",
      "business_function": "model",
      "key_integrations": [
        "set",
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.lmChatOpenAi"
      ],
      "trigger_type": "chat",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.stickyNote": 3,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates model processes using set, stickyNote, @n8n/langchain.chatTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.123565"
    },
    {
      "original_filename": "ai_linkedin_automate_emailsend_form.json",
      "workflow_name": "LinkedIn Profile Finder via Form using Bright Data & GPT-4o-mini",
      "suggested_filename": "ai_linkedin_automate_emailsend_form.json",
      "category": "AI",
      "business_function": "linkedin",
      "key_integrations": [
        "html",
        "formTrigger",
        "brightdata.brightData",
        "@n8n/langchain.openAi",
        "form",
        "filter",
        "limit",
        "splitOut",
        "if",
        "set"
      ],
      "trigger_type": "email",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.html": 2,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-brightdata.brightData": 2,
        "@n8n/n8n-nodes-langchain.openAi": 3,
        "n8n-nodes-base.form": 2,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.emailSend": 1
      },
      "business_value": "Automates linkedin processes using html, formTrigger, brightdata.brightData",
      "analysis_timestamp": "2025-06-01T16:06:49.123875"
    },
    {
      "original_filename": "comm_create_create_manual_mattermost.json",
      "workflow_name": "Create a channel, add a member, and post a message to the channel",
      "suggested_filename": "comm_create_create_manual_mattermost.json",
      "category": "COMM",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "mattermost"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.mattermost": 3
      },
      "business_value": "Automates create processes using manualTrigger, mattermost",
      "analysis_timestamp": "2025-06-01T16:06:49.123997"
    },
    {
      "original_filename": "util_retry_automate_splitinbatches_httprequest_cron.json",
      "workflow_name": "Retry Execution Hourly",
      "suggested_filename": "util_retry_automate_splitinbatches_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "retry",
      "key_integrations": [
        "manualTrigger",
        "n8n",
        "httpRequest",
        "if",
        "stickyNote",
        "set",
        "splitInBatches",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates retry processes using manualTrigger, n8n, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.124272"
    },
    {
      "original_filename": "data_1122_workflow_1122_automate_interval_notion_webhook.json",
      "workflow_name": "data_1122_workflow_1122_automate_interval_notion_webhook",
      "suggested_filename": "data_1122_workflow_1122_automate_interval_notion_webhook.json",
      "category": "DATA",
      "business_function": "1122",
      "key_integrations": [
        "function",
        "notionTrigger",
        "webhook",
        "notion",
        "interval",
        "signl4"
      ],
      "trigger_type": "webhook",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.notionTrigger": 1,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.notion": 5,
        "n8n-nodes-base.interval": 1,
        "n8n-nodes-base.signl4": 3
      },
      "business_value": "Automates 1122 processes using function, notionTrigger, webhook",
      "analysis_timestamp": "2025-06-01T16:06:49.124430"
    },
    {
      "original_filename": "ai_telegram_automate_supabase_n8nnodeslangchainmemorypostgreschat.json",
      "workflow_name": "Telegram Chat with Buffering",
      "suggested_filename": "ai_telegram_automate_supabase_n8nnodeslangchainmemorypostgreschat.json",
      "category": "AI",
      "business_function": "telegram",
      "key_integrations": [
        "stickyNote",
        "telegram",
        "telegramTrigger",
        "wait",
        "supabase",
        "aggregate",
        "@n8n/langchain.lmChatOpenAi",
        "sort",
        "if",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.supabase": 3,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.sort": 1,
        "n8n-nodes-base.if": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryPostgresChat": 1
      },
      "business_value": "Automates telegram processes using stickyNote, telegram, telegramTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.124710"
    },
    {
      "original_filename": "ai_vision_ai_process_n8nnodeslangchainoutputparserstructured_httprequest_2.json",
      "workflow_name": "Vision-Based AI Agent Scraper - with Google Sheets, ScrapingBee, and Gemini",
      "suggested_filename": "ai_vision_ai_process_n8nnodeslangchainoutputparserstructured_httprequest_2.json",
      "category": "AI",
      "business_function": "vision",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.lmChatGoogleGemini",
        "splitOut",
        "googleSheets",
        "stickyNote",
        "set",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.stickyNote": 15,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.markdown": 1
      },
      "business_value": "Automates vision processes using manualTrigger, httpRequest, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:49.125089"
    },
    {
      "original_filename": "ai_powered_ai_process_n8nnodeslangchainchainllm_youtube_webhook.json",
      "workflow_name": "ai_powered_ai_process_n8nnodeslangchainchainllm_youtube_webhook",
      "suggested_filename": "ai_powered_ai_process_n8nnodeslangchainchainllm_youtube_webhook.json",
      "category": "AI",
      "business_function": "powered",
      "key_integrations": [
        "webhook",
        "youtube-transcription.youtubeTranscripter",
        "splitOut",
        "respondToWebhook",
        "telegram",
        "set",
        "code",
        "youTube",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "webhook",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-youtube-transcription.youtubeTranscripter": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.youTube": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.summarize": 1
      },
      "business_value": "Automates powered processes using webhook, youtube-transcription.youtubeTranscripter, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:49.125381"
    },
    {
      "original_filename": "ai_chatbot_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalcula.json",
      "workflow_name": "POC - Chatbot Order by Sheet Data",
      "suggested_filename": "ai_chatbot_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalcula.json",
      "category": "AI",
      "business_function": "chatbot",
      "key_integrations": [
        "@n8n/langchain.toolCalculator",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolHttpRequest",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 3,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates chatbot processes using @n8n/langchain.toolCalculator, @n8n/langchain.lmChatOpenAi, @n8n/langchain.memoryBufferWindow",
      "analysis_timestamp": "2025-06-01T16:06:49.125687"
    },
    {
      "original_filename": "ai_blog_automate_n8nnodeslangchainchainllm_httprequest_cron_1.json",
      "workflow_name": "Blog Automation TEMPLATE",
      "suggested_filename": "ai_blog_automate_n8nnodeslangchainchainllm_httprequest_cron_1.json",
      "category": "AI",
      "business_function": "blog",
      "key_integrations": [
        "set",
        "scheduleTrigger",
        "manualTrigger",
        "googleSheets",
        "code",
        "@n8n/langchain.lmChatOpenAi",
        "if",
        "@n8n/langchain.chainLlm",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "cron",
      "complexity_score": 35,
      "complexity": "High",
      "total_nodes": 35,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 6,
        "n8n-nodes-base.code": 5,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.if": 5,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 13
      },
      "business_value": "Automates blog processes using set, scheduleTrigger, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.126224"
    },
    {
      "original_filename": "ai_building_ai_process_httprequest_extractfromfile_2.json",
      "workflow_name": "Building RAG Chatbot for Movie Recommendations with Qdrant and Open AI",
      "suggested_filename": "ai_building_ai_process_httprequest_extractfromfile_2.json",
      "category": "AI",
      "business_function": "building",
      "key_integrations": [
        "manualTrigger",
        "github",
        "extractFromFile",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterTokenSplitter",
        "@n8n/langchain.vectorStoreQdrant",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolWorkflow"
      ],
      "trigger_type": "chat",
      "complexity_score": 27,
      "complexity": "High",
      "total_nodes": 27,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.github": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates building processes using manualTrigger, github, extractFromFile",
      "analysis_timestamp": "2025-06-01T16:06:49.126636"
    },
    {
      "original_filename": "ai_build_ai_process_httprequest_extractfromfile.json",
      "workflow_name": "ai_build_ai_process_httprequest_extractfromfile",
      "suggested_filename": "ai_build_ai_process_httprequest_extractfromfile.json",
      "category": "AI",
      "business_function": "build",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.embeddingsMistralCloud",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "httpRequest",
        "compression",
        "splitOut",
        "extractFromFile",
        "set",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 38,
      "complexity": "High",
      "total_nodes": 38,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.compression": 1,
        "n8n-nodes-base.splitOut": 3,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.stickyNote": 7,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 2,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.wait": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 2,
        "n8n-nodes-base.switch": 1
      },
      "business_value": "Automates build processes using manualTrigger, @n8n/langchain.embeddingsMistralCloud, @n8n/langchain.documentDefaultDataLoader",
      "analysis_timestamp": "2025-06-01T16:06:49.127171"
    },
    {
      "original_filename": "ai_business_ai_process_n8nnodeslangchainmemorybufferwindow_whatsapp_webhook.json",
      "workflow_name": "Business WhatsApp AI RAG Chatbot",
      "suggested_filename": "ai_business_ai_process_n8nnodeslangchainmemorybufferwindow_whatsapp_webhook.json",
      "category": "AI",
      "business_function": "business",
      "key_integrations": [
        "respondToWebhook",
        "@n8n/langchain.agent",
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi",
        "manualTrigger",
        "@n8n/langchain.vectorStoreQdrant",
        "httpRequest",
        "googleDrive",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader"
      ],
      "trigger_type": "webhook",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.respondToWebhook": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 6,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleDrive": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.webhook": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.whatsApp": 2,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1
      },
      "business_value": "Automates business processes using respondToWebhook, @n8n/langchain.agent, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.127545"
    },
    {
      "original_filename": "ai_openai_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvector_2.json",
      "workflow_name": "OpenAI Personal Shopper with RAG and WooCommerce",
      "suggested_filename": "ai_openai_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvector_2.json",
      "category": "AI",
      "business_function": "openai",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolCalculator",
        "set",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolVectorStore",
        "@n8n/langchain.vectorStoreQdrant",
        "@n8n/langchain.embeddingsOpenAi",
        "wooCommerceTool",
        "@n8n/langchain.informationExtractor"
      ],
      "trigger_type": "chat",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "@n8n/n8n-nodes-langchain.toolVectorStore": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "n8n-nodes-base.wooCommerceTool": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 1,
        "n8n-nodes-base.googleDrive": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates openai processes using @n8n/langchain.chatTrigger, @n8n/langchain.memoryBufferWindow, @n8n/langchain.toolCalculator",
      "analysis_timestamp": "2025-06-01T16:06:49.127882"
    },
    {
      "original_filename": "ai_powered_ai_process_nocodb_slack_webhook.json",
      "workflow_name": "AI powered SEO Keyword Research Automation - The vibe Marketer",
      "suggested_filename": "ai_powered_ai_process_nocodb_slack_webhook.json",
      "category": "AI",
      "business_function": "powered",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.agent",
        "dataforseo.dataForSeo",
        "splitOut",
        "webhook",
        "set",
        "code",
        "aggregate",
        "merge"
      ],
      "trigger_type": "chat",
      "complexity_score": 34,
      "complexity": "High",
      "total_nodes": 34,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.agent": 3,
        "n8n-nodes-dataforseo.dataForSeo": 3,
        "n8n-nodes-base.splitOut": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.aggregate": 3,
        "n8n-nodes-base.merge": 3,
        "n8n-nodes-base.nocoDb": 3,
        "n8n-nodes-base.slack": 2,
        "n8n-nodes-base.stickyNote": 8
      },
      "business_value": "Automates powered processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.outputParserStructured, @n8n/langchain.agent",
      "analysis_timestamp": "2025-06-01T16:06:49.128265"
    },
    {
      "original_filename": "data_3385_workflow_3385_automate_googlesheets_webhook_webhook.json",
      "workflow_name": "data_3385_workflow_3385_automate_googlesheets_webhook_webhook",
      "suggested_filename": "data_3385_workflow_3385_automate_googlesheets_webhook_webhook.json",
      "category": "DATA",
      "business_function": "3385",
      "key_integrations": [
        "webhook",
        "respondToWebhook",
        "googleSheets",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates 3385 processes using webhook, respondToWebhook, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:49.128533"
    },
    {
      "original_filename": "analytics_google_automate_googleanalytics_httprequest_cron_3.json",
      "workflow_name": "Google analytics template",
      "suggested_filename": "analytics_google_automate_googleanalytics_httprequest_cron_3.json",
      "category": "ANALYTICS",
      "business_function": "google",
      "key_integrations": [
        "scheduleTrigger",
        "manualTrigger",
        "stickyNote",
        "googleAnalytics",
        "code",
        "httpRequest",
        "baserow"
      ],
      "trigger_type": "cron",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.googleAnalytics": 6,
        "n8n-nodes-base.code": 6,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.baserow": 1
      },
      "business_value": "Automates google processes using scheduleTrigger, manualTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.128962"
    },
    {
      "original_filename": "comm_1255_workflow_1255_automate_slack_netlify.json",
      "workflow_name": "comm_1255_workflow_1255_automate_slack_netlify",
      "suggested_filename": "comm_1255_workflow_1255_automate_slack_netlify.json",
      "category": "COMM",
      "business_function": "1255",
      "key_integrations": [
        "netlifyTrigger",
        "slack"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.netlifyTrigger": 1,
        "n8n-nodes-base.slack": 1
      },
      "business_value": "Automates 1255 processes using netlifyTrigger, slack",
      "analysis_timestamp": "2025-06-01T16:06:49.129193"
    },
    {
      "original_filename": "ai_telegram_automate_n8nnodeslangchainchainretrievalqa_stopanderror_2.json",
      "workflow_name": "Telegram RAG pdf",
      "suggested_filename": "ai_telegram_automate_n8nnodeslangchainchainretrievalqa_stopanderror_2.json",
      "category": "AI",
      "business_function": "telegram",
      "key_integrations": [
        "telegramTrigger",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "stopAndError",
        "@n8n/langchain.chainRetrievalQa",
        "@n8n/langchain.retrieverVectorStore",
        "@n8n/langchain.vectorStorePinecone",
        "@n8n/langchain.lmChatGroq",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.stopAndError": 2,
        "@n8n/n8n-nodes-langchain.chainRetrievalQa": 1,
        "@n8n/n8n-nodes-langchain.retrieverVectorStore": 1,
        "@n8n/n8n-nodes-langchain.vectorStorePinecone": 2,
        "@n8n/n8n-nodes-langchain.lmChatGroq": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.telegram": 3,
        "n8n-nodes-base.limit": 1
      },
      "business_value": "Automates telegram processes using telegramTrigger, @n8n/langchain.embeddingsOpenAi, @n8n/langchain.documentDefaultDataLoader",
      "analysis_timestamp": "2025-06-01T16:06:49.129518"
    },
    {
      "original_filename": "ai_1996_workflow_1996_automate_openai_googlesheets.json",
      "workflow_name": "ai_1996_workflow_1996_automate_openai_googlesheets",
      "suggested_filename": "ai_1996_workflow_1996_automate_openai_googlesheets.json",
      "category": "AI",
      "business_function": "1996",
      "key_integrations": [
        "stickyNote",
        "googleSheets",
        "merge",
        "openAi",
        "formTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.openAi": 1,
        "n8n-nodes-base.formTrigger": 1
      },
      "business_value": "Automates 1996 processes using stickyNote, googleSheets, merge",
      "analysis_timestamp": "2025-06-01T16:06:49.129770"
    },
    {
      "original_filename": "biz_1855_workflow_1855_automate_hubspot_itemlists_cron.json",
      "workflow_name": "biz_1855_workflow_1855_automate_hubspot_itemlists_cron",
      "suggested_filename": "biz_1855_workflow_1855_automate_hubspot_itemlists_cron.json",
      "category": "BIZ",
      "business_function": "1855",
      "key_integrations": [
        "if",
        "stripe",
        "scheduleTrigger",
        "itemLists",
        "code",
        "hubspot",
        "merge",
        "stickyNote",
        "httpRequest",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 24,
      "complexity": "High",
      "total_nodes": 24,
      "node_types": {
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.stripe": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.itemLists": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.hubspot": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates 1855 processes using if, stripe, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.130070"
    },
    {
      "original_filename": "data_import_transfer_splitinbatches_httprequest.json",
      "workflow_name": "Import multiple Manufacturers from Google Sheets to Shopware 6",
      "suggested_filename": "data_import_transfer_splitinbatches_httprequest.json",
      "category": "DATA",
      "business_function": "import",
      "key_integrations": [
        "manualTrigger",
        "set",
        "code",
        "httpRequest",
        "stickyNote",
        "splitInBatches",
        "googleSheets",
        "if"
      ],
      "trigger_type": "manual",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates import processes using manualTrigger, set, code",
      "analysis_timestamp": "2025-06-01T16:06:49.130355"
    },
    {
      "original_filename": "ai_load_automate_stopanderror_manual_1.json",
      "workflow_name": "Load Prompts from Github Repo and auto populate n8n expressions",
      "suggested_filename": "ai_load_automate_stopanderror_manual_1.json",
      "category": "AI",
      "business_function": "load",
      "key_integrations": [
        "manualTrigger",
        "github",
        "extractFromFile",
        "set",
        "code",
        "if",
        "stopAndError",
        "@n8n/langchain.agent",
        "stickyNote",
        "@n8n/langchain.lmChatOllama"
      ],
      "trigger_type": "chat",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.github": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stopAndError": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 1
      },
      "business_value": "Automates load processes using manualTrigger, github, extractFromFile",
      "analysis_timestamp": "2025-06-01T16:06:49.130676"
    },
    {
      "original_filename": "ai_genai_ai_process_n8nnodeslangchainmemorypostgreschat_httprequest_cron_1.json",
      "workflow_name": "RAG & GenAI App With WordPress Content",
      "suggested_filename": "ai_genai_ai_process_n8nnodeslangchainmemorypostgreschat_httprequest_cron_1.json",
      "category": "AI",
      "business_function": "genai",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterTokenSplitter",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.memoryPostgresChat",
        "respondToWebhook",
        "set",
        "markdown",
        "postgres"
      ],
      "trigger_type": "chat",
      "complexity_score": 53,
      "complexity": "High",
      "total_nodes": 53,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 3,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 2,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.memoryPostgresChat": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.markdown": 2,
        "n8n-nodes-base.postgres": 4,
        "n8n-nodes-base.aggregate": 4,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.wordpress": 2,
        "n8n-nodes-base.filter": 2,
        "n8n-nodes-base.supabase": 3,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.splitInBatches": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase": 3,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates genai processes using manualTrigger, @n8n/langchain.embeddingsOpenAi, @n8n/langchain.documentDefaultDataLoader",
      "analysis_timestamp": "2025-06-01T16:06:49.131218"
    },
    {
      "original_filename": "data_1756_workflow_1756_automate_spreadsheetfile_googlesheets_webhook.json",
      "workflow_name": "data_1756_workflow_1756_automate_spreadsheetfile_googlesheets_webhook",
      "suggested_filename": "data_1756_workflow_1756_automate_spreadsheetfile_googlesheets_webhook.json",
      "category": "DATA",
      "business_function": "1756",
      "key_integrations": [
        "googleSheets",
        "spreadsheetFile",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.spreadsheetFile": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 1756 processes using googleSheets, spreadsheetFile, webhook",
      "analysis_timestamp": "2025-06-01T16:06:49.131363"
    },
    {
      "original_filename": "ai_extract_ai_process_n8nnodeslangchainchainllm_httprequest_1.json",
      "workflow_name": "Extract & Summarize Wikipedia Data with Bright Data and Gemini AI",
      "suggested_filename": "ai_extract_ai_process_n8nnodeslangchainchainllm_httprequest_1.json",
      "category": "AI",
      "business_function": "extract",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "httpRequest",
        "stickyNote",
        "@n8n/langchain.chainLlm",
        "@n8n/langchain.chainSummarization",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates extract processes using manualTrigger, @n8n/langchain.lmChatGoogleGemini, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.131622"
    },
    {
      "original_filename": "data_anomaly_automate_httprequest_googlecloudstorage_2.json",
      "workflow_name": "[1/3 - anomaly detection] [1/2 - KNN classification] Batch upload dataset to Qdrant (crops dataset)",
      "suggested_filename": "data_anomaly_automate_httprequest_googlecloudstorage_2.json",
      "category": "DATA",
      "business_function": "anomaly",
      "key_integrations": [
        "manualTrigger",
        "googleCloudStorage",
        "set",
        "httpRequest",
        "code",
        "if",
        "stickyNote",
        "filter"
      ],
      "trigger_type": "manual",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleCloudStorage": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 12,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates anomaly processes using manualTrigger, googleCloudStorage, set",
      "analysis_timestamp": "2025-06-01T16:06:49.131957"
    },
    {
      "original_filename": "util_2134_workflow_2134_automate_httprequest_webhook_webhook.json",
      "workflow_name": "util_2134_workflow_2134_automate_httprequest_webhook_webhook",
      "suggested_filename": "util_2134_workflow_2134_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "2134",
      "key_integrations": [
        "splitOut",
        "removeDuplicates",
        "respondToWebhook",
        "stickyNote",
        "webhook",
        "httpRequest",
        "set",
        "if"
      ],
      "trigger_type": "webhook",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.removeDuplicates": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 2134 processes using splitOut, removeDuplicates, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:49.132204"
    },
    {
      "original_filename": "data_anomaly_automate_httprequest_executeworkflow_1.json",
      "workflow_name": "[3/3] Anomaly detection tool (crops dataset)",
      "suggested_filename": "data_anomaly_automate_httprequest_executeworkflow_1.json",
      "category": "DATA",
      "business_function": "anomaly",
      "key_integrations": [
        "stickyNote",
        "httpRequest",
        "code",
        "set",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.executeWorkflowTrigger": 1
      },
      "business_value": "Automates anomaly processes using stickyNote, httpRequest, code",
      "analysis_timestamp": "2025-06-01T16:06:49.132491"
    },
    {
      "original_filename": "ai_whisper_automate_notion_googledrive_1.json",
      "workflow_name": "Whisper Transkription copy",
      "suggested_filename": "ai_whisper_automate_notion_googledrive_1.json",
      "category": "AI",
      "business_function": "whisper",
      "key_integrations": [
        "googleDriveTrigger",
        "googleDrive",
        "notion",
        "@n8n/langchain.openAi",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.googleDriveTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.notion": 1,
        "@n8n/n8n-nodes-langchain.openAi": 2,
        "n8n-nodes-base.stickyNote": 3
      },
      "business_value": "Automates whisper processes using googleDriveTrigger, googleDrive, notion",
      "analysis_timestamp": "2025-06-01T16:06:49.132751"
    },
    {
      "original_filename": "ai_receive_and_analyze_emails_with_rules_in_sublime_security_analyze_slack_httpr.json",
      "workflow_name": "Receive_and_analyze_emails_with_rules_in_Sublime_Security",
      "suggested_filename": "ai_receive_and_analyze_emails_with_rules_in_sublime_security_analyze_slack_httpr.json",
      "category": "AI",
      "business_function": "receive",
      "key_integrations": [
        "emailReadImap",
        "moveBinaryData",
        "if",
        "code",
        "manualTrigger",
        "slack",
        "set",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "email",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.moveBinaryData": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.slack": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates receive processes using emailReadImap, moveBinaryData, if",
      "analysis_timestamp": "2025-06-01T16:06:49.133331"
    },
    {
      "original_filename": "ai_resume_automate_n8nnodeslangchainoutputparserstructured_httprequest_webhook.json",
      "workflow_name": "Resume Screening & Behavioral Interviews with Gemini, Elevenlabs, & Notion ATS copy",
      "suggested_filename": "ai_resume_automate_n8nnodeslangchainoutputparserstructured_httprequest_webhook.json",
      "category": "AI",
      "business_function": "resume",
      "key_integrations": [
        "merge",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.chainLlm",
        "googleDrive",
        "stickyNote",
        "extractFromFile",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.informationExtractor",
        "set",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 67,
      "complexity": "High",
      "total_nodes": 67,
      "node_types": {
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.stickyNote": 34,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "@n8n/n8n-nodes-langchain.informationExtractor": 2,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.filter": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.notion": 7,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.formTrigger": 3,
        "n8n-nodes-base.googleSheets": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2,
        "n8n-nodes-base.notionTool": 1
      },
      "business_value": "Automates resume processes using merge, @n8n/langchain.outputParserStructured, @n8n/langchain.chainLlm",
      "analysis_timestamp": "2025-06-01T16:06:49.133952"
    },
    {
      "original_filename": "util_615_workflow_615_automate_httprequest_dropbox.json",
      "workflow_name": "util_615_workflow_615_automate_httprequest_dropbox",
      "suggested_filename": "util_615_workflow_615_automate_httprequest_dropbox.json",
      "category": "UTIL",
      "business_function": "615",
      "key_integrations": [
        "manualTrigger",
        "dropbox",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.dropbox": 3,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 615 processes using manualTrigger, dropbox, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.134217"
    },
    {
      "original_filename": "ai_daily_ai_process_cron_airtable_cron.json",
      "workflow_name": "Daily Language Learning",
      "suggested_filename": "ai_daily_ai_process_cron_airtable_cron.json",
      "category": "AI",
      "business_function": "daily",
      "key_integrations": [
        "cron",
        "hackerNews",
        "function",
        "lingvaNex",
        "set",
        "airtable",
        "vonage"
      ],
      "trigger_type": "cron",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.hackerNews": 1,
        "n8n-nodes-base.function": 2,
        "n8n-nodes-base.lingvaNex": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.vonage": 1
      },
      "business_value": "Automates daily processes using cron, hackerNews, function",
      "analysis_timestamp": "2025-06-01T16:06:49.134455"
    },
    {
      "original_filename": "data_3476_workflow_3476_automate_googlesheets_manual.json",
      "workflow_name": "data_3476_workflow_3476_automate_googlesheets_manual",
      "suggested_filename": "data_3476_workflow_3476_automate_googlesheets_manual.json",
      "category": "DATA",
      "business_function": "3476",
      "key_integrations": [
        "manualTrigger",
        "airtop",
        "code",
        "googleSheets"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.airtop": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.googleSheets": 2
      },
      "business_value": "Automates 3476 processes using manualTrigger, airtop, code",
      "analysis_timestamp": "2025-06-01T16:06:49.134709"
    },
    {
      "original_filename": "data_insert_create_manual_coda.json",
      "workflow_name": "Insert data into a new row for a table in Coda",
      "suggested_filename": "data_insert_create_manual_coda.json",
      "category": "DATA",
      "business_function": "insert",
      "key_integrations": [
        "manualTrigger",
        "coda",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.coda": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates insert processes using manualTrigger, coda, set",
      "analysis_timestamp": "2025-06-01T16:06:49.134893"
    },
    {
      "original_filename": "comm_subscriber_create_manual_convertkit.json",
      "workflow_name": "Add subscriber to form, create tag and subscriber to the tag",
      "suggested_filename": "comm_subscriber_create_manual_convertkit.json",
      "category": "COMM",
      "business_function": "subscriber",
      "key_integrations": [
        "manualTrigger",
        "convertKit"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.convertKit": 3
      },
      "business_value": "Automates subscriber processes using manualTrigger, convertKit",
      "analysis_timestamp": "2025-06-01T16:06:49.134991"
    },
    {
      "original_filename": "data_clockify_sync_httprequest_webhook_webhook.json",
      "workflow_name": "Clockify to Syncro",
      "suggested_filename": "data_clockify_sync_httprequest_webhook_webhook.json",
      "category": "DATA",
      "business_function": "clockify",
      "key_integrations": [
        "webhook",
        "googleSheets",
        "set",
        "if",
        "httpRequest",
        "function"
      ],
      "trigger_type": "webhook",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates clockify processes using webhook, googleSheets, set",
      "analysis_timestamp": "2025-06-01T16:06:49.135232"
    },
    {
      "original_filename": "util_2450_workflow_2450_automate_httprequest_stopanderror_cron.json",
      "workflow_name": "util_2450_workflow_2450_automate_httprequest_stopanderror_cron",
      "suggested_filename": "util_2450_workflow_2450_automate_httprequest_stopanderror_cron.json",
      "category": "UTIL",
      "business_function": "2450",
      "key_integrations": [
        "manualTrigger",
        "splitOut",
        "set",
        "if",
        "stopAndError",
        "httpRequest",
        "stickyNote",
        "scheduleTrigger",
        "awsS3"
      ],
      "trigger_type": "cron",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.set": 4,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stopAndError": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.awsS3": 1
      },
      "business_value": "Automates 2450 processes using manualTrigger, splitOut, set",
      "analysis_timestamp": "2025-06-01T16:06:49.135523"
    },
    {
      "original_filename": "ai_agent_automate_n8nnodeslangchainmemorybufferwindow_airtable_2.json",
      "workflow_name": "Dsp agent",
      "suggested_filename": "ai_agent_automate_n8nnodeslangchainmemorybufferwindow_airtable_2.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "telegramTrigger",
        "switch",
        "set",
        "telegram",
        "@n8n/langchain.openAi",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.toolCalculator",
        "@n8n/langchain.toolWikipedia",
        "airtable"
      ],
      "trigger_type": "chat",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.telegram": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1,
        "n8n-nodes-base.airtable": 1,
        "n8n-nodes-base.aggregate": 1,
        "n8n-nodes-base.merge": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.airtableTool": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 2
      },
      "business_value": "Automates agent processes using telegramTrigger, switch, set",
      "analysis_timestamp": "2025-06-01T16:06:49.135840"
    },
    {
      "original_filename": "util_2316_workflow_2316_automate_readwritefile_httprequest.json",
      "workflow_name": "util_2316_workflow_2316_automate_readwritefile_httprequest",
      "suggested_filename": "util_2316_workflow_2316_automate_readwritefile_httprequest.json",
      "category": "UTIL",
      "business_function": "2316",
      "key_integrations": [
        "manualTrigger",
        "readWriteFile",
        "stickyNote",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readWriteFile": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.httpRequest": 2
      },
      "business_value": "Automates 2316 processes using manualTrigger, readWriteFile, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.136104"
    },
    {
      "original_filename": "ai_build_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "workflow_name": "Build your first AI MCP Server",
      "suggested_filename": "ai_build_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "category": "AI",
      "business_function": "build",
      "key_integrations": [
        "@n8n/langchain.agent",
        "googleCalendarTool",
        "@n8n/langchain.mcpTrigger",
        "executeWorkflowTrigger",
        "switch",
        "set",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.mcpClientTool"
      ],
      "trigger_type": "chat",
      "complexity_score": 32,
      "complexity": "High",
      "total_nodes": 32,
      "node_types": {
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.googleCalendarTool": 4,
        "@n8n/n8n-nodes-langchain.mcpTrigger": 2,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.set": 3,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 3,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.mcpClientTool": 2,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.debugHelper": 1,
        "n8n-nodes-base.httpRequest": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1
      },
      "business_value": "Automates build processes using @n8n/langchain.agent, googleCalendarTool, @n8n/langchain.mcpTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.136532"
    },
    {
      "original_filename": "biz_insee_automate_httprequest_schedule_cron.json",
      "workflow_name": "INSEE Enrichment for Agile CRM",
      "suggested_filename": "biz_insee_automate_httprequest_schedule_cron.json",
      "category": "BIZ",
      "business_function": "insee",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "stickyNote",
        "code",
        "set",
        "scheduleTrigger",
        "agileCrm",
        "merge"
      ],
      "trigger_type": "cron",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.agileCrm": 2,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates insee processes using manualTrigger, httpRequest, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.136910"
    },
    {
      "original_filename": "util_standup_read_movebinarydata_manual.json",
      "workflow_name": "Standup Bot - Read Config",
      "suggested_filename": "util_standup_read_movebinarydata_manual.json",
      "category": "UTIL",
      "business_function": "standup",
      "key_integrations": [
        "manualTrigger",
        "readBinaryFile",
        "moveBinaryData"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.readBinaryFile": 1,
        "n8n-nodes-base.moveBinaryData": 1
      },
      "business_value": "Automates standup processes using manualTrigger, readBinaryFile, moveBinaryData",
      "analysis_timestamp": "2025-06-01T16:06:49.137105"
    },
    {
      "original_filename": "ai_parse_ai_process_generic.json",
      "workflow_name": "ai_parse_ai_process_generic",
      "suggested_filename": "ai_parse_ai_process_generic.json",
      "category": "AI",
      "business_function": "parse",
      "key_integrations": [],
      "trigger_type": "manual",
      "complexity_score": 0,
      "complexity": "Low",
      "total_nodes": 0,
      "node_types": {},
      "business_value": "Automates parse processes using ",
      "analysis_timestamp": "2025-06-01T16:06:49.137326"
    },
    {
      "original_filename": "ai_extract_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr_1.json",
      "workflow_name": "Extract & Summarize Bing Copilot Search Results with Gemini AI and Bright Data",
      "suggested_filename": "ai_extract_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr_1.json",
      "category": "AI",
      "business_function": "extract",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "if",
        "set",
        "httpRequest",
        "@n8n/langchain.outputParserStructured",
        "stickyNote",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.httpRequest": 5,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.wait": 1
      },
      "business_value": "Automates extract processes using manualTrigger, @n8n/langchain.lmChatGoogleGemini, @n8n/langchain.documentDefaultDataLoader",
      "analysis_timestamp": "2025-06-01T16:06:49.137635"
    },
    {
      "original_filename": "ai_fitness_ai_process_gmail_emailsend.json",
      "workflow_name": "ai_fitness_ai_process_gmail_emailsend",
      "suggested_filename": "ai_fitness_ai_process_gmail_emailsend.json",
      "category": "AI",
      "business_function": "fitness",
      "key_integrations": [
        "stravaTrigger",
        "@n8n/langchain.lmChatGoogleGemini",
        "gmail",
        "code",
        "@n8n/langchain.agent",
        "emailSend",
        "stickyNote",
        "whatsApp"
      ],
      "trigger_type": "chat",
      "complexity_score": 15,
      "complexity": "Medium",
      "total_nodes": 15,
      "node_types": {
        "n8n-nodes-base.stravaTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 1,
        "n8n-nodes-base.gmail": 1,
        "n8n-nodes-base.code": 4,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.emailSend": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.whatsApp": 1
      },
      "business_value": "Automates fitness processes using stravaTrigger, @n8n/langchain.lmChatGoogleGemini, gmail",
      "analysis_timestamp": "2025-06-01T16:06:49.137932"
    },
    {
      "original_filename": "biz_create_create_contact_customerio_manual.json",
      "workflow_name": "Create a customer and add them to a segment in Customer.io",
      "suggested_filename": "biz_create_create_contact_customerio_manual.json",
      "category": "BIZ",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "customerIo"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.customerIo": 2
      },
      "business_value": "Automates create processes using manualTrigger, customerIo",
      "analysis_timestamp": "2025-06-01T16:06:49.138033"
    },
    {
      "original_filename": "content_create_create_ghost_manual.json",
      "workflow_name": "Create, update, and get a post in Ghost",
      "suggested_filename": "content_create_create_ghost_manual.json",
      "category": "CONTENT",
      "business_function": "create",
      "key_integrations": [
        "manualTrigger",
        "ghost"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.ghost": 3
      },
      "business_value": "Automates create processes using manualTrigger, ghost",
      "analysis_timestamp": "2025-06-01T16:06:49.138132"
    },
    {
      "original_filename": "util_2571_workflow_2571_automate_datetime_httprequest.json",
      "workflow_name": "util_2571_workflow_2571_automate_datetime_httprequest",
      "suggested_filename": "util_2571_workflow_2571_automate_datetime_httprequest.json",
      "category": "UTIL",
      "business_function": "2571",
      "key_integrations": [
        "httpRequest",
        "rssFeedReadTrigger",
        "stickyNote",
        "dateTime"
      ],
      "trigger_type": "manual",
      "complexity_score": 10,
      "complexity": "Medium",
      "total_nodes": 10,
      "node_types": {
        "n8n-nodes-base.httpRequest": 4,
        "n8n-nodes-base.rssFeedReadTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.dateTime": 1
      },
      "business_value": "Automates 2571 processes using httpRequest, rssFeedReadTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.138360"
    },
    {
      "original_filename": "data_458_workflow_458_automate_postgres_manual.json",
      "workflow_name": "data_458_workflow_458_automate_postgres_manual",
      "suggested_filename": "data_458_workflow_458_automate_postgres_manual.json",
      "category": "DATA",
      "business_function": "458",
      "key_integrations": [
        "manualTrigger",
        "postgres"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.postgres": 1
      },
      "business_value": "Automates 458 processes using manualTrigger, postgres",
      "analysis_timestamp": "2025-06-01T16:06:49.138458"
    },
    {
      "original_filename": "comm_client_automate_telegram_telegram.json",
      "workflow_name": "MCP Client with Brave and Telegram",
      "suggested_filename": "comm_client_automate_telegram_telegram.json",
      "category": "COMM",
      "business_function": "client",
      "key_integrations": [
        "mcp.mcpClient",
        "code",
        "telegram",
        "telegramTrigger",
        "if",
        "stickyNote",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-mcp.mcpClient": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 7,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates client processes using mcp.mcpClient, code, telegram",
      "analysis_timestamp": "2025-06-01T16:06:49.138708"
    },
    {
      "original_filename": "ops_2385_workflow_2385_automate_splitinbatches_gitlab.json",
      "workflow_name": "ops_2385_workflow_2385_automate_splitinbatches_gitlab",
      "suggested_filename": "ops_2385_workflow_2385_automate_splitinbatches_gitlab.json",
      "category": "OPS",
      "business_function": "2385",
      "key_integrations": [
        "manualTrigger",
        "set",
        "splitInBatches",
        "gitlab",
        "code",
        "extractFromFile",
        "switch",
        "stickyNote",
        "n8n"
      ],
      "trigger_type": "manual",
      "complexity_score": 21,
      "complexity": "High",
      "total_nodes": 21,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 6,
        "n8n-nodes-base.noOp": 4,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.gitlab": 3,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.n8n": 1
      },
      "business_value": "Automates 2385 processes using manualTrigger, set, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:49.139015"
    },
    {
      "original_filename": "data_spotify_sync_splitinbatches_gotify_cron.json",
      "workflow_name": "Spotify Sync Liked Songs to Playlist",
      "suggested_filename": "data_spotify_sync_splitinbatches_gotify_cron.json",
      "category": "DATA",
      "business_function": "spotify",
      "key_integrations": [
        "manualTrigger",
        "scheduleTrigger",
        "sort",
        "gotify",
        "splitInBatches",
        "spotify",
        "set",
        "filter",
        "compareDatasets",
        "summarize"
      ],
      "trigger_type": "cron",
      "complexity_score": 40,
      "complexity": "High",
      "total_nodes": 40,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.sort": 2,
        "n8n-nodes-base.gotify": 2,
        "n8n-nodes-base.splitInBatches": 2,
        "n8n-nodes-base.spotify": 5,
        "n8n-nodes-base.set": 5,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.compareDatasets": 1,
        "n8n-nodes-base.summarize": 2,
        "n8n-nodes-base.stickyNote": 16,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates spotify processes using manualTrigger, scheduleTrigger, sort",
      "analysis_timestamp": "2025-06-01T16:06:49.139337"
    },
    {
      "original_filename": "ai_integrating_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainc_1.json",
      "workflow_name": "Integrating AI with Open-Meteo API for Enhanced Weather Forecasting",
      "suggested_filename": "ai_integrating_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainc_1.json",
      "category": "AI",
      "business_function": "integrating",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "stickyNote",
        "@n8n/langchain.agent",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.toolHttpRequest"
      ],
      "trigger_type": "chat",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.stickyNote": 6,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.toolHttpRequest": 2
      },
      "business_value": "Automates integrating processes using @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOpenAi, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.139618"
    },
    {
      "original_filename": "util_2179_workflow_2179_automate_httprequest_manual.json",
      "workflow_name": "util_2179_workflow_2179_automate_httprequest_manual",
      "suggested_filename": "util_2179_workflow_2179_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "2179",
      "key_integrations": [
        "stickyNote",
        "manualTrigger",
        "googleDrive",
        "filter",
        "httpRequest",
        "wait",
        "if",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 14,
      "complexity": "Medium",
      "total_nodes": 14,
      "node_types": {
        "n8n-nodes-base.stickyNote": 2,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleDrive": 3,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.wait": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 2179 processes using stickyNote, manualTrigger, googleDrive",
      "analysis_timestamp": "2025-06-01T16:06:49.139942"
    },
    {
      "original_filename": "ai_2612_workflow_2612_automate_n8nnodeslangchainchat_postgres.json",
      "workflow_name": "ai_2612_workflow_2612_automate_n8nnodeslangchainchat_postgres",
      "suggested_filename": "ai_2612_workflow_2612_automate_n8nnodeslangchainchat_postgres.json",
      "category": "AI",
      "business_function": "2612",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "postgresTool",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.stickyNote": 5,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.postgresTool": 3,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates 2612 processes using stickyNote, @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.140197"
    },
    {
      "original_filename": "ai_2679_workflow_2679_automate_n8nnodeslangchainchainllm_youtube_webhook.json",
      "workflow_name": "ai_2679_workflow_2679_automate_n8nnodeslangchainchainllm_youtube_webhook",
      "suggested_filename": "ai_2679_workflow_2679_automate_n8nnodeslangchainchainllm_youtube_webhook.json",
      "category": "AI",
      "business_function": "2679",
      "key_integrations": [
        "webhook",
        "youtube-transcription.youtubeTranscripter",
        "splitOut",
        "respondToWebhook",
        "telegram",
        "set",
        "code",
        "youTube",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "webhook",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-youtube-transcription.youtubeTranscripter": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.telegram": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.youTube": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.summarize": 1
      },
      "business_value": "Automates 2679 processes using webhook, youtube-transcription.youtubeTranscripter, splitOut",
      "analysis_timestamp": "2025-06-01T16:06:49.140443"
    },
    {
      "original_filename": "util_backup_backup_splitinbatches_httprequest_cron_1.json",
      "workflow_name": "Backup n8n Workflows to Bitbucket",
      "suggested_filename": "util_backup_backup_splitinbatches_httprequest_cron_1.json",
      "category": "UTIL",
      "business_function": "backup",
      "key_integrations": [
        "code",
        "scheduleTrigger",
        "n8n",
        "splitInBatches",
        "httpRequest",
        "if",
        "wait",
        "set"
      ],
      "trigger_type": "cron",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates backup processes using code, scheduleTrigger, n8n",
      "analysis_timestamp": "2025-06-01T16:06:49.140686"
    },
    {
      "original_filename": "ai_3719_workflow_3719_automate_gmail_webhook_webhook.json",
      "workflow_name": "ai_3719_workflow_3719_automate_gmail_webhook_webhook",
      "suggested_filename": "ai_3719_workflow_3719_automate_gmail_webhook_webhook.json",
      "category": "AI",
      "business_function": "3719",
      "key_integrations": [
        "@n8n/langchain.openAi",
        "set",
        "code",
        "if",
        "merge",
        "googleDrive",
        "webhook",
        "respondToWebhook",
        "gmail",
        "readPDF"
      ],
      "trigger_type": "webhook",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.if": 4,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.gmail": 2,
        "n8n-nodes-base.readPDF": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 3719 processes using @n8n/langchain.openAi, set, code",
      "analysis_timestamp": "2025-06-01T16:06:49.140997"
    },
    {
      "original_filename": "util_961_workflow_961_automate_emelia.json",
      "workflow_name": "util_961_workflow_961_automate_emelia",
      "suggested_filename": "util_961_workflow_961_automate_emelia.json",
      "category": "UTIL",
      "business_function": "961",
      "key_integrations": [
        "emelia"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.emelia": 3
      },
      "business_value": "Automates 961 processes using emelia",
      "analysis_timestamp": "2025-06-01T16:06:49.141149"
    },
    {
      "original_filename": "ai_chat_automate_n8nnodeslangchainchat_n8nnodeslangchainlmchatopenai.json",
      "workflow_name": "Chat with Google Sheet",
      "suggested_filename": "ai_chat_automate_n8nnodeslangchainchat_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "chat",
      "key_integrations": [
        "executeWorkflowTrigger",
        "stickyNote",
        "googleSheets",
        "set",
        "code",
        "@n8n/langchain.toolWorkflow",
        "filter",
        "switch",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 19,
      "complexity": "High",
      "total_nodes": 19,
      "node_types": {
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.code": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 3,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.switch": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates chat processes using executeWorkflowTrigger, stickyNote, googleSheets",
      "analysis_timestamp": "2025-06-01T16:06:49.141420"
    },
    {
      "original_filename": "util_3870_workflow_3870_automate_manual.json",
      "workflow_name": "util_3870_workflow_3870_automate_manual",
      "suggested_filename": "util_3870_workflow_3870_automate_manual.json",
      "category": "UTIL",
      "business_function": "3870",
      "key_integrations": [
        "@custom-js/pdf-toolkit.html2Pdf",
        "manualTrigger",
        "@custom-js/pdf-toolkit.PdfToPng",
        "stickyNote",
        "code"
      ],
      "trigger_type": "manual",
      "complexity_score": 9,
      "complexity": "Medium",
      "total_nodes": 9,
      "node_types": {
        "@custom-js/n8n-nodes-pdf-toolkit.html2Pdf": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "@custom-js/n8n-nodes-pdf-toolkit.PdfToPng": 2,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates 3870 processes using @custom-js/pdf-toolkit.html2Pdf, manualTrigger, @custom-js/pdf-toolkit.PdfToPng",
      "analysis_timestamp": "2025-06-01T16:06:49.141652"
    },
    {
      "original_filename": "data_2038_workflow_2038_automate_webhook_notion_webhook.json",
      "workflow_name": "data_2038_workflow_2038_automate_webhook_notion_webhook",
      "suggested_filename": "data_2038_workflow_2038_automate_webhook_notion_webhook.json",
      "category": "DATA",
      "business_function": "2038",
      "key_integrations": [
        "webhook",
        "notion",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.stickyNote": 2
      },
      "business_value": "Automates 2038 processes using webhook, notion, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.141745"
    },
    {
      "original_filename": "util_enhance_automate_httprequest_webhook_webhook_2.json",
      "workflow_name": "util_enhance_automate_httprequest_webhook_webhook_2",
      "suggested_filename": "util_enhance_automate_httprequest_webhook_webhook_2.json",
      "category": "UTIL",
      "business_function": "enhance",
      "key_integrations": [
        "set",
        "executeWorkflow",
        "httpRequest",
        "switch",
        "stickyNote",
        "respondToWebhook",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.executeWorkflow": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.switch": 2,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.respondToWebhook": 3,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates enhance processes using set, executeWorkflow, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.142122"
    },
    {
      "original_filename": "ai_build_ai_process_gmail_httprequest_webhook.json",
      "workflow_name": "Build a Phone Agent to qualify outbound leads and inbound calls with RetellAI -vide",
      "suggested_filename": "ai_build_ai_process_gmail_httprequest_webhook.json",
      "category": "AI",
      "business_function": "build",
      "key_integrations": [
        "stickyNote",
        "googleSheetsTrigger",
        "twilio",
        "wait",
        "httpRequest",
        "webhook",
        "googleSheets",
        "respondToWebhook",
        "filter",
        "if"
      ],
      "trigger_type": "webhook",
      "complexity_score": 18,
      "complexity": "High",
      "total_nodes": 18,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.googleSheetsTrigger": 1,
        "n8n-nodes-base.twilio": 1,
        "n8n-nodes-base.wait": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.webhook": 2,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.gmail": 2,
        "@n8n/n8n-nodes-langchain.openAi": 1
      },
      "business_value": "Automates build processes using stickyNote, googleSheetsTrigger, twilio",
      "analysis_timestamp": "2025-06-01T16:06:49.142439"
    },
    {
      "original_filename": "ai_gmail_ai_process_splitinbatches_postgres.json",
      "workflow_name": "Gmail to Vector Embeddings with PGVector and Ollama",
      "suggested_filename": "ai_gmail_ai_process_splitinbatches_postgres.json",
      "category": "AI",
      "business_function": "gmail",
      "key_integrations": [
        "@n8n/langchain.embeddingsOllama",
        "@n8n/langchain.documentDefaultDataLoader",
        "@n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
        "gmailTrigger",
        "splitInBatches",
        "splitOut",
        "if",
        "manualTrigger",
        "stickyNote",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "@n8n/n8n-nodes-langchain.embeddingsOllama": 1,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter": 1,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.postgres": 2,
        "@n8n/n8n-nodes-langchain.vectorStorePGVector": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates gmail processes using @n8n/langchain.embeddingsOllama, @n8n/langchain.documentDefaultDataLoader, @n8n/langchain.textSplitterRecursiveCharacterTextSplitter",
      "analysis_timestamp": "2025-06-01T16:06:49.142784"
    },
    {
      "original_filename": "data_2014_workflow_2014_automate_httprequest_manual.json",
      "workflow_name": "data_2014_workflow_2014_automate_httprequest_manual",
      "suggested_filename": "data_2014_workflow_2014_automate_httprequest_manual.json",
      "category": "DATA",
      "business_function": "2014",
      "key_integrations": [
        "manualTrigger",
        "stickyNote",
        "code",
        "googleSheets",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 2014 processes using manualTrigger, stickyNote, code",
      "analysis_timestamp": "2025-06-01T16:06:49.143031"
    },
    {
      "original_filename": "util_515_workflow_515_automate_writebinaryfile_manual.json",
      "workflow_name": "util_515_workflow_515_automate_writebinaryfile_manual",
      "suggested_filename": "util_515_workflow_515_automate_writebinaryfile_manual.json",
      "category": "UTIL",
      "business_function": "515",
      "key_integrations": [
        "manualTrigger",
        "googleDrive",
        "writeBinaryFile"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleDrive": 1,
        "n8n-nodes-base.writeBinaryFile": 1
      },
      "business_value": "Automates 515 processes using manualTrigger, googleDrive, writeBinaryFile",
      "analysis_timestamp": "2025-06-01T16:06:49.143127"
    },
    {
      "original_filename": "ai_researcher_ai_process_splitinbatches_n8nnodeslangchainoutputparserstructured.json",
      "workflow_name": "ai_researcher_ai_process_splitinbatches_n8nnodeslangchainoutputparserstructured",
      "suggested_filename": "ai_researcher_ai_process_splitinbatches_n8nnodeslangchainoutputparserstructured.json",
      "category": "AI",
      "business_function": "researcher",
      "key_integrations": [
        "manualTrigger",
        "set",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolWorkflow",
        "@n8n/langchain.toolSerpApi",
        "@n8n/langchain.outputParserStructured",
        "splitInBatches",
        "googleSheets",
        "merge",
        "stickyNote"
      ],
      "trigger_type": "chat",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.set": 2,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 2,
        "@n8n/n8n-nodes-langchain.toolSerpApi": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.stickyNote": 8,
        "n8n-nodes-base.scheduleTrigger": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates researcher processes using manualTrigger, set, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.143450"
    },
    {
      "original_filename": "comm_monitor_monitor_slack_airtop.json",
      "workflow_name": "Monitor Competitor Pricing",
      "suggested_filename": "comm_monitor_monitor_slack_airtop.json",
      "category": "COMM",
      "business_function": "monitor",
      "key_integrations": [
        "manualTrigger",
        "googleSheets",
        "airtop",
        "code",
        "merge",
        "slack",
        "filter"
      ],
      "trigger_type": "manual",
      "complexity_score": 8,
      "complexity": "Medium",
      "total_nodes": 8,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.googleSheets": 2,
        "n8n-nodes-base.airtop": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.filter": 1
      },
      "business_value": "Automates monitor processes using manualTrigger, googleSheets, airtop",
      "analysis_timestamp": "2025-06-01T16:06:49.143764"
    },
    {
      "original_filename": "util_434_workflow_434_automate_httprequest_manual.json",
      "workflow_name": "util_434_workflow_434_automate_httprequest_manual",
      "suggested_filename": "util_434_workflow_434_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "434",
      "key_integrations": [
        "manualTrigger",
        "httpRequest",
        "htmlExtract"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.htmlExtract": 2
      },
      "business_value": "Automates 434 processes using manualTrigger, httpRequest, htmlExtract",
      "analysis_timestamp": "2025-06-01T16:06:49.143869"
    },
    {
      "original_filename": "analytics_umami_automate_httprequest_schedule_cron_2.json",
      "workflow_name": "Umami analytics template",
      "suggested_filename": "analytics_umami_automate_httprequest_schedule_cron_2.json",
      "category": "ANALYTICS",
      "business_function": "umami",
      "key_integrations": [
        "manualTrigger",
        "scheduleTrigger",
        "httpRequest",
        "stickyNote",
        "code",
        "baserow"
      ],
      "trigger_type": "cron",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.httpRequest": 5,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.baserow": 1
      },
      "business_value": "Automates umami processes using manualTrigger, scheduleTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.144177"
    },
    {
      "original_filename": "comm_613_workflow_613_automate_webhook_mattermost_webhook.json",
      "workflow_name": "comm_613_workflow_613_automate_webhook_mattermost_webhook",
      "suggested_filename": "comm_613_workflow_613_automate_webhook_mattermost_webhook.json",
      "category": "COMM",
      "business_function": "613",
      "key_integrations": [
        "webhook",
        "set",
        "mattermost"
      ],
      "trigger_type": "webhook",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.mattermost": 1
      },
      "business_value": "Automates 613 processes using webhook, set, mattermost",
      "analysis_timestamp": "2025-06-01T16:06:49.144375"
    },
    {
      "original_filename": "util_dynamic_automate_respondtowebhook_nasa.json",
      "workflow_name": "Dynamic credentials using expressions",
      "suggested_filename": "util_dynamic_automate_respondtowebhook_nasa.json",
      "category": "UTIL",
      "business_function": "dynamic",
      "key_integrations": [
        "formTrigger",
        "nasa",
        "respondToWebhook",
        "stickyNote"
      ],
      "trigger_type": "webhook",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.nasa": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates dynamic processes using formTrigger, nasa, respondToWebhook",
      "analysis_timestamp": "2025-06-01T16:06:49.144582"
    },
    {
      "original_filename": "ops_backup_backup_splitinbatches_httprequest_cron.json",
      "workflow_name": "Backup Squarespace code Injections to Github",
      "suggested_filename": "ops_backup_backup_splitinbatches_httprequest_cron.json",
      "category": "OPS",
      "business_function": "backup",
      "key_integrations": [
        "manualTrigger",
        "splitInBatches",
        "scheduleTrigger",
        "stickyNote",
        "httpRequest",
        "if",
        "code",
        "set",
        "github",
        "merge"
      ],
      "trigger_type": "cron",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.set": 3,
        "n8n-nodes-base.github": 2,
        "n8n-nodes-base.merge": 1
      },
      "business_value": "Automates backup processes using manualTrigger, splitInBatches, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.144896"
    },
    {
      "original_filename": "comm_359_workflow_359_automate_error_twilio.json",
      "workflow_name": "comm_359_workflow_359_automate_error_twilio",
      "suggested_filename": "comm_359_workflow_359_automate_error_twilio.json",
      "category": "COMM",
      "business_function": "359",
      "key_integrations": [
        "twilio",
        "mattermost",
        "errorTrigger"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.twilio": 1,
        "n8n-nodes-base.mattermost": 1,
        "n8n-nodes-base.errorTrigger": 1
      },
      "business_value": "Automates 359 processes using twilio, mattermost, errorTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.145019"
    },
    {
      "original_filename": "ai_email_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchaintextsplittertoken_2.json",
      "workflow_name": "Email AI Auto-responder. Summerize and send email",
      "suggested_filename": "ai_email_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchaintextsplittertoken_2.json",
      "category": "AI",
      "business_function": "email",
      "key_integrations": [
        "emailReadImap",
        "markdown",
        "@n8n/langchain.lmChatOpenAi",
        "emailSend",
        "@n8n/langchain.vectorStoreQdrant",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.textClassifier",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.agent",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "email",
      "complexity_score": 26,
      "complexity": "High",
      "total_nodes": 26,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.markdown": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 4,
        "n8n-nodes-base.emailSend": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 2,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 2,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.googleDrive": 2,
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader": 1,
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter": 1,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.noOp": 1
      },
      "business_value": "Automates email processes using emailReadImap, markdown, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.145425"
    },
    {
      "original_filename": "comm_354_workflow_354_automate_pagerduty_webhook_webhook.json",
      "workflow_name": "comm_354_workflow_354_automate_pagerduty_webhook_webhook",
      "suggested_filename": "comm_354_workflow_354_automate_pagerduty_webhook_webhook.json",
      "category": "COMM",
      "business_function": "354",
      "key_integrations": [
        "webhook",
        "pagerDuty",
        "mattermost"
      ],
      "trigger_type": "webhook",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.pagerDuty": 1,
        "n8n-nodes-base.mattermost": 1
      },
      "business_value": "Automates 354 processes using webhook, pagerDuty, mattermost",
      "analysis_timestamp": "2025-06-01T16:06:49.145590"
    },
    {
      "original_filename": "comm_1931_workflow_1931_automate_slack_itemlists_cron.json",
      "workflow_name": "comm_1931_workflow_1931_automate_slack_itemlists_cron",
      "suggested_filename": "comm_1931_workflow_1931_automate_slack_itemlists_cron.json",
      "category": "COMM",
      "business_function": "1931",
      "key_integrations": [
        "scheduleTrigger",
        "notion",
        "slack",
        "itemLists",
        "stickyNote",
        "filter",
        "code"
      ],
      "trigger_type": "cron",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.notion": 1,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.itemLists": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.code": 1
      },
      "business_value": "Automates 1931 processes using scheduleTrigger, notion, slack",
      "analysis_timestamp": "2025-06-01T16:06:49.145935"
    },
    {
      "original_filename": "util_extract_extract_httprequest_rssfeedread.json",
      "workflow_name": "Extract And Decode Google News RSS URLs to Clean Article Links",
      "suggested_filename": "util_extract_extract_httprequest_rssfeedread.json",
      "category": "UTIL",
      "business_function": "extract",
      "key_integrations": [
        "manualTrigger",
        "limit",
        "rssFeedRead",
        "set",
        "httpRequest",
        "code",
        "stickyNote",
        "html",
        "aggregate"
      ],
      "trigger_type": "manual",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.rssFeedRead": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.html": 1,
        "n8n-nodes-base.aggregate": 1
      },
      "business_value": "Automates extract processes using manualTrigger, limit, rssFeedRead",
      "analysis_timestamp": "2025-06-01T16:06:49.146267"
    },
    {
      "original_filename": "ai_agent_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "workflow_name": "SQL agent with memory",
      "suggested_filename": "ai_agent_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_1.json",
      "category": "AI",
      "business_function": "agent",
      "key_integrations": [
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.lmChatOpenAi",
        "manualTrigger",
        "httpRequest",
        "compression",
        "readWriteFile",
        "stickyNote",
        "set",
        "@n8n/langchain.agent",
        "@n8n/langchain.chatTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 13,
      "complexity": "Medium",
      "total_nodes": 13,
      "node_types": {
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.compression": 1,
        "n8n-nodes-base.readWriteFile": 2,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.chatTrigger": 1
      },
      "business_value": "Automates agent processes using @n8n/langchain.memoryBufferWindow, @n8n/langchain.lmChatOpenAi, manualTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.146534"
    },
    {
      "original_filename": "ai_2198_workflow_2198_automate_splitinbatches_gmail_cron.json",
      "workflow_name": "ai_2198_workflow_2198_automate_splitinbatches_gmail_cron",
      "suggested_filename": "ai_2198_workflow_2198_automate_splitinbatches_gmail_cron.json",
      "category": "AI",
      "business_function": "2198",
      "key_integrations": [
        "stickyNote",
        "gmail",
        "httpRequest",
        "code",
        "set",
        "markdown",
        "@n8n/langchain.openAi",
        "limit",
        "splitInBatches",
        "scheduleTrigger"
      ],
      "trigger_type": "cron",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.stickyNote": 10,
        "n8n-nodes-base.gmail": 4,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.set": 2,
        "n8n-nodes-base.markdown": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.limit": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.scheduleTrigger": 1
      },
      "business_value": "Automates 2198 processes using stickyNote, gmail, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.146864"
    },
    {
      "original_filename": "comm_send_create_woocommerce_mattermost.json",
      "workflow_name": "Send a message on Mattermost when an order is created in WooCommerce",
      "suggested_filename": "comm_send_create_woocommerce_mattermost.json",
      "category": "COMM",
      "business_function": "send",
      "key_integrations": [
        "wooCommerceTrigger",
        "mattermost"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.wooCommerceTrigger": 1,
        "n8n-nodes-base.mattermost": 1
      },
      "business_value": "Automates send processes using wooCommerceTrigger, mattermost",
      "analysis_timestamp": "2025-06-01T16:06:49.146987"
    },
    {
      "original_filename": "ai_email_ai_process_emailsend_n8nnodeslangchainchainsummarization_2.json",
      "workflow_name": "AI Email processing autoresponder with approval (Yes/No)",
      "suggested_filename": "ai_email_ai_process_emailsend_n8nnodeslangchainchainsummarization_2.json",
      "category": "AI",
      "business_function": "email",
      "key_integrations": [
        "emailReadImap",
        "markdown",
        "@n8n/langchain.lmChatOpenAi",
        "emailSend",
        "@n8n/langchain.vectorStoreQdrant",
        "@n8n/langchain.embeddingsOpenAi",
        "@n8n/langchain.chainSummarization",
        "@n8n/langchain.agent",
        "set",
        "if"
      ],
      "trigger_type": "email",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.emailReadImap": 1,
        "n8n-nodes-base.markdown": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.emailSend": 1,
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant": 1,
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.gmail": 1
      },
      "business_value": "Automates email processes using emailReadImap, markdown, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.147272"
    },
    {
      "original_filename": "ai_write_ai_process_wordpress_respondtowebhook.json",
      "workflow_name": "Write a WordPress post with AI (starting from a few keywords)",
      "suggested_filename": "ai_write_ai_process_wordpress_respondtowebhook.json",
      "category": "AI",
      "business_function": "write",
      "key_integrations": [
        "formTrigger",
        "stickyNote",
        "set",
        "if",
        "splitOut",
        "merge",
        "code",
        "wordpress",
        "httpRequest",
        "respondToWebhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 37,
      "complexity": "High",
      "total_nodes": 37,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.stickyNote": 22,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.splitOut": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.wordpress": 1,
        "n8n-nodes-base.httpRequest": 2,
        "n8n-nodes-base.respondToWebhook": 2,
        "@n8n/n8n-nodes-langchain.openAi": 3,
        "@n8n/n8n-nodes-langchain.toolWikipedia": 1
      },
      "business_value": "Automates write processes using formTrigger, stickyNote, set",
      "analysis_timestamp": "2025-06-01T16:06:49.147704"
    },
    {
      "original_filename": "util_2836_workflow_2836_automate_httprequest_manual.json",
      "workflow_name": "util_2836_workflow_2836_automate_httprequest_manual",
      "suggested_filename": "util_2836_workflow_2836_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "2836",
      "key_integrations": [
        "set",
        "manualTrigger",
        "httpRequest"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.httpRequest": 1
      },
      "business_value": "Automates 2836 processes using set, manualTrigger, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.147865"
    },
    {
      "original_filename": "ai_analyze_analyze_reddit_gmail.json",
      "workflow_name": "Analyze Reddit Posts with AI to Identify Business Opportunities",
      "suggested_filename": "ai_analyze_analyze_reddit_gmail.json",
      "category": "AI",
      "business_function": "analyze",
      "key_integrations": [
        "manualTrigger",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.sentimentAnalysis",
        "gmail",
        "@n8n/langchain.openAi",
        "@n8n/langchain.chainSummarization",
        "merge",
        "googleSheets",
        "if",
        "set"
      ],
      "trigger_type": "chat",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 3,
        "@n8n/n8n-nodes-langchain.sentimentAnalysis": 1,
        "n8n-nodes-base.gmail": 3,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "@n8n/n8n-nodes-langchain.chainSummarization": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.reddit": 1,
        "n8n-nodes-base.stickyNote": 4
      },
      "business_value": "Automates analyze processes using manualTrigger, @n8n/langchain.lmChatOpenAi, @n8n/langchain.sentimentAnalysis",
      "analysis_timestamp": "2025-06-01T16:06:49.148432"
    },
    {
      "original_filename": "ai_blog_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainoutputpars.json",
      "workflow_name": "SEO Blog Generator with GPT-4o, Perplexity, and Telegram Integration",
      "suggested_filename": "ai_blog_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainoutputpars.json",
      "category": "AI",
      "business_function": "blog",
      "key_integrations": [
        "stickyNote",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.outputParserStructured",
        "@n8n/langchain.agent",
        "merge",
        "formTrigger",
        "aggregate",
        "@n8n/langchain.toolWorkflow",
        "telegramTrigger",
        "telegram"
      ],
      "trigger_type": "chat",
      "complexity_score": 22,
      "complexity": "High",
      "total_nodes": 22,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 4,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 2,
        "@n8n/n8n-nodes-langchain.agent": 4,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.toolWorkflow": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.telegram": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 2
      },
      "business_value": "Automates blog processes using stickyNote, @n8n/langchain.lmChatOpenAi, @n8n/langchain.outputParserStructured",
      "analysis_timestamp": "2025-06-01T16:06:49.148839"
    },
    {
      "original_filename": "util_today_read_manual.json",
      "workflow_name": "Get today's date and day using the Function node",
      "suggested_filename": "util_today_read_manual.json",
      "category": "UTIL",
      "business_function": "today",
      "key_integrations": [
        "manualTrigger",
        "function"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.function": 1
      },
      "business_value": "Automates today processes using manualTrigger, function",
      "analysis_timestamp": "2025-06-01T16:06:49.148956"
    },
    {
      "original_filename": "comm_1364_workflow_1364_automate_webhook_manual_cron.json",
      "workflow_name": "comm_1364_workflow_1364_automate_webhook_manual_cron",
      "suggested_filename": "comm_1364_workflow_1364_automate_webhook_manual_cron.json",
      "category": "COMM",
      "business_function": "1364",
      "key_integrations": [
        "manualTrigger",
        "cron",
        "telegram",
        "webhook",
        "mySql"
      ],
      "trigger_type": "cron",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.cron": 1,
        "n8n-nodes-base.telegram": 2,
        "n8n-nodes-base.webhook": 1,
        "n8n-nodes-base.mySql": 2
      },
      "business_value": "Automates 1364 processes using manualTrigger, cron, telegram",
      "analysis_timestamp": "2025-06-01T16:06:49.149184"
    },
    {
      "original_filename": "ai_colombian_process_splitinbatches_googlesheets.json",
      "workflow_name": "Colombian Invoices Processing",
      "suggested_filename": "ai_colombian_process_splitinbatches_googlesheets.json",
      "category": "AI",
      "business_function": "colombian",
      "key_integrations": [
        "splitInBatches",
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.toolCalculator",
        "@n8n/langchain.outputParserStructured",
        "gmailTrigger",
        "code",
        "filter",
        "compression",
        "switch",
        "extractFromFile"
      ],
      "trigger_type": "chat",
      "complexity_score": 23,
      "complexity": "High",
      "total_nodes": 23,
      "node_types": {
        "n8n-nodes-base.splitInBatches": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.toolCalculator": 1,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.gmailTrigger": 1,
        "n8n-nodes-base.code": 3,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.compression": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.extractFromFile": 2,
        "n8n-nodes-base.xml": 1,
        "n8n-nodes-base.merge": 2,
        "n8n-nodes-base.aggregate": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "n8n-nodes-base.googleDrive": 2,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates colombian processes using splitInBatches, @n8n/langchain.lmChatOpenAi, @n8n/langchain.toolCalculator",
      "analysis_timestamp": "2025-06-01T16:06:49.149571"
    },
    {
      "original_filename": "ai_mailchimp_ai_process_mailchimp_manual.json",
      "workflow_name": "Mailchimp",
      "suggested_filename": "ai_mailchimp_ai_process_mailchimp_manual.json",
      "category": "AI",
      "business_function": "mailchimp",
      "key_integrations": [
        "manualTrigger",
        "mailchimp"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.mailchimp": 1
      },
      "business_value": "Automates mailchimp processes using manualTrigger, mailchimp",
      "analysis_timestamp": "2025-06-01T16:06:49.149688"
    },
    {
      "original_filename": "util_996_workflow_996_automate_splitinbatches_manual.json",
      "workflow_name": "util_996_workflow_996_automate_splitinbatches_manual",
      "suggested_filename": "util_996_workflow_996_automate_splitinbatches_manual.json",
      "category": "UTIL",
      "business_function": "996",
      "key_integrations": [
        "manualTrigger",
        "function",
        "splitInBatches",
        "if",
        "set"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.splitInBatches": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.set": 1
      },
      "business_value": "Automates 996 processes using manualTrigger, function, splitInBatches",
      "analysis_timestamp": "2025-06-01T16:06:49.149794"
    },
    {
      "original_filename": "ai_neurochainai_ai_process_httprequest_telegram_1.json",
      "workflow_name": "NeurochainAI Basic API Integration",
      "suggested_filename": "ai_neurochainai_ai_process_httprequest_telegram_1.json",
      "category": "AI",
      "business_function": "neurochainai",
      "key_integrations": [
        "telegramTrigger",
        "code",
        "httpRequest",
        "telegram",
        "stickyNote",
        "switch"
      ],
      "trigger_type": "manual",
      "complexity_score": 29,
      "complexity": "High",
      "total_nodes": 29,
      "node_types": {
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.code": 2,
        "n8n-nodes-base.httpRequest": 3,
        "n8n-nodes-base.telegram": 11,
        "n8n-nodes-base.stickyNote": 9,
        "n8n-nodes-base.switch": 3
      },
      "business_value": "Automates neurochainai processes using telegramTrigger, code, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.150203"
    },
    {
      "original_filename": "ai_3546_workflow_3546_automate_n8nnodeslangchainoutputparserstructured_gmail.json",
      "workflow_name": "ai_3546_workflow_3546_automate_n8nnodeslangchainoutputparserstructured_gmail",
      "suggested_filename": "ai_3546_workflow_3546_automate_n8nnodeslangchainoutputparserstructured_gmail.json",
      "category": "AI",
      "business_function": "3546",
      "key_integrations": [
        "@n8n/langchain.outputParserStructured",
        "stickyNote",
        "extractFromFile",
        "@n8n/langchain.agent",
        "@n8n/langchain.lmChatOpenAi",
        "googleSheets",
        "gmailTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "@n8n/n8n-nodes-langchain.outputParserStructured": 1,
        "n8n-nodes-base.stickyNote": 1,
        "n8n-nodes-base.extractFromFile": 1,
        "@n8n/n8n-nodes-langchain.agent": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.gmailTrigger": 1
      },
      "business_value": "Automates 3546 processes using @n8n/langchain.outputParserStructured, stickyNote, extractFromFile",
      "analysis_timestamp": "2025-06-01T16:06:49.150520"
    },
    {
      "original_filename": "util_tasks_read_flow_manual.json",
      "workflow_name": "Get all the tasks in Flow",
      "suggested_filename": "util_tasks_read_flow_manual.json",
      "category": "UTIL",
      "business_function": "tasks",
      "key_integrations": [
        "manualTrigger",
        "flow"
      ],
      "trigger_type": "manual",
      "complexity_score": 2,
      "complexity": "Low",
      "total_nodes": 2,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.flow": 1
      },
      "business_value": "Automates tasks processes using manualTrigger, flow",
      "analysis_timestamp": "2025-06-01T16:06:49.150779"
    },
    {
      "original_filename": "util_1021_workflow_1021_automate_copper_manual.json",
      "workflow_name": "util_1021_workflow_1021_automate_copper_manual",
      "suggested_filename": "util_1021_workflow_1021_automate_copper_manual.json",
      "category": "UTIL",
      "business_function": "1021",
      "key_integrations": [
        "manualTrigger",
        "copper"
      ],
      "trigger_type": "manual",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.copper": 3
      },
      "business_value": "Automates 1021 processes using manualTrigger, copper",
      "analysis_timestamp": "2025-06-01T16:06:49.151035"
    },
    {
      "original_filename": "ai_chat_automate_n8nnodeslangchainchat_n8nnodeslangchainchainllm_1.json",
      "workflow_name": "Chat with local LLMs using n8n and Ollama",
      "suggested_filename": "ai_chat_automate_n8nnodeslangchainchat_n8nnodeslangchainchainllm_1.json",
      "category": "AI",
      "business_function": "chat",
      "key_integrations": [
        "@n8n/langchain.chatTrigger",
        "@n8n/langchain.lmChatOllama",
        "stickyNote",
        "@n8n/langchain.chainLlm"
      ],
      "trigger_type": "chat",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "@n8n/n8n-nodes-langchain.chatTrigger": 1,
        "@n8n/n8n-nodes-langchain.lmChatOllama": 1,
        "n8n-nodes-base.stickyNote": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1
      },
      "business_value": "Automates chat processes using @n8n/langchain.chatTrigger, @n8n/langchain.lmChatOllama, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.151294"
    },
    {
      "original_filename": "ai_instatest_automate_n8nnodeslangchainmemorybufferwindow_webhook_webhook_1.json",
      "workflow_name": "InstaTest",
      "suggested_filename": "ai_instatest_automate_n8nnodeslangchainmemorybufferwindow_webhook_webhook_1.json",
      "category": "AI",
      "business_function": "instatest",
      "key_integrations": [
        "set",
        "@n8n/langchain.memoryBufferWindow",
        "@n8n/langchain.lmChatOpenAi",
        "respondToWebhook",
        "stickyNote",
        "webhook",
        "@n8n/langchain.agent"
      ],
      "trigger_type": "chat",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.memoryBufferWindow": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.agent": 1
      },
      "business_value": "Automates instatest processes using set, @n8n/langchain.memoryBufferWindow, @n8n/langchain.lmChatOpenAi",
      "analysis_timestamp": "2025-06-01T16:06:49.151561"
    },
    {
      "original_filename": "ops_1274_workflow_1274_automate_github_github.json",
      "workflow_name": "ops_1274_workflow_1274_automate_github_github",
      "suggested_filename": "ops_1274_workflow_1274_automate_github_github.json",
      "category": "OPS",
      "business_function": "1274",
      "key_integrations": [
        "githubTrigger",
        "switch",
        "if",
        "github"
      ],
      "trigger_type": "manual",
      "complexity_score": 11,
      "complexity": "Medium",
      "total_nodes": 11,
      "node_types": {
        "n8n-nodes-base.githubTrigger": 2,
        "n8n-nodes-base.switch": 1,
        "n8n-nodes-base.if": 3,
        "n8n-nodes-base.noOp": 2,
        "n8n-nodes-base.github": 3
      },
      "business_value": "Automates 1274 processes using githubTrigger, switch, if",
      "analysis_timestamp": "2025-06-01T16:06:49.151847"
    },
    {
      "original_filename": "ai_2580_workflow_2580_automate_n8nnodeslangchainchainllm_gmail.json",
      "workflow_name": "ai_2580_workflow_2580_automate_n8nnodeslangchainchainllm_gmail",
      "suggested_filename": "ai_2580_workflow_2580_automate_n8nnodeslangchainchainllm_gmail.json",
      "category": "AI",
      "business_function": "2580",
      "key_integrations": [
        "formTrigger",
        "form",
        "set",
        "@n8n/langchain.lmChatOpenAi",
        "if",
        "gmail",
        "googleCalendar",
        "stickyNote",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "trigger_type": "chat",
      "complexity_score": 25,
      "complexity": "High",
      "total_nodes": 25,
      "node_types": {
        "n8n-nodes-base.formTrigger": 1,
        "n8n-nodes-base.form": 5,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.gmail": 3,
        "n8n-nodes-base.googleCalendar": 1,
        "n8n-nodes-base.stickyNote": 6,
        "n8n-nodes-base.executeWorkflow": 1,
        "n8n-nodes-base.executeWorkflowTrigger": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1
      },
      "business_value": "Automates 2580 processes using formTrigger, form, set",
      "analysis_timestamp": "2025-06-01T16:06:49.152256"
    },
    {
      "original_filename": "ai_intelligent_automate_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchai_2.json",
      "workflow_name": "Intelligent Web Query and Semantic Re-Ranking Flow",
      "suggested_filename": "ai_intelligent_automate_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchai_2.json",
      "category": "AI",
      "business_function": "intelligent",
      "key_integrations": [
        "stickyNote",
        "dateTime",
        "webhook",
        "@n8n/langchain.outputParserAutofixing",
        "@n8n/langchain.outputParserStructured",
        "code",
        "respondToWebhook",
        "@n8n/langchain.chainLlm",
        "httpRequest",
        "@n8n/langchain.lmChatAnthropic"
      ],
      "trigger_type": "webhook",
      "complexity_score": 20,
      "complexity": "High",
      "total_nodes": 20,
      "node_types": {
        "n8n-nodes-base.stickyNote": 4,
        "n8n-nodes-base.dateTime": 1,
        "n8n-nodes-base.webhook": 1,
        "@n8n/n8n-nodes-langchain.outputParserAutofixing": 2,
        "@n8n/n8n-nodes-langchain.outputParserStructured": 2,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.respondToWebhook": 1,
        "@n8n/n8n-nodes-langchain.chainLlm": 2,
        "n8n-nodes-base.httpRequest": 2,
        "@n8n/n8n-nodes-langchain.lmChatAnthropic": 1,
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 1,
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini": 2
      },
      "business_value": "Automates intelligent processes using stickyNote, dateTime, webhook",
      "analysis_timestamp": "2025-06-01T16:06:49.152691"
    },
    {
      "original_filename": "util_import_transfer_spreadsheetfile_httprequest.json",
      "workflow_name": "Import CSV from URL to Excel",
      "suggested_filename": "util_import_transfer_spreadsheetfile_httprequest.json",
      "category": "UTIL",
      "business_function": "import",
      "key_integrations": [
        "manualTrigger",
        "spreadsheetFile",
        "httpRequest",
        "stickyNote"
      ],
      "trigger_type": "manual",
      "complexity_score": 5,
      "complexity": "Low",
      "total_nodes": 5,
      "node_types": {
        "n8n-nodes-base.manualTrigger": 1,
        "n8n-nodes-base.spreadsheetFile": 2,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.stickyNote": 1
      },
      "business_value": "Automates import processes using manualTrigger, spreadsheetFile, httpRequest",
      "analysis_timestamp": "2025-06-01T16:06:49.153021"
    },
    {
      "original_filename": "biz_1775_workflow_1775_automate_pipedrive_pipedrive.json",
      "workflow_name": "biz_1775_workflow_1775_automate_pipedrive_pipedrive",
      "suggested_filename": "biz_1775_workflow_1775_automate_pipedrive_pipedrive.json",
      "category": "BIZ",
      "business_function": "1775",
      "key_integrations": [
        "if",
        "pipedriveTrigger",
        "pipedrive",
        "httpRequest",
        "merge",
        "stripe"
      ],
      "trigger_type": "manual",
      "complexity_score": 7,
      "complexity": "Medium",
      "total_nodes": 7,
      "node_types": {
        "n8n-nodes-base.if": 2,
        "n8n-nodes-base.pipedriveTrigger": 1,
        "n8n-nodes-base.pipedrive": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.stripe": 1
      },
      "business_value": "Automates 1775 processes using if, pipedriveTrigger, pipedrive",
      "analysis_timestamp": "2025-06-01T16:06:49.153260"
    },
    {
      "original_filename": "util_2075_workflow_2075_automate_movebinarydata_datetime_cron.json",
      "workflow_name": "util_2075_workflow_2075_automate_movebinarydata_datetime_cron",
      "suggested_filename": "util_2075_workflow_2075_automate_movebinarydata_datetime_cron.json",
      "category": "UTIL",
      "business_function": "2075",
      "key_integrations": [
        "scheduleTrigger",
        "dateTime",
        "dropbox",
        "stickyNote",
        "n8n",
        "moveBinaryData",
        "set",
        "merge",
        "filter",
        "if"
      ],
      "trigger_type": "cron",
      "complexity_score": 17,
      "complexity": "High",
      "total_nodes": 17,
      "node_types": {
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.dateTime": 2,
        "n8n-nodes-base.dropbox": 5,
        "n8n-nodes-base.stickyNote": 3,
        "n8n-nodes-base.n8n": 1,
        "n8n-nodes-base.moveBinaryData": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.merge": 1,
        "n8n-nodes-base.filter": 1,
        "n8n-nodes-base.if": 1
      },
      "business_value": "Automates 2075 processes using scheduleTrigger, dateTime, dropbox",
      "analysis_timestamp": "2025-06-01T16:06:49.153533"
    },
    {
      "original_filename": "ai_powered_ai_process_slack_n8nnodeslangchainchainllm_cron_2.json",
      "workflow_name": "AI-Powered Information Monitoring with OpenAI, Google Sheets, Jina AI and Slack",
      "suggested_filename": "ai_powered_ai_process_slack_n8nnodeslangchainchainllm_cron_2.json",
      "category": "AI",
      "business_function": "powered",
      "key_integrations": [
        "@n8n/langchain.lmChatOpenAi",
        "@n8n/langchain.chainLlm",
        "scheduleTrigger",
        "rssFeedRead",
        "@n8n/langchain.textClassifier",
        "stickyNote",
        "googleSheets",
        "slack",
        "code",
        "if"
      ],
      "trigger_type": "chat",
      "complexity_score": 31,
      "complexity": "High",
      "total_nodes": 31,
      "node_types": {
        "@n8n/n8n-nodes-langchain.lmChatOpenAi": 2,
        "@n8n/n8n-nodes-langchain.chainLlm": 1,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.rssFeedRead": 1,
        "@n8n/n8n-nodes-langchain.textClassifier": 1,
        "n8n-nodes-base.stickyNote": 13,
        "n8n-nodes-base.googleSheets": 4,
        "n8n-nodes-base.slack": 1,
        "n8n-nodes-base.code": 1,
        "n8n-nodes-base.noOp": 1,
        "n8n-nodes-base.if": 1,
        "n8n-nodes-base.httpRequest": 1,
        "n8n-nodes-base.set": 3
      },
      "business_value": "Automates powered processes using @n8n/langchain.lmChatOpenAi, @n8n/langchain.chainLlm, scheduleTrigger",
      "analysis_timestamp": "2025-06-01T16:06:49.154019"
    },
    {
      "original_filename": "comm_save_read_functionitem_googlesheets.json",
      "workflow_name": "Save Telegram reply to journal spreadsheet",
      "suggested_filename": "comm_save_read_functionitem_googlesheets.json",
      "category": "COMM",
      "business_function": "save",
      "key_integrations": [
        "googleSheets",
        "telegramTrigger",
        "functionItem"
      ],
      "trigger_type": "manual",
      "complexity_score": 3,
      "complexity": "Low",
      "total_nodes": 3,
      "node_types": {
        "n8n-nodes-base.googleSheets": 1,
        "n8n-nodes-base.telegramTrigger": 1,
        "n8n-nodes-base.functionItem": 1
      },
      "business_value": "Automates save processes using googleSheets, telegramTrigger, functionItem",
      "analysis_timestamp": "2025-06-01T16:06:49.154150"
    },
    {
      "original_filename": "util_216_workflow_216_automate_webhook_graphql_webhook.json",
      "workflow_name": "util_216_workflow_216_automate_webhook_graphql_webhook",
      "suggested_filename": "util_216_workflow_216_automate_webhook_graphql_webhook.json",
      "category": "UTIL",
      "business_function": "216",
      "key_integrations": [
        "graphql",
        "function",
        "set",
        "webhook"
      ],
      "trigger_type": "webhook",
      "complexity_score": 4,
      "complexity": "Low",
      "total_nodes": 4,
      "node_types": {
        "n8n-nodes-base.graphql": 1,
        "n8n-nodes-base.function": 1,
        "n8n-nodes-base.set": 1,
        "n8n-nodes-base.webhook": 1
      },
      "business_value": "Automates 216 processes using graphql, function, set",
      "analysis_timestamp": "2025-06-01T16:06:49.154268"
    },
    {
      "original_filename": "ai_2394_workflow_2394_automate_schedule_todoist_cron.json",
      "workflow_name": "ai_2394_workflow_2394_automate_schedule_todoist_cron",
      "suggested_filename": "ai_2394_workflow_2394_automate_schedule_todoist_cron.json",
      "category": "AI",
      "business_function": "2394",
      "key_integrations": [
        "todoist",
        "scheduleTrigger",
        "stickyNote",
        "set",
        "@n8n/langchain.openAi",
        "filter"
      ],
      "trigger_type": "cron",
      "complexity_score": 12,
      "complexity": "Medium",
      "total_nodes": 12,
      "node_types": {
        "n8n-nodes-base.todoist": 2,
        "n8n-nodes-base.scheduleTrigger": 1,
        "n8n-nodes-base.stickyNote": 5,
        "n8n-nodes-base.set": 1,
        "@n8n/n8n-nodes-langchain.openAi": 1,
        "n8n-nodes-base.filter": 2
      },
      "business_value": "Automates 2394 processes using todoist, scheduleTrigger, stickyNote",
      "analysis_timestamp": "2025-06-01T16:06:49.154543"
    }
  ]
}