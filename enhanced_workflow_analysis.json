{
  "summary": {
    "total_workflows_analyzed": 2050,
    "total_errors": 0,
    "categories": {
      "AI": 896,
      "UTIL": 512,
      "COMM": 281,
      "DATA": 204,
      "BIZ": 60,
      "CONTENT": 37,
      "OPS": 34,
      "ECOMMERCE": 13,
      "ANALYTICS": 12,
      "MARKETING": 1
    },
    "top_functions": {
      "automate": 1329,
      "ai_process": 399,
      "create": 51,
      "extract": 37,
      "read": 34,
      "update": 30,
      "generate": 25,
      "analyze": 23,
      "sync": 20,
      "report": 15,
      "monitor": 13,
      "create_contact": 13,
      "transfer": 11,
      "notify": 10,
      "backup": 10,
      "validate": 9,
      "create_task": 9,
      "process": 6,
      "delete": 2,
      "send": 2,
      "classify": 2
    },
    "top_integrations": {
      "httprequest": 775,
      "manual": 485,
      "webhook": 221,
      "splitinbatches": 205,
      "gmail": 186,
      "n8n-nodes-langchain.memorybufferwindow": 179,
      "schedule": 172,
      "n8n-nodes-langchain.chainllm": 171,
      "n8n-nodes-langchain.outputparserstructured": 143,
      "n8n-nodes-langchain.chat": 140,
      "slack": 134,
      "telegram": 123,
      "n8n-nodes-langchain.lmchatopenai": 113,
      "googlesheets": 101,
      "cron": 75,
      "googledrive": 72,
      "airtable": 65,
      "emailsend": 62,
      "respondtowebhook": 60,
      "notion": 48,
      "itemlists": 45,
      "executeworkflow": 44,
      "postgres": 39,
      "form": 39,
      "n8n-nodes-langchain.openai": 38,
      "hubspot": 37,
      "spreadsheetfile": 36,
      "n8n-nodes-langchain.chainsummarization": 32,
      "googlecalendar": 31,
      "readwritefile": 30,
      "wordpress": 27,
      "pipedrive": 26,
      "datetime": 26,
      "github": 26,
      "n8n-nodes-langchain.calculator": 25,
      "extractfromfile": 25,
      "n8n-nodes-langchain.outputparserautofixing": 25,
      "markdown": 25,
      "mattermost": 24,
      "n8n-nodes-langchain.httprequest": 24,
      "rssfeedread": 23,
      "functionitem": 22,
      "n8n-nodes-langchain.chainretrievalqa": 22,
      "openai": 20,
      "n8n-nodes-langchain.textclassifier": 20,
      "typeform": 20,
      "n8n": 20,
      "executecommand": 19,
      "stopanderror": 19,
      "supabase": 18,
      "n8n-nodes-langchain.vectorstore": 18,
      "error": 18,
      "n8n-nodes-langchain.embeddingsopenai": 18,
      "microsoftoutlook": 17,
      "movebinarydata": 17,
      "crypto": 17,
      "n8n-nodes-langchain.agent": 17,
      "n8n-nodes-langchain.lmchatgooglegemini": 16,
      "n8n-nodes-langchain.informationextractor": 16,
      "n8n-nodes-langchain.memorypostgreschat": 16,
      "comparedatasets": 15,
      "openweathermap": 15,
      "jira": 14,
      "html": 14,
      "n8n-nodes-langchain.mcp": 14,
      "n8n-nodes-langchain.code": 14,
      "whatsapp": 14,
      "shopify": 14,
      "twitter": 13,
      "twilio": 13,
      "n8n-nodes-langchain.textsplittertokensplitter": 13,
      "converttofile": 13,
      "readbinaryfile": 13,
      "googledocs": 13,
      "htmlextract": 13,
      "n8ntrainingcustomerdatastore": 12,
      "mautic": 12,
      "xml": 12,
      "sort": 12,
      "n8n-nodes-langchain.wikipedia": 11,
      "writebinaryfile": 11,
      "zendesk": 11,
      "graphql": 11,
      "emailreadimap": 11,
      "mysql": 11,
      "nocodb": 10,
      "baserow": 10,
      "airtop": 10,
      "woocommerce": 10,
      "calendly": 9,
      "trello": 9,
      "linkedin": 9,
      "interval": 9,
      "editimage": 9,
      "executiondata": 9,
      "discord": 9,
      "ssh": 9,
      "uproc": 9,
      "googleanalytics": 9,
      "clickup": 8,
      "googlecloudnaturallanguage": 8,
      "asana": 8,
      "lemlist": 8,
      "hunter": 8,
      "clearbit": 8,
      "n8n-nodes-langchain.lmchatanthropic": 8,
      "redis": 8,
      "youtube": 8,
      "removeduplicates": 7,
      "mailchimp": 7,
      "n8n-nodes-langchain.workflow": 7,
      "reddit": 7,
      "webflow": 7,
      "stripe": 7,
      "dropbox": 7,
      "bannerbear": 6,
      "n8n-nodes-langchain.lmchatopenrouter": 6,
      "onfleet": 6,
      "n8n-nodes-langchain.vectorstoresupabase": 6,
      "pagerduty": 5,
      "todoist": 5,
      "awss3": 5,
      "gitlab": 5,
      "strava": 5,
      "n8n-nodes-langchain.manualchat": 5,
      "mqtt": 5,
      "n8n-nodes-langchain.lmchatmistralcloud": 5,
      "spotify": 5,
      "mondaycom": 5,
      "clockify": 5,
      "googletasks": 5,
      "mindee": 5,
      "amqp": 4,
      "n8n-nodes-langchain.lmollama": 4,
      "nextcloud": 4,
      "readbinaryfiles": 4,
      "n8n-nodes-langchain.embeddingsgooglegemini": 4,
      "ftp": 4,
      "compression": 4,
      "n8n-nodes-langchain.lmchatgroq": 4,
      "linear": 4,
      "n8n-nodes-langchain.vectorstoreinmemory": 4,
      "googleslides": 4,
      "n8n-nodes-langchain.lmchatazureopenai": 4,
      "awsses": 4,
      "n8n-nodes-langchain.lmchatollama": 4,
      "quickchart": 4,
      "n8n-nodes-langchain.lmchatdeepseek": 4,
      "mongodb": 3,
      "mailerlite": 3,
      "elasticsearch": 3,
      "rocketchat": 3,
      "signl4": 3,
      "emelia": 3,
      "lingvanex": 3,
      "medium": 3,
      "convertkit": 3,
      "mailjet": 3,
      "wise": 3,
      "dropcontact": 3,
      "renamekeys": 3,
      "ghost": 3,
      "thehive": 3,
      "facebookgraphapi": 3,
      "quickbooks": 3,
      "netlify": 3,
      "n8n-nodes-langchain.textsplitterrecursivecharactertextsplitter": 3,
      "keap": 3,
      "mailgun": 3,
      "sendgrid": 3,
      "strapi": 3,
      "vonage": 3,
      "humanticai": 3,
      "copper": 3,
      "awstranscribe": 2,
      "snowflake": 2,
      "n8n-nodes-langchain.embeddingsmistralcloud": 2,
      "awstextract": 2,
      "getresponse": 2,
      "limit": 2,
      "onesimpleapi": 2,
      "zulip": 2,
      "odoo": 2,
      "n8n-nodes-langchain.lmopenai": 2,
      "paypal": 2,
      "microsoftteams": 2,
      "activecampaign": 2,
      "pushcut": 2,
      "gotify": 2,
      "invoiceninja": 2,
      "taiga": 2,
      "microsoftsql": 2,
      "awsrekognition": 2,
      "dhl": 2,
      "zohocrm": 2,
      "coingecko": 2,
      "filemaker": 2,
      "customerio": 2,
      "googlebigquery": 2,
      "awscomprehend": 2,
      "rabbitmq": 2,
      "gong": 2,
      "n8n-nodes-langchain.openaiassistant": 2,
      "googlecloudstorage": 2,
      "intercom": 2,
      "kafka": 2,
      "matrix": 2,
      "orbit": 2,
      "jotform": 2,
      "venafitlsprotectcloud": 2,
      "zammad": 2,
      "cortex": 2,
      "erpnext": 2,
      "helpscout": 2,
      "pushover": 2,
      "freshdesk": 2,
      "start": 2,
      "box": 2,
      "n8n-nodes-langchain.memorymanager": 2,
      "salesforce": 2,
      "chargebee": 2,
      "autopilot": 2,
      "awssns": 2,
      "nasa": 2,
      "cratedb": 2,
      "flow": 2,
      "n8n-nodes-langchain.serpapi": 2,
      "affinity": 2,
      "travisci": 2,
      "googlecontacts": 2,
      "wekan": 1,
      "cockpit": 1,
      "brandfetch": 1,
      "n8n-nodes-langchain.textsplittercharactertextsplitter": 1,
      "microsoftonedrive": 1,
      "totp": 1,
      "acuityscheduling": 1,
      "disqus": 1,
      "googlechat": 1,
      "workflow": 1,
      "segment": 1,
      "n8n-nodes-langchain.memoryredischat": 1,
      "mandrill": 1,
      "timescaledb": 1,
      "n8n-nodes-langchain.embeddingscohere": 1,
      "drift": 1,
      "ical": 1,
      "n8n-nodes-langchain.think": 1,
      "googlebooks": 1,
      "twist": 1,
      "beeminder": 1,
      "sendinblue": 1,
      "n8ntrainingcustomermessenger": 1,
      "wufoo": 1,
      "quickbase": 1,
      "vero": 1,
      "git": 1,
      "gumroad": 1,
      "demio": 1,
      "servicenow": 1,
      "stackby": 1,
      "agilecrm": 1,
      "msg91": 1,
      "awslambda": 1,
      "securityscorecard": 1,
      "apitemplateio": 1,
      "sms77": 1,
      "messagebird": 1,
      "peekalink": 1,
      "n8n-nodes-langchain.vectorstoremilvus": 1,
      "sendy": 1,
      "grist": 1,
      "gsuiteadmin": 1,
      "questdb": 1,
      "bitbucket": 1,
      "n8n-nodes-langchain.documentbinaryinputloader": 1,
      "automizy": 1,
      "storyblok": 1,
      "toggl": 1,
      "facebook": 1,
      "postmark": 1,
      "openthesaurus": 1,
      "mocean": 1,
      "salesmate": 1,
      "hackernews": 1,
      "iterable": 1,
      "posthog": 1,
      "line": 1,
      "uplead": 1,
      "bitwarden": 1,
      "microsoftexcel": 1,
      "phantombuster": 1,
      "profitwell": 1,
      "n8n-nodes-langchain.mcpclient": 1,
      "cal": 1,
      "googlefirebasecloudfirestore": 1,
      "plivo": 1,
      "googleperspective": 1,
      "googlefirebaserealtimedatabase": 1,
      "contentful": 1,
      "awssqs": 1,
      "sentryio": 1,
      "paddle": 1,
      "spontit": 1,
      "googletranslate": 1,
      "harvest": 1,
      "figma": 1,
      "eventbrite": 1,
      "uptimerobot": 1,
      "n8n-nodes-langchain.lmopenhuggingfaceinference": 1,
      "gotowebinar": 1,
      "tapfiliate": 1,
      "twake": 1,
      "surveymonkey": 1,
      "n8n-nodes-langchain.embeddingsollama": 1,
      "egoi": 1,
      "readpdf": 1,
      "facebookleadads": 1,
      "rundeck": 1,
      "microsofttodo": 1,
      "n8n-nodes-langchain.memorymongodbchat": 1,
      "xero": 1,
      "philipshue": 1,
      "zoom": 1,
      "mailcheck": 1,
      "discourse": 1,
      "deepl": 1,
      "homeassistant": 1,
      "highlevel": 1,
      "yourls": 1,
      "raindrop": 1,
      "unleashedsoftware": 1,
      "sse": 1,
      "circleci": 1,
      "coda": 1
    },
    "avg_complexity": 21.798048780487804,
    "max_complexity": 275
  },
  "workflows": [
    {
      "original_filename": "Qualify replies from Pipedrive persons with AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Qualify replies from Pipedrive persons with AI.json",
      "workflow_name": "Qualify replies from Pipedrive persons with AI",
      "suggested_filename": "ai_qualify_ai_process_pipedrive_gmail.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "pipedrive",
        "if",
        "gmailTrigger",
        "stickyNote",
        "set",
        "openAi",
        "code"
      ],
      "primary_integrations": [
        "pipedrive",
        "gmail",
        "openai"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.if",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmailTrigger"
      ],
      "business_description": "AI workflow that ai_processs data/processes using pipedrive, gmail, openai, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "2620_workflow_2620.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2620_workflow_2620.json",
      "workflow_name": "2620_workflow_2620",
      "suggested_filename": "util_2620_workflow_2620_automate_calendly.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "calendlyTrigger",
        "noOp",
        "if",
        "stickyNote",
        "set",
        "splitOut"
      ],
      "primary_integrations": [
        "calendly"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.if",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-base.calendlyTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using calendly, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "3280_workflow_3280.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3280_workflow_3280.json",
      "workflow_name": "3280_workflow_3280",
      "suggested_filename": "data_3280_workflow_3280_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "manualTrigger",
        "code",
        "googleSheets",
        "convertToFile"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "manual"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, schedule, manual, triggered via cron",
      "complexity_score": 23
    },
    {
      "original_filename": "1930_workflow_1930.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1930_workflow_1930.json",
      "workflow_name": "1930_workflow_1930",
      "suggested_filename": "data_1930_workflow_1930_automate_manual_googlesheets.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "manualTrigger",
        "code",
        "googleSheets",
        "postgresTrigger",
        "filter"
      ],
      "primary_integrations": [
        "manual",
        "googlesheets",
        "postgres"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.postgresTrigger",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using manual, googlesheets, postgres, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "ZDL9028SnyCxS5tf_Bitrix24_Task_Form_Widget_Application_Workflow_example_with_Webhook_Integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ZDL9028SnyCxS5tf_Bitrix24_Task_Form_Widget_Application_Workflow_example_with_Webhook_Integration.json",
      "workflow_name": "Bitrix24 Task Form Widget Application Workflow example with Webhook Integration",
      "suggested_filename": "util_bitrix24_read_httprequest_readwritefile_webhook.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "if",
        "set",
        "httpRequest",
        "readWriteFile",
        "webhook",
        "extractFromFile",
        "code",
        "convertToFile",
        "function",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "readwritefile",
        "webhook"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.function",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.function",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.if",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.merge"
      ],
      "business_description": "UTIL workflow that reads data/processes using httprequest, readwritefile, webhook, triggered via webhook",
      "complexity_score": 32
    },
    {
      "original_filename": "354_workflow_354.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/354_workflow_354.json",
      "workflow_name": "354_workflow_354",
      "suggested_filename": "comm_354_workflow_354_automate_pagerduty_webhook_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "pagerDuty",
        "webhook",
        "mattermost"
      ],
      "primary_integrations": [
        "pagerduty",
        "webhook",
        "mattermost"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.pagerDuty",
        "n8n-nodes-base.mattermost"
      ],
      "business_description": "COMM workflow that automates data/processes using pagerduty, webhook, mattermost, triggered via webhook",
      "complexity_score": 6
    },
    {
      "original_filename": "3545_workflow_3545.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3545_workflow_3545.json",
      "workflow_name": "3545_workflow_3545",
      "suggested_filename": "ai_3545_workflow_3545_automate_n8nnodeslangchaintextclassifier_microsoftoutlook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "noOp",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.textClassifier",
        "microsoftOutlook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "extractFromFile",
        "code",
        "microsoftOutlookTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.textclassifier",
        "microsoftoutlook",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlookTrigger",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.textclassifier, microsoftoutlook, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "3233_workflow_3233.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3233_workflow_3233.json",
      "workflow_name": "3233_workflow_3233",
      "suggested_filename": "data_3233_workflow_3233_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "manualTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "manual"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, schedule, manual, triggered via cron",
      "complexity_score": 19
    },
    {
      "original_filename": "SHgOqN3ednIo5gNu_Find_Top_Keywords.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/SHgOqN3ednIo5gNu_Find_Top_Keywords.json",
      "workflow_name": "Find Top Keywords",
      "suggested_filename": "util_find_automate_splitinbatches_nocodb_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "nocoDb",
        "if",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "manualTrigger",
        "code",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "nocodb",
        "httprequest"
      ],
      "total_nodes": 35,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, nocodb, httprequest, triggered via cron",
      "complexity_score": 45
    },
    {
      "original_filename": "x2kgOnBLtqAjqUVS_Automated_Work_Attendance_with_Location_Triggers.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/x2kgOnBLtqAjqUVS_Automated_Work_Attendance_with_Location_Triggers.json",
      "workflow_name": "Automated Work Attendance with Location Triggers",
      "suggested_filename": "data_automated_automate_webhook_googledrive_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "webhook",
        "googleDrive",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "webhook",
        "googledrive",
        "googlesheets"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using webhook, googledrive, googlesheets, triggered via webhook",
      "complexity_score": 17
    },
    {
      "original_filename": "7604ck94MeYXMHpN_Read_RSS_feed_from_two_different_sources.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/7604ck94MeYXMHpN_Read_RSS_feed_from_two_different_sources.json",
      "workflow_name": "Read RSS feed from two different sources",
      "suggested_filename": "util_read_read_splitinbatches_manual.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "manualTrigger",
        "rssFeedRead",
        "code"
      ],
      "primary_integrations": [
        "splitinbatches",
        "manual",
        "rssfeedread"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches"
      ],
      "business_description": "UTIL workflow that reads data/processes using splitinbatches, manual, rssfeedread, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "22PddLUgcjSJbT1w_MongoDB_Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/22PddLUgcjSJbT1w_MongoDB_Agent.json",
      "workflow_name": "MongoDB Agent",
      "suggested_filename": "ai_mongodb_automate_n8nnodeslangchainmemorybufferwindow_mongodb.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "mongoDbTool",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "mongodb",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 8,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.mongoDbTool",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, mongodb, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "1416_workflow_1416.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1416_workflow_1416.json",
      "workflow_name": "1416_workflow_1416",
      "suggested_filename": "comm_1416_workflow_1416_automate_httprequest_functionitem_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "set",
        "httpRequest",
        "functionItem",
        "function",
        "manualTrigger",
        "telegram",
        "cron",
        "writeBinaryFile",
        "moveBinaryData",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "httprequest",
        "functionitem",
        "manual"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.writeBinaryFile",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.function",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.set"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, functionitem, manual, triggered via cron",
      "complexity_score": 21
    },
    {
      "original_filename": "0uon02fOzPkLcG6G_Lead_Qualification_with_BatchData.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/0uon02fOzPkLcG6G_Lead_Qualification_with_BatchData.json",
      "workflow_name": "Lead Qualification with BatchData",
      "suggested_filename": "comm_lead_automate_slack_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "slack",
        "if",
        "stickyNote",
        "httpRequest",
        "webhook",
        "code"
      ],
      "primary_integrations": [
        "slack",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, httprequest, webhook, triggered via webhook",
      "complexity_score": 23
    },
    {
      "original_filename": "2134_workflow_2134.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2134_workflow_2134.json",
      "workflow_name": "2134_workflow_2134",
      "suggested_filename": "util_2134_workflow_2134_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "splitOut",
        "removeDuplicates",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "removeduplicates"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, removeduplicates, triggered via webhook",
      "complexity_score": 18
    },
    {
      "original_filename": "102_Send_updates_about_the_position_of_the_ISS_every_minute_to_a_topic_in_ActiveMQ.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/102_Send_updates_about_the_position_of_the_ISS_every_minute_to_a_topic_in_ActiveMQ.json",
      "workflow_name": "Send updates about the position of the ISS every minute to a topic in ActiveMQ",
      "suggested_filename": "util_send_update_amqp_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "update",
      "trigger_type": "cron",
      "integrations": [
        "amqp",
        "set",
        "httpRequest",
        "cron"
      ],
      "primary_integrations": [
        "amqp",
        "httprequest",
        "cron"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.amqp"
      ],
      "business_description": "UTIL workflow that updates data/processes using amqp, httprequest, cron, triggered via cron",
      "complexity_score": 8
    },
    {
      "original_filename": "2559_workflow_2559.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2559_workflow_2559.json",
      "workflow_name": "2559_workflow_2559",
      "suggested_filename": "ai_2559_workflow_2559_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.textClassifier",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-langchain.agent",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 19,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.informationExtractor"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "3_NameCheap_Dynamic_DNS_(DDNS).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3_NameCheap_Dynamic_DNS_(DDNS).json",
      "workflow_name": "NameCheap Dynamic DNS (DDNS)",
      "suggested_filename": "util_namecheap_automate_httprequest_cron_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "httpRequest",
        "set",
        "function",
        "cron"
      ],
      "primary_integrations": [
        "httprequest",
        "cron"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, cron, triggered via cron",
      "complexity_score": 11
    },
    {
      "original_filename": "2187_workflow_2187.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2187_workflow_2187.json",
      "workflow_name": "2187_workflow_2187",
      "suggested_filename": "ai_2187_workflow_2187_automate_wordpress_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "wordpress",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.toolWikipedia",
        "form",
        "splitOut",
        "code",
        "n8n-nodes-langchain.openAi",
        "formTrigger"
      ],
      "primary_integrations": [
        "wordpress",
        "httprequest",
        "n8n-nodes-langchain.wikipedia"
      ],
      "total_nodes": 37,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-base.if",
        "n8n-nodes-base.form",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.wordpress",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.form"
      ],
      "business_description": "AI workflow that automates data/processes using wordpress, httprequest, n8n-nodes-langchain.wikipedia, triggered via manual",
      "complexity_score": 49
    },
    {
      "original_filename": "3251_workflow_3251.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3251_workflow_3251.json",
      "workflow_name": "3251_workflow_3251",
      "suggested_filename": "comm_3251_workflow_3251_automate_splitinbatches_schedule_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "stickyNote",
        "scheduleTrigger",
        "mailchimp",
        "manualTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "schedule",
        "mailchimp"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.mailchimp"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, schedule, mailchimp, triggered via cron",
      "complexity_score": 12
    },
    {
      "original_filename": "3899_workflow_3899.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3899_workflow_3899.json",
      "workflow_name": "3899_workflow_3899",
      "suggested_filename": "ai_3899_workflow_3899_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "gmail",
        "markdown",
        "scheduleTrigger",
        "linear",
        "n8n-nodes-langchain.lmChatOpenAi",
        "removeDuplicates"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.linear",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, gmail, triggered via cron",
      "complexity_score": 22
    },
    {
      "original_filename": "8n0VYmvJgISwezyz_Build_your_first_AI_MCP_Server.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/8n0VYmvJgISwezyz_Build_your_first_AI_MCP_Server.json",
      "workflow_name": "Build your first AI MCP Server",
      "suggested_filename": "ai_build_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "googleCalendarTool",
        "n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.mcpClientTool",
        "switch",
        "debugHelper",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 32,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.mcpClientTool",
        "@n8n/n8n-nodes-langchain.mcpClientTool",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.debugHelper",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 46
    },
    {
      "original_filename": "96_Create,_update_and_get_a_subscriber_using_the_MailerLite_node.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/96_Create,_update_and_get_a_subscriber_using_the_MailerLite_node.json",
      "workflow_name": "Create, update and get a subscriber using the MailerLite node",
      "suggested_filename": "ai_create_ai_process_mailerlite_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "mailerLite",
        "manualTrigger"
      ],
      "primary_integrations": [
        "mailerlite",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.mailerLite",
        "n8n-nodes-base.mailerLite",
        "n8n-nodes-base.mailerLite"
      ],
      "business_description": "AI workflow that ai_processs data/processes using mailerlite, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "1744_workflow_1744.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1744_workflow_1744.json",
      "workflow_name": "1744_workflow_1744",
      "suggested_filename": "util_1744_workflow_1744_automate_datetime_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "dateTime",
        "stickyNote",
        "set",
        "manualTrigger"
      ],
      "primary_integrations": [
        "datetime",
        "manual"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.dateTime"
      ],
      "business_description": "UTIL workflow that automates data/processes using datetime, manual, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "2510_workflow_2510.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2510_workflow_2510.json",
      "workflow_name": "2510_workflow_2510",
      "suggested_filename": "util_2510_workflow_2510_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "switch",
        "executeWorkflow",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "executeworkflow"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, executeworkflow, triggered via webhook",
      "complexity_score": 30
    },
    {
      "original_filename": "Autonomous AI crawler.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Autonomous AI crawler.json",
      "workflow_name": "Autonomous AI crawler",
      "suggested_filename": "ai_autonomous_ai_process_supabase_removeduplicates.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "supabase",
        "merge",
        "removeDuplicates",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "markdown",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.toolWorkflow",
        "splitOut",
        "aggregate",
        "n8n-nodes-langchain.agent",
        "html",
        "filter"
      ],
      "primary_integrations": [
        "supabase",
        "removeduplicates",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 38,
      "node_types": [
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.set",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.html",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using supabase, removeduplicates, n8n-nodes-langchain.outputparserstructured, triggered via manual",
      "complexity_score": 54
    },
    {
      "original_filename": "3218_workflow_3218.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3218_workflow_3218.json",
      "workflow_name": "3218_workflow_3218",
      "suggested_filename": "data_3218_workflow_3218_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "manualTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "manual"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, schedule, manual, triggered via cron",
      "complexity_score": 20
    },
    {
      "original_filename": "Detect hallucinations using specialised Ollama model bespoke-minicheck.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Detect hallucinations using specialised Ollama model bespoke-minicheck.json",
      "workflow_name": "Detect hallucinations using specialised Ollama model bespoke-minicheck",
      "suggested_filename": "ai_detect_validate_n8nnodeslangchainlmollama_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "validate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.lmOllama",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "splitOut",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatOllama",
        "code",
        "aggregate",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmollama",
        "n8n-nodes-langchain.chainllm",
        "manual"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmOllama",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that validates data/processes using n8n-nodes-langchain.lmollama, n8n-nodes-langchain.chainllm, manual, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "bPxDenPJ5Ixx0txY_Line_Chatbot_Extract_Text_from_Pay_Slip_with_Gemini.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/bPxDenPJ5Ixx0txY_Line_Chatbot_Extract_Text_from_Pay_Slip_with_Gemini.json",
      "workflow_name": "Line_Chatbot_Extract_Text_from_Pay_Slip_with_Gemini",
      "suggested_filename": "ai_line_chatbot_extract_text_from_pay_slip_with_gemini_extract_n8nnodeslangchain.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "switch",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chainllm",
        "httprequest"
      ],
      "total_nodes": 17,
      "node_types": [
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini"
      ],
      "business_description": "AI workflow that extracts data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chainllm, httprequest, triggered via webhook",
      "complexity_score": 27
    },
    {
      "original_filename": "728_.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/728_.json",
      "workflow_name": "",
      "suggested_filename": "util_automate_manual_wekan.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "wekan"
      ],
      "primary_integrations": [
        "manual",
        "wekan"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.wekan",
        "n8n-nodes-base.wekan",
        "n8n-nodes-base.wekan",
        "n8n-nodes-base.wekan",
        "n8n-nodes-base.wekan"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, wekan, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "Build Your Own Image Search Using AI Object Detection, CDN and ElasticSearchBuild Your Own Image Search Using AI Object Detection, CDN and ElasticSearch.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Build Your Own Image Search Using AI Object Detection, CDN and ElasticSearchBuild Your Own Image Search Using AI Object Detection, CDN and ElasticSearch.json",
      "workflow_name": "Build Your Own Image Search Using AI Object Detection, CDN and ElasticSearchBuild Your Own Image Search Using AI Object Detection, CDN and ElasticSearch",
      "suggested_filename": "ai_build_ai_process_elasticsearch_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "elasticsearch",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "editImage",
        "filter"
      ],
      "primary_integrations": [
        "elasticsearch",
        "httprequest",
        "manual"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.elasticsearch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using elasticsearch, httprequest, manual, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "O9FXr8iXzhSgYKaL_Post_New_YouTube_Videos_to_X.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/O9FXr8iXzhSgYKaL_Post_New_YouTube_Videos_to_X.json",
      "workflow_name": "Post New YouTube Videos to X",
      "suggested_filename": "ai_post_automate_schedule_twitter_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "scheduleTrigger",
        "twitter",
        "n8n-nodes-langchain.openAi",
        "youTube"
      ],
      "primary_integrations": [
        "schedule",
        "twitter",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.scheduleTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using schedule, twitter, n8n-nodes-langchain.openai, triggered via cron",
      "complexity_score": 11
    },
    {
      "original_filename": "gAzsjTGbfWuvAObi_Fine-tuning_with_OpenAI_models.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/gAzsjTGbfWuvAObi_Fine-tuning_with_OpenAI_models.json",
      "workflow_name": "Fine-tuning with OpenAI models",
      "suggested_filename": "ai_fine_ai_process_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "googleDrive",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chat, httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "3161_workflow_3161.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3161_workflow_3161.json",
      "workflow_name": "3161_workflow_3161",
      "suggested_filename": "ai_3161_workflow_3161_automate_googlesheets_twitter.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "twitter",
        "openAi",
        "if"
      ],
      "primary_integrations": [
        "googlesheets",
        "twitter",
        "openai"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.if",
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "AI workflow that automates data/processes using googlesheets, twitter, openai, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "916_workflow_916.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/916_workflow_916.json",
      "workflow_name": "916_workflow_916",
      "suggested_filename": "comm_916_workflow_916_automate_typeform_slack.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "typeformTrigger",
        "set",
        "slack",
        "airtable"
      ],
      "primary_integrations": [
        "typeform",
        "slack",
        "airtable"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using typeform, slack, airtable, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "3617_workflow_3617.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3617_workflow_3617.json",
      "workflow_name": "3617_workflow_3617",
      "suggested_filename": "ai_3617_workflow_3617_automate_splitinbatches_n8nnodeslangchaincalculator_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "filter",
        "merge",
        "n8n-nodes-langchain.toolCalculator",
        "wait",
        "dateTime",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.toolThink",
        "microsoftOutlook",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "code",
        "html",
        "mySql"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.calculator",
        "datetime"
      ],
      "total_nodes": 30,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.html",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.code",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolThink",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.calculator, datetime, triggered via cron",
      "complexity_score": 46
    },
    {
      "original_filename": "64_Upload_a_file_and_get_a_list_of_all_the_files_in_a_bucket.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/64_Upload_a_file_and_get_a_list_of_all_the_files_in_a_bucket.json",
      "workflow_name": "Upload a file and get a list of all the files in a bucket",
      "suggested_filename": "util_upload_read_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "s3",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.s3",
        "n8n-nodes-base.s3"
      ],
      "business_description": "UTIL workflow that reads data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "2836_workflow_2836.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2836_workflow_2836.json",
      "workflow_name": "2836_workflow_2836",
      "suggested_filename": "util_2836_workflow_2836_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "175_Get_messages_with_a_certain_label,_remove_the_label,_and_add_a_new_one.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/175_Get_messages_with_a_certain_label,_remove_the_label,_and_add_a_new_one.json",
      "workflow_name": "Get messages with a certain label, remove the label, and add a new one",
      "suggested_filename": "ai_messages_ai_process_gmail_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "gmail",
        "manualTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2572_workflow_2572.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2572_workflow_2572.json",
      "workflow_name": "2572_workflow_2572",
      "suggested_filename": "util_2572_workflow_2572_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "extractFromFile"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "extractfromfile"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, extractfromfile, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "3tJcVzt2OqeyjfnH_Analyze_email_headers_for_IPs_and_spoofing__3.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3tJcVzt2OqeyjfnH_Analyze_email_headers_for_IPs_and_spoofing__3.json",
      "workflow_name": "Analyze_email_headers_for_IPs_and_spoofing__3",
      "suggested_filename": "ai_analyze_email_headers_for_ips_and_spoofing_3_analyze_itemlists_httprequest_we.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "itemLists",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "code",
        "switch",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "itemlists",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 35,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that analyzes data/processes using itemlists, httprequest, webhook, triggered via webhook",
      "complexity_score": 45
    },
    {
      "original_filename": "2708_workflow_2708.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2708_workflow_2708.json",
      "workflow_name": "2708_workflow_2708",
      "suggested_filename": "comm_2708_workflow_2708_automate_webhook_telegram_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "webhook",
        "telegram",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "webhook",
        "telegram"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "COMM workflow that automates data/processes using webhook, telegram, triggered via webhook",
      "complexity_score": 13
    },
    {
      "original_filename": "QOePbDNCilLhfzbs_LINE_BOT_-_Google_Sheets_Record_Receipt.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/QOePbDNCilLhfzbs_LINE_BOT_-_Google_Sheets_Record_Receipt.json",
      "workflow_name": "LINE BOT - Google Sheets Record Receipt",
      "suggested_filename": "data_line_automate_httprequest_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "googleDrive",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "googledrive"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, webhook, googledrive, triggered via webhook",
      "complexity_score": 19
    },
    {
      "original_filename": "55_CFP_Selection_2.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/55_CFP_Selection_2.json",
      "workflow_name": "CFP Selection 2",
      "suggested_filename": "data_selection_automate_trello_bannerbear.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "trello",
        "bannerbear",
        "manualTrigger",
        "airtable"
      ],
      "primary_integrations": [
        "trello",
        "bannerbear",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.bannerbear",
        "n8n-nodes-base.trello"
      ],
      "business_description": "DATA workflow that automates data/processes using trello, bannerbear, manual, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "yF1HNe2ucaE81fNl_Linkedin_Automation.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/yF1HNe2ucaE81fNl_Linkedin_Automation.json",
      "workflow_name": "Linkedin Automation",
      "suggested_filename": "comm_linkedin_automate_httprequest_linkedin_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "stickyNote",
        "httpRequest",
        "linkedIn",
        "scheduleTrigger",
        "code",
        "telegram",
        "airtable",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "linkedin",
        "schedule"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.code",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.code",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.linkedIn",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, linkedin, schedule, triggered via cron",
      "complexity_score": 24
    },
    {
      "original_filename": "2413_workflow_2413.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2413_workflow_2413.json",
      "workflow_name": "2413_workflow_2413",
      "suggested_filename": "ai_2413_workflow_2413_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "notion",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "notion"
      ],
      "total_nodes": 12,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.notion",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, notion, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "2_workflow_2.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2_workflow_2.json",
      "workflow_name": "2_workflow_2",
      "suggested_filename": "data_2_workflow_2_automate_postgres_writebinaryfile.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "postgres",
        "writeBinaryFile",
        "spreadsheetFile"
      ],
      "primary_integrations": [
        "postgres",
        "writebinaryfile",
        "spreadsheetfile"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.writeBinaryFile"
      ],
      "business_description": "DATA workflow that automates data/processes using postgres, writebinaryfile, spreadsheetfile, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "5NAbfX550LJsfz6f_Make_OpenAI_Citation_for_File_Retrieval_RAG.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/5NAbfX550LJsfz6f_Make_OpenAI_Citation_for_File_Retrieval_RAG.json",
      "workflow_name": "Make OpenAI Citation for File Retrieval RAG",
      "suggested_filename": "ai_make_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "httpRequest",
        "markdown",
        "splitOut",
        "code",
        "aggregate",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.code"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "2471_workflow_2471.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2471_workflow_2471.json",
      "workflow_name": "2471_workflow_2471",
      "suggested_filename": "util_2471_workflow_2471_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 12
    },
    {
      "original_filename": "2307_workflow_2307.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2307_workflow_2307.json",
      "workflow_name": "2307_workflow_2307",
      "suggested_filename": "ops_2307_workflow_2307_automate_splitinbatches_httprequest_cron.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "if",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "executeCommand",
        "scheduleTrigger",
        "manualTrigger",
        "github",
        "code",
        "switch",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "executecommand"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.github",
        "n8n-nodes-base.github",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.github",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflowTrigger"
      ],
      "business_description": "OPS workflow that automates data/processes using splitinbatches, httprequest, executecommand, triggered via cron",
      "complexity_score": 39
    },
    {
      "original_filename": "oNJCLq4egGByMeSl_Remove_Advanced_Background_from_Google_Drive_Images.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/oNJCLq4egGByMeSl_Remove_Advanced_Background_from_Google_Drive_Images.json",
      "workflow_name": "Remove Advanced Background from Google Drive Images",
      "suggested_filename": "util_remove_delete_splitinbatches_httprequest.json",
      "category": "UTIL",
      "business_function": "delete",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "merge",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "googleDrive",
        "editImage",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "googledrive"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.splitInBatches"
      ],
      "business_description": "UTIL workflow that deletes data/processes using splitinbatches, httprequest, googledrive, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "1153_workflow_1153.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1153_workflow_1153.json",
      "workflow_name": "1153_workflow_1153",
      "suggested_filename": "comm_1153_workflow_1153_automate_splitinbatches_gmail.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "gmail",
        "manualTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "gmail",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.splitInBatches"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, gmail, manual, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "mE7Zvhv1lOd4Q3xY_CoinMarketCap_AI_Data_Analyst_Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/mE7Zvhv1lOd4Q3xY_CoinMarketCap_AI_Data_Analyst_Agent.json",
      "workflow_name": "CoinMarketCap_AI_Data_Analyst_Agent",
      "suggested_filename": "ai_coinmarketcap_ai_data_analyst_agent_ai_process_n8nnodeslangchainmemorybufferw.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "telegram",
        "telegramTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.lmchatopenai",
        "n8n-nodes-langchain.workflow"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.lmchatopenai, n8n-nodes-langchain.workflow, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "1_Send_Typeforms_leads_via_Whatsapp_(Twilio).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_Send_Typeforms_leads_via_Whatsapp_(Twilio).json",
      "workflow_name": "Send Typeforms leads via Whatsapp (Twilio)",
      "suggested_filename": "biz_send_automate_typeform_twilio.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "typeformTrigger",
        "set",
        "twilio"
      ],
      "primary_integrations": [
        "typeform",
        "twilio"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.twilio",
        "n8n-nodes-base.set"
      ],
      "business_description": "BIZ workflow that automates data/processes using typeform, twilio, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "1833_workflow_1833.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1833_workflow_1833.json",
      "workflow_name": "1833_workflow_1833",
      "suggested_filename": "util_1833_workflow_1833_automate_webhook_jira_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "webhook",
        "jira",
        "zendesk",
        "function"
      ],
      "primary_integrations": [
        "webhook",
        "jira",
        "zendesk"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.function",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, jira, zendesk, triggered via webhook",
      "complexity_score": 12
    },
    {
      "original_filename": "458_workflow_458.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/458_workflow_458.json",
      "workflow_name": "458_workflow_458",
      "suggested_filename": "data_458_workflow_458_automate_postgres_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "postgres",
        "manualTrigger"
      ],
      "primary_integrations": [
        "postgres",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.postgres"
      ],
      "business_description": "DATA workflow that automates data/processes using postgres, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "46_Cocktail_Recipe_Sharing.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/46_Cocktail_Recipe_Sharing.json",
      "workflow_name": "Cocktail Recipe Sharing",
      "suggested_filename": "ai_cocktail_ai_process_rocketchat_httprequest_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "rocketchat",
        "httpRequest",
        "bannerbear",
        "cron"
      ],
      "primary_integrations": [
        "rocketchat",
        "httprequest",
        "bannerbear"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.bannerbear",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.rocketchat"
      ],
      "business_description": "AI workflow that ai_processs data/processes using rocketchat, httprequest, bannerbear, triggered via cron",
      "complexity_score": 8
    },
    {
      "original_filename": "pdgNdag49lwoTxUP_Track_Working_Time_and_Pauses.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/pdgNdag49lwoTxUP_Track_Working_Time_and_Pauses.json",
      "workflow_name": "Track Working Time and Pauses",
      "suggested_filename": "data_track_monitor_notion_webhook_webhook.json",
      "category": "DATA",
      "business_function": "monitor",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "notion",
        "webhook",
        "switch",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "notion",
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 30,
      "node_types": [
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "DATA workflow that monitors data/processes using notion, webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 37
    },
    {
      "original_filename": "2790_workflow_2790.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2790_workflow_2790.json",
      "workflow_name": "2790_workflow_2790",
      "suggested_filename": "ai_2790_workflow_2790_automate_gmail_emailsend.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "gmail",
        "emailSend",
        "stickyNote",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "code",
        "whatsApp",
        "stravaTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "emailsend",
        "n8n-nodes-langchain.lmchatgooglegemini"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.stravaTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.whatsApp"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, emailsend, n8n-nodes-langchain.lmchatgooglegemini, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "3446_workflow_3446.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3446_workflow_3446.json",
      "workflow_name": "3446_workflow_3446",
      "suggested_filename": "ai_3446_workflow_3446_automate_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "noOp",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "microsoftOutlook",
        "html",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "aggregate",
        "removeDuplicates",
        "microsoftExcel"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chainllm",
        "httprequest"
      ],
      "total_nodes": 33,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.microsoftExcel",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.html",
        "n8n-nodes-base.set",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.chainllm, httprequest, triggered via cron",
      "complexity_score": 49
    },
    {
      "original_filename": "2037_workflow_2037.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2037_workflow_2037.json",
      "workflow_name": "2037_workflow_2037",
      "suggested_filename": "data_2037_workflow_2037_automate_manual_airtable.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "manualTrigger",
        "airtable"
      ],
      "primary_integrations": [
        "manual",
        "airtable"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using manual, airtable, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "5_Append,_lookup,_update,_and_read_data_from_a_Google_Sheets_spreadsheet.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/5_Append,_lookup,_update,_and_read_data_from_a_Google_Sheets_spreadsheet.json",
      "workflow_name": "Append, lookup, update, and read data from a Google Sheets spreadsheet",
      "suggested_filename": "data_append_update_googlesheets_manual.json",
      "category": "DATA",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "set",
        "manualTrigger"
      ],
      "primary_integrations": [
        "googlesheets",
        "manual"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that updates data/processes using googlesheets, manual, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "SCUbdpVPX4USbQmr_youtube_chapter_generator.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/SCUbdpVPX4USbQmr_youtube_chapter_generator.json",
      "workflow_name": "youtube chapter generator",
      "suggested_filename": "ai_youtube_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "extractFromFile",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "youTube"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.youTube",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.set",
        "n8n-nodes-base.youTube",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "Ask a human for help when the AI doesn_t know the answer.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Ask a human for help when the AI doesn_t know the answer.json",
      "workflow_name": "Ask a human",
      "suggested_filename": "ai_human_automate_n8nnodeslangchainmemorybufferwindow_slack.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "slack",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "code",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "slack",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 17,
      "node_types": [
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, slack, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "11_workflow_11.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/11_workflow_11.json",
      "workflow_name": "11_workflow_11",
      "suggested_filename": "data_11_workflow_11_automate_spreadsheetfile_googlesheets.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "googleSheets",
        "interval",
        "dropbox"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "googlesheets",
        "interval"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.interval"
      ],
      "business_description": "DATA workflow that automates data/processes using spreadsheetfile, googlesheets, interval, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "AQJ6QnF2yVdCWMnx_SQL_agent_with_memory.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AQJ6QnF2yVdCWMnx_SQL_agent_with_memory.json",
      "workflow_name": "SQL agent with memory",
      "suggested_filename": "ai_agent_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "readWriteFile",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "compression"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 13,
      "node_types": [
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.compression",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chatTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "qww129cm4TM9N8Ru_InstaTest.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/qww129cm4TM9N8Ru_InstaTest.json",
      "workflow_name": "InstaTest",
      "suggested_filename": "ai_instatest_automate_n8nnodeslangchainmemorybufferwindow_webhook_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "webhook",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, webhook, n8n-nodes-langchain.lmchatopenai, triggered via webhook",
      "complexity_score": 18
    },
    {
      "original_filename": "D2RkoPZlkKFRUrNu_LinkedIn_Web_Scraping_with_Bright_Data_MCP_Server_&_Google_Gemini.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/D2RkoPZlkKFRUrNu_LinkedIn_Web_Scraping_with_Bright_Data_MCP_Server_&_Google_Gemini.json",
      "workflow_name": "LinkedIn Web Scraping with Bright Data MCP Server & Google Gemini",
      "suggested_filename": "ai_linkedin_automate_httprequest_readwritefile.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "httpRequest",
        "readWriteFile",
        "code",
        "n8n-nodes-langchain.informationExtractor",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "aggregate",
        "function"
      ],
      "primary_integrations": [
        "httprequest",
        "readwritefile",
        "n8n-nodes-langchain.informationextractor"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-mcp.mcpClient",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-mcp.mcpClient",
        "n8n-nodes-mcp.mcpClient",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-mcp.mcpClient",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.function",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.function",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, readwritefile, n8n-nodes-langchain.informationextractor, triggered via manual",
      "complexity_score": 31
    },
    {
      "original_filename": "Dynamically generate a webpage from user request using OpenAI Structured Output.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Dynamically generate a webpage from user request using OpenAI Structured Output.json",
      "workflow_name": "Dynamically generate HTML page from user request using OpenAI Structured Output",
      "suggested_filename": "ai_dynamically_generate_httprequest_webhook_webhook.json",
      "category": "AI",
      "business_function": "generate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "webhook",
        "html",
        "n8n-nodes-langchain.openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "html"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "AI workflow that generates data/processes using httprequest, webhook, html, triggered via webhook",
      "complexity_score": 13
    },
    {
      "original_filename": "179_workflow_179.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/179_workflow_179.json",
      "workflow_name": "179_workflow_179",
      "suggested_filename": "util_179_workflow_179_automate_spreadsheetfile_typeform.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "typeformTrigger",
        "nextCloud",
        "merge"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "typeform",
        "nextcloud"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.nextCloud",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.nextCloud"
      ],
      "business_description": "UTIL workflow that automates data/processes using spreadsheetfile, typeform, nextcloud, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "olDVR3wuxbUsTvuW_Get_all_scaleway_server_info_copy.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/olDVR3wuxbUsTvuW_Get_all_scaleway_server_info_copy.json",
      "workflow_name": "Get all scaleway server info copy",
      "suggested_filename": "util_scaleway_read_splitinbatches_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "webhook",
      "integrations": [
        "splitInBatches",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "splitOut",
        "code",
        "switch",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that reads data/processes using splitinbatches, httprequest, webhook, triggered via webhook",
      "complexity_score": 34
    },
    {
      "original_filename": "g3q68zSOQvTcydLs_Calculate_the_Centroid_of_a_Set_of_Vectors.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/g3q68zSOQvTcydLs_Calculate_the_Centroid_of_a_Set_of_Vectors.json",
      "workflow_name": "Calculate the Centroid of a Set of Vectors",
      "suggested_filename": "util_calculate_automate_webhook_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "webhook",
        "code",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 13
    },
    {
      "original_filename": "Telegram AI Bot_ NeurochainAI Text & Image - NeurochainAI Basic API Integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Telegram AI Bot_ NeurochainAI Text & Image - NeurochainAI Basic API Integration.json",
      "workflow_name": "NeurochainAI Basic API Integration",
      "suggested_filename": "ai_neurochainai_ai_process_httprequest_telegram.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "telegramTrigger",
        "telegram",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "httprequest",
        "telegram",
        "telegram"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, telegram, telegram, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "3637_workflow_3637.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3637_workflow_3637.json",
      "workflow_name": "3637_workflow_3637",
      "suggested_filename": "util_3637_workflow_3637_automate_httprequest_n8nnodeslangchainmcp.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "aggregate",
        "n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-langchain.toolWorkflow",
        "switch",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.mcp",
        "n8n-nodes-langchain.workflow"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, n8n-nodes-langchain.mcp, n8n-nodes-langchain.workflow, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "2297_workflow_2297.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2297_workflow_2297.json",
      "workflow_name": "2297_workflow_2297",
      "suggested_filename": "util_2297_workflow_2297_automate_httprequest_readwritefile.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "readWriteFile",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "readwritefile",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, readwritefile, manual, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "1959_workflow_1959.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1959_workflow_1959.json",
      "workflow_name": "1959_workflow_1959",
      "suggested_filename": "ai_1959_workflow_1959_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.toolSerpApi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.wikipedia"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolSerpApi",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.wikipedia, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "2649_workflow_2649.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2649_workflow_2649.json",
      "workflow_name": "2649_workflow_2649",
      "suggested_filename": "util_2649_workflow_2649_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "code",
        "editImage"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "editimage"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, editimage, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "E2hq7z4ANLoL5vw1_Noco_Kanban_Board_with_AI_Prioritization.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/E2hq7z4ANLoL5vw1_Noco_Kanban_Board_with_AI_Prioritization.json",
      "workflow_name": "Noco Kanban Board with AI Prioritization",
      "suggested_filename": "ai_noco_ai_process_nocodb_slack_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "nocoDb",
        "slack",
        "n8n-nodes-langchain.outputParserStructured",
        "noOp",
        "stickyNote",
        "if",
        "emailSend",
        "set",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "aggregate",
        "formTrigger"
      ],
      "primary_integrations": [
        "nocodb",
        "slack",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 27,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.if",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using nocodb, slack, n8n-nodes-langchain.outputparserstructured, triggered via cron",
      "complexity_score": 41
    },
    {
      "original_filename": "3868_workflow_3868.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3868_workflow_3868.json",
      "workflow_name": "3868_workflow_3868",
      "suggested_filename": "ai_3868_workflow_3868_automate_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "noOp",
        "stickyNote",
        "set",
        "scheduleTrigger",
        "jira",
        "n8n-nodes-langchain.lmChatOpenAi",
        "aggregate",
        "removeDuplicates"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 27,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via cron",
      "complexity_score": 38
    },
    {
      "original_filename": "3Lih0LVosR8dZbla_Create_AI-Ready_Vector_Datasets_for_LLMs_with_Bright_Data,_Gemini_&_Pinecone.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3Lih0LVosR8dZbla_Create_AI-Ready_Vector_Datasets_for_LLMs_with_Bright_Data,_Gemini_&_Pinecone.json",
      "workflow_name": "Create AI-Ready Vector Datasets for LLMs with Bright Data, Gemini & Pinecone",
      "suggested_filename": "ai_create_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstru.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsGoogleGemini",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.vectorStorePinecone",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via manual",
      "complexity_score": 34
    },
    {
      "original_filename": "3684_workflow_3684.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3684_workflow_3684.json",
      "workflow_name": "3684_workflow_3684",
      "suggested_filename": "ai_3684_workflow_3684_automate_splitinbatches_n8nnodeslangchainoutputparserstruc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "if",
        "n8n-nodes-langchain.outputParserStructured",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "n8n-nodes-langchain.agent",
        "code",
        "googleSheets",
        "html"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.code",
        "n8n-nodes-base.html",
        "n8n-nodes-base.html",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.outputparserstructured, gmail, triggered via cron",
      "complexity_score": 36
    },
    {
      "original_filename": "2552_workflow_2552.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2552_workflow_2552.json",
      "workflow_name": "2552_workflow_2552",
      "suggested_filename": "ai_2552_workflow_2552_automate_httprequest_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "splitOut",
        "manualTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai",
        "n8n-nodes-langchain.informationextractor"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, n8n-nodes-langchain.lmchatopenai, n8n-nodes-langchain.informationextractor, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "6_workflow_6.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/6_workflow_6.json",
      "workflow_name": "6_workflow_6",
      "suggested_filename": "data_6_workflow_6_automate_googlesheets_cron_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "googleSheets",
        "cron"
      ],
      "primary_integrations": [
        "googlesheets",
        "cron"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "eZT6SZ4Kvmq5TzyQ_Umami_analytics_template.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/eZT6SZ4Kvmq5TzyQ_Umami_analytics_template.json",
      "workflow_name": "Umami analytics template",
      "suggested_filename": "analytics_umami_automate_httprequest_schedule_cron.json",
      "category": "ANALYTICS",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "baserow",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "baserow"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.baserow"
      ],
      "business_description": "ANALYTICS workflow that automates data/processes using httprequest, schedule, baserow, triggered via cron",
      "complexity_score": 23
    },
    {
      "original_filename": "Hacker News to Video Content.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Hacker News to Video Content.json",
      "workflow_name": "Hacker News to Video Template - AlexK1919",
      "suggested_filename": "ai_hacker_automate_n8nnodeslangchainoutputparserstructured_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserStructured",
        "wait",
        "httpRequest",
        "googleDrive",
        "hackerNews",
        "splitInBatches",
        "n8n-nodes-langchain.lmChatOpenAi",
        "microsoftOneDrive",
        "limit",
        "n8n-nodes-langchain.agent",
        "dropbox",
        "n8n-nodes-langchain.openAi",
        "youTube",
        "twitter",
        "if",
        "stickyNote",
        "linkedIn",
        "n8n-nodes-langchain.toolHttpRequest",
        "s3",
        "set",
        "manualTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest",
        "googledrive"
      ],
      "total_nodes": 48,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.hackerNews",
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.s3",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.limit",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.wait",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.microsoftOneDrive",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.linkedIn",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserstructured, httprequest, googledrive, triggered via manual",
      "complexity_score": 69
    },
    {
      "original_filename": "OpenAI examples_ ChatGPT, DALLE-2, Whisper-1 – 5-in-1.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/OpenAI examples_ ChatGPT, DALLE-2, Whisper-1 – 5-in-1.json",
      "workflow_name": "OpenAI-model-examples",
      "suggested_filename": "ai_openai_ai_process_httprequest_readbinaryfiles.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "readBinaryFiles",
        "openAi",
        "manualTrigger",
        "code",
        "html"
      ],
      "primary_integrations": [
        "httprequest",
        "readbinaryfiles",
        "openai"
      ],
      "total_nodes": 27,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.readBinaryFiles",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, readbinaryfiles, openai, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "3123_workflow_3123.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3123_workflow_3123.json",
      "workflow_name": "3123_workflow_3123",
      "suggested_filename": "ai_3123_workflow_3123_automate_splitinbatches_n8nnodeslangchainoutputparserstruc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.outputParserStructured",
        "gmail",
        "set",
        "stickyNote",
        "googleCalendarTool",
        "scheduleTrigger",
        "googleCalendar",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "removeDuplicates",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.googleCalendarTool",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleCalendarTool",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.outputparserstructured, gmail, triggered via cron",
      "complexity_score": 34
    },
    {
      "original_filename": "sB6dC0GZ7zZHuMGF_Test_Webhooks_in_n8n_Without_Changing_WEBHOOK_URL_(PostBin_&_BambooHR_Example).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/sB6dC0GZ7zZHuMGF_Test_Webhooks_in_n8n_Without_Changing_WEBHOOK_URL_(PostBin_&_BambooHR_Example).json",
      "workflow_name": "Test Webhooks in n8n Without Changing WEBHOOK_URL (PostBin & BambooHR Example)",
      "suggested_filename": "ai_test_automate_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.outputParserStructured",
        "wait",
        "httpRequest",
        "aggregate",
        "filter",
        "bambooHr",
        "postBin",
        "noOp",
        "n8n-nodes-langchain.lmChatOpenAi",
        "merge",
        "slack",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "renameKeys",
        "set",
        "splitOut",
        "manualTrigger",
        "debugHelper"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 58,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.postBin",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.postBin",
        "n8n-nodes-base.postBin",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.postBin",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.debugHelper",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.bambooHr",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.renameKeys",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.postBin",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via manual",
      "complexity_score": 77
    },
    {
      "original_filename": "ZCAkUSpaxzoRPbse_Search_&_Summarize_Web_Data_with_Perplexity,_Gemini_AI_&_Bright_Data_to_Webhooks.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ZCAkUSpaxzoRPbse_Search_&_Summarize_Web_Data_with_Perplexity,_Gemini_AI_&_Bright_Data_to_Webhooks.json",
      "workflow_name": "Search & Summarize Web Data with Perplexity, Gemini AI & Bright Data to Webhooks",
      "suggested_filename": "ai_search_ai_process_httprequest_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "manualTrigger",
        "n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.chainsummarization",
        "n8n-nodes-langchain.lmchatgooglegemini"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.chainSummarization"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, n8n-nodes-langchain.chainsummarization, n8n-nodes-langchain.lmchatgooglegemini, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "hmgR6wOkuqrn5y4Y_N_01_Simple_Lead_Tracker_Automation_v4.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/hmgR6wOkuqrn5y4Y_N_01_Simple_Lead_Tracker_Automation_v4.json",
      "workflow_name": "N_01_Simple_Lead_Tracker_Automation_v4",
      "suggested_filename": "comm_n_01_simple_lead_tracker_automation_v4_monitor_hubspot_slack.json",
      "category": "COMM",
      "business_function": "monitor",
      "trigger_type": "manual",
      "integrations": [
        "hubspot",
        "slack",
        "if",
        "noOp",
        "gmail",
        "wait",
        "stickyNote",
        "googleSheetsTrigger"
      ],
      "primary_integrations": [
        "hubspot",
        "slack",
        "gmail"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that monitors data/processes using hubspot, slack, gmail, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "2114_workflow_2114.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2114_workflow_2114.json",
      "workflow_name": "2114_workflow_2114",
      "suggested_filename": "ai_2114_workflow_2114_automate_n8nnodeslangchainlmchatopenai_telegram.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "telegramTrigger",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmchatopenai",
        "telegram",
        "telegram"
      ],
      "total_nodes": 4,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.lmchatopenai, telegram, telegram, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "105_Create_a_task_in_ClickUp.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/105_Create_a_task_in_ClickUp.json",
      "workflow_name": "Create a task in ClickUp",
      "suggested_filename": "util_create_create_task_clickup_manual.json",
      "category": "UTIL",
      "business_function": "create_task",
      "trigger_type": "manual",
      "integrations": [
        "clickUp",
        "manualTrigger"
      ],
      "primary_integrations": [
        "clickup",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.clickUp"
      ],
      "business_description": "UTIL workflow that create_tasks data/processes using clickup, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "iFkGAiVn3yBlykIG_Chinese_Translator.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/iFkGAiVn3yBlykIG_Chinese_Translator.json",
      "workflow_name": "Chinese Translator",
      "suggested_filename": "util_chinese_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "webhook",
        "extractFromFile",
        "switch"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "extractfromfile"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, extractfromfile, triggered via webhook",
      "complexity_score": 26
    },
    {
      "original_filename": "928_workflow_928.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/928_workflow_928.json",
      "workflow_name": "928_workflow_928",
      "suggested_filename": "util_928_workflow_928_automate_manual_reddit.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "reddit"
      ],
      "primary_integrations": [
        "manual",
        "reddit"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.reddit",
        "n8n-nodes-base.reddit",
        "n8n-nodes-base.reddit"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, reddit, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "cpuFyJYHKmjHTncz_Adaptive_RAG.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/cpuFyJYHKmjHTncz_Adaptive_RAG.json",
      "workflow_name": "Adaptive RAG",
      "suggested_filename": "ai_adaptive_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "n8n-nodes-langchain.embeddingsGoogleGemini",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "switch",
        "summarize",
        "executeWorkflowTrigger",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.embeddingsgooglegemini"
      ],
      "total_nodes": 39,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.summarize",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.embeddingsgooglegemini, triggered via manual",
      "complexity_score": 51
    },
    {
      "original_filename": "2579_workflow_2579.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2579_workflow_2579.json",
      "workflow_name": "2579_workflow_2579",
      "suggested_filename": "ai_2579_workflow_2579_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "httpRequest",
        "form",
        "n8n-nodes-langchain.lmChatOpenAi",
        "airtable",
        "extractFromFile",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.textclassifier"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.airtable",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.form",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.form"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.textclassifier, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "IvgAFAUOSI3biT4L_Translate_Telegram_audio_messages_with_AI_(55_supported_languages)_v1.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/IvgAFAUOSI3biT4L_Translate_Telegram_audio_messages_with_AI_(55_supported_languages)_v1.json",
      "workflow_name": "Translate Telegram audio messages with AI (55 supported languages) v1",
      "suggested_filename": "ai_translate_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegramTrigger",
        "telegram",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.lmchatopenai",
        "telegram"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.lmchatopenai, telegram, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "3_TheHive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3_TheHive.json",
      "workflow_name": "TheHive",
      "suggested_filename": "util_thehive_automate_webhook_manual_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "webhook",
        "manualTrigger",
        "signl4",
        "theHive"
      ],
      "primary_integrations": [
        "webhook",
        "manual",
        "signl4"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.theHive",
        "n8n-nodes-base.theHive",
        "n8n-nodes-base.if",
        "n8n-nodes-base.signl4",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.signl4"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, manual, signl4, triggered via webhook",
      "complexity_score": 12
    },
    {
      "original_filename": "AI-Powered Information Monitoring with OpenAI, Google Sheets, Jina AI and Slack.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI-Powered Information Monitoring with OpenAI, Google Sheets, Jina AI and Slack.json",
      "workflow_name": "AI-Powered Information Monitoring with OpenAI, Google Sheets, Jina AI and Slack",
      "suggested_filename": "ai_powered_ai_process_slack_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "n8n-nodes-langchain.chainLlm",
        "noOp",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "set",
        "httpRequest",
        "rssFeedRead",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "slack",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.textclassifier"
      ],
      "total_nodes": 31,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.rssFeedRead",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using slack, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.textclassifier, triggered via cron",
      "complexity_score": 44
    },
    {
      "original_filename": "iLpBIRuhpWToO22N_🤖_On-Page_SEO_Audit.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/iLpBIRuhpWToO22N_🤖_On-Page_SEO_Audit.json",
      "workflow_name": "🤖 On-Page SEO Audit",
      "suggested_filename": "ai_page_automate_gmail_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "gmail",
        "httpRequest",
        "markdown",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "aggregate",
        "formTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "markdown"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, httprequest, markdown, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "h2uiciRa1D3ntSTT_My_workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/h2uiciRa1D3ntSTT_My_workflow.json",
      "workflow_name": "My workflow",
      "suggested_filename": "ai_automate_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.chainLlm",
        "reddit",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatAnthropic",
        "googleDrive",
        "code",
        "aggregate",
        "compression",
        "convertToFile"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chainllm",
        "reddit"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.reddit",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.reddit",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.compression",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.chainllm, reddit, triggered via cron",
      "complexity_score": 43
    },
    {
      "original_filename": "mN7jDJoWHtJuyKpS_Generate_Graphic_Wallpaper_with_Midjourney,_GPT-4o-mini_and_Canvas_APIs.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/mN7jDJoWHtJuyKpS_Generate_Graphic_Wallpaper_with_Midjourney,_GPT-4o-mini_and_Canvas_APIs.json",
      "workflow_name": "Generate Graphic Wallpaper with Midjourney, GPT-4o-mini and Canvas APIs",
      "suggested_filename": "ai_generate_generate_httprequest_manual.json",
      "category": "AI",
      "business_function": "generate",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that generates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "dDInVHNAfSedBUCb_外送記帳.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/dDInVHNAfSedBUCb_外送記帳.json",
      "workflow_name": "外送記帳",
      "suggested_filename": "comm_外送記帳_automate_splitinbatches_slack.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "slack",
        "gmailTrigger",
        "gmail",
        "set",
        "manualTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "slack",
        "gmail"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, slack, gmail, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "518_workflow_518.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/518_workflow_518.json",
      "workflow_name": "518_workflow_518",
      "suggested_filename": "util_518_workflow_518_automate_cockpit_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "cockpit",
        "manualTrigger"
      ],
      "primary_integrations": [
        "cockpit",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.cockpit"
      ],
      "business_description": "UTIL workflow that automates data/processes using cockpit, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "1039_workflow_1039.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1039_workflow_1039.json",
      "workflow_name": "1039_workflow_1039",
      "suggested_filename": "comm_1039_workflow_1039_automate_emelia_mattermost.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "emeliaTrigger",
        "mattermost"
      ],
      "primary_integrations": [
        "emelia",
        "mattermost"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.emeliaTrigger"
      ],
      "business_description": "COMM workflow that automates data/processes using emelia, mattermost, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "176_Get_the_logo,_icon,_and_information_of_a_company_and_store_it_in_Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/176_Get_the_logo,_icon,_and_information_of_a_company_and_store_it_in_Airtable.json",
      "workflow_name": "Get the logo, icon, and information of a company and store it in Airtable",
      "suggested_filename": "ai_logo_ai_process_airtable_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "airtable",
        "set",
        "manualTrigger",
        "Brandfetch"
      ],
      "primary_integrations": [
        "airtable",
        "manual",
        "brandfetch"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.Brandfetch",
        "n8n-nodes-base.Brandfetch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable"
      ],
      "business_description": "AI workflow that ai_processs data/processes using airtable, manual, brandfetch, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "WCh8N9PrO0UIwrqW_Automatizacion_X.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/WCh8N9PrO0UIwrqW_Automatizacion_X.json",
      "workflow_name": "Automatizacion X",
      "suggested_filename": "ai_automatizacion_automate_n8nnodeslangchainmemorybufferwindow_twitter.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "twitterTool",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "twitter",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 6,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.twitterTool",
        "n8n-nodes-base.twitterTool",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, twitter, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "YoUP55V241b9F2ze_Qdrant_Vector_Database_Embedding_Pipeline.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/YoUP55V241b9F2ze_Qdrant_Vector_Database_Embedding_Pipeline.json",
      "workflow_name": "Qdrant Vector Database Embedding Pipeline",
      "suggested_filename": "ai_qdrant_automate_splitinbatches_n8nnodeslangchaintextsplittercharactertextspli.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "stickyNote",
        "n8n-nodes-langchain.textSplitterCharacterTextSplitter",
        "ftp",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.documentDefaultDataLoader"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.textsplittercharactertextsplitter",
        "ftp"
      ],
      "total_nodes": 13,
      "node_types": [
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.ftp",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.ftp",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.textsplittercharactertextsplitter, ftp, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "118_Google_Calendar_to_Slack_Status_&_Philips_Hue.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/118_Google_Calendar_to_Slack_Status_&_Philips_Hue.json",
      "workflow_name": "Google Calendar to Slack Status & Philips Hue",
      "suggested_filename": "comm_google_automate_slack_httprequest.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "httpRequest",
        "googleCalendar",
        "manualTrigger",
        "switch",
        "googleCalendarTrigger",
        "function"
      ],
      "primary_integrations": [
        "slack",
        "httprequest",
        "googlecalendar"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleCalendarTrigger",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.function"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, httprequest, googlecalendar, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "2017_workflow_2017.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2017_workflow_2017.json",
      "workflow_name": "2017_workflow_2017",
      "suggested_filename": "util_2017_workflow_2017_automate_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "webhook"
      ],
      "primary_integrations": [
        "webhook"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, triggered via webhook",
      "complexity_score": 8
    },
    {
      "original_filename": "1535_workflow_1535.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1535_workflow_1535.json",
      "workflow_name": "1535_workflow_1535",
      "suggested_filename": "content_1535_workflow_1535_automate_googlecloudnaturallanguage_interval_webhook.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "googleCloudNaturalLanguage",
        "if",
        "set",
        "interval",
        "webhook",
        "strapi",
        "twitter"
      ],
      "primary_integrations": [
        "googlecloudnaturallanguage",
        "interval",
        "webhook"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.strapi",
        "n8n-nodes-base.interval",
        "n8n-nodes-base.if",
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleCloudNaturalLanguage",
        "n8n-nodes-base.googleCloudNaturalLanguage",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.strapi",
        "n8n-nodes-base.if"
      ],
      "business_description": "CONTENT workflow that automates data/processes using googlecloudnaturallanguage, interval, webhook, triggered via webhook",
      "complexity_score": 22
    },
    {
      "original_filename": "340_Email_body_parser_by_aprenden8n.com.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/340_Email_body_parser_by_aprenden8n.com.json",
      "workflow_name": "Email body parser by aprenden8n.com",
      "suggested_filename": "ai_email_ai_process_functionitem_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "functionItem",
        "set",
        "manualTrigger"
      ],
      "primary_integrations": [
        "functionitem",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using functionitem, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "1243_workflow_1243.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1243_workflow_1243.json",
      "workflow_name": "1243_workflow_1243",
      "suggested_filename": "util_1243_workflow_1243_automate_splitinbatches_n8ntrainingcustomerdatastore.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8nTrainingCustomerDatastore",
        "wait",
        "noOp",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8ntrainingcustomerdatastore",
        "httprequest"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.n8nTrainingCustomerDatastore",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, n8ntrainingcustomerdatastore, httprequest, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "2075_workflow_2075.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2075_workflow_2075.json",
      "workflow_name": "2075_workflow_2075",
      "suggested_filename": "util_2075_workflow_2075_automate_movebinarydata_datetime_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "moveBinaryData",
        "if",
        "dateTime",
        "stickyNote",
        "set",
        "scheduleTrigger",
        "n8n",
        "dropbox",
        "filter"
      ],
      "primary_integrations": [
        "movebinarydata",
        "datetime",
        "schedule"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.if",
        "n8n-nodes-base.dateTime"
      ],
      "business_description": "UTIL workflow that automates data/processes using movebinarydata, datetime, schedule, triggered via cron",
      "complexity_score": 27
    },
    {
      "original_filename": "n8cwEZfJLGn15Lqx_ERP_AI_chatbot_for_Odoo_sales_module.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/n8cwEZfJLGn15Lqx_ERP_AI_chatbot_for_Odoo_sales_module.json",
      "workflow_name": "ERP AI chatbot for Odoo sales module",
      "suggested_filename": "ai_chatbot_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalcu.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolCalculator",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmOpenAi",
        "n8n-nodes-langchain.chainSummarization",
        "scheduleTrigger",
        "readWriteFile",
        "n8n-nodes-langchain.lmChatOpenAi",
        "extractFromFile",
        "n8n-nodes-langchain.agent",
        "aggregate",
        "convertToFile",
        "odoo"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.calculator",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 16,
      "node_types": [
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.odoo",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.if",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.lmOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.calculator, n8n-nodes-langchain.chat, triggered via cron",
      "complexity_score": 31
    },
    {
      "original_filename": "qAzZekQuABuH8uho_Retry_on_fail_except_for_known_error_Template.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/qAzZekQuABuH8uho_Retry_on_fail_except_for_known_error_Template.json",
      "workflow_name": "Retry on fail except for known error Template",
      "suggested_filename": "ai_retry_ai_process_stopanderror_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "if",
        "wait",
        "set",
        "stickyNote",
        "stopAndError",
        "manualTrigger"
      ],
      "primary_integrations": [
        "stopanderror",
        "manual"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using stopanderror, manual, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "1221_workflow_1221.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1221_workflow_1221.json",
      "workflow_name": "1221_workflow_1221",
      "suggested_filename": "comm_1221_workflow_1221_automate_pipedrive_calendly.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "pipedrive",
        "calendlyTrigger",
        "slack",
        "wait",
        "dateTime"
      ],
      "primary_integrations": [
        "pipedrive",
        "calendly",
        "slack"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.calendlyTrigger",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.wait"
      ],
      "business_description": "COMM workflow that automates data/processes using pipedrive, calendly, slack, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "47_Receive_updates_when_an_event_occurs_in_Asana.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/47_Receive_updates_when_an_event_occurs_in_Asana.json",
      "workflow_name": "Receive updates when an event occurs in Asana",
      "suggested_filename": "util_receive_update_asana.json",
      "category": "UTIL",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "asanaTrigger"
      ],
      "primary_integrations": [
        "asana"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.asanaTrigger"
      ],
      "business_description": "UTIL workflow that updates data/processes using asana, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "636_workflow_636.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/636_workflow_636.json",
      "workflow_name": "636_workflow_636",
      "suggested_filename": "data_636_workflow_636_automate_mautic_googlesheets_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "mautic",
        "googleSheets",
        "cron"
      ],
      "primary_integrations": [
        "mautic",
        "googlesheets",
        "cron"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.cron"
      ],
      "business_description": "DATA workflow that automates data/processes using mautic, googlesheets, cron, triggered via cron",
      "complexity_score": 7
    },
    {
      "original_filename": "763_workflow_763.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/763_workflow_763.json",
      "workflow_name": "763_workflow_763",
      "suggested_filename": "util_763_workflow_763_automate_generic.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "function"
      ],
      "primary_integrations": [],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.function",
        "n8n-nodes-base.function"
      ],
      "business_description": "UTIL workflow that automates data/processes using generic components, triggered via manual",
      "complexity_score": 3
    },
    {
      "original_filename": "2418_workflow_2418.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2418_workflow_2418.json",
      "workflow_name": "2418_workflow_2418",
      "suggested_filename": "ai_2418_workflow_2418_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "manualTrigger",
        "code",
        "editImage"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.code",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "WBkJdubQjVzMUhwi_Shopify_to_Google_Sheets_Product_Sync_Automation.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/WBkJdubQjVzMUhwi_Shopify_to_Google_Sheets_Product_Sync_Automation.json",
      "workflow_name": "Shopify to Google Sheets Product Sync Automation",
      "suggested_filename": "data_shopify_sync_graphql_schedule_cron.json",
      "category": "DATA",
      "business_function": "sync",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "noOp",
        "wait",
        "set",
        "stickyNote",
        "graphql",
        "scheduleTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "graphql",
        "schedule",
        "googlesheets"
      ],
      "total_nodes": 25,
      "node_types": [
        "n8n-nodes-base.wait",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that syncs data/processes using graphql, schedule, googlesheets, triggered via cron",
      "complexity_score": 34
    },
    {
      "original_filename": "ibiHg6umCqvcTF4g_Voice_RAG_Chatbot_with_ElevenLabs_and_OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ibiHg6umCqvcTF4g_Voice_RAG_Chatbot_with_ElevenLabs_and_OpenAI.json",
      "workflow_name": "Voice RAG Chatbot with ElevenLabs and OpenAI",
      "suggested_filename": "ai_voice_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvectors.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolVectorStore",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "googleDrive",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.vectorstore",
        "n8n-nodes-langchain.textsplittertokensplitter"
      ],
      "total_nodes": 23,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.vectorstore, n8n-nodes-langchain.textsplittertokensplitter, triggered via webhook",
      "complexity_score": 37
    },
    {
      "original_filename": "W1ugowsjzt1SC4hH_Validate_Seatable_Webhooks_with_HMAC_SHA256_Authentication.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/W1ugowsjzt1SC4hH_Validate_Seatable_Webhooks_with_HMAC_SHA256_Authentication.json",
      "workflow_name": "Validate Seatable Webhooks with HMAC SHA256 Authentication",
      "suggested_filename": "data_validate_validate_crypto_webhook_webhook.json",
      "category": "DATA",
      "business_function": "validate",
      "trigger_type": "webhook",
      "integrations": [
        "crypto",
        "noOp",
        "if",
        "stickyNote",
        "webhook",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "crypto",
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that validates data/processes using crypto, webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 13
    },
    {
      "original_filename": "565_workflow_565.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/565_workflow_565.json",
      "workflow_name": "565_workflow_565",
      "suggested_filename": "util_565_workflow_565_automate_microsoftonedrive_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "microsoftOneDrive",
        "manualTrigger"
      ],
      "primary_integrations": [
        "microsoftonedrive",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.microsoftOneDrive"
      ],
      "business_description": "UTIL workflow that automates data/processes using microsoftonedrive, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "1028_Loading_data_into_a_spreadsheet.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1028_Loading_data_into_a_spreadsheet.json",
      "workflow_name": "Loading data into a spreadsheet",
      "suggested_filename": "data_loading_read_manual.json",
      "category": "DATA",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "function",
        "manualTrigger",
        "noOp"
      ],
      "primary_integrations": [
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.function",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "DATA workflow that reads data/processes using manual, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "4_workflow_4.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/4_workflow_4.json",
      "workflow_name": "4_workflow_4",
      "suggested_filename": "comm_4_workflow_4_automate_slack_github.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "githubTrigger",
        "if"
      ],
      "primary_integrations": [
        "slack",
        "github"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.githubTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, github, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "2394_workflow_2394.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2394_workflow_2394.json",
      "workflow_name": "2394_workflow_2394",
      "suggested_filename": "ai_2394_workflow_2394_automate_schedule_todoist_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "scheduleTrigger",
        "todoist",
        "n8n-nodes-langchain.openAi",
        "filter"
      ],
      "primary_integrations": [
        "schedule",
        "todoist",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.filter"
      ],
      "business_description": "AI workflow that automates data/processes using schedule, todoist, n8n-nodes-langchain.openai, triggered via cron",
      "complexity_score": 18
    },
    {
      "original_filename": "3042_workflow_3042.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3042_workflow_3042.json",
      "workflow_name": "3042_workflow_3042",
      "suggested_filename": "ai_3042_workflow_3042_automate_slack_schedule_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "slack",
        "if",
        "wait",
        "stickyNote",
        "set",
        "scheduleTrigger",
        "webhook",
        "limit",
        "googleSheets",
        "summarize",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "slack",
        "schedule",
        "webhook"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "AI workflow that automates data/processes using slack, schedule, webhook, triggered via cron",
      "complexity_score": 33
    },
    {
      "original_filename": "p5bfwpcRy6LK33Io_Automate_Content_Generator_for_WordPress_with_DeepSeek_R1.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/p5bfwpcRy6LK33Io_Automate_Content_Generator_for_WordPress_with_DeepSeek_R1.json",
      "workflow_name": "Automate Content Generator for WordPress with DeepSeek R1",
      "suggested_filename": "ai_automate_automate_wordpress_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wordpress",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "googleSheets",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "wordpress",
        "httprequest",
        "manual"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using wordpress, httprequest, manual, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "AS2Rj41p6OyA0xZK_Auth0_User_Login.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AS2Rj41p6OyA0xZK_Auth0_User_Login.json",
      "workflow_name": "Auth0 User Login",
      "suggested_filename": "util_auth0_automate_httprequest_stopanderror_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "stopAndError",
        "webhook",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "stopanderror",
        "webhook"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, stopanderror, webhook, triggered via webhook",
      "complexity_score": 23
    },
    {
      "original_filename": "0wfomsVO0TQtQkwU_Complete_Guide_to_Setting_Up_and_Generating_TOTP_Codes_in_n8n_🔐.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/0wfomsVO0TQtQkwU_Complete_Guide_to_Setting_Up_and_Generating_TOTP_Codes_in_n8n_🔐.json",
      "workflow_name": "Complete Guide to Setting Up and Generating TOTP Codes in n8n 🔐",
      "suggested_filename": "util_complete_automate_manual_totp.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "totp"
      ],
      "primary_integrations": [
        "manual",
        "totp"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.totp"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, totp, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "7_Daily_Language_Learning.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/7_Daily_Language_Learning.json",
      "workflow_name": "Daily Language Learning",
      "suggested_filename": "ai_daily_ai_process_cron_airtable_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "cron",
        "set",
        "airtable",
        "lingvaNex",
        "vonage",
        "function",
        "hackerNews"
      ],
      "primary_integrations": [
        "cron",
        "airtable",
        "lingvanex"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.hackerNews",
        "n8n-nodes-base.function",
        "n8n-nodes-base.lingvaNex",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.function",
        "n8n-nodes-base.vonage"
      ],
      "business_description": "AI workflow that ai_processs data/processes using cron, airtable, lingvanex, triggered via cron",
      "complexity_score": 15
    },
    {
      "original_filename": "2327_workflow_2327.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2327_workflow_2327.json",
      "workflow_name": "2327_workflow_2327",
      "suggested_filename": "comm_2327_workflow_2327_automate_splitinbatches_slack_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "slack",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "switch",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "slack",
        "gmail"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, slack, gmail, triggered via cron",
      "complexity_score": 24
    },
    {
      "original_filename": "3787_workflow_3787.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3787_workflow_3787.json",
      "workflow_name": "3787_workflow_3787",
      "suggested_filename": "comm_3787_workflow_3787_automate_splitinbatches_executiondata_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "executionData",
        "discord",
        "if",
        "gmail",
        "set",
        "stickyNote",
        "scheduleTrigger",
        "googleDrive",
        "code",
        "limit",
        "n8n",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "executiondata",
        "discord"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.executionData",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, executiondata, discord, triggered via cron",
      "complexity_score": 43
    },
    {
      "original_filename": "2451_workflow_2451.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2451_workflow_2451.json",
      "workflow_name": "2451_workflow_2451",
      "suggested_filename": "util_2451_workflow_2451_automate_manual_compression.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "manualTrigger",
        "aggregate",
        "compression",
        "awsS3"
      ],
      "primary_integrations": [
        "manual",
        "compression",
        "awss3"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.awsS3",
        "n8n-nodes-base.awsS3",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.compression"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, compression, awss3, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "AI web researcher for sales.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI web researcher for sales.json",
      "workflow_name": "AI web researcher for sales",
      "suggested_filename": "ai_researcher_ai_process_splitinbatches_n8nnodeslangchainoutputparserstructured.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.toolSerpApi",
        "n8n-nodes-langchain.agent",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.outputparserstructured",
        "schedule"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolSerpApi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, n8n-nodes-langchain.outputparserstructured, schedule, triggered via cron",
      "complexity_score": 34
    },
    {
      "original_filename": "1605_workflow_1605.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1605_workflow_1605.json",
      "workflow_name": "1605_workflow_1605",
      "suggested_filename": "comm_1605_workflow_1605_automate_spreadsheetfile_httprequest.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "merge",
        "if",
        "set",
        "httpRequest",
        "executeCommand",
        "telegramTrigger",
        "telegram",
        "switch",
        "writeBinaryFile",
        "function",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "httprequest",
        "executecommand"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.switch",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.writeBinaryFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.executeCommand"
      ],
      "business_description": "COMM workflow that automates data/processes using spreadsheetfile, httprequest, executecommand, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "1838_workflow_1838.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1838_workflow_1838.json",
      "workflow_name": "1838_workflow_1838",
      "suggested_filename": "ai_1838_workflow_1838_automate_hubspot_slack.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "hubspot",
        "merge",
        "slack",
        "lemlist",
        "httpRequest",
        "lemlistTrigger",
        "openAi",
        "switch"
      ],
      "primary_integrations": [
        "hubspot",
        "slack",
        "lemlist"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.lemlist",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.lemlistTrigger",
        "n8n-nodes-base.openAi"
      ],
      "business_description": "AI workflow that automates data/processes using hubspot, slack, lemlist, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "3020_workflow_3020.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3020_workflow_3020.json",
      "workflow_name": "3020_workflow_3020",
      "suggested_filename": "ai_3020_workflow_3020_automate_n8nnodeslangchainchat_n8nnodeslangchainhttpreques.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 6,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, n8n-nodes-langchain.httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "4AG83ybt0S3WQbkS_Daily_AI_News_Translation_&_Summary_with_GPT-4_and_Telegram_Delivery.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/4AG83ybt0S3WQbkS_Daily_AI_News_Translation_&_Summary_with_GPT-4_and_Telegram_Delivery.json",
      "workflow_name": "Daily AI News Translation & Summary with GPT-4 and Telegram Delivery",
      "suggested_filename": "ai_daily_ai_process_httprequest_schedule_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "telegram"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, schedule, n8n-nodes-langchain.lmchatopenai, triggered via cron",
      "complexity_score": 20
    },
    {
      "original_filename": "2_Daily_Text_Affirmations.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2_Daily_Text_Affirmations.json",
      "workflow_name": "Daily Text Affirmations",
      "suggested_filename": "ai_daily_ai_process_httprequest_telegram_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "httpRequest",
        "telegram",
        "cron"
      ],
      "primary_integrations": [
        "httprequest",
        "telegram",
        "cron"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, telegram, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "kJMoiGRorIlsTYZv_Amazon_keywords.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/kJMoiGRorIlsTYZv_Amazon_keywords.json",
      "workflow_name": "Amazon keywords",
      "suggested_filename": "data_amazon_automate_httprequest_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "splitOut",
        "airtable",
        "code",
        "aggregate"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "airtable"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.code",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, webhook, airtable, triggered via webhook",
      "complexity_score": 20
    },
    {
      "original_filename": "uoBZx3eMvLMxlHCS_[OPS]_Restore_workflows_from_GitHub_to_n8n.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/uoBZx3eMvLMxlHCS_[OPS]_Restore_workflows_from_GitHub_to_n8n.json",
      "workflow_name": "[OPS] Restore workflows from GitHub to n8n",
      "suggested_filename": "ops_restore_automate_manual_github.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "if",
        "noOp",
        "stickyNote",
        "set",
        "manualTrigger",
        "github",
        "n8n"
      ],
      "primary_integrations": [
        "manual",
        "github",
        "n8n"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.github",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.github",
        "n8n-nodes-base.set",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "OPS workflow that automates data/processes using manual, github, n8n, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "2728_workflow_2728.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2728_workflow_2728.json",
      "workflow_name": "2728_workflow_2728",
      "suggested_filename": "comm_2728_workflow_2728_automate_splitinbatches_slack_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "splitInBatches",
        "slack",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "serviceNow",
        "sort",
        "limit",
        "switch",
        "summarize",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "splitinbatches",
        "slack",
        "httprequest"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.serviceNow",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, slack, httprequest, triggered via webhook",
      "complexity_score": 42
    },
    {
      "original_filename": "7Pw91QNT4UGeNmL5_Customer_and_Sales_Support.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/7Pw91QNT4UGeNmL5_Customer_and_Sales_Support.json",
      "workflow_name": "Customer and Sales Support",
      "suggested_filename": "ai_customer_automate_n8nnodeslangchainmemorybufferwindow_googlesheets.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "googleSheetsTool",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "googlesheets",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 7,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.googleSheetsTool",
        "n8n-nodes-base.googleSheetsTool",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.googleSheetsTool"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, googlesheets, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "CV Resume PDF Parsing with Multimodal Vision AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/CV Resume PDF Parsing with Multimodal Vision AI.json",
      "workflow_name": "CV Resume PDF Parsing with Multimodal Vision AI",
      "suggested_filename": "ai_resume_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstru.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "if",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "googleDrive",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "editImage"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.editImage",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "6Yzmlp5xF6oHo1VW_Text_to_Speech_(OpenAI).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/6Yzmlp5xF6oHo1VW_Text_to_Speech_(OpenAI).json",
      "workflow_name": "Text to Speech (OpenAI)",
      "suggested_filename": "ai_text_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "2433_workflow_2433.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2433_workflow_2433.json",
      "workflow_name": "2433_workflow_2433",
      "suggested_filename": "ai_2433_workflow_2433_automate_gmail_httprequest_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "wait",
        "if",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "openAi",
        "code",
        "html"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, httprequest, schedule, triggered via cron",
      "complexity_score": 32
    },
    {
      "original_filename": "AI Youtube Trend Finder Based On Niche.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Youtube Trend Finder Based On Niche.json",
      "workflow_name": "Complete Youtube",
      "suggested_filename": "ai_complete_automate_n8nnodeslangchainmemorybufferwindow_splitinbatches.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "splitInBatches",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "code",
        "youTube"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "splitinbatches",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 15,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, splitinbatches, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "1111_workflow_1111.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1111_workflow_1111.json",
      "workflow_name": "1111_workflow_1111",
      "suggested_filename": "util_1111_workflow_1111_automate_awss3_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "awsS3",
        "manualTrigger",
        "awsTranscribe"
      ],
      "primary_integrations": [
        "awss3",
        "manual",
        "awstranscribe"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.awsTranscribe",
        "n8n-nodes-base.awsS3"
      ],
      "business_description": "UTIL workflow that automates data/processes using awss3, manual, awstranscribe, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "IjQRdNu2ItwNnGL2_[hiroshidigital.com]_Send_Message_In_Larksuite.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/IjQRdNu2ItwNnGL2_[hiroshidigital.com]_Send_Message_In_Larksuite.json",
      "workflow_name": "[hiroshidigital.com] Send Message In Larksuite",
      "suggested_filename": "comm_hiroshidigital_send_httprequest_manual.json",
      "category": "COMM",
      "business_function": "send",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "COMM workflow that sends data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "7_Publish_post_to_a_publication.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/7_Publish_post_to_a_publication.json",
      "workflow_name": "Publish post to a publication",
      "suggested_filename": "content_publish_automate_medium_manual.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "medium",
        "manualTrigger"
      ],
      "primary_integrations": [
        "medium",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.medium"
      ],
      "business_description": "CONTENT workflow that automates data/processes using medium, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "vssVsRO0FW6InbaY_Translate.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/vssVsRO0FW6InbaY_Translate.json",
      "workflow_name": "Translate",
      "suggested_filename": "util_translate_automate_form_extractfromfile.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "form",
        "splitOut",
        "extractFromFile",
        "code",
        "aggregate",
        "convertToFile",
        "googleTranslate",
        "formTrigger"
      ],
      "primary_integrations": [
        "form",
        "extractfromfile",
        "converttofile"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleTranslate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.form",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.code"
      ],
      "business_description": "UTIL workflow that automates data/processes using form, extractfromfile, converttofile, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "533_workflow_533.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/533_workflow_533.json",
      "workflow_name": "533_workflow_533",
      "suggested_filename": "util_533_workflow_533_automate_acuityscheduling.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "acuitySchedulingTrigger"
      ],
      "primary_integrations": [
        "acuityscheduling"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.acuitySchedulingTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using acuityscheduling, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "CYv2u2izrgZWk5bK_DigialOceanUpload.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/CYv2u2izrgZWk5bK_DigialOceanUpload.json",
      "workflow_name": "DigialOceanUpload",
      "suggested_filename": "util_digialoceanupload_automate_form_form.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "form",
        "s3",
        "formTrigger"
      ],
      "primary_integrations": [
        "form",
        "form"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.s3",
        "n8n-nodes-base.form"
      ],
      "business_description": "UTIL workflow that automates data/processes using form, form, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "467_workflow_467.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/467_workflow_467.json",
      "workflow_name": "467_workflow_467",
      "suggested_filename": "util_467_workflow_467_automate_mautic_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "if",
        "mautic",
        "set",
        "webhook",
        "switch",
        "function"
      ],
      "primary_integrations": [
        "mautic",
        "webhook"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.if"
      ],
      "business_description": "UTIL workflow that automates data/processes using mautic, webhook, triggered via webhook",
      "complexity_score": 24
    },
    {
      "original_filename": "wGv0NPBA0QLp4rQ6_Upload_video_to_drive_via_google_script.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/wGv0NPBA0QLp4rQ6_Upload_video_to_drive_via_google_script.json",
      "workflow_name": "Upload video to drive via google script",
      "suggested_filename": "content_upload_automate_httprequest_manual.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "manualTrigger",
        "googleDrive"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "googledrive"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "CONTENT workflow that automates data/processes using httprequest, manual, googledrive, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "172_Create_a_table,_and_insert_and_update_data_in_the_table_in_Snowflake.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/172_Create_a_table,_and_insert_and_update_data_in_the_table_in_Snowflake.json",
      "workflow_name": "Create a table, and insert and update data in the table in Snowflake",
      "suggested_filename": "data_create_create_snowflake_manual.json",
      "category": "DATA",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "snowflake",
        "set",
        "manualTrigger"
      ],
      "primary_integrations": [
        "snowflake",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.snowflake",
        "n8n-nodes-base.snowflake",
        "n8n-nodes-base.set",
        "n8n-nodes-base.snowflake"
      ],
      "business_description": "DATA workflow that creates data/processes using snowflake, manual, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "3942_workflow_3942.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3942_workflow_3942.json",
      "workflow_name": "3942_workflow_3942",
      "suggested_filename": "ai_3942_workflow_3942_automate_splitinbatches_n8nnodeslangchainmemorybufferwindo.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.memoryBufferWindow",
        "if",
        "noOp",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-langchain.agent",
        "code",
        "n8n-nodes-langchain.toolWorkflow",
        "googleSheets",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 19,
      "node_types": [
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "tHgDFmFyuj6DnP6l_🎦💌Advanced_YouTube_RSS_Feed_Buddy_for_Your_Favorite_Channels.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/tHgDFmFyuj6DnP6l_🎦💌Advanced_YouTube_RSS_Feed_Buddy_for_Your_Favorite_Channels.json",
      "workflow_name": "🎦💌Advanced YouTube RSS Feed Buddy for Your Favorite Channels",
      "suggested_filename": "ai_advanced_automate_n8nnodeslangchainchainllm_gmail_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "filter",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "gmail",
        "httpRequest",
        "rssFeedRead",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "telegram",
        "code",
        "aggregate",
        "manualTrigger",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "gmail",
        "httprequest"
      ],
      "total_nodes": 41,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.code",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, gmail, httprequest, triggered via cron",
      "complexity_score": 57
    },
    {
      "original_filename": "__Email_Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/__Email_Agent.json",
      "workflow_name": "🤖Email Agent",
      "suggested_filename": "ai_email_ai_process_n8nnodeslangchainlmchatopenai_n8nnodeslangchainagent.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "gmailTool",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmchatopenai",
        "n8n-nodes-langchain.agent",
        "gmail"
      ],
      "total_nodes": 12,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.executeWorkflowTrigger"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.lmchatopenai, n8n-nodes-langchain.agent, gmail, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "1537_workflow_1537.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1537_workflow_1537.json",
      "workflow_name": "1537_workflow_1537",
      "suggested_filename": "util_1537_workflow_1537_automate_functionitem_itemlists.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "functionItem",
        "itemLists",
        "function"
      ],
      "primary_integrations": [
        "functionitem",
        "itemlists"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.function"
      ],
      "business_description": "UTIL workflow that automates data/processes using functionitem, itemlists, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2015_workflow_2015.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2015_workflow_2015.json",
      "workflow_name": "2015_workflow_2015",
      "suggested_filename": "data_2015_workflow_2015_automate_httprequest_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "googlesheets"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, manual, googlesheets, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "1_Website_check.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_Website_check.json",
      "workflow_name": "Website check",
      "suggested_filename": "comm_website_validate_cron_httprequest_cron.json",
      "category": "COMM",
      "business_function": "validate",
      "trigger_type": "cron",
      "integrations": [
        "cron",
        "httpRequest",
        "discord",
        "if"
      ],
      "primary_integrations": [
        "cron",
        "httprequest",
        "discord"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.cron"
      ],
      "business_description": "COMM workflow that validates data/processes using cron, httprequest, discord, triggered via cron",
      "complexity_score": 9
    },
    {
      "original_filename": "3464_workflow_3464.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3464_workflow_3464.json",
      "workflow_name": "3464_workflow_3464",
      "suggested_filename": "comm_3464_workflow_3464_automate_splitinbatches_gmail.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "if",
        "gmailTrigger",
        "gmail",
        "stickyNote",
        "set",
        "googleDrive",
        "googleSheets",
        "function"
      ],
      "primary_integrations": [
        "splitinbatches",
        "gmail",
        "gmail"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.if",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.function",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, gmail, gmail, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "1223_workflow_1223.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1223_workflow_1223.json",
      "workflow_name": "1223_workflow_1223",
      "suggested_filename": "comm_1223_workflow_1223_automate_hubspot_gmail.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "hubspot",
        "if",
        "noOp",
        "gmail",
        "set",
        "typeformTrigger"
      ],
      "primary_integrations": [
        "hubspot",
        "gmail",
        "typeform"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "COMM workflow that automates data/processes using hubspot, gmail, typeform, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "AI-Powered Children_s English Storytelling on Telegram with OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI-Powered Children_s English Storytelling on Telegram with OpenAI.json",
      "workflow_name": "AI-Powered Children_s English Storytelling on Telegram with OpenAI",
      "suggested_filename": "ai_powered_ai_process_n8nnodeslangchainchainsummarization_schedule_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chainSummarization",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.openAi",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainsummarization",
        "schedule",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 14,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainsummarization, schedule, n8n-nodes-langchain.lmchatopenai, triggered via cron",
      "complexity_score": 22
    },
    {
      "original_filename": "3969_workflow_3969.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3969_workflow_3969.json",
      "workflow_name": "3969_workflow_3969",
      "suggested_filename": "ai_3969_workflow_3969_automate_splitinbatches_slack_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "slack",
        "n8n-nodes-langchain.chainLlm",
        "switch",
        "noOp",
        "if",
        "stickyNote",
        "set",
        "scheduleTrigger",
        "splitOut",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "code",
        "aggregate",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "slack",
        "n8n-nodes-langchain.chainllm"
      ],
      "total_nodes": 47,
      "node_types": [
        "n8n-nodes-base.slack",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.code",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.slack",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, slack, n8n-nodes-langchain.chainllm, triggered via cron",
      "complexity_score": 63
    },
    {
      "original_filename": "3785_workflow_3785.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3785_workflow_3785.json",
      "workflow_name": "3785_workflow_3785",
      "suggested_filename": "data_3785_workflow_3785_automate_httprequest_form.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "filter",
        "merge",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "form",
        "splitOut",
        "manualTrigger",
        "extractFromFile",
        "code",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "form",
        "manual"
      ],
      "total_nodes": 36,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.form",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.form",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, form, manual, triggered via manual",
      "complexity_score": 49
    },
    {
      "original_filename": "2453_workflow_2453.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2453_workflow_2453.json",
      "workflow_name": "2453_workflow_2453",
      "suggested_filename": "comm_2453_workflow_2453_automate_supabase_httprequest.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "supabase",
        "merge",
        "if",
        "stickyNote",
        "httpRequest",
        "telegramTrigger",
        "telegram"
      ],
      "primary_integrations": [
        "supabase",
        "httprequest",
        "telegram"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using supabase, httprequest, telegram, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "Automate Blog Creation in Brand Voice with AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Automate Blog Creation in Brand Voice with AI.json",
      "workflow_name": "Automate Blog Creation in Brand Voice with AI",
      "suggested_filename": "ai_automate_ai_process_wordpress_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "wordpress",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "httpRequest",
        "aggregate",
        "markdown",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "manualTrigger",
        "splitOut",
        "limit",
        "html"
      ],
      "primary_integrations": [
        "wordpress",
        "n8n-nodes-langchain.chainllm",
        "httprequest"
      ],
      "total_nodes": 27,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.html",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using wordpress, n8n-nodes-langchain.chainllm, httprequest, triggered via manual",
      "complexity_score": 41
    },
    {
      "original_filename": "Create a Branded AI-Powered Website Chatbot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Create a Branded AI-Powered Website Chatbot.json",
      "workflow_name": "Create a Branded AI-Powered Website Chatbot",
      "suggested_filename": "ai_create_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "microsoftOutlook",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "code",
        "switch",
        "executeWorkflowTrigger",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 24,
      "node_types": [
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.if",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 39
    },
    {
      "original_filename": "1_Wordpress-to-csv.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_Wordpress-to-csv.json",
      "workflow_name": "Wordpress-to-csv",
      "suggested_filename": "content_wordpress_automate_spreadsheetfile_writebinaryfile.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "writeBinaryFile",
        "wordpress",
        "manualTrigger"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "writebinaryfile",
        "wordpress"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.writeBinaryFile"
      ],
      "business_description": "CONTENT workflow that automates data/processes using spreadsheetfile, writebinaryfile, wordpress, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "qps97Q4NEet1Pkm4_puq-docker-immich-deploy.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/qps97Q4NEet1Pkm4_puq-docker-immich-deploy.json",
      "workflow_name": "puq-docker-immich-deploy",
      "suggested_filename": "ops_docker_automate_ssh_webhook_webhook.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "ssh",
        "stickyNote",
        "set",
        "webhook",
        "code",
        "switch",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "ssh",
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 35,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.ssh",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch"
      ],
      "business_description": "OPS workflow that automates data/processes using ssh, webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 43
    },
    {
      "original_filename": "2347_workflow_2347.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2347_workflow_2347.json",
      "workflow_name": "2347_workflow_2347",
      "suggested_filename": "ai_2347_workflow_2347_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.toolCode",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "code",
        "n8n-nodes-langchain.agent",
        "n8n"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.code"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.toolCode",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.n8n"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.code, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "Notion AI Assistant Generator.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Notion AI Assistant Generator.json",
      "workflow_name": "Notion AI Assistant Generator",
      "suggested_filename": "ai_notion_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainou.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.textClassifier",
        "notion",
        "n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-langchain.agent",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "119_Get_details_of_a_forum_in_Disqus.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/119_Get_details_of_a_forum_in_Disqus.json",
      "workflow_name": "Get details of a forum in Disqus",
      "suggested_filename": "ai_details_ai_process_disqus_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "disqus",
        "manualTrigger"
      ],
      "primary_integrations": [
        "disqus",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.disqus"
      ],
      "business_description": "AI workflow that ai_processs data/processes using disqus, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Build a Tax Code Assistant with Qdrant, Mistral.ai and OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Build a Tax Code Assistant with Qdrant, Mistral.ai and OpenAI.json",
      "workflow_name": "Build a Tax Code Assistant with Qdrant, Mistral.ai and OpenAI",
      "suggested_filename": "ai_build_ai_process_httprequest_extractfromfile.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "httpRequest",
        "extractFromFile",
        "n8n-nodes-langchain.embeddingsMistralCloud",
        "filter",
        "splitInBatches",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "stickyNote",
        "compression",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "executeWorkflowTrigger",
        "n8n-nodes-langchain.memoryBufferWindow",
        "set",
        "splitOut",
        "manualTrigger",
        "switch"
      ],
      "primary_integrations": [
        "httprequest",
        "extractfromfile",
        "n8n-nodes-langchain.embeddingsmistralcloud"
      ],
      "total_nodes": 38,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.compression",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.wait",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, extractfromfile, n8n-nodes-langchain.embeddingsmistralcloud, triggered via manual",
      "complexity_score": 59
    },
    {
      "original_filename": "3686_workflow_3686.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3686_workflow_3686.json",
      "workflow_name": "3686_workflow_3686",
      "suggested_filename": "comm_3686_workflow_3686_automate_gmail_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "gmail",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "manualTrigger",
        "telegram",
        "aggregate",
        "n8n-nodes-langchain.agent",
        "gmailTool",
        "filter"
      ],
      "primary_integrations": [
        "gmail",
        "telegram",
        "n8n-nodes-langchain.lmchatopenrouter"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.filter",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, telegram, n8n-nodes-langchain.lmchatopenrouter, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "Make OpenAI Citation for File Retrieval RAG.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Make OpenAI Citation for File Retrieval RAG.json",
      "workflow_name": "Make OpenAI Citation for File Retrieval RAG",
      "suggested_filename": "ai_make_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "httpRequest",
        "markdown",
        "splitOut",
        "code",
        "aggregate",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.code"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "2550_workflow_2550.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2550_workflow_2550.json",
      "workflow_name": "2550_workflow_2550",
      "suggested_filename": "data_2550_workflow_2550_automate_crypto_emailsend.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "crypto",
        "if",
        "stickyNote",
        "set",
        "emailSend",
        "form",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "crypto",
        "emailsend",
        "form"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.form",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.form",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.form",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using crypto, emailsend, form, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "3_XML_Conversion.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3_XML_Conversion.json",
      "workflow_name": "XML Conversion",
      "suggested_filename": "ai_conversion_automate_xml_manual.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "xml",
        "manualTrigger"
      ],
      "primary_integrations": [
        "xml",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.xml"
      ],
      "business_description": "AI workflow that automates data/processes using xml, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "Automated Hugging Face Paper Summary Fetching & Categorization Workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Automated Hugging Face Paper Summary Fetching & Categorization Workflow.json",
      "workflow_name": "[3/3] Anomaly detection tool (crops dataset)",
      "suggested_filename": "data_anomaly_automate_httprequest_executeworkflow.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "code",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "executeworkflow"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, executeworkflow, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "IwOOVikQC7cn9VTv_Perform_a_domain_search_(single)_with_Icypeas.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/IwOOVikQC7cn9VTv_Perform_a_domain_search_(single)_with_Icypeas.json",
      "workflow_name": "Perform a domain search (single) with Icypeas",
      "suggested_filename": "ai_perform_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "519_workflow_519.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/519_workflow_519.json",
      "workflow_name": "519_workflow_519",
      "suggested_filename": "util_519_workflow_519_automate_hunter_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "hunter",
        "manualTrigger"
      ],
      "primary_integrations": [
        "hunter",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.hunter"
      ],
      "business_description": "UTIL workflow that automates data/processes using hunter, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2295_workflow_2295.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2295_workflow_2295.json",
      "workflow_name": "2295_workflow_2295",
      "suggested_filename": "util_2295_workflow_2295_automate_manual_n8n.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "stickyNote",
        "manualTrigger",
        "n8n",
        "convertToFile"
      ],
      "primary_integrations": [
        "manual",
        "n8n",
        "converttofile"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, n8n, converttofile, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "3635_workflow_3635.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3635_workflow_3635.json",
      "workflow_name": "3635_workflow_3635",
      "suggested_filename": "ops_3635_workflow_3635_automate_httprequest_n8nnodeslangchainmcp.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "aggregate",
        "n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-langchain.toolWorkflow",
        "github",
        "switch",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.mcp",
        "n8n-nodes-langchain.workflow"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.github",
        "n8n-nodes-base.github",
        "n8n-nodes-base.github",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "OPS workflow that automates data/processes using httprequest, n8n-nodes-langchain.mcp, n8n-nodes-langchain.workflow, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "o8iTqIh2sVvnuWz5_RAG_&_GenAI_App_With_WordPress_Content.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/o8iTqIh2sVvnuWz5_RAG_&_GenAI_App_With_WordPress_Content.json",
      "workflow_name": "RAG & GenAI App With WordPress Content",
      "suggested_filename": "ai_genai_ai_process_n8nnodeslangchainmemorypostgreschat_httprequest_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.memoryPostgresChat",
        "httpRequest",
        "aggregate",
        "filter",
        "postgres",
        "splitInBatches",
        "n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-langchain.chatTrigger",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "supabase",
        "merge",
        "stickyNote",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "respondToWebhook",
        "wordpress",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "set",
        "markdown",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "manualTrigger",
        "switch"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorypostgreschat",
        "httprequest",
        "postgres"
      ],
      "total_nodes": 53,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorypostgreschat, httprequest, postgres, triggered via cron",
      "complexity_score": 76
    },
    {
      "original_filename": "2244_workflow_2244.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2244_workflow_2244.json",
      "workflow_name": "2244_workflow_2244",
      "suggested_filename": "util_2244_workflow_2244_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "httpRequest",
        "webhook",
        "code",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 14
    },
    {
      "original_filename": "Building Your First WhatsApp Chatbot (1).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Building Your First WhatsApp Chatbot (1).json",
      "workflow_name": "Building Your First WhatsApp Chatbot (1)",
      "suggested_filename": "ai_building_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvector.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolVectorStore",
        "whatsApp",
        "n8n-nodes-langchain.vectorStoreInMemory",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "extractFromFile",
        "n8n-nodes-langchain.agent",
        "switch",
        "whatsAppTrigger",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.vectorstore",
        "whatsapp"
      ],
      "total_nodes": 28,
      "node_types": [
        "n8n-nodes-base.whatsAppTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.whatsApp",
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.vectorstore, whatsapp, triggered via manual",
      "complexity_score": 43
    },
    {
      "original_filename": "Telegram Bot with Supabase memory and OpenAI assistant integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Telegram Bot with Supabase memory and OpenAI assistant integration.json",
      "workflow_name": "Telegram Bot with Supabase memory and OpenAI assistant integration",
      "suggested_filename": "ai_telegram_ai_process_supabase_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "supabase",
        "merge",
        "if",
        "stickyNote",
        "httpRequest",
        "telegramTrigger",
        "telegram"
      ],
      "primary_integrations": [
        "supabase",
        "httprequest",
        "telegram"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using supabase, httprequest, telegram, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "9nBQ1BfwxLhuzTcK_google_drive_to_instagram,_tiktok_and_youtube.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/9nBQ1BfwxLhuzTcK_google_drive_to_instagram,_tiktok_and_youtube.json",
      "workflow_name": "google drive to instagram, tiktok and youtube",
      "suggested_filename": "ai_google_automate_error_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "errorTrigger",
        "if",
        "stickyNote",
        "httpRequest",
        "readBinaryFile",
        "telegram",
        "googleDrive",
        "writeBinaryFile",
        "n8n-nodes-langchain.openAi",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "error",
        "httprequest",
        "readbinaryfile"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.errorTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.writeBinaryFile",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that automates data/processes using error, httprequest, readbinaryfile, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "d23vz3qcBf6KfuZA_🎦🚀_YouTube_Video_Comment_Analysis_Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/d23vz3qcBf6KfuZA_🎦🚀_YouTube_Video_Comment_Analysis_Agent.json",
      "workflow_name": "🎦🚀 YouTube Video Comment Analysis Agent",
      "suggested_filename": "ai_youtube_automate_gmail_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "gmail",
        "httpRequest",
        "markdown",
        "splitOut",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "code",
        "aggregate",
        "n8n-nodes-langchain.agent",
        "googleDrive",
        "summarize",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "markdown"
      ],
      "total_nodes": 25,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.markdown",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, httprequest, markdown, triggered via manual",
      "complexity_score": 40
    },
    {
      "original_filename": "104_Look_up_a_person_using_their_email_in_Clearbit.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/104_Look_up_a_person_using_their_email_in_Clearbit.json",
      "workflow_name": "Look up a person using their email in Clearbit",
      "suggested_filename": "ai_look_ai_process_clearbit_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "clearbit",
        "manualTrigger"
      ],
      "primary_integrations": [
        "clearbit",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.clearbit"
      ],
      "business_description": "AI workflow that ai_processs data/processes using clearbit, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "191_Create_a_screenshot_of_a_website_and_send_it_to_a_telegram_channel.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/191_Create_a_screenshot_of_a_website_and_send_it_to_a_telegram_channel.json",
      "workflow_name": "Create a screenshot of a website and send it to a telegram channel",
      "suggested_filename": "comm_create_create_uproc_manual.json",
      "category": "COMM",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "uproc",
        "manualTrigger",
        "telegram"
      ],
      "primary_integrations": [
        "uproc",
        "manual",
        "telegram"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.uproc"
      ],
      "business_description": "COMM workflow that creates data/processes using uproc, manual, telegram, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "1939_workflow_1939.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1939_workflow_1939.json",
      "workflow_name": "1939_workflow_1939",
      "suggested_filename": "comm_1939_workflow_1939_automate_datetime_gmail_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "if",
        "dateTime",
        "gmail",
        "noOp",
        "stickyNote",
        "httpRequest",
        "notion",
        "scheduleTrigger",
        "notionTrigger"
      ],
      "primary_integrations": [
        "datetime",
        "gmail",
        "httprequest"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.if",
        "n8n-nodes-base.notionTrigger",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using datetime, gmail, httprequest, triggered via cron",
      "complexity_score": 24
    },
    {
      "original_filename": "2581_workflow_2581.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2581_workflow_2581.json",
      "workflow_name": "2581_workflow_2581",
      "suggested_filename": "comm_2581_workflow_2581_automate_slack_form.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "stickyNote",
        "form",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "slack",
        "form",
        "googlesheets"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.form",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, form, googlesheets, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "xlMrGt0c1eFi4J1U_Addon_for_Workflow_Nodes_Update_Check_Template.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/xlMrGt0c1eFi4J1U_Addon_for_Workflow_Nodes_Update_Check_Template.json",
      "workflow_name": "Addon for Workflow Nodes Update Check Template",
      "suggested_filename": "comm_addon_create_gmail_n8n.json",
      "category": "COMM",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "gmail",
        "stickyNote",
        "set",
        "code",
        "n8n",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "n8n",
        "executeworkflow"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.code",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that creates data/processes using gmail, n8n, executeworkflow, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "ift5iHQG9G2lzJzP_Linkedin_to_Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ift5iHQG9G2lzJzP_Linkedin_to_Airtable.json",
      "workflow_name": "Linkedin to Airtable",
      "suggested_filename": "ai_linkedin_ai_process_httprequest_schedule_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "airtable",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "airtable"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, schedule, airtable, triggered via cron",
      "complexity_score": 17
    },
    {
      "original_filename": "Email Subscription Service with n8n Forms, Airtable and AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Email Subscription Service with n8n Forms, Airtable and AI.json",
      "workflow_name": "Email Subscription Service with n8n Forms, Airtable and AI",
      "suggested_filename": "ai_email_ai_process_n8nnodeslangchainmemorybufferwindow_executiondata_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "filter",
        "n8n-nodes-langchain.memoryBufferWindow",
        "executionData",
        "n8n-nodes-langchain.lmChatGroq",
        "gmail",
        "set",
        "stickyNote",
        "scheduleTrigger",
        "n8n-nodes-langchain.toolWikipedia",
        "airtable",
        "code",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.openAi",
        "editImage",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "executiondata",
        "n8n-nodes-langchain.lmchatgroq"
      ],
      "total_nodes": 32,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.code",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.executionData",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatGroq",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, executiondata, n8n-nodes-langchain.lmchatgroq, triggered via cron",
      "complexity_score": 49
    },
    {
      "original_filename": "3505_workflow_3505.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3505_workflow_3505.json",
      "workflow_name": "3505_workflow_3505",
      "suggested_filename": "ai_3505_workflow_3505_automate_gmail_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "gmail",
        "httpRequest",
        "code",
        "sort",
        "n8n-nodes-langchain.informationExtractor",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "splitOut",
        "convertToFile"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "sort"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.code",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, httprequest, sort, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "4aKofiCShqdDSsIS_Import_Odoo_Product_Images_from_Google_Drive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/4aKofiCShqdDSsIS_Import_Odoo_Product_Images_from_Google_Drive.json",
      "workflow_name": "Import Odoo Product Images from Google Drive",
      "suggested_filename": "ecommerce_import_transfer_schedule_googlechat_cron.json",
      "category": "ECOMMERCE",
      "business_function": "transfer",
      "trigger_type": "cron",
      "integrations": [
        "scheduleTrigger",
        "googleChat",
        "manualTrigger",
        "googleDrive",
        "code",
        "switch",
        "extractFromFile",
        "summarize",
        "odoo",
        "filter"
      ],
      "primary_integrations": [
        "schedule",
        "googlechat",
        "manual"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.filter",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.code",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.googleChat",
        "n8n-nodes-base.odoo",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.odoo",
        "n8n-nodes-base.odoo",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.odoo",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.manualTrigger"
      ],
      "business_description": "ECOMMERCE workflow that transfers data/processes using schedule, googlechat, manual, triggered via cron",
      "complexity_score": 29
    },
    {
      "original_filename": "1059_workflow_1059.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1059_workflow_1059.json",
      "workflow_name": "1059_workflow_1059",
      "suggested_filename": "comm_1059_workflow_1059_automate_webhook_workflow_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "set",
        "webhook",
        "workflowTrigger",
        "mattermost"
      ],
      "primary_integrations": [
        "webhook",
        "workflow",
        "mattermost"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.workflowTrigger"
      ],
      "business_description": "COMM workflow that automates data/processes using webhook, workflow, mattermost, triggered via webhook",
      "complexity_score": 8
    },
    {
      "original_filename": "2116_workflow_2116.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2116_workflow_2116.json",
      "workflow_name": "2116_workflow_2116",
      "suggested_filename": "biz_2116_workflow_2116_automate_hubspot_hunter.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "hubspot",
        "if",
        "noOp",
        "stickyNote",
        "hunter",
        "clearbit",
        "formTrigger"
      ],
      "primary_integrations": [
        "hubspot",
        "hunter",
        "clearbit"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.hunter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.clearbit",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.clearbit",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "BIZ workflow that automates data/processes using hubspot, hunter, clearbit, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "2578_Linear_Project_Status_and_End_Date_to_Productboard_feature_Sync.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2578_Linear_Project_Status_and_End_Date_to_Productboard_feature_Sync.json",
      "workflow_name": "Linear Project Status and End Date to Productboard feature Sync",
      "suggested_filename": "comm_linear_sync_linear_slack.json",
      "category": "COMM",
      "business_function": "sync",
      "trigger_type": "manual",
      "integrations": [
        "linearTrigger",
        "merge",
        "slack",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "code"
      ],
      "primary_integrations": [
        "linear",
        "slack",
        "httprequest"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.linearTrigger",
        "n8n-nodes-base.linearTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that syncs data/processes using linear, slack, httprequest, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "Create dynamic Twitter profile banner.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Create dynamic Twitter profile banner.json",
      "workflow_name": "Create dynamic Twitter profile banner",
      "suggested_filename": "util_create_create_editimage_itemlists.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "editImage",
        "itemLists",
        "httpRequest",
        "manualTrigger",
        "function"
      ],
      "primary_integrations": [
        "editimage",
        "itemlists",
        "httprequest"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.function",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that creates data/processes using editimage, itemlists, httprequest, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "RGVS0tHJV7Wh6aX4_Property_Lead_Contact_Enrichment_from_CRM.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/RGVS0tHJV7Wh6aX4_Property_Lead_Contact_Enrichment_from_CRM.json",
      "workflow_name": "Property Lead Contact Enrichment from CRM",
      "suggested_filename": "biz_property_automate_spreadsheetfile_hubspot_cron.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "spreadsheetFile",
        "hubspot",
        "stickyNote",
        "set",
        "emailSend",
        "httpRequest",
        "scheduleTrigger",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "hubspot",
        "emailsend"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "BIZ workflow that automates data/processes using spreadsheetfile, hubspot, emailsend, triggered via cron",
      "complexity_score": 25
    },
    {
      "original_filename": "HR Job Posting and Evaluation with AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/HR Job Posting and Evaluation with AI.json",
      "workflow_name": "HR Job Posting and Evaluation with AI",
      "suggested_filename": "ai_posting_ai_process_airtable_n8nnodeslangchainoutputparserstructured.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "airtableTool",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "set",
        "emailSend",
        "googleCalendarTool",
        "form",
        "n8n-nodes-langchain.lmChatOpenAi",
        "googleDrive",
        "airtable",
        "extractFromFile",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.openAi",
        "formTrigger"
      ],
      "primary_integrations": [
        "airtable",
        "n8n-nodes-langchain.outputparserstructured",
        "emailsend"
      ],
      "total_nodes": 36,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.airtableTool",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtableTool",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.form",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtableTool",
        "n8n-nodes-base.airtableTool",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.airtable",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.airtableTool",
        "n8n-nodes-base.airtableTool",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using airtable, n8n-nodes-langchain.outputparserstructured, emailsend, triggered via manual",
      "complexity_score": 51
    },
    {
      "original_filename": "EOJfPcM9PPWI1Rmp_Automated_Research_Report_Generation_with_OpenAI,_Wikipedia,_Google_Search,_and_Gmail_Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/EOJfPcM9PPWI1Rmp_Automated_Research_Report_Generation_with_OpenAI,_Wikipedia,_Google_Search,_and_Gmail_Telegram.json",
      "workflow_name": "Automated Research Report Generation with OpenAI, Wikipedia, Google Search, and Gmail/Telegram",
      "suggested_filename": "ai_automated_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainout.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "gmail",
        "httpRequest",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "n8n-nodes-langchain.agent",
        "code",
        "aggregate",
        "googleSheets",
        "manualTrigger",
        "telegram",
        "googleDrive",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 26,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.if"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.outputparserstructured, gmail, triggered via manual",
      "complexity_score": 43
    },
    {
      "original_filename": "1393_workflow_1393.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1393_workflow_1393.json",
      "workflow_name": "1393_workflow_1393",
      "suggested_filename": "comm_1393_workflow_1393_automate_awstextract_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "awsTextract",
        "telegramTrigger",
        "airtable",
        "awsS3"
      ],
      "primary_integrations": [
        "awstextract",
        "telegram",
        "airtable"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.awsTextract",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.awsS3"
      ],
      "business_description": "COMM workflow that automates data/processes using awstextract, telegram, airtable, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "1088_workflow_1088.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1088_workflow_1088.json",
      "workflow_name": "1088_workflow_1088",
      "suggested_filename": "data_1088_workflow_1088_automate_calendly_notion.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "calendlyTrigger",
        "notion"
      ],
      "primary_integrations": [
        "calendly",
        "notion"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.calendlyTrigger",
        "n8n-nodes-base.notion"
      ],
      "business_description": "DATA workflow that automates data/processes using calendly, notion, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "122_Track_an_event_in_Segment.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/122_Track_an_event_in_Segment.json",
      "workflow_name": "Track an event in Segment",
      "suggested_filename": "analytics_track_monitor_segment_manual.json",
      "category": "ANALYTICS",
      "business_function": "monitor",
      "trigger_type": "manual",
      "integrations": [
        "segment",
        "manualTrigger"
      ],
      "primary_integrations": [
        "segment",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.segment"
      ],
      "business_description": "ANALYTICS workflow that monitors data/processes using segment, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Email Subscription Service with n8n Forms, Airtable and AI (1).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Email Subscription Service with n8n Forms, Airtable and AI (1).json",
      "workflow_name": "Email Subscription Service with n8n Forms, Airtable and AI (1)",
      "suggested_filename": "ai_email_ai_process_n8nnodeslangchainmemorybufferwindow_executiondata_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "filter",
        "n8n-nodes-langchain.memoryBufferWindow",
        "executionData",
        "n8n-nodes-langchain.lmChatGroq",
        "gmail",
        "set",
        "stickyNote",
        "scheduleTrigger",
        "n8n-nodes-langchain.toolWikipedia",
        "airtable",
        "code",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.openAi",
        "editImage",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "executiondata",
        "n8n-nodes-langchain.lmchatgroq"
      ],
      "total_nodes": 32,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.code",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.executionData",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatGroq",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, executiondata, n8n-nodes-langchain.lmchatgroq, triggered via cron",
      "complexity_score": 49
    },
    {
      "original_filename": "jhNsy4dPQYw9QDaa_Zoom_AI_Meeting_Assistant.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/jhNsy4dPQYw9QDaa_Zoom_AI_Meeting_Assistant.json",
      "workflow_name": "Zoom AI Meeting Assistant",
      "suggested_filename": "ai_zoom_ai_process_clickup_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "clickUp",
        "httpRequest",
        "n8n-nodes-langchain.lmChatAnthropic",
        "extractFromFile",
        "filter",
        "splitInBatches",
        "emailSend",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "microsoftOutlookTool",
        "stickyNote",
        "n8n-nodes-langchain.toolThink",
        "stopAndError",
        "zoom",
        "executeWorkflowTrigger",
        "set",
        "splitOut",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "clickup",
        "httprequest",
        "n8n-nodes-langchain.lmchatanthropic"
      ],
      "total_nodes": 25,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.zoom",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.emailSend",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.microsoftOutlookTool",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.clickUp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "@n8n/n8n-nodes-langchain.toolThink",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using clickup, httprequest, n8n-nodes-langchain.lmchatanthropic, triggered via manual",
      "complexity_score": 44
    },
    {
      "original_filename": "Ultimate_Personal_Assistant.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Ultimate_Personal_Assistant.json",
      "workflow_name": "Ultimate Personal Assistant",
      "suggested_filename": "ai_ultimate_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalcul.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolCalculator",
        "set",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "telegramTrigger",
        "switch",
        "telegram",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.calculator",
        "n8n-nodes-langchain.httprequest"
      ],
      "total_nodes": 15,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.calculator, n8n-nodes-langchain.httprequest, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "i89dNLYeOVdTwtcL_Extract_&_Summarize_Indeed_Company_Info_with_Bright_Data_and_Google_Gemini.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/i89dNLYeOVdTwtcL_Extract_&_Summarize_Indeed_Company_Info_with_Bright_Data_and_Google_Gemini.json",
      "workflow_name": "Extract & Summarize Indeed Company Info with Bright Data and Google Gemini",
      "suggested_filename": "ai_extract_extract_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.chainSummarization",
        "markdown",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "manualTrigger",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "n8n-nodes-langchain.chainsummarization"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that extracts data/processes using n8n-nodes-langchain.chainllm, httprequest, n8n-nodes-langchain.chainsummarization, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "2367_workflow_2367.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2367_workflow_2367.json",
      "workflow_name": "2367_workflow_2367",
      "suggested_filename": "comm_2367_workflow_2367_automate_slack_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "slack",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook"
      ],
      "primary_integrations": [
        "slack",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, httprequest, webhook, triggered via webhook",
      "complexity_score": 16
    },
    {
      "original_filename": "K3uf8aY8wipScEay_Google_analytics_template.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/K3uf8aY8wipScEay_Google_analytics_template.json",
      "workflow_name": "Google analytics template",
      "suggested_filename": "analytics_google_automate_googleanalytics_httprequest_cron.json",
      "category": "ANALYTICS",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "googleAnalytics",
        "httpRequest",
        "scheduleTrigger",
        "baserow",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "googleanalytics",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.baserow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "ANALYTICS workflow that automates data/processes using googleanalytics, httprequest, schedule, triggered via cron",
      "complexity_score": 29
    },
    {
      "original_filename": "25_Add_subscriber_to_form,_create_tag_and_subscriber_to_the_tag.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/25_Add_subscriber_to_form,_create_tag_and_subscriber_to_the_tag.json",
      "workflow_name": "Add subscriber to form, create tag and subscriber to the tag",
      "suggested_filename": "comm_subscriber_create_manual_convertkit.json",
      "category": "COMM",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "convertKit"
      ],
      "primary_integrations": [
        "manual",
        "convertkit"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.convertKit",
        "n8n-nodes-base.convertKit",
        "n8n-nodes-base.convertKit"
      ],
      "business_description": "COMM workflow that creates data/processes using manual, convertkit, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "HBUhVkSsjslXAojw_Motion-illustration_Workflow_Generated_with_Midjourney_and_Kling_API.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/HBUhVkSsjslXAojw_Motion-illustration_Workflow_Generated_with_Midjourney_and_Kling_API.json",
      "workflow_name": "Motion-illustration Workflow Generated with Midjourney and Kling API",
      "suggested_filename": "util_motion_generate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "generate",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "if",
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if"
      ],
      "business_description": "UTIL workflow that generates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "995_workflow_995.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/995_workflow_995.json",
      "workflow_name": "995_workflow_995",
      "suggested_filename": "util_995_workflow_995_automate_splitinbatches_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "if",
        "set",
        "manualTrigger",
        "function"
      ],
      "primary_integrations": [
        "splitinbatches",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.function",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, manual, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "16_User_Request_Management.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/16_User_Request_Management.json",
      "workflow_name": "User Request Management",
      "suggested_filename": "util_user_automate_typeform_clickup.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "switch",
        "typeformTrigger",
        "set",
        "clickUp"
      ],
      "primary_integrations": [
        "typeform",
        "clickup"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.clickUp",
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch"
      ],
      "business_description": "UTIL workflow that automates data/processes using typeform, clickup, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "kbJb4VMD3SZlcS2u_CoinMarketCap_Exchange_and_Community_Agent_Tool.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/kbJb4VMD3SZlcS2u_CoinMarketCap_Exchange_and_Community_Agent_Tool.json",
      "workflow_name": "CoinMarketCap_Exchange_and_Community_Agent_Tool",
      "suggested_filename": "ai_coinmarketcap_exchange_and_community_agent_tool_automate_n8nnodeslangchainmem.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "57_Send_a_cocktail_recipe_every_day_via_a_Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/57_Send_a_cocktail_recipe_every_day_via_a_Telegram.json",
      "workflow_name": "Send a cocktail recipe every day via a Telegram",
      "suggested_filename": "ai_send_ai_process_httprequest_telegram_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "httpRequest",
        "telegram",
        "cron"
      ],
      "primary_integrations": [
        "httprequest",
        "telegram",
        "cron"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, telegram, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "2305_workflow_2305.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2305_workflow_2305.json",
      "workflow_name": "2305_workflow_2305",
      "suggested_filename": "util_2305_workflow_2305_automate_readwritefile_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "readWriteFile",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "readwritefile",
        "httprequest",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using readwritefile, httprequest, manual, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "2473_workflow_2473.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2473_workflow_2473.json",
      "workflow_name": "2473_workflow_2473",
      "suggested_filename": "ai_2473_workflow_2473_automate_n8nnodeslangchainlmchatanthropic_n8nnodeslangchai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmChatAnthropic",
        "splitOut",
        "n8n-nodes-langchain.agent",
        "manualTrigger",
        "aggregate"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmchatanthropic",
        "n8n-nodes-langchain.agent",
        "manual"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.lmchatanthropic, n8n-nodes-langchain.agent, manual, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "116_Get_all_the_contacts_from_GetResponse_and_update_them.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/116_Get_all_the_contacts_from_GetResponse_and_update_them.json",
      "workflow_name": "Get all the contacts from GetResponse and update them",
      "suggested_filename": "util_contacts_update_getresponse_manual.json",
      "category": "UTIL",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "getResponse",
        "noOp",
        "manualTrigger",
        "if"
      ],
      "primary_integrations": [
        "getresponse",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.getResponse",
        "n8n-nodes-base.if",
        "n8n-nodes-base.getResponse",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "UTIL workflow that updates data/processes using getresponse, manual, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "4_post_to_wallabag.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/4_post_to_wallabag.json",
      "workflow_name": "post to wallabag",
      "suggested_filename": "content_post_automate_httprequest_manual_cron.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "if",
        "noOp",
        "httpRequest",
        "manualTrigger",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "cron"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.function",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "CONTENT workflow that automates data/processes using httprequest, manual, cron, triggered via cron",
      "complexity_score": 17
    },
    {
      "original_filename": "Extract data from resume and create PDF with Gotenberg.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Extract data from resume and create PDF with Gotenberg.json",
      "workflow_name": "Extract data from resume and create PDF with Gotenberg",
      "suggested_filename": "ai_extract_extract_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainchai.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "noOp",
        "set",
        "stickyNote",
        "httpRequest",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "code",
        "extractFromFile",
        "convertToFile"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 43,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that extracts data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via manual",
      "complexity_score": 58
    },
    {
      "original_filename": "xyLfWaqdIoZmbTfv_ICP_Company_Scoring.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/xyLfWaqdIoZmbTfv_ICP_Company_Scoring.json",
      "workflow_name": "ICP Company Scoring",
      "suggested_filename": "data_company_automate_googlesheets_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "code",
        "manualTrigger",
        "airtop"
      ],
      "primary_integrations": [
        "googlesheets",
        "manual",
        "airtop"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, manual, airtop, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "2_post_to_mattermost_v2.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2_post_to_mattermost_v2.json",
      "workflow_name": "post to mattermost v2",
      "suggested_filename": "content_post_automate_httprequest_rssfeedread_cron.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "noOp",
        "httpRequest",
        "rssFeedRead",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "httprequest",
        "rssfeedread",
        "cron"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.function",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "CONTENT workflow that automates data/processes using httprequest, rssfeedread, cron, triggered via cron",
      "complexity_score": 12
    },
    {
      "original_filename": "AjJ7O98qjw8XVirk_Build_an_OpenAI_Assistant_with_Google_Drive_Integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AjJ7O98qjw8XVirk_Build_an_OpenAI_Assistant_with_Google_Drive_Integration.json",
      "workflow_name": "Build an OpenAI Assistant with Google Drive Integration",
      "suggested_filename": "ai_build_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "manualTrigger",
        "googleDrive",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "manual"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, manual, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "1118_workflow_1118.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1118_workflow_1118.json",
      "workflow_name": "1118_workflow_1118",
      "suggested_filename": "util_1118_workflow_1118_automate_splitinbatches_trello_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "if",
        "trello",
        "noOp",
        "set",
        "googleCalendar",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "splitinbatches",
        "trello",
        "googlecalendar"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.function",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.trello",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.cron"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, trello, googlecalendar, triggered via cron",
      "complexity_score": 16
    },
    {
      "original_filename": "3444_workflow_3444.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3444_workflow_3444.json",
      "workflow_name": "3444_workflow_3444",
      "suggested_filename": "util_3444_workflow_3444_automate_webhook_redis_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "noOp",
        "if",
        "wait",
        "set",
        "stickyNote",
        "webhook",
        "code",
        "switch",
        "redis"
      ],
      "primary_integrations": [
        "webhook",
        "redis"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, redis, triggered via webhook",
      "complexity_score": 27
    },
    {
      "original_filename": "3332_workflow_3332.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3332_workflow_3332.json",
      "workflow_name": "3332_workflow_3332",
      "suggested_filename": "data_3332_workflow_3332_automate_googlesheets_googledrive.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSheetsTrigger",
        "googleDrive"
      ],
      "primary_integrations": [
        "googlesheets",
        "googledrive"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.googleSheetsTrigger",
        "@custom-js/n8n-nodes-pdf-toolkit.websiteScreenshot",
        "n8n-nodes-base.googleDrive"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, googledrive, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "nmVATBvrztDxZX6z_LinkedIn_Profile_Finder_via_Form_using_Bright_Data_&_GPT-4o-mini.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/nmVATBvrztDxZX6z_LinkedIn_Profile_Finder_via_Form_using_Bright_Data_&_GPT-4o-mini.json",
      "workflow_name": "LinkedIn Profile Finder via Form using Bright Data & GPT-4o-mini",
      "suggested_filename": "ai_linkedin_automate_emailsend_form.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "if",
        "set",
        "emailSend",
        "form",
        "splitOut",
        "limit",
        "formTrigger",
        "html",
        "n8n-nodes-langchain.openAi",
        "filter"
      ],
      "primary_integrations": [
        "emailsend",
        "form",
        "limit"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.html",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-brightdata.brightData",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.form",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.html",
        "n8n-nodes-brightdata.brightData",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.form"
      ],
      "business_description": "AI workflow that automates data/processes using emailsend, form, limit, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "88_Check_for_valid_Hubspot_contact_email.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/88_Check_for_valid_Hubspot_contact_email.json",
      "workflow_name": "Check for valid Hubspot contact email",
      "suggested_filename": "ai_check_ai_process_hubspot_onesimpleapi.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "hubspot",
        "oneSimpleApi",
        "slack",
        "if",
        "hubspotTrigger"
      ],
      "primary_integrations": [
        "hubspot",
        "onesimpleapi",
        "slack"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.hubspotTrigger",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.oneSimpleApi",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack"
      ],
      "business_description": "AI workflow that ai_processs data/processes using hubspot, onesimpleapi, slack, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "Enhance Security Operations with the Qualys Slack Shortcut Bot!.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Enhance Security Operations with the Qualys Slack Shortcut Bot!.json",
      "workflow_name": "Enhance Security Operations with the Qualys Slack Shortcut Bot!",
      "suggested_filename": "util_enhance_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "switch",
        "executeWorkflow",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "executeworkflow"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, executeworkflow, triggered via webhook",
      "complexity_score": 30
    },
    {
      "original_filename": "Chat with Postgresql Database.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Chat with Postgresql Database.json",
      "workflow_name": "Chat with Postgresql Database",
      "suggested_filename": "ai_chat_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "postgresTool",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "postgres"
      ],
      "total_nodes": 11,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.postgresTool",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.postgresTool",
        "n8n-nodes-base.postgresTool"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, postgres, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "OpenAI-powered tweet generator.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/OpenAI-powered tweet generator.json",
      "workflow_name": "OpenAI-powered tweet generator",
      "suggested_filename": "ai_openai_ai_process_httprequest_functionitem.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "httpRequest",
        "functionItem",
        "manualTrigger",
        "airtable"
      ],
      "primary_integrations": [
        "httprequest",
        "functionitem",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, functionitem, manual, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "3350_workflow_3350.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3350_workflow_3350.json",
      "workflow_name": "3350_workflow_3350",
      "suggested_filename": "ai_3350_workflow_3350_automate_redis_n8nnodeslangchainmemoryredischat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "redis",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.memoryRedisChat",
        "code",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegramTrigger",
        "telegram",
        "n8n-nodes-langchain.informationExtractor",
        "switch",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.memoryManager",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "redis",
        "n8n-nodes-langchain.memoryredischat",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 39,
      "node_types": [
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryRedisChat",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.redis",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryRedisChat",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.memoryRedisChat",
        "@n8n/n8n-nodes-langchain.memoryManager",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryRedisChat",
        "@n8n/n8n-nodes-langchain.memoryManager",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "AI workflow that automates data/processes using redis, n8n-nodes-langchain.memoryredischat, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 54
    },
    {
      "original_filename": "Summarize your emails with A.I. (via Openrouter) and send to Line messenger.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Summarize your emails with A.I. (via Openrouter) and send to Line messenger.json",
      "workflow_name": "Summarize emails with A.I. then send to messenger",
      "suggested_filename": "ai_summarize_ai_process_httprequest_emailreadimap.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "emailReadImap"
      ],
      "primary_integrations": [
        "httprequest",
        "emailreadimap"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, emailreadimap, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "phqg5Kk3YowxoMHQ_Namesilo_Bulk_Domain_Availability_[Template].json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/phqg5Kk3YowxoMHQ_Namesilo_Bulk_Domain_Availability_[Template].json",
      "workflow_name": "Namesilo Bulk Domain Availability [Template]",
      "suggested_filename": "ai_namesilo_ai_process_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "code",
        "convertToFile"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "manual"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.manualTrigger"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, httprequest, manual, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "Agentic Telegram AI bot with with LangChain nodes and new tools.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Agentic Telegram AI bot with with LangChain nodes and new tools.json",
      "workflow_name": "Agentic Telegram AI bot with LangChain nodes and new tools",
      "suggested_filename": "ai_agentic_ai_process_n8nnodeslangchainmemorybufferwindow_telegram.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "telegramTool",
        "stickyNote",
        "n8n-nodes-langchain.toolHttpRequest",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "telegram",
        "n8n-nodes-langchain.httprequest"
      ],
      "total_nodes": 8,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegramTool",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, telegram, n8n-nodes-langchain.httprequest, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "aqLL3BAXqQIjeJDt_AI_Automated_TikTok_Youtube_Shorts_Reels_Generator.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/aqLL3BAXqQIjeJDt_AI_Automated_TikTok_Youtube_Shorts_Reels_Generator.json",
      "workflow_name": "AI Automated TikTok/Youtube Shorts/Reels Generator",
      "suggested_filename": "ai_automated_ai_process_httprequest_schedule_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "wait",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "googleDrive",
        "code",
        "googleSheets",
        "n8n-nodes-langchain.openAi",
        "discord"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "googledrive"
      ],
      "total_nodes": 41,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, schedule, googledrive, triggered via cron",
      "complexity_score": 53
    },
    {
      "original_filename": "Automate Customer Support Issue Resolution using AI Text Classifier.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Automate Customer Support Issue Resolution using AI Text Classifier.json",
      "workflow_name": "Automate Customer Support Issue Resolution using AI Text Classifier",
      "suggested_filename": "ai_automate_ai_process_slack_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.textClassifier",
        "scheduleTrigger",
        "jiraTool",
        "jira",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "aggregate",
        "n8n-nodes-langchain.sentimentAnalysis",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "notionTool"
      ],
      "primary_integrations": [
        "slack",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 36,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.set",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.sentimentAnalysis",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.jiraTool",
        "n8n-nodes-base.notionTool",
        "n8n-nodes-base.slack",
        "@n8n/n8n-nodes-langchain.textClassifier"
      ],
      "business_description": "AI workflow that ai_processs data/processes using slack, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via cron",
      "complexity_score": 53
    },
    {
      "original_filename": "3547_workflow_3547.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3547_workflow_3547.json",
      "workflow_name": "3547_workflow_3547",
      "suggested_filename": "util_3547_workflow_3547_automate_readbinaryfiles_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "readBinaryFiles",
        "set",
        "manualTrigger",
        "executeCommand"
      ],
      "primary_integrations": [
        "readbinaryfiles",
        "manual",
        "executecommand"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.set",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readBinaryFiles"
      ],
      "business_description": "UTIL workflow that automates data/processes using readbinaryfiles, manual, executecommand, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "571_workflow_571.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/571_workflow_571.json",
      "workflow_name": "571_workflow_571",
      "suggested_filename": "util_571_workflow_571_automate_manual_mandrill.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "mandrill"
      ],
      "primary_integrations": [
        "manual",
        "mandrill"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.mandrill"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, mandrill, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "MongoDB AI Agent - Intelligent Movie Recommendations.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/MongoDB AI Agent - Intelligent Movie Recommendations.json",
      "workflow_name": "MongoDB Agent",
      "suggested_filename": "ai_mongodb_automate_n8nnodeslangchainmemorybufferwindow_mongodb.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "mongoDbTool",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "mongodb",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 8,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.mongoDbTool",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, mongodb, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "Daily Podcast Summary.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Daily Podcast Summary.json",
      "workflow_name": "Daily Podcast Summary",
      "suggested_filename": "ai_daily_ai_process_gmail_httprequest_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "wait",
        "if",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "openAi",
        "code",
        "html"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, httprequest, schedule, triggered via cron",
      "complexity_score": 32
    },
    {
      "original_filename": "126_Send_a_private_message_on_Zulip.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/126_Send_a_private_message_on_Zulip.json",
      "workflow_name": "Send a private message on Zulip",
      "suggested_filename": "comm_send_automate_zulip_manual.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "zulip",
        "manualTrigger"
      ],
      "primary_integrations": [
        "zulip",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.zulip"
      ],
      "business_description": "COMM workflow that automates data/processes using zulip, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "917_workflow_917.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/917_workflow_917.json",
      "workflow_name": "917_workflow_917",
      "suggested_filename": "util_917_workflow_917_automate_httprequest_timescaledb_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "set",
        "httpRequest",
        "timescaleDb",
        "cron"
      ],
      "primary_integrations": [
        "httprequest",
        "timescaledb",
        "cron"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.timescaleDb",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.cron"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, timescaledb, cron, triggered via cron",
      "complexity_score": 8
    },
    {
      "original_filename": "2154_workflow_2154.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2154_workflow_2154.json",
      "workflow_name": "2154_workflow_2154",
      "suggested_filename": "ai_2154_workflow_2154_automate_linear_slack.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "linearTrigger",
        "merge",
        "slack",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "linear",
        "n8n-nodes-langchain.openAi",
        "filter"
      ],
      "primary_integrations": [
        "linear",
        "slack",
        "httprequest"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.linearTrigger",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.linear",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that automates data/processes using linear, slack, httprequest, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "1932_workflow_1932.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1932_workflow_1932.json",
      "workflow_name": "1932_workflow_1932",
      "suggested_filename": "comm_1932_workflow_1932_automate_linear_slack.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "linearTrigger",
        "slack",
        "stickyNote",
        "set",
        "manualTrigger",
        "code",
        "filter"
      ],
      "primary_integrations": [
        "linear",
        "slack",
        "manual"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.linearTrigger",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using linear, slack, manual, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "86_Check_for_valid_Mautic_contact_email.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/86_Check_for_valid_Mautic_contact_email.json",
      "workflow_name": "Check for valid Mautic contact email",
      "suggested_filename": "ai_check_ai_process_onesimpleapi_itemlists.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "oneSimpleApi",
        "itemLists",
        "mauticTrigger",
        "slack",
        "if"
      ],
      "primary_integrations": [
        "onesimpleapi",
        "itemlists",
        "mautic"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.mauticTrigger",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.oneSimpleApi",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack"
      ],
      "business_description": "AI workflow that ai_processs data/processes using onesimpleapi, itemlists, mautic, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "2Eba0OHGtOmoTWOU_RAG_AI_Agent_with_Milvus_and_Cohere.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2Eba0OHGtOmoTWOU_RAG_AI_Agent_with_Milvus_and_Cohere.json",
      "workflow_name": "RAG AI Agent with Milvus and Cohere",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.embeddingsCohere",
        "n8n-nodes-langchain.vectorStoreMilvus",
        "n8n-nodes-langchain.lmChatOpenAi",
        "googleDrive",
        "n8n-nodes-langchain.agent",
        "extractFromFile",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.embeddingscohere"
      ],
      "total_nodes": 14,
      "node_types": [
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.embeddingsCohere",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.vectorStoreMilvus",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.vectorStoreMilvus",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.embeddingsCohere",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.embeddingscohere, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "🤖🧠 AI Agent Chatbot + LONG TERM Memory + Note Storage + Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/🤖🧠 AI Agent Chatbot + LONG TERM Memory + Note Storage + Telegram.json",
      "workflow_name": "🤖🧠 AI Agent Chatbot + LONG TERM Memory + Note Storage + Telegram",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "googleDocs",
        "googleDocsTool",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.agent",
        "aggregate"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "googledocs"
      ],
      "total_nodes": 21,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.googleDocsTool",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDocsTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, googledocs, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "44PIIGwPzUe9dGfb_Sync_New_Shopify_Products_to_Odoo_Product.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/44PIIGwPzUe9dGfb_Sync_New_Shopify_Products_to_Odoo_Product.json",
      "workflow_name": "Sync New Shopify Products to Odoo Product",
      "suggested_filename": "data_sync_sync_odoo_shopify.json",
      "category": "DATA",
      "business_function": "sync",
      "trigger_type": "manual",
      "integrations": [
        "code",
        "odoo",
        "shopifyTrigger",
        "filter"
      ],
      "primary_integrations": [
        "odoo",
        "shopify"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.odoo",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.odoo",
        "n8n-nodes-base.shopifyTrigger",
        "n8n-nodes-base.code"
      ],
      "business_description": "DATA workflow that syncs data/processes using odoo, shopify, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "3081_My_workflow_2.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3081_My_workflow_2.json",
      "workflow_name": "My workflow 2",
      "suggested_filename": "util_automate_httprequest_schedule_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule"
      ],
      "total_nodes": 28,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, schedule, triggered via cron",
      "complexity_score": 36
    },
    {
      "original_filename": "Q8On8rR6BkmPzDUd_chrome_extension_backend_with_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Q8On8rR6BkmPzDUd_chrome_extension_backend_with_AI.json",
      "workflow_name": "chrome extension backend with AI",
      "suggested_filename": "ai_chrome_ai_process_webhook_n8nnodeslangchainopenai_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "n8n-nodes-langchain.openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "n8n-nodes-langchain.openai",
        "respondtowebhook"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using webhook, n8n-nodes-langchain.openai, respondtowebhook, triggered via webhook",
      "complexity_score": 9
    },
    {
      "original_filename": "527_workflow_527.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/527_workflow_527.json",
      "workflow_name": "527_workflow_527",
      "suggested_filename": "ops_527_workflow_527_automate_github.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "githubTrigger"
      ],
      "primary_integrations": [
        "github"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.githubTrigger"
      ],
      "business_description": "OPS workflow that automates data/processes using github, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "2136_workflow_2136.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2136_workflow_2136.json",
      "workflow_name": "2136_workflow_2136",
      "suggested_filename": "biz_2136_workflow_2136_automate_pipedrive_hunter.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "pipedrive",
        "if",
        "noOp",
        "stickyNote",
        "hunter",
        "clearbit",
        "formTrigger"
      ],
      "primary_integrations": [
        "pipedrive",
        "hunter",
        "clearbit"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.hunter",
        "n8n-nodes-base.clearbit",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.if",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.pipedrive"
      ],
      "business_description": "BIZ workflow that automates data/processes using pipedrive, hunter, clearbit, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "Custom LangChain agent written in JavaScript.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Custom LangChain agent written in JavaScript.json",
      "workflow_name": "LangChain - Example - Code Node Example",
      "suggested_filename": "ai_langchain_ai_process_n8nnodeslangchainlmopenai_n8nnodeslangchaincode.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmOpenAi",
        "n8n-nodes-langchain.code",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmopenai",
        "n8n-nodes-langchain.code",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 10,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.code",
        "@n8n/n8n-nodes-langchain.code",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.lmopenai, n8n-nodes-langchain.code, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "2512_workflow_2512.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2512_workflow_2512.json",
      "workflow_name": "2512_workflow_2512",
      "suggested_filename": "comm_2512_workflow_2512_automate_splitinbatches_slack.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "slack",
        "wait",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "xml",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "slack",
        "httprequest"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, slack, httprequest, triggered via manual",
      "complexity_score": 31
    },
    {
      "original_filename": "Customer Support Channel and Ticketing System with Slack and Linear.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Customer Support Channel and Ticketing System with Slack and Linear.json",
      "workflow_name": "Customer Support Channel and Ticketing System with Slack and Linear",
      "suggested_filename": "ai_customer_automate_slack_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "slack",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "set",
        "scheduleTrigger",
        "linear",
        "n8n-nodes-langchain.lmChatOpenAi",
        "aggregate"
      ],
      "primary_integrations": [
        "slack",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.slack",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.linear",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.linear",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using slack, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via cron",
      "complexity_score": 30
    },
    {
      "original_filename": "1746_workflow_1746.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1746_workflow_1746.json",
      "workflow_name": "1746_workflow_1746",
      "suggested_filename": "util_1746_workflow_1746_automate_n8ntrainingcustomerdatastore_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8nTrainingCustomerDatastore",
        "if",
        "stickyNote",
        "manualTrigger",
        "switch"
      ],
      "primary_integrations": [
        "n8ntrainingcustomerdatastore",
        "manual"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.n8nTrainingCustomerDatastore",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.switch"
      ],
      "business_description": "UTIL workflow that automates data/processes using n8ntrainingcustomerdatastore, manual, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "125_Create_a_contact_in_Drift.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/125_Create_a_contact_in_Drift.json",
      "workflow_name": "Create a contact in Drift",
      "suggested_filename": "util_create_create_contact_drift_manual.json",
      "category": "UTIL",
      "business_function": "create_contact",
      "trigger_type": "manual",
      "integrations": [
        "drift",
        "manualTrigger"
      ],
      "primary_integrations": [
        "drift",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.drift"
      ],
      "business_description": "UTIL workflow that create_contacts data/processes using drift, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "1083_workflow_1083.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1083_workflow_1083.json",
      "workflow_name": "1083_workflow_1083",
      "suggested_filename": "util_1083_workflow_1083_automate_emailsend_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "emailSend",
        "manualTrigger",
        "iCal"
      ],
      "primary_integrations": [
        "emailsend",
        "manual",
        "ical"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.iCal",
        "n8n-nodes-base.emailSend"
      ],
      "business_description": "UTIL workflow that automates data/processes using emailsend, manual, ical, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "HbjZ9cBPgDdnIRjG_MiniBear_Webhook.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/HbjZ9cBPgDdnIRjG_MiniBear_Webhook.json",
      "workflow_name": "MiniBear Webhook",
      "suggested_filename": "comm_minibear_automate_n8nnodeslangchainoutputparserstructured_httprequest_webho.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "httpRequest",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "microsoftToDo",
        "n8n-nodes-langchain.agent",
        "microsoftTeams",
        "switch",
        "microsoftOneDrive"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 45,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.microsoftTeams",
        "n8n-nodes-base.microsoftToDo",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.microsoftTeams",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-base.microsoftOneDrive",
        "n8n-nodes-base.microsoftOneDrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.microsoftToDo",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using n8n-nodes-langchain.outputparserstructured, httprequest, webhook, triggered via webhook",
      "complexity_score": 56
    },
    {
      "original_filename": "2834_workflow_2834.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2834_workflow_2834.json",
      "workflow_name": "2834_workflow_2834",
      "suggested_filename": "comm_2834_workflow_2834_automate_slack_httprequest_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "slack",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "mongoDb"
      ],
      "primary_integrations": [
        "slack",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.mongoDb",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.mongoDb",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, httprequest, schedule, triggered via cron",
      "complexity_score": 17
    },
    {
      "original_filename": "112_Standup_Bot_-_Read_Config.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/112_Standup_Bot_-_Read_Config.json",
      "workflow_name": "Standup Bot - Read Config",
      "suggested_filename": "util_standup_read_movebinarydata_manual.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "moveBinaryData",
        "manualTrigger",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "movebinarydata",
        "manual",
        "readbinaryfile"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.moveBinaryData"
      ],
      "business_description": "UTIL workflow that reads data/processes using movebinarydata, manual, readbinaryfile, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2570_workflow_2570.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2570_workflow_2570.json",
      "workflow_name": "2570_workflow_2570",
      "suggested_filename": "util_2570_workflow_2570_automate_splitinbatches_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "wait",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "readWriteFile",
        "splitOut",
        "extractFromFile",
        "code",
        "convertToFile"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.code",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, httprequest, schedule, triggered via cron",
      "complexity_score": 31
    },
    {
      "original_filename": "Ultimate Scraper Workflow for n8n.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Ultimate Scraper Workflow for n8n.json",
      "workflow_name": "Selenium Ultimate Scraper Workflow",
      "suggested_filename": "ai_selenium_extract_httprequest_webhook_webhook.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "limit",
        "code",
        "convertToFile",
        "html",
        "n8n-nodes-langchain.openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 63,
      "node_types": [
        "n8n-nodes-base.html",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that extracts data/processes using httprequest, webhook, n8n-nodes-langchain.lmchatopenai, triggered via webhook",
      "complexity_score": 76
    },
    {
      "original_filename": "11_What_To_Eat.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/11_What_To_Eat.json",
      "workflow_name": "What To Eat",
      "suggested_filename": "util_what_automate_emailsend_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "set",
        "emailSend",
        "httpRequest",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "emailsend",
        "httprequest",
        "cron"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.set",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.function"
      ],
      "business_description": "UTIL workflow that automates data/processes using emailsend, httprequest, cron, triggered via cron",
      "complexity_score": 14
    },
    {
      "original_filename": "1349_workflow_1349.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1349_workflow_1349.json",
      "workflow_name": "1349_workflow_1349",
      "suggested_filename": "ops_1349_workflow_1349_automate_gitlab_github_cron.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "gitlab",
        "github",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "gitlab",
        "github",
        "cron"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.github",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.function",
        "n8n-nodes-base.gitlab",
        "n8n-nodes-base.gitlab"
      ],
      "business_description": "OPS workflow that automates data/processes using gitlab, github, cron, triggered via cron",
      "complexity_score": 11
    },
    {
      "original_filename": "355_workflow_355.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/355_workflow_355.json",
      "workflow_name": "355_workflow_355",
      "suggested_filename": "comm_355_workflow_355_automate_pagerduty_webhook_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "pagerDuty",
        "webhook",
        "jira",
        "mattermost"
      ],
      "primary_integrations": [
        "pagerduty",
        "webhook",
        "jira"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.pagerDuty",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "COMM workflow that automates data/processes using pagerduty, webhook, jira, triggered via webhook",
      "complexity_score": 9
    },
    {
      "original_filename": "46_Receive_updates_when_a_billing_plan_is_activated_in_PayPal.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/46_Receive_updates_when_a_billing_plan_is_activated_in_PayPal.json",
      "workflow_name": "Receive updates when a billing plan is activated in PayPal",
      "suggested_filename": "biz_receive_update_paypal.json",
      "category": "BIZ",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "payPalTrigger"
      ],
      "primary_integrations": [
        "paypal"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.payPalTrigger"
      ],
      "business_description": "BIZ workflow that updates data/processes using paypal, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "34_Monitoring_and_alerting.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/34_Monitoring_and_alerting.json",
      "workflow_name": "Monitoring and alerting",
      "suggested_filename": "comm_monitoring_notify_postgres_twilio_cron.json",
      "category": "COMM",
      "business_function": "notify",
      "trigger_type": "cron",
      "integrations": [
        "postgres",
        "set",
        "twilio",
        "cron"
      ],
      "primary_integrations": [
        "postgres",
        "twilio",
        "cron"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.twilio",
        "n8n-nodes-base.set",
        "n8n-nodes-base.postgres"
      ],
      "business_description": "COMM workflow that notifys data/processes using postgres, twilio, cron, triggered via cron",
      "complexity_score": 9
    },
    {
      "original_filename": "3409_workflow_3409.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3409_workflow_3409.json",
      "workflow_name": "3409_workflow_3409",
      "suggested_filename": "util_3409_workflow_3409_automate_n8nnodeslangchainmemorybufferwindow_executionda.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "executionData",
        "if",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.memoryManager",
        "splitOut",
        "manualTrigger",
        "code",
        "aggregate",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "executiondata",
        "httprequest"
      ],
      "total_nodes": 39,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.memoryManager",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.memoryManager",
        "n8n-nodes-base.executionData",
        "n8n-nodes-base.executionData",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.memoryManager"
      ],
      "business_description": "UTIL workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, executiondata, httprequest, triggered via manual",
      "complexity_score": 55
    },
    {
      "original_filename": "576_workflow_576.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/576_workflow_576.json",
      "workflow_name": "576_workflow_576",
      "suggested_filename": "util_576_workflow_576_automate_httprequest_editimage.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "editImage",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "editimage",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, editimage, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2301_workflow_2301.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2301_workflow_2301.json",
      "workflow_name": "2301_workflow_2301",
      "suggested_filename": "util_2301_workflow_2301_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "code",
        "aggregate",
        "n8n",
        "summarize"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "n8n"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.if",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.code",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, n8n, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "gkOayLvJnwcTiHbk_itemMatching()_example.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/gkOayLvJnwcTiHbk_itemMatching()_example.json",
      "workflow_name": "itemMatching() example",
      "suggested_filename": "util_itemmatching_automate_n8ntrainingcustomerdatastore_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8nTrainingCustomerDatastore",
        "stickyNote",
        "set",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "n8ntrainingcustomerdatastore",
        "manual"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.n8nTrainingCustomerDatastore",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using n8ntrainingcustomerdatastore, manual, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "lYOQGMEJDxugrfrT_MCP_GMAIL.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/lYOQGMEJDxugrfrT_MCP_GMAIL.json",
      "workflow_name": "MCP_GMAIL",
      "suggested_filename": "ai_mcp_gmail_ai_process_gmail_n8nnodeslangchainmcp.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "gmailTool",
        "n8n-nodes-langchain.mcpTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "n8n-nodes-langchain.mcp"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "@n8n/n8n-nodes-langchain.mcpTrigger"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, n8n-nodes-langchain.mcp, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "k22TSNIZXHaQ9rGr_Clockify_Backup_Template.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/k22TSNIZXHaQ9rGr_Clockify_Backup_Template.json",
      "workflow_name": "Clockify Backup Template",
      "suggested_filename": "ops_clockify_backup_httprequest_stopanderror_cron.json",
      "category": "OPS",
      "business_function": "backup",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "stopAndError",
        "compareDatasets",
        "scheduleTrigger",
        "splitOut",
        "extractFromFile",
        "github",
        "clockify",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "stopanderror",
        "comparedatasets"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.github",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.github",
        "n8n-nodes-base.github",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "OPS workflow that backups data/processes using httprequest, stopanderror, comparedatasets, triggered via cron",
      "complexity_score": 33
    },
    {
      "original_filename": "Dynamically generate a webpage from user request using OpenAI Structured Output (1).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Dynamically generate a webpage from user request using OpenAI Structured Output (1).json",
      "workflow_name": "Dynamically generate HTML page from user request using OpenAI Structured Output",
      "suggested_filename": "ai_dynamically_generate_httprequest_webhook_webhook.json",
      "category": "AI",
      "business_function": "generate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "webhook",
        "html",
        "n8n-nodes-langchain.openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "html"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "AI workflow that generates data/processes using httprequest, webhook, html, triggered via webhook",
      "complexity_score": 13
    },
    {
      "original_filename": "1690_workflow_1690.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1690_workflow_1690.json",
      "workflow_name": "1690_workflow_1690",
      "suggested_filename": "util_1690_workflow_1690_automate_itemlists_movebinarydata.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "itemLists",
        "moveBinaryData",
        "emailSend",
        "httpRequest",
        "markdown",
        "manualTrigger",
        "function"
      ],
      "primary_integrations": [
        "itemlists",
        "movebinarydata",
        "emailsend"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.function",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.function"
      ],
      "business_description": "UTIL workflow that automates data/processes using itemlists, movebinarydata, emailsend, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "21IdmArlNT9LlaFf_Automate_Google_Analytics_Reporting_-_AlexK1919.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/21IdmArlNT9LlaFf_Automate_Google_Analytics_Reporting_-_AlexK1919.json",
      "workflow_name": "Automate Google Analytics Reporting - AlexK1919",
      "suggested_filename": "comm_automate_report_gmail_googleanalytics_cron.json",
      "category": "COMM",
      "business_function": "report",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "gmail",
        "googleAnalytics",
        "scheduleTrigger",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "gmail",
        "googleanalytics",
        "schedule"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.scheduleTrigger"
      ],
      "business_description": "COMM workflow that reports data/processes using gmail, googleanalytics, schedule, triggered via cron",
      "complexity_score": 30
    },
    {
      "original_filename": "2415_workflow_2415.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2415_workflow_2415.json",
      "workflow_name": "2415_workflow_2415",
      "suggested_filename": "ai_2415_workflow_2415_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.textClassifier",
        "notion",
        "n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-langchain.agent",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "0H2mo5k35e0nzMEE_New_Ticket_Alerts_to_Teams.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/0H2mo5k35e0nzMEE_New_Ticket_Alerts_to_Teams.json",
      "workflow_name": "New Ticket Alerts to Teams",
      "suggested_filename": "comm_ticket_notify_httprequest_schedule_cron.json",
      "category": "COMM",
      "business_function": "notify",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "httpRequest",
        "scheduleTrigger",
        "microsoftTeams",
        "code",
        "redis"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "microsoftteams"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.microsoftTeams",
        "n8n-nodes-base.redis"
      ],
      "business_description": "COMM workflow that notifys data/processes using httprequest, schedule, microsoftteams, triggered via cron",
      "complexity_score": 14
    },
    {
      "original_filename": "bV0JTA5NtRZxiD1q_Telegram-bot_AI_Da_Nang.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/bV0JTA5NtRZxiD1q_Telegram-bot_AI_Da_Nang.json",
      "workflow_name": "Telegram-bot AI Da Nang",
      "suggested_filename": "ai_telegram_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "noOp",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "code",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-langchain.agent",
        "telegram",
        "switch",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "telegram"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegramTrigger",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, telegram, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "Personal Shopper Chatbot for WooCommerce with RAG using Google Drive and openAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Personal Shopper Chatbot for WooCommerce with RAG using Google Drive and openAI.json",
      "workflow_name": "OpenAI Personal Shopper with RAG and WooCommerce",
      "suggested_filename": "ai_openai_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvector.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolVectorStore",
        "n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "httpRequest",
        "wooCommerceTool",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "googleDrive",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.documentDefaultDataLoader"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.vectorstore",
        "n8n-nodes-langchain.calculator"
      ],
      "total_nodes": 25,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.wooCommerceTool",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.vectorstore, n8n-nodes-langchain.calculator, triggered via manual",
      "complexity_score": 42
    },
    {
      "original_filename": "2951_workflow_2951.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2951_workflow_2951.json",
      "workflow_name": "2951_workflow_2951",
      "suggested_filename": "util_2951_workflow_2951_automate_ssh_emailsend_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "if",
        "ssh",
        "stickyNote",
        "emailSend",
        "scheduleTrigger"
      ],
      "primary_integrations": [
        "ssh",
        "emailsend",
        "schedule"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.ssh",
        "n8n-nodes-base.ssh",
        "n8n-nodes-base.ssh",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using ssh, emailsend, schedule, triggered via cron",
      "complexity_score": 16
    },
    {
      "original_filename": "AI Automated HR Workflow for CV Analysis and Candidate Evaluation.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Automated HR Workflow for CV Analysis and Candidate Evaluation.json",
      "workflow_name": "HR-focused automation pipeline with AI",
      "suggested_filename": "ai_focused_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "extractFromFile",
        "googleDrive",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.chainsummarization"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.chainsummarization, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "14_Onfleet_Driver_signup_message_in_Slack.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/14_Onfleet_Driver_signup_message_in_Slack.json",
      "workflow_name": "Onfleet Driver signup message in Slack",
      "suggested_filename": "comm_onfleet_automate_onfleet_slack.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "onfleetTrigger",
        "slack"
      ],
      "primary_integrations": [
        "onfleet",
        "slack"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.onfleetTrigger",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using onfleet, slack, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "3770_workflow_3770.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3770_workflow_3770.json",
      "workflow_name": "3770_workflow_3770",
      "suggested_filename": "ai_3770_workflow_3770_automate_n8nnodeslangchainmemorybufferwindow_redis.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "redis",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "aggregate",
        "n8n-nodes-langchain.mcpTrigger",
        "splitOut",
        "n8n-nodes-langchain.mcpClientTool",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.toolWorkflow",
        "switch",
        "n8n",
        "n8n-nodes-langchain.lmChatOpenAi",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "redis",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 46,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.mcpClientTool",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.if",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, redis, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 64
    },
    {
      "original_filename": "3976_Prevent_concurrent_workflow_runs_using_Redis.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3976_Prevent_concurrent_workflow_runs_using_Redis.json",
      "workflow_name": "Prevent concurrent workflow runs using Redis",
      "suggested_filename": "util_prevent_automate_redis_stopanderror.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "redis",
        "stickyNote",
        "set",
        "noOp",
        "wait",
        "stopAndError",
        "manualTrigger",
        "switch",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "redis",
        "stopanderror",
        "manual"
      ],
      "total_nodes": 43,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using redis, stopanderror, manual, triggered via manual",
      "complexity_score": 54
    },
    {
      "original_filename": "520_workflow_520.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/520_workflow_520.json",
      "workflow_name": "520_workflow_520",
      "suggested_filename": "util_520_workflow_520_automate_mailjet_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "mailjet",
        "manualTrigger"
      ],
      "primary_integrations": [
        "mailjet",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.mailjet"
      ],
      "business_description": "UTIL workflow that automates data/processes using mailjet, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Qj1307oyBx1hZJy5_SSL_Expiry_Alert.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Qj1307oyBx1hZJy5_SSL_Expiry_Alert.json",
      "workflow_name": "SSL Expiry Alert",
      "suggested_filename": "comm_expiry_notify_gmail_httprequest_cron.json",
      "category": "COMM",
      "business_function": "notify",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "gmail",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that notifys data/processes using gmail, httprequest, schedule, triggered via cron",
      "complexity_score": 18
    },
    {
      "original_filename": "ThLx9WKLEujJHrvW_Github_Releases.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ThLx9WKLEujJHrvW_Github_Releases.json",
      "workflow_name": "Github Releases",
      "suggested_filename": "ai_github_automate_splitinbatches_slack_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "slack",
        "if",
        "dateTime",
        "stickyNote",
        "set",
        "rssFeedRead",
        "scheduleTrigger",
        "n8n-nodes-langchain.informationExtractor",
        "limit",
        "code",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "redis"
      ],
      "primary_integrations": [
        "splitinbatches",
        "slack",
        "datetime"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.limit",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.if",
        "n8n-nodes-base.dateTime",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.slack",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.code",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.redis"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, slack, datetime, triggered via cron",
      "complexity_score": 37
    },
    {
      "original_filename": "YSjQ7TVCNY9v1F2A_Monitor_security_advisories.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/YSjQ7TVCNY9v1F2A_Monitor_security_advisories.json",
      "workflow_name": "Monitor_security_advisories",
      "suggested_filename": "comm_monitor_security_advisories_monitor_n8ntrainingcustomerdatastore_gmail_cron.json",
      "category": "COMM",
      "business_function": "monitor",
      "trigger_type": "cron",
      "integrations": [
        "n8nTrainingCustomerDatastore",
        "if",
        "noOp",
        "stickyNote",
        "gmail",
        "set",
        "rssFeedRead",
        "scheduleTrigger",
        "jira",
        "manualTrigger",
        "filter"
      ],
      "primary_integrations": [
        "n8ntrainingcustomerdatastore",
        "gmail",
        "rssfeedread"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.n8nTrainingCustomerDatastore",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.scheduleTrigger"
      ],
      "business_description": "COMM workflow that monitors data/processes using n8ntrainingcustomerdatastore, gmail, rssfeedread, triggered via cron",
      "complexity_score": 28
    },
    {
      "original_filename": "Angie, Personal AI Assistant with Telegram Voice and Text.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Angie, Personal AI Assistant with Telegram Voice and Text.json",
      "workflow_name": "Angie, Personal AI Assistant with Telegram Voice and Text",
      "suggested_filename": "ai_angie_ai_process_n8nnodeslangchainmemorybufferwindow_baserow.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "baserowTool",
        "if",
        "stickyNote",
        "set",
        "googleCalendarTool",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.agent",
        "gmailTool",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "baserow",
        "googlecalendar"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.googleCalendarTool",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.gmailTool",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.baserowTool",
        "n8n-nodes-base.baserowTool",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, baserow, googlecalendar, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "2082_workflow_2082.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2082_workflow_2082.json",
      "workflow_name": "2082_workflow_2082",
      "suggested_filename": "ai_2082_workflow_2082_automate_n8nnodeslangchaincode_n8nnodeslangchainlmchatopen.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "n8n-nodes-langchain.code",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.code",
        "n8n-nodes-langchain.lmchatopenai",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.code",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.code, n8n-nodes-langchain.lmchatopenai, manual, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "PcVz6j5XLU7Z9MPN_AirQuality_Scheduler.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/PcVz6j5XLU7Z9MPN_AirQuality_Scheduler.json",
      "workflow_name": "AirQuality Scheduler",
      "suggested_filename": "ai_airquality_ai_process_n8nnodeslangchainthink_httprequest_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.toolThink",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "gmailTool"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.think",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolThink",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.think, httprequest, schedule, triggered via cron",
      "complexity_score": 20
    },
    {
      "original_filename": "xzKlhjcc6QEzA98Z_Update_Roles_by_Excel.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/xzKlhjcc6QEzA98Z_Update_Roles_by_Excel.json",
      "workflow_name": "Update Roles by Excel",
      "suggested_filename": "util_update_update_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "extractFromFile"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "extractfromfile"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that updates data/processes using httprequest, manual, extractfromfile, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "1_cheems.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_cheems.json",
      "workflow_name": "cheems",
      "suggested_filename": "comm_cheems_automate_discord_cron_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "discord",
        "cron"
      ],
      "primary_integrations": [
        "discord",
        "cron"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.discord"
      ],
      "business_description": "COMM workflow that automates data/processes using discord, cron, triggered via cron",
      "complexity_score": 8
    },
    {
      "original_filename": "2241_Unsubscribe_Mautic_contacts_from_automated_unsubscribe_emails.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2241_Unsubscribe_Mautic_contacts_from_automated_unsubscribe_emails.json",
      "workflow_name": "Unsubscribe Mautic contacts from automated unsubscribe emails",
      "suggested_filename": "ai_unsubscribe_ai_process_gmail_gmail.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "gmailTrigger",
        "gmail",
        "mautic",
        "stickyNote",
        "set",
        "code"
      ],
      "primary_integrations": [
        "gmail",
        "gmail",
        "mautic"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, gmail, mautic, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "2796_workflow_2796.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2796_workflow_2796.json",
      "workflow_name": "2796_workflow_2796",
      "suggested_filename": "data_2796_workflow_2796_automate_httprequest_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "googleCalendar",
        "airtable",
        "googleSheets",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "googlecalendar"
      ],
      "total_nodes": 33,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.set",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.respondToWebhook"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, webhook, googlecalendar, triggered via webhook",
      "complexity_score": 42
    },
    {
      "original_filename": "3440_workflow_3440.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3440_workflow_3440.json",
      "workflow_name": "3440_workflow_3440",
      "suggested_filename": "comm_3440_workflow_3440_automate_googlesheets_gmail_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "filter",
        "googleSheetsTool",
        "stickyNote",
        "set",
        "gmail",
        "n8n-nodes-langchain.code",
        "scheduleTrigger",
        "form",
        "n8n-nodes-langchain.informationExtractor",
        "extractFromFile",
        "googleSheets",
        "summarize",
        "formTrigger"
      ],
      "primary_integrations": [
        "googlesheets",
        "gmail",
        "n8n-nodes-langchain.code"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.googleSheetsTool",
        "n8n-nodes-base.set",
        "n8n-nodes-base.formTrigger",
        "@n8n/n8n-nodes-langchain.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.form",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.informationExtractor"
      ],
      "business_description": "COMM workflow that automates data/processes using googlesheets, gmail, n8n-nodes-langchain.code, triggered via cron",
      "complexity_score": 33
    },
    {
      "original_filename": "2348_workflow_2348.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2348_workflow_2348.json",
      "workflow_name": "2348_workflow_2348",
      "suggested_filename": "comm_2348_workflow_2348_automate_gmail_googledrive.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "gmailTrigger",
        "function",
        "googleDrive"
      ],
      "primary_integrations": [
        "gmail",
        "googledrive"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.function",
        "n8n-nodes-base.googleDrive"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, googledrive, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "4_Zammad_Open_Tickets.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/4_Zammad_Open_Tickets.json",
      "workflow_name": "Zammad Open Tickets",
      "suggested_filename": "util_zammad_automate_zulip_manual_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "zulip",
        "manualTrigger",
        "cron",
        "zammad",
        "function"
      ],
      "primary_integrations": [
        "zulip",
        "manual",
        "cron"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.function",
        "n8n-nodes-base.zammad",
        "n8n-nodes-base.zulip",
        "n8n-nodes-base.cron"
      ],
      "business_description": "UTIL workflow that automates data/processes using zulip, manual, cron, triggered via cron",
      "complexity_score": 10
    },
    {
      "original_filename": "3385_workflow_3385.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3385_workflow_3385.json",
      "workflow_name": "3385_workflow_3385",
      "suggested_filename": "data_3385_workflow_3385_automate_googlesheets_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "googleSheets",
        "webhook",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "googlesheets",
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 11
    },
    {
      "original_filename": "2053_workflow_2053.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2053_workflow_2053.json",
      "workflow_name": "2053_workflow_2053",
      "suggested_filename": "util_2053_workflow_2053_automate_httprequest_schedule_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "aggregate",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.aggregate"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, schedule, triggered via cron",
      "complexity_score": 15
    },
    {
      "original_filename": "1207_workflow_1207.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1207_workflow_1207.json",
      "workflow_name": "1207_workflow_1207",
      "suggested_filename": "comm_1207_workflow_1207_automate_slack_shopify_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "shopify",
        "dateTime",
        "if",
        "noOp",
        "set",
        "cron",
        "googleSheets",
        "function"
      ],
      "primary_integrations": [
        "slack",
        "shopify",
        "datetime"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.shopify",
        "n8n-nodes-base.function",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, shopify, datetime, triggered via cron",
      "complexity_score": 18
    },
    {
      "original_filename": "412_.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/412_.json",
      "workflow_name": "",
      "suggested_filename": "marketing_automate_activecampaign_manual.json",
      "category": "MARKETING",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "activeCampaign",
        "manualTrigger"
      ],
      "primary_integrations": [
        "activecampaign",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.activeCampaign"
      ],
      "business_description": "MARKETING workflow that automates data/processes using activecampaign, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "56_Send_an_SMS_when_a_workflow_fails.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/56_Send_an_SMS_when_a_workflow_fails.json",
      "workflow_name": "Send an SMS when a workflow fails",
      "suggested_filename": "ai_send_ai_process_error_twilio.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "errorTrigger",
        "twilio"
      ],
      "primary_integrations": [
        "error",
        "twilio"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.errorTrigger",
        "n8n-nodes-base.twilio"
      ],
      "business_description": "AI workflow that ai_processs data/processes using error, twilio, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "1835_workflow_1835.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1835_workflow_1835.json",
      "workflow_name": "1835_workflow_1835",
      "suggested_filename": "data_1835_workflow_1835_automate_notion_clickup.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "notionTrigger",
        "clickUpTrigger",
        "clickUp",
        "notion"
      ],
      "primary_integrations": [
        "notion",
        "clickup",
        "clickup"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.notionTrigger",
        "n8n-nodes-base.clickUp",
        "n8n-nodes-base.clickUpTrigger",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion"
      ],
      "business_description": "DATA workflow that automates data/processes using notion, clickup, clickup, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "107_Get_a_volume_and_add_it_to_your_bookshelf.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/107_Get_a_volume_and_add_it_to_your_bookshelf.json",
      "workflow_name": "Get a volume and add it to your bookshelf",
      "suggested_filename": "util_volume_create_manual_googlebooks.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "googleBooks"
      ],
      "primary_integrations": [
        "manual",
        "googlebooks"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleBooks",
        "n8n-nodes-base.googleBooks",
        "n8n-nodes-base.googleBooks"
      ],
      "business_description": "UTIL workflow that creates data/processes using manual, googlebooks, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "AI Customer feedback sentiment analysis.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Customer feedback sentiment analysis.json",
      "workflow_name": "AI Customer feedback sentiment analysis",
      "suggested_filename": "ai_customer_analyze_openai_googlesheets.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "openAi",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "openai",
        "googlesheets",
        "form"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.formTrigger"
      ],
      "business_description": "AI workflow that analyzes data/processes using openai, googlesheets, form, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "knmxcsujuHmViJl4_Online_Marketing_Weekly_Report.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/knmxcsujuHmViJl4_Online_Marketing_Weekly_Report.json",
      "workflow_name": "Online Marketing Weekly Report",
      "suggested_filename": "ai_online_report_n8nnodeslangchaincalculator_emailsend_cron.json",
      "category": "AI",
      "business_function": "report",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.toolCalculator",
        "stickyNote",
        "set",
        "emailSend",
        "googleAnalytics",
        "httpRequest",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "code",
        "telegram",
        "summarize",
        "n8n-nodes-langchain.openAi",
        "executeWorkflowTrigger",
        "facebookGraphApi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.calculator",
        "emailsend",
        "googleanalytics"
      ],
      "total_nodes": 51,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.set",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.emailSend",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that reports data/processes using n8n-nodes-langchain.calculator, emailsend, googleanalytics, triggered via cron",
      "complexity_score": 67
    },
    {
      "original_filename": "1954_workflow_1954.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1954_workflow_1954.json",
      "workflow_name": "1954_workflow_1954",
      "suggested_filename": "ai_1954_workflow_1954_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.toolSerpApi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 5,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolSerpApi",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "992_workflow_992.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/992_workflow_992.json",
      "workflow_name": "992_workflow_992",
      "suggested_filename": "util_992_workflow_992_automate_wise.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wise"
      ],
      "primary_integrations": [
        "wise"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.wise",
        "n8n-nodes-base.wise",
        "n8n-nodes-base.wise",
        "n8n-nodes-base.wise"
      ],
      "business_description": "UTIL workflow that automates data/processes using wise, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "SHpLY12UobbcWRnl_Slack_AI_Chatbot_with_RAG_for_company_staff.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/SHpLY12UobbcWRnl_Slack_AI_Chatbot_with_RAG_for_company_staff.json",
      "workflow_name": "Slack AI Chatbot with RAG for company staff",
      "suggested_filename": "ai_slack_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalcula.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolCalculator",
        "slack",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "stickyNote",
        "httpRequest",
        "slackTrigger",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatAnthropic",
        "manualTrigger",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "googleDrive",
        "n8n-nodes-langchain.documentDefaultDataLoader"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.calculator",
        "slack"
      ],
      "total_nodes": 21,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-base.slackTrigger",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.calculator, slack, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "ra8MrqshnzXPy55O_upload-post_images.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ra8MrqshnzXPy55O_upload-post_images.json",
      "workflow_name": "upload-post images",
      "suggested_filename": "content_upload_automate_httprequest_manual.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "CONTENT workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "1769_workflow_1769.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1769_workflow_1769.json",
      "workflow_name": "1769_workflow_1769",
      "suggested_filename": "data_1769_workflow_1769_automate_asana_notion.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "asana",
        "if",
        "notion",
        "asanaTrigger",
        "function"
      ],
      "primary_integrations": [
        "asana",
        "notion",
        "asana"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.asana",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.if",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.asanaTrigger"
      ],
      "business_description": "DATA workflow that automates data/processes using asana, notion, asana, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "cGTxHYV93kS71hLL_Send_Discord_message_from_Webflow_form_submission.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/cGTxHYV93kS71hLL_Send_Discord_message_from_Webflow_form_submission.json",
      "workflow_name": "Send Discord message from Webflow form submission",
      "suggested_filename": "comm_send_automate_webflow_discord.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "webflowTrigger",
        "code",
        "discord"
      ],
      "primary_integrations": [
        "webflow",
        "discord"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webflowTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.code",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using webflow, discord, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "5uapJIjLLhwnhX0n_Perplexity_Researcher.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/5uapJIjLLhwnhX0n_Perplexity_Researcher.json",
      "workflow_name": "Perplexity Researcher",
      "suggested_filename": "util_perplexity_automate_httprequest_executeworkflow.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "executeworkflow"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, executeworkflow, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "my335cY3wVwMqvqy_Reservation_Medcin.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/my335cY3wVwMqvqy_Reservation_Medcin.json",
      "workflow_name": "Reservation Medcin",
      "suggested_filename": "ai_reservation_automate_n8nnodeslangchainmemorybufferwindow_googlesheets.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "googleSheetsTool",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "googleCalendarTool",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "googlesheets",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 12,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleSheetsTool"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, googlesheets, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "7_Coffee_Bot_(Mattermost).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/7_Coffee_Bot_(Mattermost).json",
      "workflow_name": "Coffee Bot (Mattermost)",
      "suggested_filename": "comm_coffee_automate_cron_googlecalendar_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "cron",
        "googleCalendar",
        "function",
        "mattermost"
      ],
      "primary_integrations": [
        "cron",
        "googlecalendar",
        "mattermost"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.function",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.googleCalendar"
      ],
      "business_description": "COMM workflow that automates data/processes using cron, googlecalendar, mattermost, triggered via cron",
      "complexity_score": 10
    },
    {
      "original_filename": "Automate Competitor Research with Exa.ai, Notion and AI Agents.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Automate Competitor Research with Exa.ai, Notion and AI Agents.json",
      "workflow_name": "Automate Competitor Research with Exa.ai, Notion and AI Agents",
      "suggested_filename": "ai_automate_ai_process_generic.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [],
      "primary_integrations": [],
      "total_nodes": 0,
      "node_types": [],
      "business_description": "AI workflow that ai_processs data/processes using generic components, triggered via manual",
      "complexity_score": 0
    },
    {
      "original_filename": "1304_workflow_1304.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1304_workflow_1304.json",
      "workflow_name": "1304_workflow_1304",
      "suggested_filename": "data_1304_workflow_1304_automate_googlesheets_dropcontact.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "dropcontact",
        "lemlist",
        "manualTrigger"
      ],
      "primary_integrations": [
        "googlesheets",
        "dropcontact",
        "lemlist"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.dropcontact",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.lemlist"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, dropcontact, lemlist, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "2150_workflow_2150.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2150_workflow_2150.json",
      "workflow_name": "2150_workflow_2150",
      "suggested_filename": "comm_2150_workflow_2150_automate_error_slack.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "errorTrigger",
        "stickyNote",
        "set",
        "slack"
      ],
      "primary_integrations": [
        "error",
        "slack"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.slack",
        "n8n-nodes-base.errorTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using error, slack, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "AI Agent to chat with you Search Console Data, using OpenAI and Postgres.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Agent to chat with you Search Console Data, using OpenAI and Postgres.json",
      "workflow_name": "AI Agent to chat with you Search Console Data, using OpenAI and Postgres",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorypostgreschat_httprequest_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryPostgresChat",
        "stickyNote",
        "set",
        "httpRequest",
        "aggregate",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "switch",
        "executeWorkflowTrigger",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorypostgreschat",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 30,
      "node_types": [
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorypostgreschat, httprequest, webhook, triggered via webhook",
      "complexity_score": 42
    },
    {
      "original_filename": "Invoice data extraction with LlamaParse and OpenAI (1).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Invoice data extraction with LlamaParse and OpenAI (1).json",
      "workflow_name": "Invoice data extraction with LlamaParse and OpenAI (1)",
      "suggested_filename": "ai_invoice_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "gmailTrigger",
        "stickyNote",
        "wait",
        "n8n-nodes-langchain.lmOpenAi",
        "httpRequest",
        "gmail",
        "set",
        "if",
        "aggregate",
        "splitOut",
        "switch",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 26,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.if",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, gmail, triggered via manual",
      "complexity_score": 41
    },
    {
      "original_filename": "ni6SfqC3kthAlPtX_Personalized_AI_Tech_Newsletter_Using_RSS,_OpenAI_and_Gmail.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ni6SfqC3kthAlPtX_Personalized_AI_Tech_Newsletter_Using_RSS,_OpenAI_and_Gmail.json",
      "workflow_name": "Personalized AI Tech Newsletter Using RSS, OpenAI and Gmail",
      "suggested_filename": "ai_personalized_ai_process_n8nnodeslangchainvectorstoreinmemory_gmail_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.vectorStoreInMemory",
        "stickyNote",
        "set",
        "gmail",
        "rssFeedRead",
        "markdown",
        "scheduleTrigger",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.vectorstoreinmemory",
        "gmail",
        "rssfeedread"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
        "n8n-nodes-base.set",
        "n8n-nodes-base.rssFeedRead",
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.vectorstoreinmemory, gmail, rssfeedread, triggered via cron",
      "complexity_score": 37
    },
    {
      "original_filename": "1793_workflow_1793.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1793_workflow_1793.json",
      "workflow_name": "1793_workflow_1793",
      "suggested_filename": "biz_1793_workflow_1793_automate_itemlists_renamekeys.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "itemLists",
        "if",
        "set",
        "renameKeys",
        "manualTrigger",
        "salesforce",
        "microsoftExcel"
      ],
      "primary_integrations": [
        "itemlists",
        "renamekeys",
        "manual"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.salesforce",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.renameKeys",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.salesforce",
        "n8n-nodes-base.salesforce",
        "n8n-nodes-base.microsoftExcel"
      ],
      "business_description": "BIZ workflow that automates data/processes using itemlists, renamekeys, manual, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "2119_workflow_2119.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2119_workflow_2119.json",
      "workflow_name": "2119_workflow_2119",
      "suggested_filename": "comm_2119_workflow_2119_automate_slack_httprequest.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "if",
        "noOp",
        "stickyNote",
        "httpRequest",
        "hunter",
        "formTrigger"
      ],
      "primary_integrations": [
        "slack",
        "httprequest",
        "hunter"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.slack",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.hunter",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, httprequest, hunter, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "JJKkNnO4PQ12gQdE_Retry_Execution_Hourly.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/JJKkNnO4PQ12gQdE_Retry_Execution_Hourly.json",
      "workflow_name": "Retry Execution Hourly",
      "suggested_filename": "util_retry_automate_splitinbatches_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "noOp",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "manualTrigger",
        "n8n"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, httprequest, schedule, triggered via cron",
      "complexity_score": 22
    },
    {
      "original_filename": "8jdT4wXjV5NljqKa_Enhance_Chat_Responses_with_Real-Time_Search_Data_via_Bright_Data_&_Gemini_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/8jdT4wXjV5NljqKa_Enhance_Chat_Responses_with_Real-Time_Search_Data_via_Bright_Data_&_Gemini_AI.json",
      "workflow_name": "Enhance Chat Responses with Real-Time Search Data via Bright Data & Gemini AI",
      "suggested_filename": "ai_enhance_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "n8n-nodes-langchain.toolHttpRequest",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.httprequest"
      ],
      "total_nodes": 18,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-mcp.mcpClient",
        "n8n-nodes-mcp.mcpClient",
        "n8n-nodes-base.set",
        "n8n-nodes-mcp.mcpClientTool",
        "n8n-nodes-mcp.mcpClientTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-mcp.mcpClientTool",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-mcp.mcpClientTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.httprequest, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "Send a random recipe once a day to Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Send a random recipe once a day to Telegram.json",
      "workflow_name": "Send a random recipe once a day to Telegram",
      "suggested_filename": "comm_send_automate_cron_httprequest_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "cron",
        "if",
        "set",
        "httpRequest",
        "telegramTrigger",
        "telegram",
        "airtable"
      ],
      "primary_integrations": [
        "cron",
        "httprequest",
        "telegram"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "COMM workflow that automates data/processes using cron, httprequest, telegram, triggered via cron",
      "complexity_score": 22
    },
    {
      "original_filename": "3b1q6ZJTxeONrpUV_Error_Alert_and_Summarizer.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3b1q6ZJTxeONrpUV_Error_Alert_and_Summarizer.json",
      "workflow_name": "Error Alert and Summarizer",
      "suggested_filename": "ai_error_notify_error_n8nnodeslangchainoutputparserstructured.json",
      "category": "AI",
      "business_function": "notify",
      "trigger_type": "manual",
      "integrations": [
        "errorTrigger",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "set",
        "gmail",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "code",
        "n8n"
      ],
      "primary_integrations": [
        "error",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.errorTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.code"
      ],
      "business_description": "AI workflow that notifys data/processes using error, n8n-nodes-langchain.outputparserstructured, gmail, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "V1vbO2m79cFNH59h_Basic_PDF_Digital_Sign_Service.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/V1vbO2m79cFNH59h_Basic_PDF_Digital_Sign_Service.json",
      "workflow_name": "Basic PDF Digital Sign Service",
      "suggested_filename": "util_basic_automate_readwritefile_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "readWriteFile",
        "webhook",
        "code",
        "switch",
        "convertToFile",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "readwritefile",
        "webhook",
        "converttofile"
      ],
      "total_nodes": 32,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using readwritefile, webhook, converttofile, triggered via webhook",
      "complexity_score": 41
    },
    {
      "original_filename": "8_Get_only_new_RSS_with_Photo.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/8_Get_only_new_RSS_with_Photo.json",
      "workflow_name": "Get only new RSS with Photo",
      "suggested_filename": "util_only_read_htmlextract_rssfeedread_cron.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "cron",
      "integrations": [
        "htmlExtract",
        "set",
        "rssFeedRead",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "htmlextract",
        "rssfeedread",
        "cron"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.htmlExtract",
        "n8n-nodes-base.set",
        "n8n-nodes-base.function"
      ],
      "business_description": "UTIL workflow that reads data/processes using htmlextract, rssfeedread, cron, triggered via cron",
      "complexity_score": 10
    },
    {
      "original_filename": "XxkmcgZC4OtIOVoD_Youtube_Video_Transcript_Extraction.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/XxkmcgZC4OtIOVoD_Youtube_Video_Transcript_Extraction.json",
      "workflow_name": "Youtube Video Transcript Extraction",
      "suggested_filename": "content_youtube_extract_httprequest_form.json",
      "category": "CONTENT",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "set",
        "function",
        "formTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "form"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.function",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "CONTENT workflow that extracts data/processes using httprequest, form, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "3105_workflow_3105.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3105_workflow_3105.json",
      "workflow_name": "3105_workflow_3105",
      "suggested_filename": "util_3105_workflow_3105_automate_readwritefile_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "readWriteFile",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "readwritefile",
        "httprequest",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.readWriteFile"
      ],
      "business_description": "UTIL workflow that automates data/processes using readwritefile, httprequest, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2368_workflow_2368.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2368_workflow_2368.json",
      "workflow_name": "2368_workflow_2368",
      "suggested_filename": "util_2368_workflow_2368_automate_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "splitOut",
        "httpRequest"
      ],
      "primary_integrations": [
        "httprequest"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "2qIFnWXdHJJs4oBk_DSP_Certificate_w__Google_Forms.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2qIFnWXdHJJs4oBk_DSP_Certificate_w__Google_Forms.json",
      "workflow_name": "DSP Certificate w/ Google Forms",
      "suggested_filename": "comm_certificate_automate_googleslides_gmail.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSlides",
        "if",
        "noOp",
        "stickyNote",
        "set",
        "gmail",
        "googleDrive",
        "googleSheetsTrigger"
      ],
      "primary_integrations": [
        "googleslides",
        "gmail",
        "googledrive"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleSlides",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using googleslides, gmail, googledrive, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "188_Send_a_message_on_Mattermost_when_an_order_is_created_in_WooCommerce.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/188_Send_a_message_on_Mattermost_when_an_order_is_created_in_WooCommerce.json",
      "workflow_name": "Send a message on Mattermost when an order is created in WooCommerce",
      "suggested_filename": "comm_send_create_woocommerce_mattermost.json",
      "category": "COMM",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "wooCommerceTrigger",
        "mattermost"
      ],
      "primary_integrations": [
        "woocommerce",
        "mattermost"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.wooCommerceTrigger",
        "n8n-nodes-base.mattermost"
      ],
      "business_description": "COMM workflow that creates data/processes using woocommerce, mattermost, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Chat with your event schedule from Google Sheets in Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Chat with your event schedule from Google Sheets in Telegram.json",
      "workflow_name": "Telegram-bot AI Da Nang",
      "suggested_filename": "ai_telegram_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "noOp",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "code",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-langchain.agent",
        "telegram",
        "switch",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "telegram"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegramTrigger",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, telegram, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "YKZBEx4DTf0KGEBR_Image-Based_Data_Extraction_API_using_Gemini_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/YKZBEx4DTf0KGEBR_Image-Based_Data_Extraction_API_using_Gemini_AI.json",
      "workflow_name": "Image-Based Data Extraction API using Gemini AI",
      "suggested_filename": "ai_image_ai_process_httprequest_webhook_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "extractFromFile",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "extractfromfile"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.extractFromFile"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, webhook, extractfromfile, triggered via webhook",
      "complexity_score": 15
    },
    {
      "original_filename": "987_workflow_987.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/987_workflow_987.json",
      "workflow_name": "987_workflow_987",
      "suggested_filename": "util_987_workflow_987_automate_webhook_asana_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "set",
        "webhook",
        "asana"
      ],
      "primary_integrations": [
        "webhook",
        "asana"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.asana",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, asana, triggered via webhook",
      "complexity_score": 6
    },
    {
      "original_filename": "ZkIH2ygj2BNSfMOh_Dynamic_Form_with_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ZkIH2ygj2BNSfMOh_Dynamic_Form_with_AI.json",
      "workflow_name": "Dynamic Form with AI",
      "suggested_filename": "ai_dynamic_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "form",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "aggregate",
        "formTrigger",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "form"
      ],
      "total_nodes": 19,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.form",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.filter",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, form, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "yYjRbTWULZuNLXM0_My_workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/yYjRbTWULZuNLXM0_My_workflow.json",
      "workflow_name": "My workflow",
      "suggested_filename": "comm_automate_gmail_hunter.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "noOp",
        "gmail",
        "stickyNote",
        "hunter",
        "googleSheets",
        "discord",
        "formTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "hunter",
        "googlesheets"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.hunter",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, hunter, googlesheets, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "m9aACcHqydEbH4nR_[2_3]_Set_up_medoids_(2_types)_for_anomaly_detection_(crops_dataset).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/m9aACcHqydEbH4nR_[2_3]_Set_up_medoids_(2_types)_for_anomaly_detection_(crops_dataset).json",
      "workflow_name": "[2/3] Set up medoids (2 types) for anomaly detection (crops dataset)",
      "suggested_filename": "data_medoids_automate_httprequest_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 48,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 55
    },
    {
      "original_filename": "MIA4ozGH71fC3KCe_pdf_to_text.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/MIA4ozGH71fC3KCe_pdf_to_text.json",
      "workflow_name": "pdf to text",
      "suggested_filename": "util_text_automate_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "@custom-js/n8n-nodes-pdf-toolkit.PdfToText",
        "@custom-js/n8n-nodes-pdf-toolkit.html2Pdf",
        "@custom-js/n8n-nodes-pdf-toolkit.PdfToText",
        "n8n-nodes-base.code",
        "n8n-nodes-base.manualTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "gP9EsxKN5agUGzDS_Automate_Pinterest_Analysis_&_AI-Powered_Content_Suggestions_With_Pinterest_API.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/gP9EsxKN5agUGzDS_Automate_Pinterest_Analysis_&_AI-Powered_Content_Suggestions_With_Pinterest_API.json",
      "workflow_name": "Automate Pinterest Analysis & AI-Powered Content Suggestions With Pinterest API",
      "suggested_filename": "ai_automate_ai_process_airtable_gmail_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "airtableTool",
        "gmail",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.chainSummarization",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "airtable",
        "code",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "airtable",
        "gmail",
        "httprequest"
      ],
      "total_nodes": 13,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.airtableTool",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.airtable",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using airtable, gmail, httprequest, triggered via cron",
      "complexity_score": 23
    },
    {
      "original_filename": "13_Mattermost_Webhook.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/13_Mattermost_Webhook.json",
      "workflow_name": "Mattermost Webhook",
      "suggested_filename": "comm_mattermost_automate_webhook_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "webhook",
        "httpRequest",
        "mattermost"
      ],
      "primary_integrations": [
        "webhook",
        "httprequest",
        "mattermost"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.mattermost"
      ],
      "business_description": "COMM workflow that automates data/processes using webhook, httprequest, mattermost, triggered via webhook",
      "complexity_score": 6
    },
    {
      "original_filename": "3719_workflow_3719.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3719_workflow_3719.json",
      "workflow_name": "3719_workflow_3719",
      "suggested_filename": "ai_3719_workflow_3719_automate_gmail_webhook_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "filter",
        "merge",
        "noOp",
        "if",
        "gmail",
        "set",
        "stickyNote",
        "webhook",
        "googleDrive",
        "code",
        "n8n-nodes-langchain.openAi",
        "readPDF",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "gmail",
        "webhook",
        "googledrive"
      ],
      "total_nodes": 20,
      "node_types": [
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.readPDF",
        "n8n-nodes-base.if",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, webhook, googledrive, triggered via webhook",
      "complexity_score": 33
    },
    {
      "original_filename": "548_workflow_548.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/548_workflow_548.json",
      "workflow_name": "548_workflow_548",
      "suggested_filename": "ecommerce_548_workflow_548_automate_manual_shopify.json",
      "category": "ECOMMERCE",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "shopify"
      ],
      "primary_integrations": [
        "manual",
        "shopify"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.shopify"
      ],
      "business_description": "ECOMMERCE workflow that automates data/processes using manual, shopify, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "fEJliGTxbsE0G8z2_Create_Google_Creds.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/fEJliGTxbsE0G8z2_Create_Google_Creds.json",
      "workflow_name": "Create Google Creds",
      "suggested_filename": "util_create_create_manual_n8n.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "splitOut",
        "manualTrigger",
        "n8n"
      ],
      "primary_integrations": [
        "manual",
        "n8n"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that creates data/processes using manual, n8n, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "C2pB17EpXAJwOcst_OpenAI_Assistant_for_Hubspot_Chat.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/C2pB17EpXAJwOcst_OpenAI_Assistant_for_Hubspot_Chat.json",
      "workflow_name": "OpenAI Assistant for Hubspot Chat",
      "suggested_filename": "ai_openai_ai_process_httprequest_webhook_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "wait",
        "stickyNote",
        "httpRequest",
        "webhook",
        "airtable",
        "code",
        "switch",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "airtable"
      ],
      "total_nodes": 34,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.code",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.if",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, webhook, airtable, triggered via webhook",
      "complexity_score": 43
    },
    {
      "original_filename": "2343_workflow_2343.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2343_workflow_2343.json",
      "workflow_name": "2343_workflow_2343",
      "suggested_filename": "ai_2343_workflow_2343_automate_n8nnodeslangchainhttprequest_n8nnodeslangchainlmc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.httprequest",
        "n8n-nodes-langchain.lmchatopenai",
        "manual"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.httprequest, n8n-nodes-langchain.lmchatopenai, manual, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "2435_workflow_2435.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2435_workflow_2435.json",
      "workflow_name": "2435_workflow_2435",
      "suggested_filename": "comm_2435_workflow_2435_automate_slack_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "slack",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "splitOut",
        "manualTrigger",
        "telegram"
      ],
      "primary_integrations": [
        "slack",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, httprequest, webhook, triggered via webhook",
      "complexity_score": 27
    },
    {
      "original_filename": "2058_workflow_2058.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2058_workflow_2058.json",
      "workflow_name": "2058_workflow_2058",
      "suggested_filename": "comm_2058_workflow_2058_automate_spreadsheetfile_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "if",
        "noOp",
        "stickyNote",
        "telegramTrigger",
        "telegram",
        "code",
        "facebookGraphApi"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "telegram",
        "telegram"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using spreadsheetfile, telegram, telegram, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "gsra9JToRDftNEvH_🤓_Conversion_Rate_Optimizer.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/gsra9JToRDftNEvH_🤓_Conversion_Rate_Optimizer.json",
      "workflow_name": "🤓 Conversion Rate Optimizer",
      "suggested_filename": "ai_conversion_automate_n8nnodeslangchainlmchatopenai_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.lmChatOpenAi",
        "httpRequest",
        "n8n-nodes-langchain.agent",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmchatopenai",
        "httprequest",
        "n8n-nodes-langchain.agent"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.lmchatopenai, httprequest, n8n-nodes-langchain.agent, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "wTI77cpLkbxsRQat_Brand_Content_Extract,_Summarize_&_Sentiment_Analysis_with_Bright_Data.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/wTI77cpLkbxsRQat_Brand_Content_Extract,_Summarize_&_Sentiment_Analysis_with_Bright_Data.json",
      "workflow_name": "Brand Content Extract, Summarize & Sentiment Analysis with Bright Data",
      "suggested_filename": "ai_brand_analyze_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.chainSummarization",
        "readWriteFile",
        "n8n-nodes-langchain.informationExtractor",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "function"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "n8n-nodes-langchain.chainsummarization"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.function",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that analyzes data/processes using n8n-nodes-langchain.chainllm, httprequest, n8n-nodes-langchain.chainsummarization, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "2321_workflow_2321.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2321_workflow_2321.json",
      "workflow_name": "2321_workflow_2321",
      "suggested_filename": "ai_2321_workflow_2321_automate_splitinbatches_slack_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "splitInBatches",
        "slack",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserItemList",
        "stickyNote",
        "set",
        "googleDocs",
        "gmail",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "extractFromFile",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "splitinbatches",
        "slack",
        "n8n-nodes-langchain.chainllm"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.outputParserItemList",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, slack, n8n-nodes-langchain.chainllm, triggered via webhook",
      "complexity_score": 35
    },
    {
      "original_filename": "82_Send_daily_weather_updates_via_a_push_notification_using_the_Pushcut_node.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/82_Send_daily_weather_updates_via_a_push_notification_using_the_Pushcut_node.json",
      "workflow_name": "Send daily weather updates via a push notification using the Pushcut node",
      "suggested_filename": "ai_send_ai_process_openweathermap_pushcut_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "openWeatherMap",
        "pushcut",
        "cron"
      ],
      "primary_integrations": [
        "openweathermap",
        "pushcut",
        "cron"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.pushcut",
        "n8n-nodes-base.openWeatherMap",
        "n8n-nodes-base.cron"
      ],
      "business_description": "AI workflow that ai_processs data/processes using openweathermap, pushcut, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "gemC8tYGZk3LtBHG_Spotify_Sync_Liked_Songs_to_Playlist.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/gemC8tYGZk3LtBHG_Spotify_Sync_Liked_Songs_to_Playlist.json",
      "workflow_name": "Spotify Sync Liked Songs to Playlist",
      "suggested_filename": "data_spotify_sync_splitinbatches_gotify_cron.json",
      "category": "DATA",
      "business_function": "sync",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "filter",
        "merge",
        "noOp",
        "stickyNote",
        "gotify",
        "set",
        "compareDatasets",
        "scheduleTrigger",
        "sort",
        "manualTrigger",
        "summarize",
        "spotify"
      ],
      "primary_integrations": [
        "splitinbatches",
        "gotify",
        "comparedatasets"
      ],
      "total_nodes": 40,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.gotify",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.gotify",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify"
      ],
      "business_description": "DATA workflow that syncs data/processes using splitinbatches, gotify, comparedatasets, triggered via cron",
      "complexity_score": 53
    },
    {
      "original_filename": "tlnJNm9t5H3VLU5K_Credentials_Transfer.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/tlnJNm9t5H3VLU5K_Credentials_Transfer.json",
      "workflow_name": "Credentials Transfer",
      "suggested_filename": "util_credentials_transfer_httprequest_executecommand.json",
      "category": "UTIL",
      "business_function": "transfer",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "executeCommand",
        "form",
        "readWriteFile",
        "extractFromFile",
        "code",
        "formTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "executecommand",
        "form"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.code",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger"
      ],
      "business_description": "UTIL workflow that transfers data/processes using httprequest, executecommand, form, triggered via manual",
      "complexity_score": 31
    },
    {
      "original_filename": "2536_workflow_2536.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2536_workflow_2536.json",
      "workflow_name": "2536_workflow_2536",
      "suggested_filename": "util_2536_workflow_2536_automate_splitinbatches_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "splitInBatches",
        "wait",
        "if",
        "stickyNote",
        "set",
        "noOp",
        "httpRequest",
        "webhook",
        "manualTrigger",
        "code",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, httprequest, webhook, triggered via webhook",
      "complexity_score": 29
    },
    {
      "original_filename": "535_workflow_535.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/535_workflow_535.json",
      "workflow_name": "535_workflow_535",
      "suggested_filename": "util_535_workflow_535_automate_invoiceninja.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "invoiceNinjaTrigger"
      ],
      "primary_integrations": [
        "invoiceninja"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.invoiceNinjaTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using invoiceninja, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "2585_workflow_2585.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2585_workflow_2585.json",
      "workflow_name": "2585_workflow_2585",
      "suggested_filename": "comm_2585_workflow_2585_automate_splitinbatches_slack_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "splitInBatches",
        "slack",
        "if",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "aggregate",
        "webhook",
        "splitOut",
        "switch",
        "s3",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "splitinbatches",
        "slack",
        "httprequest"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.s3",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.splitOut"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, slack, httprequest, triggered via webhook",
      "complexity_score": 42
    },
    {
      "original_filename": "JIegnKLVXTkkTzfO_Daylight_Saving_Time_Notification.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/JIegnKLVXTkkTzfO_Daylight_Saving_Time_Notification.json",
      "workflow_name": "Daylight Saving Time Notification",
      "suggested_filename": "comm_daylight_automate_slack_datetime_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "if",
        "dateTime",
        "stickyNote",
        "set",
        "emailSend",
        "scheduleTrigger",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "slack",
        "datetime",
        "emailsend"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.emailSend"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, datetime, emailsend, triggered via cron",
      "complexity_score": 19
    },
    {
      "original_filename": "69_Create,_update,_and_get_an_issue_on_Taiga.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/69_Create,_update,_and_get_an_issue_on_Taiga.json",
      "workflow_name": "Create, update, and get an issue on Taiga",
      "suggested_filename": "ai_create_ai_process_taiga_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "taiga",
        "manualTrigger"
      ],
      "primary_integrations": [
        "taiga",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.taiga",
        "n8n-nodes-base.taiga",
        "n8n-nodes-base.taiga"
      ],
      "business_description": "AI workflow that ai_processs data/processes using taiga, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "173_Create_and_update_a_channel,_and_send_a_message_on_Twist.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/173_Create_and_update_a_channel,_and_send_a_message_on_Twist.json",
      "workflow_name": "Create and update a channel, and send a message on Twist",
      "suggested_filename": "comm_create_create_manual_twist.json",
      "category": "COMM",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "twist"
      ],
      "primary_integrations": [
        "manual",
        "twist"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.twist",
        "n8n-nodes-base.twist",
        "n8n-nodes-base.twist"
      ],
      "business_description": "COMM workflow that creates data/processes using manual, twist, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "1076_workflow_1076.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1076_workflow_1076.json",
      "workflow_name": "1076_workflow_1076",
      "suggested_filename": "data_1076_workflow_1076_automate_googlesheets_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "googleSheets",
        "webhook"
      ],
      "primary_integrations": [
        "googlesheets",
        "webhook"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, webhook, triggered via webhook",
      "complexity_score": 4
    },
    {
      "original_filename": "208_Add_a_datapoint_to_Beeminder_when_new_activity_is_added_to_Strava.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/208_Add_a_datapoint_to_Beeminder_when_new_activity_is_added_to_Strava.json",
      "workflow_name": "Add a datapoint to Beeminder when new activity is added to Strava",
      "suggested_filename": "data_datapoint_create_beeminder_strava.json",
      "category": "DATA",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "beeminder",
        "stravaTrigger"
      ],
      "primary_integrations": [
        "beeminder",
        "strava"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.stravaTrigger",
        "n8n-nodes-base.beeminder"
      ],
      "business_description": "DATA workflow that creates data/processes using beeminder, strava, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "7Qa2mH7PnDxy7Qat_Generate_Exam_Questions.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/7Qa2mH7PnDxy7Qat_Generate_Exam_Questions.json",
      "workflow_name": "Generate Exam Questions",
      "suggested_filename": "ai_generate_generate_n8nnodeslangchainchainretrievalqa_n8nnodeslangchainoutputpa.json",
      "category": "AI",
      "business_function": "generate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "n8n-nodes-langchain.outputParserStructured",
        "httpRequest",
        "convertToFile",
        "splitInBatches",
        "n8n-nodes-langchain.outputParserItemList",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.retrieverVectorStore",
        "n8n-nodes-langchain.toolVectorStore",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "googleSheets",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "googleDocs",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "code"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 37,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleDocs",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.convertToFile",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.outputParserItemList",
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.outputParserItemList",
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that generates data/processes using n8n-nodes-langchain.chainretrievalqa, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via manual",
      "complexity_score": 57
    },
    {
      "original_filename": "8tusZTTtcyaiznEG_🤖_AI_Powered_RAG_Chatbot_for_Your_Docs_+_Google_Drive_+_Gemini_+_Qdrant.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/8tusZTTtcyaiznEG_🤖_AI_Powered_RAG_Chatbot_for_Your_Docs_+_Google_Drive_+_Gemini_+_Qdrant.json",
      "workflow_name": "🤖 AI Powered RAG Chatbot for Your Docs + Google Drive + Gemini + Qdrant",
      "suggested_filename": "ai_powered_ai_process_n8nnodeslangchaininformationextractor_extractfromfile_webh.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "wait",
        "n8n-nodes-langchain.informationExtractor",
        "extractFromFile",
        "googleDrive",
        "telegram",
        "splitInBatches",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.code",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "merge",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "summarize",
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "googleDocs",
        "set",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "webhook",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.informationextractor",
        "extractfromfile",
        "googledrive"
      ],
      "total_nodes": 50,
      "node_types": [
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDocs",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.informationextractor, extractfromfile, googledrive, triggered via webhook",
      "complexity_score": 74
    },
    {
      "original_filename": "B6UHILmjPWa7ViQ4_Weather_via_Slack.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/B6UHILmjPWa7ViQ4_Weather_via_Slack.json",
      "workflow_name": "Weather via Slack",
      "suggested_filename": "comm_weather_automate_webhook_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "webhook",
        "httpRequest",
        "slack"
      ],
      "primary_integrations": [
        "webhook",
        "httprequest",
        "slack"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "COMM workflow that automates data/processes using webhook, httprequest, slack, triggered via webhook",
      "complexity_score": 8
    },
    {
      "original_filename": "2222_workflow_2222.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2222_workflow_2222.json",
      "workflow_name": "2222_workflow_2222",
      "suggested_filename": "comm_2222_workflow_2222_automate_slack_webhook_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "slack",
        "stickyNote",
        "set",
        "webhook",
        "xml",
        "extractFromFile",
        "switch",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "slack",
        "webhook",
        "xml"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, webhook, xml, triggered via webhook",
      "complexity_score": 20
    },
    {
      "original_filename": "30_N8N_Español_-_NocodeBot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/30_N8N_Español_-_NocodeBot.json",
      "workflow_name": "N8N Español - NocodeBot",
      "suggested_filename": "comm_español_automate_httprequest_executecommand.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "httpRequest",
        "executeCommand",
        "telegramTrigger",
        "telegram"
      ],
      "primary_integrations": [
        "httprequest",
        "executecommand",
        "telegram"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, executecommand, telegram, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "2139_workflow_2139.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2139_workflow_2139.json",
      "workflow_name": "2139_workflow_2139",
      "suggested_filename": "ai_2139_workflow_2139_automate_schedule_manual_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "scheduleTrigger",
        "manualTrigger",
        "n8n-nodes-langchain.openAi",
        "twitter"
      ],
      "primary_integrations": [
        "schedule",
        "manual",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that automates data/processes using schedule, manual, n8n-nodes-langchain.openai, triggered via cron",
      "complexity_score": 19
    },
    {
      "original_filename": "3599_workflow_3599.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3599_workflow_3599.json",
      "workflow_name": "3599_workflow_3599",
      "suggested_filename": "ai_3599_workflow_3599_automate_googlesheets_n8nnodeslangchainoutputparserstructu.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "code",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegramTrigger",
        "telegram",
        "limit",
        "n8n-nodes-langchain.agent",
        "splitOut",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "googlesheets",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 23,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using googlesheets, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 37
    },
    {
      "original_filename": "AI chatbot that can search the web.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI chatbot that can search the web.json",
      "workflow_name": "AI chatbot that can search the web",
      "suggested_filename": "ai_chatbot_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainwikip.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-langchain.manualChatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.toolSerpApi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.wikipedia",
        "n8n-nodes-langchain.manualchat"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.manualChatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolSerpApi",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.wikipedia, n8n-nodes-langchain.manualchat, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "Analyze Suspicious Email Contents with ChatGPT Vision.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Analyze Suspicious Email Contents with ChatGPT Vision.json",
      "workflow_name": "Analyze Suspicious Email Contents with ChatGPT Vision",
      "suggested_filename": "ai_analyze_analyze_gmail_httprequest.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [
        "gmailTrigger",
        "stickyNote",
        "set",
        "httpRequest",
        "jira",
        "code",
        "microsoftOutlookTrigger",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "jira"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.microsoftOutlookTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.code",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that analyzes data/processes using gmail, httprequest, jira, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "3631_workflow_3631.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3631_workflow_3631.json",
      "workflow_name": "3631_workflow_3631",
      "suggested_filename": "data_3631_workflow_3631_automate_postgres_postgres.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "postgres",
        "stickyNote",
        "postgresTool",
        "n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-langchain.toolWorkflow",
        "switch",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "postgres",
        "postgres",
        "n8n-nodes-langchain.mcp"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.postgresTool",
        "n8n-nodes-base.postgresTool",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.postgres",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.postgres",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using postgres, postgres, n8n-nodes-langchain.mcp, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "Qualifying Appointment Requests with AI & n8n Forms.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Qualifying Appointment Requests with AI & n8n Forms.json",
      "workflow_name": "Qualifying Appointment Requests with AI & n8n Forms",
      "suggested_filename": "ai_qualifying_ai_process_n8nnodeslangchainchainllm_gmail.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "if",
        "gmail",
        "set",
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "form",
        "googleCalendar",
        "n8n-nodes-langchain.lmChatOpenAi",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "gmail",
        "n8n-nodes-langchain.textclassifier"
      ],
      "total_nodes": 25,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.set",
        "n8n-nodes-base.form",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.if",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.textClassifier"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, gmail, n8n-nodes-langchain.textclassifier, triggered via manual",
      "complexity_score": 37
    },
    {
      "original_filename": "1_Daily_Journal_Reminder.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_Daily_Journal_Reminder.json",
      "workflow_name": "Daily Journal Reminder",
      "suggested_filename": "ai_daily_ai_process_functionitem_telegram_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "functionItem",
        "telegram",
        "cron"
      ],
      "primary_integrations": [
        "functionitem",
        "telegram",
        "cron"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "AI workflow that ai_processs data/processes using functionitem, telegram, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "2291_workflow_2291.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2291_workflow_2291.json",
      "workflow_name": "2291_workflow_2291",
      "suggested_filename": "util_2291_workflow_2291_automate_httprequest_sendinblue.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "httpRequest",
        "sendInBlue",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "sendinblue",
        "executeworkflow"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.sendInBlue"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, sendinblue, executeworkflow, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "YVNJOltj0jMQatGz_Stripe_Payment_Order_Sync_–_Auto_Retrieve_Customer_&_Product_Purchased.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/YVNJOltj0jMQatGz_Stripe_Payment_Order_Sync_–_Auto_Retrieve_Customer_&_Product_Purchased.json",
      "workflow_name": "Stripe Payment Order Sync – Auto Retrieve Customer & Product Purchased",
      "suggested_filename": "biz_stripe_sync_stripe_httprequest.json",
      "category": "BIZ",
      "business_function": "sync",
      "trigger_type": "manual",
      "integrations": [
        "stripeTrigger",
        "set",
        "httpRequest"
      ],
      "primary_integrations": [
        "stripe",
        "httprequest"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.stripeTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set"
      ],
      "business_description": "BIZ workflow that syncs data/processes using stripe, httprequest, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "AI Voice Chatbot with ElevenLabs & OpenAI for Customer Service and Restaurants.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Voice Chatbot with ElevenLabs & OpenAI for Customer Service and Restaurants.json",
      "workflow_name": "Voice RAG Chatbot with ElevenLabs and OpenAI",
      "suggested_filename": "ai_voice_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvectors.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolVectorStore",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "googleDrive",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.vectorstore",
        "n8n-nodes-langchain.textsplittertokensplitter"
      ],
      "total_nodes": 23,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.vectorstore, n8n-nodes-langchain.textsplittertokensplitter, triggered via webhook",
      "complexity_score": 37
    },
    {
      "original_filename": "s6nTFZfg6xjWyJRX_React_to_PDFMonkey_Callback.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/s6nTFZfg6xjWyJRX_React_to_PDFMonkey_Callback.json",
      "workflow_name": "React to PDFMonkey Callback",
      "suggested_filename": "util_react_automate_webhook_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "httpRequest",
        "if"
      ],
      "primary_integrations": [
        "webhook",
        "httprequest"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, httprequest, triggered via webhook",
      "complexity_score": 8
    },
    {
      "original_filename": "7i2RqqCYaKHUt4n3_Google_Site_Index_-_sitemap.xml_example.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/7i2RqqCYaKHUt4n3_Google_Site_Index_-_sitemap.xml_example.json",
      "workflow_name": "Google Site Index - sitemap.xml example",
      "suggested_filename": "ai_google_automate_splitinbatches_httprequest_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "wait",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "sort",
        "splitOut",
        "manualTrigger",
        "xml"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.sort"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, httprequest, schedule, triggered via cron",
      "complexity_score": 32
    },
    {
      "original_filename": "1749_workflow_1749.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1749_workflow_1749.json",
      "workflow_name": "1749_workflow_1749",
      "suggested_filename": "util_1749_workflow_1749_automate_splitinbatches_n8ntrainingcustomerdatastore.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8nTrainingCustomerDatastore",
        "noOp",
        "wait",
        "stickyNote",
        "set",
        "if",
        "n8nTrainingCustomerMessenger",
        "manualTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8ntrainingcustomerdatastore",
        "n8ntrainingcustomermessenger"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.n8nTrainingCustomerDatastore",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.n8nTrainingCustomerMessenger",
        "n8n-nodes-base.n8nTrainingCustomerMessenger"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, n8ntrainingcustomerdatastore, n8ntrainingcustomermessenger, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "1324_workflow_1324.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1324_workflow_1324.json",
      "workflow_name": "1324_workflow_1324",
      "suggested_filename": "comm_1324_workflow_1324_automate_slack_dropcontact.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "if",
        "set",
        "dropcontact",
        "airtable",
        "typeformTrigger"
      ],
      "primary_integrations": [
        "slack",
        "dropcontact",
        "airtable"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.set",
        "n8n-nodes-base.dropcontact",
        "n8n-nodes-base.if",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, dropcontact, airtable, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "plzObaqgoEvV4UU0_Post_on_X.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/plzObaqgoEvV4UU0_Post_on_X.json",
      "workflow_name": "Post on X",
      "suggested_filename": "content_post_automate_airtop_executeworkflow.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "airtop",
        "executeWorkflowTrigger",
        "formTrigger"
      ],
      "primary_integrations": [
        "airtop",
        "executeworkflow",
        "form"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.set"
      ],
      "business_description": "CONTENT workflow that automates data/processes using airtop, executeworkflow, form, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "2170_workflow_2170.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2170_workflow_2170.json",
      "workflow_name": "2170_workflow_2170",
      "suggested_filename": "ai_2170_workflow_2170_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "noOp",
        "set",
        "stickyNote",
        "httpRequest",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "code",
        "extractFromFile",
        "convertToFile"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 43,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via manual",
      "complexity_score": 58
    },
    {
      "original_filename": "__Calendar_Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/__Calendar_Agent.json",
      "workflow_name": "🤖Calendar Agent",
      "suggested_filename": "ai_calendar_automate_googlecalendar_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "googleCalendarTool",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "googlecalendar",
        "n8n-nodes-langchain.lmchatopenai",
        "n8n-nodes-langchain.agent"
      ],
      "total_nodes": 10,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.executeWorkflowTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using googlecalendar, n8n-nodes-langchain.lmchatopenai, n8n-nodes-langchain.agent, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "6pOGYw5O3iOY1Gc6_Remote_IOT_Sensor_monitoring_via_MQTT_and_InfluxDB.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/6pOGYw5O3iOY1Gc6_Remote_IOT_Sensor_monitoring_via_MQTT_and_InfluxDB.json",
      "workflow_name": "Remote IOT Sensor monitoring via MQTT and InfluxDB",
      "suggested_filename": "ops_remote_monitor_mqtt_httprequest.json",
      "category": "OPS",
      "business_function": "monitor",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "mqttTrigger",
        "httpRequest",
        "code"
      ],
      "primary_integrations": [
        "mqtt",
        "httprequest"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.mqttTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code"
      ],
      "business_description": "OPS workflow that monitors data/processes using mqtt, httprequest, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "331_Check_To_Do_on_Notion_and_send_message_on_Slack.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/331_Check_To_Do_on_Notion_and_send_message_on_Slack.json",
      "workflow_name": "Check To Do on Notion and send message on Slack",
      "suggested_filename": "comm_check_send_slack_notion_cron.json",
      "category": "COMM",
      "business_function": "send",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "if",
        "noOp",
        "notion",
        "cron"
      ],
      "primary_integrations": [
        "slack",
        "notion",
        "cron"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that sends data/processes using slack, notion, cron, triggered via cron",
      "complexity_score": 11
    },
    {
      "original_filename": "1916_workflow_1916.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1916_workflow_1916.json",
      "workflow_name": "1916_workflow_1916",
      "suggested_filename": "util_1916_workflow_1916_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "78_Receive_updates_when_a_form_is_submitted_in_Wufoo.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/78_Receive_updates_when_a_form_is_submitted_in_Wufoo.json",
      "workflow_name": "Receive updates when a form is submitted in Wufoo",
      "suggested_filename": "util_receive_update_wufoo.json",
      "category": "UTIL",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "wufooTrigger"
      ],
      "primary_integrations": [
        "wufoo"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.wufooTrigger"
      ],
      "business_description": "UTIL workflow that updates data/processes using wufoo, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "135_Receive_messages_for_an_ActiveMQ_queue_via_AMQP_Trigger.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/135_Receive_messages_for_an_ActiveMQ_queue_via_AMQP_Trigger.json",
      "workflow_name": "Receive messages for an ActiveMQ queue via AMQP Trigger",
      "suggested_filename": "comm_receive_automate_amqp.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "amqpTrigger"
      ],
      "primary_integrations": [
        "amqp"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.amqpTrigger"
      ],
      "business_description": "COMM workflow that automates data/processes using amqp, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "Qualify new leads in Google Sheets via OpenAI_s GPT-4.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Qualify new leads in Google Sheets via OpenAI_s GPT-4.json",
      "workflow_name": "Qualify new leads in Google Sheets via OpenAI's GPT-4",
      "suggested_filename": "ai_qualify_ai_process_openai_googlesheets.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "openAi",
        "googleSheets",
        "googleSheetsTrigger"
      ],
      "primary_integrations": [
        "openai",
        "googlesheets",
        "googlesheets"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.googleSheetsTrigger"
      ],
      "business_description": "AI workflow that ai_processs data/processes using openai, googlesheets, googlesheets, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "3277_workflow_3277.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3277_workflow_3277.json",
      "workflow_name": "3277_workflow_3277",
      "suggested_filename": "ai_3277_workflow_3277_automate_gmail_gmail.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "gmailTrigger",
        "gmail",
        "n8n-nodes-langchain.textClassifier",
        "emailSend",
        "stickyNote",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "sendInBlue"
      ],
      "primary_integrations": [
        "gmail",
        "gmail",
        "n8n-nodes-langchain.textclassifier"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.sendInBlue",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, gmail, n8n-nodes-langchain.textclassifier, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "a58HZKwcOy7lmz56_Building_RAG_Chatbot_for_Movie_Recommendations_with_Qdrant_and_Open_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/a58HZKwcOy7lmz56_Building_RAG_Chatbot_for_Movie_Recommendations_with_Qdrant_and_Open_AI.json",
      "workflow_name": "Building RAG Chatbot for Movie Recommendations with Qdrant and Open AI",
      "suggested_filename": "ai_building_ai_process_httprequest_extractfromfile.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "extractFromFile",
        "aggregate",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "merge",
        "stickyNote",
        "github",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "executeWorkflowTrigger",
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "set",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "splitOut",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "extractfromfile",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 27,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.github",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, extractfromfile, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 46
    },
    {
      "original_filename": "📈 Receive Daily Market News from FT.com to your Microsoft outlook inbox.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/📈 Receive Daily Market News from FT.com to your Microsoft outlook inbox.json",
      "workflow_name": "📈 Receive Daily Market News from FT.com to your Microsoft outlook inbox",
      "suggested_filename": "ai_receive_ai_process_httprequest_microsoftoutlook_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "microsoftOutlook",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "html"
      ],
      "primary_integrations": [
        "httprequest",
        "microsoftoutlook",
        "schedule"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.html",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.microsoftOutlook"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, microsoftoutlook, schedule, triggered via cron",
      "complexity_score": 16
    },
    {
      "original_filename": "2112_workflow_2112.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2112_workflow_2112.json",
      "workflow_name": "2112_workflow_2112",
      "suggested_filename": "comm_2112_workflow_2112_automate_hubspot_gmail_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "hubspot",
        "gmail",
        "set",
        "stickyNote",
        "scheduleTrigger"
      ],
      "primary_integrations": [
        "hubspot",
        "gmail",
        "schedule"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.hubspot"
      ],
      "business_description": "COMM workflow that automates data/processes using hubspot, gmail, schedule, triggered via cron",
      "complexity_score": 13
    },
    {
      "original_filename": "13_Receive_updates_when_a_form_is_submitted_in_Mautic,_and_send_a_confirmation_SMS.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/13_Receive_updates_when_a_form_is_submitted_in_Mautic,_and_send_a_confirmation_SMS.json",
      "workflow_name": "Receive updates when a form is submitted in Mautic, and send a confirmation SMS",
      "suggested_filename": "util_receive_update_mautic_twilio.json",
      "category": "UTIL",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "mauticTrigger",
        "twilio"
      ],
      "primary_integrations": [
        "mautic",
        "twilio"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.mauticTrigger",
        "n8n-nodes-base.twilio"
      ],
      "business_description": "UTIL workflow that updates data/processes using mautic, twilio, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "170_Create,_update,_and_get_a_post_in_Ghost.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/170_Create,_update,_and_get_a_post_in_Ghost.json",
      "workflow_name": "Create, update, and get a post in Ghost",
      "suggested_filename": "content_create_create_ghost_manual.json",
      "category": "CONTENT",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "ghost",
        "manualTrigger"
      ],
      "primary_integrations": [
        "ghost",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.ghost",
        "n8n-nodes-base.ghost",
        "n8n-nodes-base.ghost"
      ],
      "business_description": "CONTENT workflow that creates data/processes using ghost, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2159_workflow_2159.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2159_workflow_2159.json",
      "workflow_name": "2159_workflow_2159",
      "suggested_filename": "comm_2159_workflow_2159_automate_error_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "errorTrigger",
        "stickyNote",
        "set",
        "telegram"
      ],
      "primary_integrations": [
        "error",
        "telegram"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.errorTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using error, telegram, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "Lwvu2jjMU2irTyAY_Summarize_Google_Sheets_form_feedback_via_OpenAI's_GPT-4.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Lwvu2jjMU2irTyAY_Summarize_Google_Sheets_form_feedback_via_OpenAI's_GPT-4.json",
      "workflow_name": "Summarize Google Sheets form feedback via OpenAI's GPT-4",
      "suggested_filename": "ai_summarize_ai_process_gmail_markdown.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "gmail",
        "markdown",
        "openAi",
        "manualTrigger",
        "aggregate",
        "googleSheets"
      ],
      "primary_integrations": [
        "gmail",
        "markdown",
        "openai"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, markdown, openai, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "3194_workflow_3194.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3194_workflow_3194.json",
      "workflow_name": "3194_workflow_3194",
      "suggested_filename": "ai_3194_workflow_3194_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "gmail",
        "httpRequest",
        "scheduleTrigger",
        "googleCalendar",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.googleCalendar"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, gmail, triggered via cron",
      "complexity_score": 22
    },
    {
      "original_filename": "QObDE85a2ArfJkxV_Automated_Form_Submission_Data_Storage_in_Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/QObDE85a2ArfJkxV_Automated_Form_Submission_Data_Storage_in_Airtable.json",
      "workflow_name": "Automated Form Submission Data Storage in Airtable",
      "suggested_filename": "ai_automated_ai_process_airtable_form.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "airtable",
        "formTrigger"
      ],
      "primary_integrations": [
        "airtable",
        "form"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using airtable, form, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "Scrape and summarize posts of a news site without RSS feed using AI and save them to a NocoDB.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Scrape and summarize posts of a news site without RSS feed using AI and save them to a NocoDB.json",
      "workflow_name": "News Extraction",
      "suggested_filename": "ai_news_extract_nocodb_itemlists_cron.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "nocoDb",
        "itemLists",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "openAi",
        "code",
        "html"
      ],
      "primary_integrations": [
        "nocodb",
        "itemlists",
        "httprequest"
      ],
      "total_nodes": 36,
      "node_types": [
        "n8n-nodes-base.html",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.html",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.itemLists"
      ],
      "business_description": "AI workflow that extracts data/processes using nocodb, itemlists, httprequest, triggered via cron",
      "complexity_score": 46
    },
    {
      "original_filename": "kS9EfgZeaK3QV6Mw_Build_an_MCP_server_with_Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/kS9EfgZeaK3QV6Mw_Build_an_MCP_server_with_Airtable.json",
      "workflow_name": "Build an MCP server with Airtable",
      "suggested_filename": "ai_build_ai_process_n8nnodeslangchainmemorybufferwindow_airtable.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "airtableTool",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.mcpClientTool",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "airtable",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 13,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.mcpClientTool",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-base.airtableTool",
        "n8n-nodes-base.airtableTool",
        "n8n-nodes-base.airtableTool",
        "n8n-nodes-base.airtableTool",
        "n8n-nodes-base.airtableTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, airtable, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "1ZfA8Do3j7lCB3zF_Blockchain_DEX_Screener_Insights_Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1ZfA8Do3j7lCB3zF_Blockchain_DEX_Screener_Insights_Agent.json",
      "workflow_name": "Blockchain DEX Screener Insights Agent",
      "suggested_filename": "ai_blockchain_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainch.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "n8n-nodes-langchain.toolHttpRequest",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "telegram"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.httprequest"
      ],
      "total_nodes": 15,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.telegramTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.httprequest, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "159_Create,_update_and_get_a_case_in_TheHive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/159_Create,_update_and_get_a_case_in_TheHive.json",
      "workflow_name": "Create, update and get a case in TheHive",
      "suggested_filename": "util_create_create_manual_thehive.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "theHive"
      ],
      "primary_integrations": [
        "manual",
        "thehive"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.theHive",
        "n8n-nodes-base.theHive",
        "n8n-nodes-base.theHive"
      ],
      "business_description": "UTIL workflow that creates data/processes using manual, thehive, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2293_workflow_2293.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2293_workflow_2293.json",
      "workflow_name": "2293_workflow_2293",
      "suggested_filename": "comm_2293_workflow_2293_automate_splitinbatches_slack_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "slack",
        "noOp",
        "stickyNote",
        "set",
        "webflow",
        "compareDatasets",
        "notion",
        "scheduleTrigger",
        "code",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "slack",
        "webflow"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.code",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.webflow",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.webflow",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, slack, webflow, triggered via cron",
      "complexity_score": 41
    },
    {
      "original_filename": "3145_workflow_3145.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3145_workflow_3145.json",
      "workflow_name": "3145_workflow_3145",
      "suggested_filename": "util_3145_workflow_3145_automate_httprequest_googledrive.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "googleDrive",
        "code",
        "formTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "googledrive",
        "form"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, googledrive, form, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "AI_ Summarize podcast episode and enhance using Wikipedia.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI_ Summarize podcast episode and enhance using Wikipedia.json",
      "workflow_name": "Podcast Digest",
      "suggested_filename": "ai_podcast_automate_itemlists_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "itemLists",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "gmail",
        "n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-langchain.documentJsonInputLoader",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "code",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "itemlists",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.documentJsonInputLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.itemLists",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using itemlists, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "ppsHlJlSpHPQJp4Q_workflow_ppsHlJlSpHPQJp4Q.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ppsHlJlSpHPQJp4Q_workflow_ppsHlJlSpHPQJp4Q.json",
      "workflow_name": "ppsHlJlSpHPQJp4Q_workflow_ppsHlJlSpHPQJp4Q",
      "suggested_filename": "util_ppshljlsphpqjp4q_workflow_ppshljlsphpqjp4q_automate_schedule_httprequest_cr.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "scheduleTrigger",
        "httpRequest",
        "twilio",
        "if"
      ],
      "primary_integrations": [
        "schedule",
        "httprequest",
        "twilio"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.twilio",
        "n8n-nodes-base.if"
      ],
      "business_description": "UTIL workflow that automates data/processes using schedule, httprequest, twilio, triggered via cron",
      "complexity_score": 8
    },
    {
      "original_filename": "1074_workflow_1074.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1074_workflow_1074.json",
      "workflow_name": "1074_workflow_1074",
      "suggested_filename": "util_1074_workflow_1074_automate_nocodb_splitinbatches_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "filter",
        "merge",
        "nocoDb",
        "splitInBatches",
        "if",
        "noOp",
        "stickyNote",
        "scheduleTrigger",
        "code",
        "spotify"
      ],
      "primary_integrations": [
        "nocodb",
        "splitinbatches",
        "schedule"
      ],
      "total_nodes": 30,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.if",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "UTIL workflow that automates data/processes using nocodb, splitinbatches, schedule, triggered via cron",
      "complexity_score": 40
    },
    {
      "original_filename": "Automate testimonials in Strapi with n8n.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Automate testimonials in Strapi with n8n.json",
      "workflow_name": "Automate testimonials in Strapi with n8n",
      "suggested_filename": "content_automate_automate_googlecloudnaturallanguage_interval_webhook.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "googleCloudNaturalLanguage",
        "if",
        "set",
        "interval",
        "webhook",
        "strapi",
        "twitter"
      ],
      "primary_integrations": [
        "googlecloudnaturallanguage",
        "interval",
        "webhook"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.strapi",
        "n8n-nodes-base.interval",
        "n8n-nodes-base.if",
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleCloudNaturalLanguage",
        "n8n-nodes-base.googleCloudNaturalLanguage",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.strapi",
        "n8n-nodes-base.if"
      ],
      "business_description": "CONTENT workflow that automates data/processes using googlecloudnaturallanguage, interval, webhook, triggered via webhook",
      "complexity_score": 22
    },
    {
      "original_filename": "1326_workflow_1326.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1326_workflow_1326.json",
      "workflow_name": "1326_workflow_1326",
      "suggested_filename": "comm_1326_workflow_1326_automate_error_slack.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "errorTrigger",
        "slack"
      ],
      "primary_integrations": [
        "error",
        "slack"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.slack",
        "n8n-nodes-base.errorTrigger"
      ],
      "business_description": "COMM workflow that automates data/processes using error, slack, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "yxv7OYbDEnqsqfa9_WhatsApp_starter_workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/yxv7OYbDEnqsqfa9_WhatsApp_starter_workflow.json",
      "workflow_name": "WhatsApp starter workflow",
      "suggested_filename": "comm_whatsapp_automate_webhook_whatsapp_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "webhook",
        "whatsApp",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "whatsapp",
        "respondtowebhook"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "COMM workflow that automates data/processes using webhook, whatsapp, respondtowebhook, triggered via webhook",
      "complexity_score": 13
    },
    {
      "original_filename": "1914_workflow_1914.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1914_workflow_1914.json",
      "workflow_name": "1914_workflow_1914",
      "suggested_filename": "util_1914_workflow_1914_automate_spreadsheetfile_microsoftsql.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "stickyNote",
        "set",
        "microsoftSql",
        "manualTrigger"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "microsoftsql",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.microsoftSql",
        "n8n-nodes-base.spreadsheetFile"
      ],
      "business_description": "UTIL workflow that automates data/processes using spreadsheetfile, microsoftsql, manual, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "437_workflow_437.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/437_workflow_437.json",
      "workflow_name": "437_workflow_437",
      "suggested_filename": "util_437_workflow_437_automate_httprequest_readbinaryfile.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "httprequest",
        "readbinaryfile"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, readbinaryfile, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "3561_workflow_3561.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3561_workflow_3561.json",
      "workflow_name": "3561_workflow_3561",
      "suggested_filename": "ai_3561_workflow_3561_automate_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.chainLlm",
        "wait",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatAnthropic",
        "manualTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chainllm",
        "httprequest"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.splitInBatches"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.chainllm, httprequest, triggered via cron",
      "complexity_score": 32
    },
    {
      "original_filename": "156_Create,_update_and_get_records_in_Quick_Base.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/156_Create,_update_and_get_records_in_Quick_Base.json",
      "workflow_name": "Create, update and get records in Quick Base",
      "suggested_filename": "util_create_create_quickbase_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "quickbase",
        "manualTrigger"
      ],
      "primary_integrations": [
        "quickbase",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.quickbase",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.quickbase",
        "n8n-nodes-base.quickbase"
      ],
      "business_description": "UTIL workflow that creates data/processes using quickbase, manual, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "1395_workflow_1395.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1395_workflow_1395.json",
      "workflow_name": "1395_workflow_1395",
      "suggested_filename": "data_1395_workflow_1395_automate_httprequest_awsrekognition.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "httpRequest",
        "awsRekognition",
        "googleSheets",
        "function"
      ],
      "primary_integrations": [
        "httprequest",
        "awsrekognition",
        "googlesheets"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.awsRekognition",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.function",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, awsrekognition, googlesheets, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "2666_workflow_2666.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2666_workflow_2666.json",
      "workflow_name": "2666_workflow_2666",
      "suggested_filename": "ai_2666_workflow_2666_automate_gmail_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "gmailTrigger",
        "stickyNote",
        "set",
        "httpRequest",
        "jira",
        "code",
        "microsoftOutlookTrigger",
        "convertToFile",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "jira"
      ],
      "total_nodes": 25,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.microsoftOutlookTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, httprequest, jira, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "2110_workflow_2110.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2110_workflow_2110.json",
      "workflow_name": "2110_workflow_2110",
      "suggested_filename": "comm_2110_workflow_2110_automate_gmail_httprequest_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "noOp",
        "stickyNote",
        "set",
        "gmail",
        "httpRequest",
        "scheduleTrigger",
        "googleCalendar",
        "code"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.googleCalendar"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, httprequest, schedule, triggered via cron",
      "complexity_score": 21
    },
    {
      "original_filename": "1344_workflow_1344.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1344_workflow_1344.json",
      "workflow_name": "1344_workflow_1344",
      "suggested_filename": "util_1344_workflow_1344_automate_nextcloud_emailreadimap.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "nextCloud",
        "function",
        "emailReadImap"
      ],
      "primary_integrations": [
        "nextcloud",
        "emailreadimap"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.nextCloud",
        "n8n-nodes-base.function"
      ],
      "business_description": "UTIL workflow that automates data/processes using nextcloud, emailreadimap, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "534_workflow_534.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/534_workflow_534.json",
      "workflow_name": "534_workflow_534",
      "suggested_filename": "util_534_workflow_534_automate_invoiceninja_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "invoiceNinja",
        "manualTrigger"
      ],
      "primary_integrations": [
        "invoiceninja",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.invoiceNinja"
      ],
      "business_description": "UTIL workflow that automates data/processes using invoiceninja, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "100_On_new_Stripe_Invoice_Payment_update_Hubspot_and_notify_the_team_in_Slack.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/100_On_new_Stripe_Invoice_Payment_update_Hubspot_and_notify_the_team_in_Slack.json",
      "workflow_name": "On new Stripe Invoice Payment update Hubspot and notify the team in Slack",
      "suggested_filename": "comm_stripe_notify_stripe_hubspot.json",
      "category": "COMM",
      "business_function": "notify",
      "trigger_type": "manual",
      "integrations": [
        "stripeTrigger",
        "hubspot",
        "slack",
        "if"
      ],
      "primary_integrations": [
        "stripe",
        "hubspot",
        "slack"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.stripeTrigger",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that notifys data/processes using stripe, hubspot, slack, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "emPRhyWgxygwHgWh_Compare_2_SQL_datasets.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/emPRhyWgxygwHgWh_Compare_2_SQL_datasets.json",
      "workflow_name": "Compare 2 SQL datasets",
      "suggested_filename": "data_compare_automate_comparedatasets_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "compareDatasets",
        "set",
        "manualTrigger",
        "mySql"
      ],
      "primary_integrations": [
        "comparedatasets",
        "manual",
        "mysql"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that automates data/processes using comparedatasets, manual, mysql, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "IJYpB2CIAdLk8Umg_puq-docker-minio-deploy.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/IJYpB2CIAdLk8Umg_puq-docker-minio-deploy.json",
      "workflow_name": "puq-docker-minio-deploy",
      "suggested_filename": "ops_docker_automate_ssh_webhook_webhook.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "ssh",
        "stickyNote",
        "set",
        "webhook",
        "code",
        "switch",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "ssh",
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 33,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.ssh",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set"
      ],
      "business_description": "OPS workflow that automates data/processes using ssh, webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 41
    },
    {
      "original_filename": "Telegram to Spotify with OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Telegram to Spotify with OpenAI.json",
      "workflow_name": "Play with Spotify from Telegram",
      "suggested_filename": "ai_play_automate_telegram_telegram.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "set",
        "telegramTrigger",
        "telegram",
        "n8n-nodes-langchain.openAi",
        "spotify"
      ],
      "primary_integrations": [
        "telegram",
        "telegram",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that automates data/processes using telegram, telegram, n8n-nodes-langchain.openai, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "AnbedV2Ntx97sfed_Extract_&_Summarize_Bing_Copilot_Search_Results_with_Gemini_AI_and_Bright_Data.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AnbedV2Ntx97sfed_Extract_&_Summarize_Bing_Copilot_Search_Results_with_Gemini_AI_and_Bright_Data.json",
      "workflow_name": "Extract & Summarize Bing Copilot Search Results with Gemini AI and Bright Data",
      "suggested_filename": "ai_extract_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "if",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "wait",
        "httpRequest",
        "n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "manualTrigger",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via manual",
      "complexity_score": 31
    },
    {
      "original_filename": "Build a Financial Documents Assistant using Qdrant and Mistral.ai.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Build a Financial Documents Assistant using Qdrant and Mistral.ai.json",
      "workflow_name": "Build a Financial Documents Assistant using Qdrant and Mistral.ai",
      "suggested_filename": "ai_build_ai_process_n8nnodeslangchainchainretrievalqa_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "switch",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatMistralCloud",
        "httpRequest",
        "n8n-nodes-langchain.retrieverVectorStore",
        "readWriteFile",
        "manualTrigger",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "localFileTrigger",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.embeddingsMistralCloud",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.lmchatmistralcloud"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.localFileTrigger",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.readWriteFile",
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainretrievalqa, n8n-nodes-langchain.chat, n8n-nodes-langchain.lmchatmistralcloud, triggered via manual",
      "complexity_score": 45
    },
    {
      "original_filename": "Introduction to the HTTP Tool.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Introduction to the HTTP Tool.json",
      "workflow_name": "Introduction to the HTTP Tool",
      "suggested_filename": "ai_introduction_automate_n8nnodeslangchainhttprequest_n8nnodeslangchainlmchatope.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.httprequest",
        "n8n-nodes-langchain.lmchatopenai",
        "manual"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.httprequest, n8n-nodes-langchain.lmchatopenai, manual, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "1225_workflow_1225.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1225_workflow_1225.json",
      "workflow_name": "1225_workflow_1225",
      "suggested_filename": "comm_1225_workflow_1225_automate_hubspot_googleslides.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "hubspot",
        "googleSlides",
        "slack",
        "if",
        "set",
        "hubspotTrigger",
        "airtable",
        "switch"
      ],
      "primary_integrations": [
        "hubspot",
        "googleslides",
        "slack"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.if",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.googleSlides",
        "n8n-nodes-base.hubspotTrigger",
        "n8n-nodes-base.hubspot"
      ],
      "business_description": "COMM workflow that automates data/processes using hubspot, googleslides, slack, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "L1UcBZ9UJvN9gnSb_💥🛠️Automate_Blog_Content_Creation_with_GPT-4,_Perplexity_&_WordPress.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/L1UcBZ9UJvN9gnSb_💥🛠️Automate_Blog_Content_Creation_with_GPT-4,_Perplexity_&_WordPress.json",
      "workflow_name": "💥🛠️Automate Blog Content Creation with GPT-4, Perplexity & WordPress",
      "suggested_filename": "ai_automate_automate_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "gmailTool",
        "wordpressTool",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-mcp.mcpClientTool",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wordpressTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-mcp.mcpClientTool",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-mcp.mcpClientTool",
        "n8n-nodes-mcp.mcpClientTool"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "2071_workflow_2071.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2071_workflow_2071.json",
      "workflow_name": "2071_workflow_2071",
      "suggested_filename": "data_2071_workflow_2071_automate_spreadsheetfile_httprequest.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "airtable",
        "airtableTrigger"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "httprequest",
        "airtable"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtableTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using spreadsheetfile, httprequest, airtable, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "1296_workflow_1296.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1296_workflow_1296.json",
      "workflow_name": "1296_workflow_1296",
      "suggested_filename": "biz_1296_workflow_1296_automate_hubspot_hubspot.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "hubspot",
        "hubspotTrigger",
        "clearbit"
      ],
      "primary_integrations": [
        "hubspot",
        "hubspot",
        "clearbit"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.clearbit",
        "n8n-nodes-base.hubspotTrigger",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot"
      ],
      "business_description": "BIZ workflow that automates data/processes using hubspot, hubspot, clearbit, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "3314_workflow_3314.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3314_workflow_3314.json",
      "workflow_name": "3314_workflow_3314",
      "suggested_filename": "ai_3314_workflow_3314_automate_gmail_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "gmail",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "code",
        "aggregate",
        "formTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.code",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "127_Create_a_user_profile_in_Vero.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/127_Create_a_user_profile_in_Vero.json",
      "workflow_name": "Create a user profile in Vero",
      "suggested_filename": "util_create_create_contact_vero_manual.json",
      "category": "UTIL",
      "business_function": "create_contact",
      "trigger_type": "manual",
      "integrations": [
        "vero",
        "manualTrigger"
      ],
      "primary_integrations": [
        "vero",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.vero"
      ],
      "business_description": "UTIL workflow that create_contacts data/processes using vero, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "gIZpJgLpUgdoNNDZ_YT_New_Video_Upload.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/gIZpJgLpUgdoNNDZ_YT_New_Video_Upload.json",
      "workflow_name": "YT New Video Upload",
      "suggested_filename": "ai_video_automate_httprequest_youtube.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "youTube",
        "code",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "googleDrive",
        "n8n-nodes-langchain.openAi",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "youtube",
        "n8n-nodes-langchain.lmchatgooglegemini"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDriveTrigger",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, youtube, n8n-nodes-langchain.lmchatgooglegemini, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "Telegram AI bot with LangChain nodes.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Telegram AI bot with LangChain nodes.json",
      "workflow_name": "Telegram AI Langchain bot",
      "suggested_filename": "ai_telegram_ai_process_n8nnodeslangchainmemorybufferwindow_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "httpRequest",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "httprequest",
        "telegram"
      ],
      "total_nodes": 12,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, httprequest, telegram, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "5DiXT9FykJvuElc1_Get_Comments_from_Facebook_Page.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/5DiXT9FykJvuElc1_Get_Comments_from_Facebook_Page.json",
      "workflow_name": "Get Comments from Facebook Page",
      "suggested_filename": "content_comments_read_manual_facebookgraphapi.json",
      "category": "CONTENT",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "filter",
        "merge",
        "stickyNote",
        "set",
        "splitOut",
        "manualTrigger",
        "code",
        "facebookGraphApi"
      ],
      "primary_integrations": [
        "manual",
        "facebookgraphapi"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "CONTENT workflow that reads data/processes using manual, facebookgraphapi, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "WETMyIJCbD3et6Rh_High-Level_Service_Page_SEO_Blueprint_Report.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/WETMyIJCbD3et6Rh_High-Level_Service_Page_SEO_Blueprint_Report.json",
      "workflow_name": "High-Level Service Page SEO Blueprint Report",
      "suggested_filename": "ai_high_report_splitinbatches_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "report",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.chainLlm",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "code",
        "convertToFile",
        "formTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chainllm",
        "httprequest"
      ],
      "total_nodes": 33,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.wait",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wait",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wait",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wait",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that reports data/processes using splitinbatches, n8n-nodes-langchain.chainllm, httprequest, triggered via manual",
      "complexity_score": 43
    },
    {
      "original_filename": "3400_workflow_3400.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3400_workflow_3400.json",
      "workflow_name": "3400_workflow_3400",
      "suggested_filename": "util_3400_workflow_3400_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "executeworkflow"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, executeworkflow, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "TfwQRZkTBtykx1rM_Enrich_Company_Data_from_Google_Sheet_with_OpenAI_Agent_and_Scraper_Tool.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/TfwQRZkTBtykx1rM_Enrich_Company_Data_from_Google_Sheet_with_OpenAI_Agent_and_Scraper_Tool.json",
      "workflow_name": "Enrich Company Data from Google Sheet with OpenAI Agent and Scraper Tool",
      "suggested_filename": "ai_enrich_ai_process_splitinbatches_n8nnodeslangchainoutputparserstructured_webh.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "markdown",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "googleSheets",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 13,
      "node_types": [
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via webhook",
      "complexity_score": 25
    },
    {
      "original_filename": "🐋DeepSeek V3 Chat & R1 Reasoning Quick Start.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/🐋DeepSeek V3 Chat & R1 Reasoning Quick Start.json",
      "workflow_name": "🐋DeepSeek V3 Chat & R1 Reasoning Quick Start",
      "suggested_filename": "ai_deepseek_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchainl.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 15,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "wDD4XugmHIvx3KMT_Image_Generation_API.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/wDD4XugmHIvx3KMT_Image_Generation_API.json",
      "workflow_name": "Image Generation API",
      "suggested_filename": "ai_image_automate_webhook_n8nnodeslangchainopenai_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "n8n-nodes-langchain.openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "n8n-nodes-langchain.openai",
        "respondtowebhook"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using webhook, n8n-nodes-langchain.openai, respondtowebhook, triggered via webhook",
      "complexity_score": 11
    },
    {
      "original_filename": "AI Agent To Chat With Files In Supabase Storage.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Agent To Chat With Files In Supabase Storage.json",
      "workflow_name": "AI Agent To Chat With Files In Supabase Storage",
      "suggested_filename": "ai_agent_ai_process_splitinbatches_supabase.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "supabase",
        "n8n-nodes-langchain.toolVectorStore",
        "merge",
        "switch",
        "if",
        "n8n-nodes-langchain.vectorStoreSupabase",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "extractFromFile",
        "n8n-nodes-langchain.agent",
        "aggregate",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "supabase",
        "n8n-nodes-langchain.vectorstore"
      ],
      "total_nodes": 33,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.if",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, supabase, n8n-nodes-langchain.vectorstore, triggered via manual",
      "complexity_score": 51
    },
    {
      "original_filename": "549_workflow_549.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/549_workflow_549.json",
      "workflow_name": "549_workflow_549",
      "suggested_filename": "util_549_workflow_549_automate_mautic_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "mautic",
        "manualTrigger"
      ],
      "primary_integrations": [
        "mautic",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.mautic"
      ],
      "business_description": "UTIL workflow that automates data/processes using mautic, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "200_BillBot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/200_BillBot.json",
      "workflow_name": "BillBot",
      "suggested_filename": "comm_billbot_automate_httprequest_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "httpRequest",
        "telegramTrigger",
        "telegram",
        "googleSheets",
        "twilio"
      ],
      "primary_integrations": [
        "httprequest",
        "telegram",
        "telegram"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.twilio"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, telegram, telegram, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "YybYYc430rmZWJPJ_Log_errors_and_avoid_sending_too_many_emails.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/YybYYc430rmZWJPJ_Log_errors_and_avoid_sending_too_many_emails.json",
      "workflow_name": "Log errors and avoid sending too many emails",
      "suggested_filename": "ai_errors_ai_process_error_postgres.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "errorTrigger",
        "postgres",
        "if",
        "noOp",
        "stickyNote",
        "emailSend",
        "pushover",
        "manualTrigger",
        "code",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "error",
        "postgres",
        "emailsend"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.errorTrigger",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.pushover",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using error, postgres, emailsend, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "3449_workflow_3449.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3449_workflow_3449.json",
      "workflow_name": "3449_workflow_3449",
      "suggested_filename": "ai_3449_workflow_3449_automate_n8nnodeslangchainmemorybufferwindow_microsoftoutl.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "microsoftOutlookTool",
        "slack",
        "if",
        "stickyNote",
        "set",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "microsoftoutlook",
        "slack"
      ],
      "total_nodes": 16,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.microsoftOutlookTool",
        "n8n-nodes-base.microsoftOutlookTool",
        "n8n-nodes-base.microsoftOutlookTool",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, microsoftoutlook, slack, triggered via webhook",
      "complexity_score": 26
    },
    {
      "original_filename": "1115_workflow_1115.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1115_workflow_1115.json",
      "workflow_name": "1115_workflow_1115",
      "suggested_filename": "util_1115_workflow_1115_automate_git_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "git",
        "manualTrigger"
      ],
      "primary_integrations": [
        "git",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.git",
        "n8n-nodes-base.git",
        "n8n-nodes-base.git",
        "n8n-nodes-base.git"
      ],
      "business_description": "UTIL workflow that automates data/processes using git, manual, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "986_workflow_986.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/986_workflow_986.json",
      "workflow_name": "986_workflow_986",
      "suggested_filename": "util_986_workflow_986_automate_openweathermap_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "openWeatherMap",
        "webhook",
        "set"
      ],
      "primary_integrations": [
        "openweathermap",
        "webhook"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.openWeatherMap",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using openweathermap, webhook, triggered via webhook",
      "complexity_score": 7
    },
    {
      "original_filename": "XY0cZQwrhzOkisSt_Monitor_Competitor_Pricing.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/XY0cZQwrhzOkisSt_Monitor_Competitor_Pricing.json",
      "workflow_name": "Monitor Competitor Pricing",
      "suggested_filename": "comm_monitor_monitor_slack_airtop.json",
      "category": "COMM",
      "business_function": "monitor",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "slack",
        "airtop",
        "manualTrigger",
        "code",
        "googleSheets",
        "filter"
      ],
      "primary_integrations": [
        "slack",
        "airtop",
        "manual"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.filter"
      ],
      "business_description": "COMM workflow that monitors data/processes using slack, airtop, manual, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "2341_workflow_2341.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2341_workflow_2341.json",
      "workflow_name": "2341_workflow_2341",
      "suggested_filename": "ai_2341_workflow_2341_automate_httprequest_extractfromfile.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "httpRequest",
        "extractFromFile",
        "n8n-nodes-langchain.embeddingsMistralCloud",
        "filter",
        "splitInBatches",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "stickyNote",
        "compression",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "executeWorkflowTrigger",
        "n8n-nodes-langchain.memoryBufferWindow",
        "set",
        "splitOut",
        "manualTrigger",
        "switch"
      ],
      "primary_integrations": [
        "httprequest",
        "extractfromfile",
        "n8n-nodes-langchain.embeddingsmistralcloud"
      ],
      "total_nodes": 38,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.compression",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.wait",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, extractfromfile, n8n-nodes-langchain.embeddingsmistralcloud, triggered via manual",
      "complexity_score": 59
    },
    {
      "original_filename": "AI Voice Chat using Webhook, Memory Manager, OpenAI, Google Gemini & ElevenLabs.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Voice Chat using Webhook, Memory Manager, OpenAI, Google Gemini & ElevenLabs.json",
      "workflow_name": "AI Voice Chat using Webhook, Memory Manager, OpenAI, Google Gemini & ElevenLabs",
      "suggested_filename": "ai_voice_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchainll.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.memoryManager",
        "webhook",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "limit",
        "aggregate",
        "n8n-nodes-langchain.openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chainllm",
        "httprequest"
      ],
      "total_nodes": 15,
      "node_types": [
        "@n8n/n8n-nodes-langchain.memoryManager",
        "@n8n/n8n-nodes-langchain.memoryManager",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.limit",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chainllm, httprequest, triggered via webhook",
      "complexity_score": 26
    },
    {
      "original_filename": "Optimize & Update Printify Title and Description Workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Optimize & Update Printify Title and Description Workflow.json",
      "workflow_name": "Printify Automation - Update Title and Description - AlexK1919",
      "suggested_filename": "ai_printify_update_splitinbatches_n8nnodeslangchaincalculator.json",
      "category": "AI",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.toolCalculator",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.toolWikipedia",
        "splitOut",
        "manualTrigger",
        "code",
        "googleSheets",
        "n8n-nodes-langchain.openAi",
        "googleSheetsTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.calculator",
        "httprequest"
      ],
      "total_nodes": 26,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.if"
      ],
      "business_description": "AI workflow that updates data/processes using splitinbatches, n8n-nodes-langchain.calculator, httprequest, triggered via manual",
      "complexity_score": 39
    },
    {
      "original_filename": "2038_workflow_2038.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2038_workflow_2038.json",
      "workflow_name": "2038_workflow_2038",
      "suggested_filename": "data_2038_workflow_2038_automate_webhook_notion_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "notion"
      ],
      "primary_integrations": [
        "webhook",
        "notion"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using webhook, notion, triggered via webhook",
      "complexity_score": 7
    },
    {
      "original_filename": "3498_workflow_3498.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3498_workflow_3498.json",
      "workflow_name": "3498_workflow_3498",
      "suggested_filename": "ai_3498_workflow_3498_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "aggregate",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 16,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "178_Create_a_channel,_add_a_member,_and_post_a_message_to_the_channel.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/178_Create_a_channel,_add_a_member,_and_post_a_message_to_the_channel.json",
      "workflow_name": "Create a channel, add a member, and post a message to the channel",
      "suggested_filename": "comm_create_create_manual_mattermost.json",
      "category": "COMM",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "mattermost"
      ],
      "primary_integrations": [
        "manual",
        "mattermost"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.mattermost"
      ],
      "business_description": "COMM workflow that creates data/processes using manual, mattermost, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "pmJUJj7FAnrOS6Jc_Send_Slack_message_from_Webflow_form_submission.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/pmJUJj7FAnrOS6Jc_Send_Slack_message_from_Webflow_form_submission.json",
      "workflow_name": "Send Slack message from Webflow form submission",
      "suggested_filename": "comm_send_automate_slack_webflow.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "if",
        "stickyNote",
        "set",
        "webflowTrigger",
        "code"
      ],
      "primary_integrations": [
        "slack",
        "webflow"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.set",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.webflowTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, webflow, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "P307QnrxpA1ddsM5_Generate_SQL_queries_from_schema_only_-_AI-powered.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/P307QnrxpA1ddsM5_Generate_SQL_queries_from_schema_only_-_AI-powered.json",
      "workflow_name": "Generate SQL queries from schema only - AI-powered",
      "suggested_filename": "ai_generate_generate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "generate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "noOp",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "readWriteFile",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "extractFromFile",
        "n8n-nodes-langchain.agent",
        "convertToFile",
        "mySql"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "readwritefile"
      ],
      "total_nodes": 29,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge"
      ],
      "business_description": "AI workflow that generates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, readwritefile, triggered via manual",
      "complexity_score": 43
    },
    {
      "original_filename": "Slack slash commands AI Chat Bot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Slack slash commands AI Chat Bot.json",
      "workflow_name": "My workflow 6",
      "suggested_filename": "ai_automate_slack_n8nnodeslangchainchainllm_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "slack",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "switch"
      ],
      "primary_integrations": [
        "slack",
        "n8n-nodes-langchain.chainllm",
        "webhook"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using slack, n8n-nodes-langchain.chainllm, webhook, triggered via webhook",
      "complexity_score": 17
    },
    {
      "original_filename": "28_Receive_updates_when_a_subscriber_is_added_through_a_form_in_ConvertKit.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/28_Receive_updates_when_a_subscriber_is_added_through_a_form_in_ConvertKit.json",
      "workflow_name": "Receive updates when a subscriber is added through a form in ConvertKit",
      "suggested_filename": "comm_receive_create_convertkit.json",
      "category": "COMM",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "convertKitTrigger"
      ],
      "primary_integrations": [
        "convertkit"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.convertKitTrigger"
      ],
      "business_description": "COMM workflow that creates data/processes using convertkit, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "2ddwHvuidKc6lZia_AI_Agent_-_Cv_Resume_-_Automated_Screening_,_Sorting_,_Rating_and_Tracker_System.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2ddwHvuidKc6lZia_AI_Agent_-_Cv_Resume_-_Automated_Screening_,_Sorting_,_Rating_and_Tracker_System.json",
      "workflow_name": "AI Agent - Cv Resume - Automated Screening , Sorting , Rating and Tracker System",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainlmchatgroq_googlesheets.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.lmChatGroq",
        "googleSheetsTool",
        "googleDocs",
        "stickyNote",
        "n8n-nodes-langchain.agent",
        "extractFromFile",
        "googleDrive",
        "gmailTool",
        "googleDriveTool",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmchatgroq",
        "googlesheets",
        "googledocs"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDriveTool",
        "n8n-nodes-base.googleDriveTool",
        "n8n-nodes-base.googleDriveTool",
        "n8n-nodes-base.googleSheetsTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGroq"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.lmchatgroq, googlesheets, googledocs, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "2455_workflow_2455.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2455_workflow_2455.json",
      "workflow_name": "2455_workflow_2455",
      "suggested_filename": "comm_2455_workflow_2455_automate_splitinbatches_gmail_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "wait",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "code",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "gmail",
        "httprequest"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, gmail, httprequest, triggered via cron",
      "complexity_score": 21
    },
    {
      "original_filename": "2323_workflow_2323.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2323_workflow_2323.json",
      "workflow_name": "2323_workflow_2323",
      "suggested_filename": "ai_2323_workflow_2323_automate_slack_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "slack",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "set",
        "scheduleTrigger",
        "linear",
        "n8n-nodes-langchain.lmChatOpenAi",
        "aggregate"
      ],
      "primary_integrations": [
        "slack",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.slack",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.linear",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.linear",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using slack, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via cron",
      "complexity_score": 30
    },
    {
      "original_filename": "2130_workflow_2130.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2130_workflow_2130.json",
      "workflow_name": "2130_workflow_2130",
      "suggested_filename": "comm_2130_workflow_2130_automate_hubspot_convertkit.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "hubspot",
        "if",
        "noOp",
        "stickyNote",
        "convertKitTrigger",
        "clearbit",
        "filter"
      ],
      "primary_integrations": [
        "hubspot",
        "convertkit",
        "clearbit"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.clearbit",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.convertKitTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.clearbit",
        "n8n-nodes-base.if"
      ],
      "business_description": "COMM workflow that automates data/processes using hubspot, convertkit, clearbit, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "EWIrJ8e9z7AijmTu_Lead_Generation_System_(Template).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/EWIrJ8e9z7AijmTu_Lead_Generation_System_(Template).json",
      "workflow_name": "Lead Generation System (Template)",
      "suggested_filename": "biz_lead_automate_httprequest_manual.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "airtable"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "airtable"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if"
      ],
      "business_description": "BIZ workflow that automates data/processes using httprequest, manual, airtable, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "2646_workflow_2646.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2646_workflow_2646.json",
      "workflow_name": "2646_workflow_2646",
      "suggested_filename": "util_2646_workflow_2646_automate_schedule_manual_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "noOp",
        "if",
        "scheduleTrigger",
        "manualTrigger",
        "n8n"
      ],
      "primary_integrations": [
        "schedule",
        "manual",
        "n8n"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.if",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "UTIL workflow that automates data/processes using schedule, manual, n8n, triggered via cron",
      "complexity_score": 12
    },
    {
      "original_filename": "1364_workflow_1364.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1364_workflow_1364.json",
      "workflow_name": "1364_workflow_1364",
      "suggested_filename": "comm_1364_workflow_1364_automate_webhook_manual_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "webhook",
        "manualTrigger",
        "telegram",
        "cron",
        "mySql"
      ],
      "primary_integrations": [
        "webhook",
        "manual",
        "telegram"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.mySql"
      ],
      "business_description": "COMM workflow that automates data/processes using webhook, manual, telegram, triggered via cron",
      "complexity_score": 12
    },
    {
      "original_filename": "3638_workflow_3638.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3638_workflow_3638.json",
      "workflow_name": "3638_workflow_3638",
      "suggested_filename": "data_3638_workflow_3638_automate_httprequest_n8nnodeslangchainmcp.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "aggregate",
        "n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-langchain.toolWorkflow",
        "switch",
        "googleSheets",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.mcp",
        "n8n-nodes-langchain.workflow"
      ],
      "total_nodes": 25,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, n8n-nodes-langchain.mcp, n8n-nodes-langchain.workflow, triggered via manual",
      "complexity_score": 36
    },
    {
      "original_filename": "1956_workflow_1956.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1956_workflow_1956.json",
      "workflow_name": "1956_workflow_1956",
      "suggested_filename": "ai_1956_workflow_1956_automate_gmail_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "gmail",
        "n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "code",
        "n8n-nodes-langchain.informationExtractor",
        "splitOut",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "gmail",
        "n8n-nodes-langchain.chainsummarization",
        "n8n-nodes-langchain.wikipedia"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, n8n-nodes-langchain.chainsummarization, n8n-nodes-langchain.wikipedia, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "AI agent that can scrape webpages.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI agent that can scrape webpages.json",
      "workflow_name": "Agent with custom HTTP Request",
      "suggested_filename": "ai_agent_automate_httprequest_markdown.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "markdown",
        "n8n-nodes-langchain.manualChatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "markdown",
        "n8n-nodes-langchain.manualchat"
      ],
      "total_nodes": 20,
      "node_types": [
        "@n8n/n8n-nodes-langchain.manualChatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.toolWorkflow"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, markdown, n8n-nodes-langchain.manualchat, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "2183_workflow_2183.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2183_workflow_2183.json",
      "workflow_name": "2183_workflow_2183",
      "suggested_filename": "ai_2183_workflow_2183_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangcha.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "googleDrive",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.retrieverVectorStore",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.embeddingsopenai"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.respondToWebhook"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainretrievalqa, n8n-nodes-langchain.chat, n8n-nodes-langchain.embeddingsopenai, triggered via webhook",
      "complexity_score": 30
    },
    {
      "original_filename": "UsBaGY83vnyZjRoB_TopSourcer_-_Finds_LinkedIn_Profiles_using_natural_language.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/UsBaGY83vnyZjRoB_TopSourcer_-_Finds_LinkedIn_Profiles_using_natural_language.json",
      "workflow_name": "TopSourcer - Finds LinkedIn Profiles using natural language",
      "suggested_filename": "ai_topsourcer_automate_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "code",
        "googleSheets",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "httprequest",
        "googlesheets"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.wait",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, httprequest, googlesheets, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "DRjTkkZrfqMbhifO_Summarize_Glassdoor_Company_Info_with_Google_Gemini_and_Bright_Data_Web_Scraper.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/DRjTkkZrfqMbhifO_Summarize_Glassdoor_Company_Info_with_Google_Gemini_and_Bright_Data_Web_Scraper.json",
      "workflow_name": "Summarize Glassdoor Company Info with Google Gemini and Bright Data Web Scraper",
      "suggested_filename": "ai_summarize_extract_httprequest_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "manualTrigger",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.chainsummarization",
        "n8n-nodes-langchain.lmchatgooglegemini"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that extracts data/processes using httprequest, n8n-nodes-langchain.chainsummarization, n8n-nodes-langchain.lmchatgooglegemini, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "2152_workflow_2152.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2152_workflow_2152.json",
      "workflow_name": "2152_workflow_2152",
      "suggested_filename": "util_2152_workflow_2152_automate_respondtowebhook_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "respondToWebhook",
        "noOp",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "splitOut",
        "aggregate",
        "filter"
      ],
      "primary_integrations": [
        "respondtowebhook",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using respondtowebhook, httprequest, webhook, triggered via webhook",
      "complexity_score": 28
    },
    {
      "original_filename": "A Very Simple _Human in the Loop_ Email Response System Using AI and IMAP.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/A Very Simple _Human in the Loop_ Email Response System Using AI and IMAP.json",
      "workflow_name": "Very simple Human in the loop system email with AI e IMAP",
      "suggested_filename": "ai_very_ai_process_emailsend_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "emailSend",
        "set",
        "n8n-nodes-langchain.chainSummarization",
        "markdown",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "emailReadImap"
      ],
      "primary_integrations": [
        "emailsend",
        "n8n-nodes-langchain.chainsummarization",
        "markdown"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.emailSend",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.emailSend",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if"
      ],
      "business_description": "AI workflow that ai_processs data/processes using emailsend, n8n-nodes-langchain.chainsummarization, markdown, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "1306_workflow_1306.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1306_workflow_1306.json",
      "workflow_name": "1306_workflow_1306",
      "suggested_filename": "util_1306_workflow_1306_automate_webhook_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "webhook",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 4
    },
    {
      "original_filename": "3805_workflow_3805.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3805_workflow_3805.json",
      "workflow_name": "3805_workflow_3805",
      "suggested_filename": "util_3805_workflow_3805_automate_webhook_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "webhook",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 11
    },
    {
      "original_filename": "fqQcmSdoVqnPeGHj_OpenAI_Personal_Shopper_with_RAG_and_WooCommerce.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/fqQcmSdoVqnPeGHj_OpenAI_Personal_Shopper_with_RAG_and_WooCommerce.json",
      "workflow_name": "OpenAI Personal Shopper with RAG and WooCommerce",
      "suggested_filename": "ai_openai_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvector.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolVectorStore",
        "n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "httpRequest",
        "wooCommerceTool",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "googleDrive",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.documentDefaultDataLoader"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.vectorstore",
        "n8n-nodes-langchain.calculator"
      ],
      "total_nodes": 25,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.wooCommerceTool",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.vectorstore, n8n-nodes-langchain.calculator, triggered via manual",
      "complexity_score": 42
    },
    {
      "original_filename": "OjwmaLrXhW4pO5ph_Structured_Bulk_Data_Extract_with_Bright_Data_Web_Scraper.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/OjwmaLrXhW4pO5ph_Structured_Bulk_Data_Extract_with_Bright_Data_Web_Scraper.json",
      "workflow_name": "Structured Bulk Data Extract with Bright Data Web Scraper",
      "suggested_filename": "data_structured_extract_httprequest_readwritefile.json",
      "category": "DATA",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "readWriteFile",
        "manualTrigger",
        "aggregate",
        "function"
      ],
      "primary_integrations": [
        "httprequest",
        "readwritefile",
        "manual"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.function",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "DATA workflow that extracts data/processes using httprequest, readwritefile, manual, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "34_Receive_updates_when_a_sale_is_made_in_Gumroad.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/34_Receive_updates_when_a_sale_is_made_in_Gumroad.json",
      "workflow_name": "Receive updates when a sale is made in Gumroad",
      "suggested_filename": "util_receive_update_gumroad.json",
      "category": "UTIL",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "gumroadTrigger"
      ],
      "primary_integrations": [
        "gumroad"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.gumroadTrigger"
      ],
      "business_description": "UTIL workflow that updates data/processes using gumroad, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "2LFEJVoSkeZMndiM_YT_AI_News_Playlist_Creator_AI_News_Form_Updater.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2LFEJVoSkeZMndiM_YT_AI_News_Playlist_Creator_AI_News_Form_Updater.json",
      "workflow_name": "YT AI News Playlist Creator/AI News Form Updater",
      "suggested_filename": "ai_news_ai_process_httprequest_schedule_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "filter",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "manualTrigger",
        "telegram",
        "googleSheets",
        "youTube"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "manual"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, schedule, manual, triggered via cron",
      "complexity_score": 32
    },
    {
      "original_filename": "2697_workflow_2697.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2697_workflow_2697.json",
      "workflow_name": "2697_workflow_2697",
      "suggested_filename": "ai_2697_workflow_2697_automate_n8nnodeslangchainchainllm_emailsend.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "noOp",
        "emailSend",
        "httpRequest",
        "markdown",
        "splitOut",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "aggregate",
        "hackerNews",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "emailsend",
        "httprequest"
      ],
      "total_nodes": 10,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.hackerNews",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, emailsend, httprequest, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "AI-powered WooCommerce Support-Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI-powered WooCommerce Support-Agent.json",
      "workflow_name": "AI-powered WooCommerce Support-Agent",
      "suggested_filename": "ai_powered_ai_process_n8nnodeslangchainmemorybufferwindow_dhl_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "dhl",
        "wooCommerce",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "webhook",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "code",
        "aggregate",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "dhl",
        "woocommerce"
      ],
      "total_nodes": 40,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wooCommerce",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.dhl",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, dhl, woocommerce, triggered via webhook",
      "complexity_score": 58
    },
    {
      "original_filename": "IyDJ7Zgh4MV43YTh_Convert_image_from_jpg_png_to_webp.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/IyDJ7Zgh4MV43YTh_Convert_image_from_jpg_png_to_webp.json",
      "workflow_name": "Convert image from jpg/png to webp",
      "suggested_filename": "data_convert_process_httprequest_manual.json",
      "category": "DATA",
      "business_function": "process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "googleDrive",
        "code",
        "switch",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "googledrive"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that processs data/processes using httprequest, manual, googledrive, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "1791_workflow_1791.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1791_workflow_1791.json",
      "workflow_name": "1791_workflow_1791",
      "suggested_filename": "data_1791_workflow_1791_automate_googlesheets_movebinarydata.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "moveBinaryData",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "googlesheets",
        "movebinarydata",
        "readbinaryfile"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.moveBinaryData"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, movebinarydata, readbinaryfile, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "23GPrqZjHnIVvTEa_Backup_n8n_Workflows_to_Bitbucket.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/23GPrqZjHnIVvTEa_Backup_n8n_Workflows_to_Bitbucket.json",
      "workflow_name": "Backup n8n Workflows to Bitbucket",
      "suggested_filename": "util_backup_backup_splitinbatches_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "backup",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "if",
        "wait",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "code",
        "n8n"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that backups data/processes using splitinbatches, httprequest, schedule, triggered via cron",
      "complexity_score": 17
    },
    {
      "original_filename": "11_Plex_Automatic_Throttler.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/11_Plex_Automatic_Throttler.json",
      "workflow_name": "Plex Automatic Throttler",
      "suggested_filename": "util_plex_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "noOp",
        "set",
        "httpRequest",
        "webhook",
        "switch"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, triggered via webhook",
      "complexity_score": 27
    },
    {
      "original_filename": "VU0kmvnWzctSFm2M_Convert_Parquet,_Avro,_ORC_&_Feather_via_ParquetReader_to_JSON.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/VU0kmvnWzctSFm2M_Convert_Parquet,_Avro,_ORC_&_Feather_via_ParquetReader_to_JSON.json",
      "workflow_name": "Convert Parquet, Avro, ORC & Feather via ParquetReader to JSON",
      "suggested_filename": "util_convert_read_webhook_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "httpRequest",
        "code"
      ],
      "primary_integrations": [
        "webhook",
        "httprequest"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code"
      ],
      "business_description": "UTIL workflow that reads data/processes using webhook, httprequest, triggered via webhook",
      "complexity_score": 8
    },
    {
      "original_filename": "0GCQ1fO3d5MBdKmi_template-demo-chatgpt-image-1-with-drive-and-sheet_copy.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/0GCQ1fO3d5MBdKmi_template-demo-chatgpt-image-1-with-drive-and-sheet_copy.json",
      "workflow_name": "template-demo-chatgpt-image-1-with-drive-and-sheet copy",
      "suggested_filename": "ai_template_automate_splitinbatches_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "googleDrive",
        "aggregate",
        "googleSheets",
        "convertToFile"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "02GdRzvsuHmSSgBw_#️⃣Nostr_#damus_AI_Powered_Reporting_+_Gmail_+_Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/02GdRzvsuHmSSgBw_#️⃣Nostr_#damus_AI_Powered_Reporting_+_Gmail_+_Telegram.json",
      "workflow_name": "#️⃣Nostr #damus AI Powered Reporting + Gmail + Telegram",
      "suggested_filename": "ai_nostr_ai_process_n8nnodeslangchainchainllm_gmail_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "gmail",
        "stickyNote",
        "markdown",
        "scheduleTrigger",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "telegram",
        "aggregate"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "gmail",
        "markdown"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.markdown",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-nostrobots.nostrobotsread"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, gmail, markdown, triggered via cron",
      "complexity_score": 34
    },
    {
      "original_filename": "890_workflow_890.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/890_workflow_890.json",
      "workflow_name": "890_workflow_890",
      "suggested_filename": "util_890_workflow_890_automate_spreadsheetfile_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "manualTrigger",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "manual",
        "readbinaryfile"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.readBinaryFile"
      ],
      "business_description": "UTIL workflow that automates data/processes using spreadsheetfile, manual, readbinaryfile, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2179_workflow_2179.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2179_workflow_2179.json",
      "workflow_name": "2179_workflow_2179",
      "suggested_filename": "util_2179_workflow_2179_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "googleDrive",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "googledrive"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, googledrive, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "993_workflow_993.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/993_workflow_993.json",
      "workflow_name": "993_workflow_993",
      "suggested_filename": "data_993_workflow_993_automate_wise_wise.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wise",
        "wiseTrigger",
        "set",
        "airtable"
      ],
      "primary_integrations": [
        "wise",
        "wise",
        "airtable"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.wiseTrigger",
        "n8n-nodes-base.wise",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable"
      ],
      "business_description": "DATA workflow that automates data/processes using wise, wise, airtable, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "14_extract_swifts.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/14_extract_swifts.json",
      "workflow_name": "extract_swifts",
      "suggested_filename": "data_extract_swifts_extract_splitinbatches_htmlextract.json",
      "category": "DATA",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "htmlExtract",
        "if",
        "uproc",
        "set",
        "httpRequest",
        "executeCommand",
        "functionItem",
        "mongoDb",
        "manualTrigger",
        "writeBinaryFile",
        "function",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "splitinbatches",
        "htmlextract",
        "uproc"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.htmlExtract",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.htmlExtract",
        "n8n-nodes-base.mongoDb",
        "n8n-nodes-base.uproc",
        "n8n-nodes-base.function",
        "n8n-nodes-base.if",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.if",
        "n8n-nodes-base.function",
        "n8n-nodes-base.set",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.if",
        "n8n-nodes-base.writeBinaryFile",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.mongoDb"
      ],
      "business_description": "DATA workflow that extracts data/processes using splitinbatches, htmlextract, uproc, triggered via manual",
      "complexity_score": 36
    },
    {
      "original_filename": "3_rss-telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3_rss-telegram.json",
      "workflow_name": "rss-telegram",
      "suggested_filename": "comm_telegram_automate_splitinbatches_rssfeedread_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "if",
        "rssFeedRead",
        "manualTrigger",
        "telegram",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "splitinbatches",
        "rssfeedread",
        "manual"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.function",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.if",
        "n8n-nodes-base.function",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.function",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.function",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.manualTrigger"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, rssfeedread, manual, triggered via cron",
      "complexity_score": 25
    },
    {
      "original_filename": "3107_workflow_3107.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3107_workflow_3107.json",
      "workflow_name": "3107_workflow_3107",
      "suggested_filename": "ai_3107_workflow_3107_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-langchain.informationExtractor",
        "manualTrigger",
        "splitOut",
        "n8n-nodes-langchain.lmChatAnthropic",
        "airtable",
        "xml",
        "html",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 51,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.filter",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-base.filter",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.html",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.html",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.airtable",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via manual",
      "complexity_score": 69
    },
    {
      "original_filename": "R6tFG45dQydBz63e_n8n_Community_Topic_Tracker_by_Keyword.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/R6tFG45dQydBz63e_n8n_Community_Topic_Tracker_by_Keyword.json",
      "workflow_name": "n8n Community Topic Tracker by Keyword",
      "suggested_filename": "comm_community_monitor_slack_emailsend_cron.json",
      "category": "COMM",
      "business_function": "monitor",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "stickyNote",
        "emailSend",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "googleSheets",
        "googleSheetsTrigger"
      ],
      "primary_integrations": [
        "slack",
        "emailsend",
        "httprequest"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that monitors data/processes using slack, emailsend, httprequest, triggered via cron",
      "complexity_score": 18
    },
    {
      "original_filename": "353_workflow_353.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/353_workflow_353.json",
      "workflow_name": "353_workflow_353",
      "suggested_filename": "comm_353_workflow_353_automate_pagerduty_jira_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "pagerDuty",
        "jira",
        "webhook",
        "mattermost"
      ],
      "primary_integrations": [
        "pagerduty",
        "jira",
        "webhook"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.pagerDuty",
        "n8n-nodes-base.pagerDuty",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.mattermost"
      ],
      "business_description": "COMM workflow that automates data/processes using pagerduty, jira, webhook, triggered via webhook",
      "complexity_score": 18
    },
    {
      "original_filename": "Transcribe Audio Files, Summarize with GPT-4, and Store in Notion.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Transcribe Audio Files, Summarize with GPT-4, and Store in Notion.json",
      "workflow_name": "Whisper Transkription copy",
      "suggested_filename": "ai_whisper_automate_notion_googledrive.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "notion",
        "googleDrive",
        "n8n-nodes-langchain.openAi",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "notion",
        "googledrive",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.notion",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that automates data/processes using notion, googledrive, n8n-nodes-langchain.openai, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "ePnGZtZ8zLcf1UZZ_n8n_Error_Report_to_Line.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ePnGZtZ8zLcf1UZZ_n8n_Error_Report_to_Line.json",
      "workflow_name": "n8n Error Report to Line",
      "suggested_filename": "analytics_error_report_error_httprequest.json",
      "category": "ANALYTICS",
      "business_function": "report",
      "trigger_type": "manual",
      "integrations": [
        "errorTrigger",
        "stickyNote",
        "httpRequest"
      ],
      "primary_integrations": [
        "error",
        "httprequest"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.errorTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "ANALYTICS workflow that reports data/processes using error, httprequest, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "NGwD3pIHXBU0w5hC_[n8n]_-_Shopify_Orders_to_D365_Business_Central_Sales_Orders___Sales_Invoices.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/NGwD3pIHXBU0w5hC_[n8n]_-_Shopify_Orders_to_D365_Business_Central_Sales_Orders___Sales_Invoices.json",
      "workflow_name": "[n8n] - Shopify Orders to D365 Business Central Sales Orders / Sales Invoices",
      "suggested_filename": "biz_shopify_automate_splitinbatches_shopify_cron.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "shopify",
        "if",
        "stickyNote",
        "set",
        "noOp",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "code",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "shopify",
        "httprequest"
      ],
      "total_nodes": 39,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.shopify",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "BIZ workflow that automates data/processes using splitinbatches, shopify, httprequest, triggered via cron",
      "complexity_score": 50
    },
    {
      "original_filename": "1692_workflow_1692.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1692_workflow_1692.json",
      "workflow_name": "1692_workflow_1692",
      "suggested_filename": "util_1692_workflow_1692_automate_itemlists_movebinarydata.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "itemLists",
        "moveBinaryData",
        "emailSend",
        "httpRequest",
        "markdown",
        "manualTrigger",
        "function"
      ],
      "primary_integrations": [
        "itemlists",
        "movebinarydata",
        "emailsend"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.function",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.function"
      ],
      "business_description": "UTIL workflow that automates data/processes using itemlists, movebinarydata, emailsend, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "2931_workflow_2931.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2931_workflow_2931.json",
      "workflow_name": "2931_workflow_2931",
      "suggested_filename": "ai_2931_workflow_2931_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.manualChatTrigger",
        "n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.wikipedia",
        "n8n-nodes-langchain.httprequest"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.manualChatTrigger",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.wikipedia, n8n-nodes-langchain.httprequest, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "1621_workflow_1621.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1621_workflow_1621.json",
      "workflow_name": "1621_workflow_1621",
      "suggested_filename": "util_1621_workflow_1621_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "compression",
        "function"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "compression"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.function",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.compression",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, compression, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "2475_workflow_2475.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2475_workflow_2475.json",
      "workflow_name": "2475_workflow_2475",
      "suggested_filename": "util_2475_workflow_2475_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "code",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "AMQub0Da16qevkJS_Code_Review_workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AMQub0Da16qevkJS_Code_Review_workflow.json",
      "workflow_name": "Code Review workflow",
      "suggested_filename": "ai_code_automate_github_googlesheets.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "githubTrigger",
        "googleSheetsTool",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "github",
        "code",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "github",
        "googlesheets",
        "httprequest"
      ],
      "total_nodes": 14,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.githubTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.github",
        "n8n-nodes-base.github",
        "n8n-nodes-base.googleSheetsTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using github, googlesheets, httprequest, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "pDLtBJkNSXXWSvB0_Training_Feedback_Automation.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/pDLtBJkNSXXWSvB0_Training_Feedback_Automation.json",
      "workflow_name": "Training Feedback Automation",
      "suggested_filename": "ai_training_ai_process_emailsend_linkedin_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "emailSend",
        "linkedIn",
        "httpRequest",
        "webhook",
        "switch",
        "airtableTrigger"
      ],
      "primary_integrations": [
        "emailsend",
        "linkedin",
        "httprequest"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.airtableTrigger",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.linkedIn",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that ai_processs data/processes using emailsend, linkedin, httprequest, triggered via webhook",
      "complexity_score": 23
    },
    {
      "original_filename": "q8GNbRhjQDwDpXoo_How_to_automatically_import_CSV_files_into_postgres.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/q8GNbRhjQDwDpXoo_How_to_automatically_import_CSV_files_into_postgres.json",
      "workflow_name": "How to automatically import CSV files into postgres",
      "suggested_filename": "data_automatically_transfer_spreadsheetfile_postgres.json",
      "category": "DATA",
      "business_function": "transfer",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "postgres",
        "manualTrigger",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "postgres",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.postgres"
      ],
      "business_description": "DATA workflow that transfers data/processes using spreadsheetfile, postgres, manual, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "2DzQ1FH11S3Gp6wn_YogiAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2DzQ1FH11S3Gp6wn_YogiAI.json",
      "workflow_name": "YogiAI",
      "suggested_filename": "ai_yogiai_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainlm.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.lmChatAzureOpenAi",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "googleSheetsTool",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "n8n-nodes-langchain.agent",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.lmchatazureopenai",
        "n8n-nodes-langchain.chainllm"
      ],
      "total_nodes": 31,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.googleSheetsTool",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.lmchatazureopenai, n8n-nodes-langchain.chainllm, triggered via cron",
      "complexity_score": 44
    },
    {
      "original_filename": "kZ3aL4r7xc96Q7lp_Selenium_Ultimate_Scraper_Workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/kZ3aL4r7xc96Q7lp_Selenium_Ultimate_Scraper_Workflow.json",
      "workflow_name": "Selenium Ultimate Scraper Workflow",
      "suggested_filename": "ai_selenium_extract_httprequest_webhook_webhook.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "limit",
        "code",
        "convertToFile",
        "html",
        "n8n-nodes-langchain.openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 63,
      "node_types": [
        "n8n-nodes-base.html",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that extracts data/processes using httprequest, webhook, n8n-nodes-langchain.lmchatopenai, triggered via webhook",
      "complexity_score": 76
    },
    {
      "original_filename": "2417_workflow_2417.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2417_workflow_2417.json",
      "workflow_name": "2417_workflow_2417",
      "suggested_filename": "util_2417_workflow_2417_automate_respondtowebhook_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "respondToWebhook",
        "stickyNote",
        "set",
        "httpRequest",
        "switch",
        "s3",
        "formTrigger"
      ],
      "primary_integrations": [
        "respondtowebhook",
        "httprequest",
        "form"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.s3",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch"
      ],
      "business_description": "UTIL workflow that automates data/processes using respondtowebhook, httprequest, form, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "Summarize YouTube Videos from Transcript.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Summarize YouTube Videos from Transcript.json",
      "workflow_name": "Summarize YouTube Videos from Transcript",
      "suggested_filename": "ai_summarize_automate_n8nnodeslangchainchainsummarization_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "stickyNote",
        "n8n-nodes-langchain.chainSummarization",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainsummarization",
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainsummarization, httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "1855_workflow_1855.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1855_workflow_1855.json",
      "workflow_name": "1855_workflow_1855",
      "suggested_filename": "biz_1855_workflow_1855_automate_hubspot_itemlists_cron.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "hubspot",
        "merge",
        "itemLists",
        "if",
        "stripe",
        "stickyNote",
        "set",
        "noOp",
        "httpRequest",
        "scheduleTrigger",
        "code"
      ],
      "primary_integrations": [
        "hubspot",
        "itemlists",
        "stripe"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.stripe",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.code",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stripe",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if"
      ],
      "business_description": "BIZ workflow that automates data/processes using hubspot, itemlists, stripe, triggered via cron",
      "complexity_score": 35
    },
    {
      "original_filename": "588_workflow_588.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/588_workflow_588.json",
      "workflow_name": "588_workflow_588",
      "suggested_filename": "util_588_workflow_588_automate_manual_executeworkflow.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "executeWorkflow"
      ],
      "primary_integrations": [
        "manual",
        "executeworkflow"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.executeWorkflow"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, executeworkflow, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "UuuCIDvTNnloIlvq_Automate_Etsy_Data_Mining_with_Bright_Data_Scrape_&_Google_Gemini.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/UuuCIDvTNnloIlvq_Automate_Etsy_Data_Mining_with_Bright_Data_Scrape_&_Google_Gemini.json",
      "workflow_name": "Automate Etsy Data Mining with Bright Data Scrape & Google Gemini",
      "suggested_filename": "ai_automate_extract_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "stickyNote",
        "set",
        "httpRequest",
        "readWriteFile",
        "splitOut",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-langchain.lmChatOpenAi",
        "function"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "readwritefile"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.function",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that extracts data/processes using splitinbatches, httprequest, readwritefile, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "Send a ChatGPT email reply and save responses to Google Sheets.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Send a ChatGPT email reply and save responses to Google Sheets.json",
      "workflow_name": "Send a ChatGPT email reply and save responses to Google Sheets",
      "suggested_filename": "ai_send_ai_process_crypto_gmail_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "crypto",
        "if",
        "gmailTrigger",
        "stickyNote",
        "set",
        "gmail",
        "noOp",
        "webhook",
        "openAi",
        "code",
        "switch",
        "googleSheets",
        "html",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "crypto",
        "gmail",
        "gmail"
      ],
      "total_nodes": 49,
      "node_types": [
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.html",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.html",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using crypto, gmail, gmail, triggered via webhook",
      "complexity_score": 63
    },
    {
      "original_filename": "521_workflow_521.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/521_workflow_521.json",
      "workflow_name": "521_workflow_521",
      "suggested_filename": "util_521_workflow_521_automate_mailjet.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "mailjetTrigger"
      ],
      "primary_integrations": [
        "mailjet"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.mailjetTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using mailjet, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "2576_Import_Productboard_Notes,_Companies_and_Features_into_Snowflake.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2576_Import_Productboard_Notes,_Companies_and_Features_into_Snowflake.json",
      "workflow_name": "Import Productboard Notes, Companies and Features into Snowflake",
      "suggested_filename": "comm_import_transfer_splitinbatches_slack_cron.json",
      "category": "COMM",
      "business_function": "transfer",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "slack",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "snowflake",
        "splitOut"
      ],
      "primary_integrations": [
        "splitinbatches",
        "slack",
        "httprequest"
      ],
      "total_nodes": 35,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.snowflake",
        "n8n-nodes-base.snowflake",
        "n8n-nodes-base.snowflake",
        "n8n-nodes-base.snowflake",
        "n8n-nodes-base.snowflake",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.snowflake",
        "n8n-nodes-base.snowflake",
        "n8n-nodes-base.set",
        "n8n-nodes-base.snowflake",
        "n8n-nodes-base.snowflake",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.snowflake",
        "n8n-nodes-base.snowflake",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.snowflake",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.snowflake",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that transfers data/processes using splitinbatches, slack, httprequest, triggered via cron",
      "complexity_score": 43
    },
    {
      "original_filename": "2033_workflow_2033.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2033_workflow_2033.json",
      "workflow_name": "2033_workflow_2033",
      "suggested_filename": "util_2033_workflow_2033_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "code",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 16
    },
    {
      "original_filename": "Summarize the New Documents from Google Drive and Save Summary in Google Sheet.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Summarize the New Documents from Google Drive and Save Summary in Google Sheet.json",
      "workflow_name": "Google Doc Summarizer to Google Sheets",
      "suggested_filename": "ai_google_automate_n8nnodeslangchaincalculator_googledocs.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.toolCalculator",
        "googleDocs",
        "stickyNote",
        "n8n-nodes-langchain.toolWikipedia",
        "googleSheets",
        "n8n-nodes-langchain.openAi",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.calculator",
        "googledocs",
        "n8n-nodes-langchain.wikipedia"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.googleDocs",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.calculator, googledocs, n8n-nodes-langchain.wikipedia, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "2328_workflow_2328.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2328_workflow_2328.json",
      "workflow_name": "2328_workflow_2328",
      "suggested_filename": "ai_2328_workflow_2328_automate_n8nnodeslangchainoutputparserstructured_httpreque.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "googleCalendar",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "googleDrive",
        "extractFromFile",
        "switch",
        "splitOut",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest",
        "googlecalendar"
      ],
      "total_nodes": 28,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.googleCalendar",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserstructured, httprequest, googlecalendar, triggered via manual",
      "complexity_score": 42
    },
    {
      "original_filename": "yCIEiv9QUHP8pNfR_Build_Custom_AI_Agent_with_LangChain_&_Gemini_(Self-Hosted).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/yCIEiv9QUHP8pNfR_Build_Custom_AI_Agent_with_LangChain_&_Gemini_(Self-Hosted).json",
      "workflow_name": "Build Custom AI Agent with LangChain & Gemini (Self-Hosted)",
      "suggested_filename": "ai_build_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.code",
        "n8n-nodes-langchain.lmChatGoogleGemini"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.code"
      ],
      "total_nodes": 9,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.code, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "Discord AI-powered bot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Discord AI-powered bot.json",
      "workflow_name": "Discord AI bot",
      "suggested_filename": "ai_discord_ai_process_webhook_openai_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "noOp",
        "set",
        "webhook",
        "openAi",
        "manualTrigger",
        "switch",
        "discord"
      ],
      "primary_integrations": [
        "webhook",
        "openai",
        "manual"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.discord"
      ],
      "business_description": "AI workflow that ai_processs data/processes using webhook, openai, manual, triggered via webhook",
      "complexity_score": 16
    },
    {
      "original_filename": "Summarize Google Sheets form feedback via OpenAI_s GPT-4.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Summarize Google Sheets form feedback via OpenAI_s GPT-4.json",
      "workflow_name": "Summarize Google Sheets form feedback via OpenAI's GPT-4",
      "suggested_filename": "ai_summarize_ai_process_gmail_markdown.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "gmail",
        "markdown",
        "openAi",
        "manualTrigger",
        "aggregate",
        "googleSheets"
      ],
      "primary_integrations": [
        "gmail",
        "markdown",
        "openai"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, markdown, openai, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "Extract Information from a Logo Sheet using forms, AI, Google Sheet and Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Extract Information from a Logo Sheet using forms, AI, Google Sheet and Airtable.json",
      "workflow_name": "AI Logo Sheet Extractor to Airtable",
      "suggested_filename": "ai_logo_ai_process_splitinbatches_crypto.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "merge",
        "crypto",
        "n8n-nodes-langchain.outputParserStructured",
        "noOp",
        "stickyNote",
        "set",
        "code",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "airtable",
        "n8n-nodes-langchain.agent",
        "html",
        "formTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "crypto",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 44,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.html",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, crypto, n8n-nodes-langchain.outputparserstructured, triggered via manual",
      "complexity_score": 58
    },
    {
      "original_filename": "3420_workflow_3420.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3420_workflow_3420.json",
      "workflow_name": "3420_workflow_3420",
      "suggested_filename": "ai_3420_workflow_3420_automate_n8nnodeslangchainoutputparserstructured_gmail.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "gmail",
        "stickyNote",
        "gmailTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "code",
        "extractFromFile"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "gmail",
        "gmail"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserstructured, gmail, gmail, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "1_Add_text_to_an_image_downloaded_from_the_internet.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_Add_text_to_an_image_downloaded_from_the_internet.json",
      "workflow_name": "Add text to an image downloaded from the internet",
      "suggested_filename": "util_text_create_httprequest_editimage.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "editImage",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "editimage",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that creates data/processes using httprequest, editimage, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2080_workflow_2080.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2080_workflow_2080.json",
      "workflow_name": "2080_workflow_2080",
      "suggested_filename": "comm_2080_workflow_2080_automate_httprequest_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "stickyNote",
        "httpRequest",
        "telegram",
        "emailReadImap"
      ],
      "primary_integrations": [
        "httprequest",
        "telegram",
        "emailreadimap"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, telegram, emailreadimap, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "947_workflow_947.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/947_workflow_947.json",
      "workflow_name": "947_workflow_947",
      "suggested_filename": "util_947_workflow_947_automate_typeform_demio.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "typeformTrigger",
        "demio"
      ],
      "primary_integrations": [
        "typeform",
        "demio"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.demio"
      ],
      "business_description": "UTIL workflow that automates data/processes using typeform, demio, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "1205_workflow_1205.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1205_workflow_1205.json",
      "workflow_name": "1205_workflow_1205",
      "suggested_filename": "comm_1205_workflow_1205_automate_shopify_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "shopifyTrigger",
        "telegram",
        "twitter"
      ],
      "primary_integrations": [
        "shopify",
        "telegram",
        "twitter"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.shopifyTrigger"
      ],
      "business_description": "COMM workflow that automates data/processes using shopify, telegram, twitter, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "xLjE4IkQXARXOCZy_Import_multiple_Manufacturers_from_Google_Sheets_to_Shopware_6.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/xLjE4IkQXARXOCZy_Import_multiple_Manufacturers_from_Google_Sheets_to_Shopware_6.json",
      "workflow_name": "Import multiple Manufacturers from Google Sheets to Shopware 6",
      "suggested_filename": "data_import_transfer_splitinbatches_httprequest.json",
      "category": "DATA",
      "business_function": "transfer",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "manual"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that transfers data/processes using splitinbatches, httprequest, manual, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "2727_workflow_2727.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2727_workflow_2727.json",
      "workflow_name": "2727_workflow_2727",
      "suggested_filename": "util_2727_workflow_2727_automate_webhook_servicenow_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "webhook",
        "serviceNow",
        "switch",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "servicenow",
        "respondtowebhook"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.serviceNow",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, servicenow, respondtowebhook, triggered via webhook",
      "complexity_score": 16
    },
    {
      "original_filename": "AhP1Fgv0eCrh9Jxs_AI-Generated_Summary_Block_for_WordPress_Posts_-_with_OpenAI,_WordPress,_Google_Sheets_&_Slack.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AhP1Fgv0eCrh9Jxs_AI-Generated_Summary_Block_for_WordPress_Posts_-_with_OpenAI,_WordPress,_Google_Sheets_&_Slack.json",
      "workflow_name": "AI-Generated Summary Block for WordPress Posts - with OpenAI, WordPress, Google Sheets & Slack",
      "suggested_filename": "ai_generated_generate_splitinbatches_wordpress_webhook.json",
      "category": "AI",
      "business_function": "generate",
      "trigger_type": "webhook",
      "integrations": [
        "splitInBatches",
        "wordpress",
        "slack",
        "if",
        "dateTime",
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "set",
        "httpRequest",
        "noOp",
        "markdown",
        "scheduleTrigger",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "googleSheets",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "splitinbatches",
        "wordpress",
        "slack"
      ],
      "total_nodes": 32,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.if",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.markdown",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.wordpress"
      ],
      "business_description": "AI workflow that generates data/processes using splitinbatches, wordpress, slack, triggered via webhook",
      "complexity_score": 49
    },
    {
      "original_filename": "Author and Publish Blog Posts From Google Sheets.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Author and Publish Blog Posts From Google Sheets.json",
      "workflow_name": "Blog Automation TEMPLATE",
      "suggested_filename": "ai_blog_automate_n8nnodeslangchainchainllm_httprequest_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 35,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, httprequest, schedule, triggered via cron",
      "complexity_score": 45
    },
    {
      "original_filename": "Summarize your emails with A.I. (via Openrouter) and send to Line messenger (1).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Summarize your emails with A.I. (via Openrouter) and send to Line messenger (1).json",
      "workflow_name": "Summarize emails with A.I. then send to messenger",
      "suggested_filename": "ai_summarize_ai_process_httprequest_emailreadimap.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "emailReadImap"
      ],
      "primary_integrations": [
        "httprequest",
        "emailreadimap"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, emailreadimap, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "dVDyWWhO5FdPM3qx_OCR_receipts_from_Google_Drive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/dVDyWWhO5FdPM3qx_OCR_receipts_from_Google_Drive.json",
      "workflow_name": "OCR receipts from Google Drive",
      "suggested_filename": "data_receipts_automate_httprequest_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "googleDrive",
        "code",
        "googleSheets",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "googledrive"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, manual, googledrive, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "577_workflow_577.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/577_workflow_577.json",
      "workflow_name": "577_workflow_577",
      "suggested_filename": "util_577_workflow_577_automate_manual_readbinaryfile.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "manual",
        "readbinaryfile"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readBinaryFile"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, readbinaryfile, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "o4sdVtTrkuZXDATf_✨😃Automated_Workflow_Backups_to_Google_Drive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/o4sdVtTrkuZXDATf_✨😃Automated_Workflow_Backups_to_Google_Drive.json",
      "workflow_name": "✨😃Automated Workflow Backups to Google Drive",
      "suggested_filename": "comm_automated_backup_splitinbatches_schedule_cron.json",
      "category": "COMM",
      "business_function": "backup",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "noOp",
        "stickyNote",
        "set",
        "scheduleTrigger",
        "code",
        "manualTrigger",
        "googleDrive",
        "limit",
        "telegram",
        "n8n",
        "convertToFile"
      ],
      "primary_integrations": [
        "splitinbatches",
        "schedule",
        "manual"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.set",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that backups data/processes using splitinbatches, schedule, manual, triggered via cron",
      "complexity_score": 34
    },
    {
      "original_filename": "2195_workflow_2195.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2195_workflow_2195.json",
      "workflow_name": "2195_workflow_2195",
      "suggested_filename": "util_2195_workflow_2195_automate_httprequest_form.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "formTrigger",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "form",
        "respondtowebhook"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, form, respondtowebhook, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "fvgP264GysfRJXdr_WordPress_Contact_Form_(CF7)_Responses_and_Classification.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/fvgP264GysfRJXdr_WordPress_Contact_Form_(CF7)_Responses_and_Classification.json",
      "workflow_name": "WordPress Contact Form (CF7) Responses and Classification",
      "suggested_filename": "ai_wordpress_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "gmail",
        "n8n-nodes-langchain.textClassifier",
        "set",
        "stickyNote",
        "webhook",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, gmail, triggered via webhook",
      "complexity_score": 33
    },
    {
      "original_filename": "1069_workflow_1069.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1069_workflow_1069.json",
      "workflow_name": "1069_workflow_1069",
      "suggested_filename": "util_1069_workflow_1069_automate_mqtt_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "mqtt",
        "set",
        "httpRequest",
        "cron"
      ],
      "primary_integrations": [
        "mqtt",
        "httprequest",
        "cron"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.mqtt"
      ],
      "business_description": "UTIL workflow that automates data/processes using mqtt, httprequest, cron, triggered via cron",
      "complexity_score": 8
    },
    {
      "original_filename": "3wbxkdT6hilhq0Na_Workflow_Results_to_Markdown_Notes_in_Your_Obsidian_Vault,_via_Google_Drive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3wbxkdT6hilhq0Na_Workflow_Results_to_Markdown_Notes_in_Your_Obsidian_Vault,_via_Google_Drive.json",
      "workflow_name": "Workflow Results to Markdown Notes in Your Obsidian Vault, via Google Drive",
      "suggested_filename": "ai_results_automate_n8nnodeslangchainoutputparserstructured_n8nnodeslangchainlmc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "googleDrive",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.lmchatopenai",
        "n8n-nodes-langchain.agent"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.googleDrive"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.lmchatopenai, n8n-nodes-langchain.agent, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "EJHT9UmGXNOyynV0_Scans_von_PDF_zu_Nextcloud.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/EJHT9UmGXNOyynV0_Scans_von_PDF_zu_Nextcloud.json",
      "workflow_name": "Scans von PDF zu Nextcloud",
      "suggested_filename": "util_scans_automate_schedule_nextcloud_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "scheduleTrigger",
        "stickyNote",
        "nextCloud",
        "httpRequest"
      ],
      "primary_integrations": [
        "schedule",
        "nextcloud",
        "httprequest"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.nextCloud",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using schedule, nextcloud, httprequest, triggered via cron",
      "complexity_score": 9
    },
    {
      "original_filename": "G0hO05fypS8n8uYu_INSEE_Enrichment_for_Agile_CRM.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/G0hO05fypS8n8uYu_INSEE_Enrichment_for_Agile_CRM.json",
      "workflow_name": "INSEE Enrichment for Agile CRM",
      "suggested_filename": "biz_insee_automate_httprequest_schedule_cron.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "manualTrigger",
        "code",
        "agileCrm"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "manual"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.agileCrm",
        "n8n-nodes-base.agileCrm",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "BIZ workflow that automates data/processes using httprequest, schedule, manual, triggered via cron",
      "complexity_score": 23
    },
    {
      "original_filename": "1940_workflow_1940.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1940_workflow_1940.json",
      "workflow_name": "1940_workflow_1940",
      "suggested_filename": "util_1940_workflow_1940_automate_httprequest_schedule_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "googleCalendar"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "googlecalendar"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, schedule, googlecalendar, triggered via cron",
      "complexity_score": 15
    },
    {
      "original_filename": "123_Create_a_ticket_in_Zendesk.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/123_Create_a_ticket_in_Zendesk.json",
      "workflow_name": "Create a ticket in Zendesk",
      "suggested_filename": "util_create_create_task_manual_zendesk.json",
      "category": "UTIL",
      "business_function": "create_task",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "zendesk"
      ],
      "primary_integrations": [
        "manual",
        "zendesk"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.zendesk"
      ],
      "business_description": "UTIL workflow that create_tasks data/processes using manual, zendesk, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "x2VUvhqV1YTJCIN0_workflow_x2VUvhqV1YTJCIN0.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/x2VUvhqV1YTJCIN0_workflow_x2VUvhqV1YTJCIN0.json",
      "workflow_name": "x2VUvhqV1YTJCIN0_workflow_x2VUvhqV1YTJCIN0",
      "suggested_filename": "util_x2vuvhqv1ytjcin0_workflow_x2vuvhqv1ytjcin0_automate_httprequest_graphql_web.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "noOp",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "graphql",
        "webhook"
      ],
      "primary_integrations": [
        "httprequest",
        "graphql",
        "webhook"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, graphql, webhook, triggered via webhook",
      "complexity_score": 16
    },
    {
      "original_filename": "3221_workflow_3221.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3221_workflow_3221.json",
      "workflow_name": "3221_workflow_3221",
      "suggested_filename": "comm_3221_workflow_3221_automate_gmail_gmail.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "if",
        "gmailTrigger",
        "stickyNote",
        "set",
        "gmail",
        "splitOut",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "gmail",
        "gmail",
        "googlesheets"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, gmail, googlesheets, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "Prompt-based Object Detection with Gemini 2.0.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Prompt-based Object Detection with Gemini 2.0.json",
      "workflow_name": "Prompt-based Object Detection with Gemini 2.0",
      "suggested_filename": "ai_prompt_automate_httprequest_manual.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "code",
        "editImage"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "editimage"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, manual, editimage, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "2144_workflow_2144.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2144_workflow_2144.json",
      "workflow_name": "2144_workflow_2144",
      "suggested_filename": "comm_2144_workflow_2144_automate_splitinbatches_gmail_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "noOp",
        "if",
        "stickyNote",
        "gmail",
        "set",
        "rssFeedRead",
        "scheduleTrigger",
        "splitOut"
      ],
      "primary_integrations": [
        "splitinbatches",
        "gmail",
        "rssfeedread"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, gmail, rssfeedread, triggered via cron",
      "complexity_score": 19
    },
    {
      "original_filename": "OpenAI Assistant workflow_ upload file, create an Assistant, chat with it!.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/OpenAI Assistant workflow_ upload file, create an Assistant, chat with it!.json",
      "workflow_name": "OpenAI Assistant workflow: uploa file, create an Assistant, chat with it!",
      "suggested_filename": "ai_openai_ai_process_n8nnodeslangchainchat_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "manualTrigger",
        "googleDrive",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "manual",
        "googledrive"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chat, manual, googledrive, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "2560_workflow_2560.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2560_workflow_2560.json",
      "workflow_name": "2560_workflow_2560",
      "suggested_filename": "ai_2560_workflow_2560_automate_httprequest_schedule_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-langchain.openAi",
        "discord"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.discord",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, schedule, n8n-nodes-langchain.lmchatopenai, triggered via cron",
      "complexity_score": 16
    },
    {
      "original_filename": "2216_workflow_2216.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2216_workflow_2216.json",
      "workflow_name": "2216_workflow_2216",
      "suggested_filename": "ai_2216_workflow_2216_automate_telegram_telegram.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "telegramTrigger",
        "telegram",
        "aggregate",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "telegram",
        "telegram",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using telegram, telegram, n8n-nodes-langchain.openai, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "1734_workflow_1734.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1734_workflow_1734.json",
      "workflow_name": "1734_workflow_1734",
      "suggested_filename": "comm_1734_workflow_1734_automate_spreadsheetfile_gmail.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "gmail",
        "moveBinaryData",
        "stickyNote"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "gmail",
        "movebinarydata"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using spreadsheetfile, gmail, movebinarydata, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "🤖 Telegram Messaging Agent for Text_Audio_Images.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/🤖 Telegram Messaging Agent for Text_Audio_Images.json",
      "workflow_name": "🤖 Telegram Messaging Agent for Text/Audio/Images",
      "suggested_filename": "ai_telegram_automate_n8nnodeslangchaintextclassifier_httprequest_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.textClassifier",
        "httpRequest",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "extractFromFile",
        "switch",
        "convertToFile",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.textclassifier",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 39,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.textclassifier, httprequest, webhook, triggered via webhook",
      "complexity_score": 51
    },
    {
      "original_filename": "Automate Pinterest Analysis & AI-Powered Content Suggestions With Pinterest API.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Automate Pinterest Analysis & AI-Powered Content Suggestions With Pinterest API.json",
      "workflow_name": "Automate Pinterest Analysis & AI-Powered Content Suggestions With Pinterest API",
      "suggested_filename": "ai_automate_ai_process_airtable_gmail_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "airtableTool",
        "gmail",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.chainSummarization",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "airtable",
        "code",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "airtable",
        "gmail",
        "httprequest"
      ],
      "total_nodes": 13,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.airtableTool",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.airtable",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using airtable, gmail, httprequest, triggered via cron",
      "complexity_score": 23
    },
    {
      "original_filename": "2824_workflow_2824.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2824_workflow_2824.json",
      "workflow_name": "2824_workflow_2824",
      "suggested_filename": "util_2824_workflow_2824_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "5Y8QXJ3N67wnmR2R_POC_-_Chatbot_Order_by_Sheet_Data.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/5Y8QXJ3N67wnmR2R_POC_-_Chatbot_Order_by_Sheet_Data.json",
      "workflow_name": "POC - Chatbot Order by Sheet Data",
      "suggested_filename": "ai_chatbot_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalcula.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.calculator",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 8,
      "node_types": [
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.calculator, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "837_workflow_837.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/837_workflow_837.json",
      "workflow_name": "837_workflow_837",
      "suggested_filename": "util_837_workflow_837_automate_htmlextract_emailsend_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "htmlExtract",
        "if",
        "emailSend",
        "httpRequest",
        "executeCommand",
        "functionItem",
        "cron",
        "writeBinaryFile",
        "moveBinaryData",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "htmlextract",
        "emailsend",
        "httprequest"
      ],
      "total_nodes": 25,
      "node_types": [
        "n8n-nodes-base.htmlExtract",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.writeBinaryFile",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.if",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.if",
        "n8n-nodes-base.writeBinaryFile",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.if",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.if",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.if",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.emailSend"
      ],
      "business_description": "UTIL workflow that automates data/processes using htmlextract, emailsend, httprequest, triggered via cron",
      "complexity_score": 35
    },
    {
      "original_filename": "WGUpujme8ctIkBF8_Live_link_checker.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/WGUpujme8ctIkBF8_Live_link_checker.json",
      "workflow_name": "Live link checker",
      "suggested_filename": "data_live_validate_splitinbatches_httprequest.json",
      "category": "DATA",
      "business_function": "validate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "wait",
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "manual"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that validates data/processes using splitinbatches, httprequest, manual, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "Classify new bugs in Linear with OpenAI_s GPT-4 and move them to the right team.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Classify new bugs in Linear with OpenAI_s GPT-4 and move them to the right team.json",
      "workflow_name": "Classify new bugs in Linear with OpenAI_s GPT-4 and move them to the right team",
      "suggested_filename": "ai_classify_classify_linear_slack.json",
      "category": "AI",
      "business_function": "classify",
      "trigger_type": "manual",
      "integrations": [
        "linearTrigger",
        "merge",
        "slack",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "linear",
        "n8n-nodes-langchain.openAi",
        "filter"
      ],
      "primary_integrations": [
        "linear",
        "slack",
        "httprequest"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.linearTrigger",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.linear",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that classifys data/processes using linear, slack, httprequest, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "GW4dTYPBXwOrCUxo_Search_LinkedIn_companies,_Score_with_AI_and_add_them_to_Google_Sheet_CRM.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/GW4dTYPBXwOrCUxo_Search_LinkedIn_companies,_Score_with_AI_and_add_them_to_Google_Sheet_CRM.json",
      "workflow_name": "Search LinkedIn companies, Score with AI and add them to Google Sheet CRM",
      "suggested_filename": "ai_search_ai_process_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "if",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "googleSheets",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "manual"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, httprequest, manual, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "U1xUqDLvBYYSU6EU_Jira_Retrospective.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/U1xUqDLvBYYSU6EU_Jira_Retrospective.json",
      "workflow_name": "Jira Retrospective",
      "suggested_filename": "ai_jira_automate_n8nnodeslangchainmemorybufferwindow_googledocs.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "if",
        "googleDocs",
        "set",
        "stickyNote",
        "jiraTrigger",
        "jira",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "summarize"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "googledocs",
        "jira"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.jira",
        "n8n-nodes-base.jira",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.jiraTrigger",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, googledocs, jira, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "1787_workflow_1787.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1787_workflow_1787.json",
      "workflow_name": "1787_workflow_1787",
      "suggested_filename": "biz_1787_workflow_1787_automate_spreadsheetfile_pipedrive.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "pipedrive",
        "merge",
        "if",
        "set",
        "googleDrive",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "pipedrive",
        "googledrive"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.pipedrive"
      ],
      "business_description": "BIZ workflow that automates data/processes using spreadsheetfile, pipedrive, googledrive, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "8EmNhftXznAGV3dR_Phishing_analysis__URLScan_io_and_Virustotal_.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/8EmNhftXznAGV3dR_Phishing_analysis__URLScan_io_and_Virustotal_.json",
      "workflow_name": "Phishing_analysis__URLScan_io_and_Virustotal_",
      "suggested_filename": "comm_phishing_analysis_urlscan_io_and_virustotal_automate_splitinbatches_slack_c.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "slack",
        "if",
        "wait",
        "stickyNote",
        "httpRequest",
        "microsoftOutlook",
        "scheduleTrigger",
        "manualTrigger",
        "code",
        "urlScanIo",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "slack",
        "httprequest"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.urlScanIo",
        "n8n-nodes-base.urlScanIo",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, slack, httprequest, triggered via cron",
      "complexity_score": 36
    },
    {
      "original_filename": "d3xtaER6gl4aqLZR_PUQ_Docker_NextCloud_deploy.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/d3xtaER6gl4aqLZR_PUQ_Docker_NextCloud_deploy.json",
      "workflow_name": "PUQ Docker NextCloud deploy",
      "suggested_filename": "ops_docker_automate_ssh_httprequest_webhook.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "ssh",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "code",
        "switch",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "ssh",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 44,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.ssh",
        "n8n-nodes-base.ssh",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.code",
        "n8n-nodes-base.respondToWebhook"
      ],
      "business_description": "OPS workflow that automates data/processes using ssh, httprequest, webhook, triggered via webhook",
      "complexity_score": 53
    },
    {
      "original_filename": "552_workflow_552.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/552_workflow_552.json",
      "workflow_name": "552_workflow_552",
      "suggested_filename": "biz_552_workflow_552_automate_zohocrm_manual.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "zohoCrm",
        "manualTrigger"
      ],
      "primary_integrations": [
        "zohocrm",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.zohoCrm"
      ],
      "business_description": "BIZ workflow that automates data/processes using zohocrm, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2502_workflow_2502.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2502_workflow_2502.json",
      "workflow_name": "2502_workflow_2502",
      "suggested_filename": "ai_2502_workflow_2502_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "filter",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "n8n-nodes-langchain.lmChatAnthropic",
        "limit",
        "code",
        "googleSheets",
        "spotify"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 37,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via cron",
      "complexity_score": 52
    },
    {
      "original_filename": "2274_workflow_2274.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2274_workflow_2274.json",
      "workflow_name": "2274_workflow_2274",
      "suggested_filename": "util_2274_workflow_2274_automate_n8ntrainingcustomerdatastore_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8nTrainingCustomerDatastore",
        "stickyNote",
        "set",
        "webhook",
        "aggregate",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8ntrainingcustomerdatastore",
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.n8nTrainingCustomerDatastore",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using n8ntrainingcustomerdatastore, webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 15
    },
    {
      "original_filename": "1756_workflow_1756.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1756_workflow_1756.json",
      "workflow_name": "1756_workflow_1756",
      "suggested_filename": "data_1756_workflow_1756_automate_spreadsheetfile_googlesheets_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "spreadsheetFile",
        "googleSheets",
        "webhook"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "googlesheets",
        "webhook"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "DATA workflow that automates data/processes using spreadsheetfile, googlesheets, webhook, triggered via webhook",
      "complexity_score": 6
    },
    {
      "original_filename": "2619_workflow_2619.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2619_workflow_2619.json",
      "workflow_name": "2619_workflow_2619",
      "suggested_filename": "ai_2619_workflow_2619_automate_gmail_httprequest_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "stickyNote",
        "gmail",
        "httpRequest",
        "html",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "n8n-nodes-langchain.informationExtractor",
        "airtable",
        "removeDuplicates"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "html"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.html",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, httprequest, html, triggered via cron",
      "complexity_score": 35
    },
    {
      "original_filename": "NzoLNV2FbS4eurJ7_WhatsApp_business_bot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/NzoLNV2FbS4eurJ7_WhatsApp_business_bot.json",
      "workflow_name": "WhatsApp business bot",
      "suggested_filename": "comm_whatsapp_automate_splitinbatches_whatsapp_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "whatsApp",
        "if",
        "wait",
        "stickyNote",
        "scheduleTrigger",
        "googleSheets",
        "whatsAppTrigger",
        "googleSheetsTrigger",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "whatsapp",
        "schedule"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.whatsAppTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, whatsapp, schedule, triggered via cron",
      "complexity_score": 25
    },
    {
      "original_filename": "934_workflow_934.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/934_workflow_934.json",
      "workflow_name": "934_workflow_934",
      "suggested_filename": "util_934_workflow_934_automate_stackby_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stackby",
        "set",
        "manualTrigger"
      ],
      "primary_integrations": [
        "stackby",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stackby",
        "n8n-nodes-base.stackby"
      ],
      "business_description": "UTIL workflow that automates data/processes using stackby, manual, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "yOhH9SGiZgZTDUB4_Clone_n8n_Workflows_between_Instances_using_n8n_API.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/yOhH9SGiZgZTDUB4_Clone_n8n_Workflows_between_Instances_using_n8n_API.json",
      "workflow_name": "Clone n8n Workflows between Instances using n8n API",
      "suggested_filename": "util_clone_automate_splitinbatches_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "merge",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "code",
        "n8n",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "manual"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, httprequest, manual, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "1093_workflow_1093.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1093_workflow_1093.json",
      "workflow_name": "1093_workflow_1093",
      "suggested_filename": "data_1093_workflow_1093_automate_crypto_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "crypto",
        "if",
        "set",
        "webhook",
        "airtable",
        "function"
      ],
      "primary_integrations": [
        "crypto",
        "webhook",
        "airtable"
      ],
      "total_nodes": 26,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.function",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that automates data/processes using crypto, webhook, airtable, triggered via webhook",
      "complexity_score": 32
    },
    {
      "original_filename": "RLWjEhY8L4TORAIj_NeurochainAI_Basic_API_Integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/RLWjEhY8L4TORAIj_NeurochainAI_Basic_API_Integration.json",
      "workflow_name": "NeurochainAI Basic API Integration",
      "suggested_filename": "ai_neurochainai_ai_process_httprequest_telegram.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "telegramTrigger",
        "telegram",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "httprequest",
        "telegram",
        "telegram"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, telegram, telegram, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "2315_workflow_2315.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2315_workflow_2315.json",
      "workflow_name": "2315_workflow_2315",
      "suggested_filename": "ai_2315_workflow_2315_automate_supabase_removeduplicates.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "supabase",
        "merge",
        "removeDuplicates",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "markdown",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.toolWorkflow",
        "splitOut",
        "aggregate",
        "n8n-nodes-langchain.agent",
        "html",
        "filter"
      ],
      "primary_integrations": [
        "supabase",
        "removeduplicates",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 38,
      "node_types": [
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.set",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.html",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using supabase, removeduplicates, n8n-nodes-langchain.outputparserstructured, triggered via manual",
      "complexity_score": 54
    },
    {
      "original_filename": "qmmXKcpJOCm9qaCk_SERPBear_analytics_template.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/qmmXKcpJOCm9qaCk_SERPBear_analytics_template.json",
      "workflow_name": "SERPBear analytics template",
      "suggested_filename": "analytics_serpbear_automate_httprequest_schedule_cron.json",
      "category": "ANALYTICS",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "baserow",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "baserow"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.baserow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "ANALYTICS workflow that automates data/processes using httprequest, schedule, baserow, triggered via cron",
      "complexity_score": 16
    },
    {
      "original_filename": "jOI7FRhG1FkeqBLG_Wordpress_Form_to_Mautic.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/jOI7FRhG1FkeqBLG_Wordpress_Form_to_Mautic.json",
      "workflow_name": "Wordpress Form to Mautic",
      "suggested_filename": "util_wordpress_automate_mautic_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "mautic",
        "stickyNote",
        "set",
        "noOp",
        "webhook"
      ],
      "primary_integrations": [
        "mautic",
        "webhook"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "UTIL workflow that automates data/processes using mautic, webhook, triggered via webhook",
      "complexity_score": 16
    },
    {
      "original_filename": "3706_workflow_3706.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3706_workflow_3706.json",
      "workflow_name": "3706_workflow_3706",
      "suggested_filename": "ai_3706_workflow_3706_automate_hubspot_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "hubspot",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chainSummarization",
        "form",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "gmailTool",
        "formTrigger"
      ],
      "primary_integrations": [
        "hubspot",
        "n8n-nodes-langchain.chainsummarization",
        "form"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.form",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using hubspot, n8n-nodes-langchain.chainsummarization, form, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "2945_workflow_2945.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2945_workflow_2945.json",
      "workflow_name": "2945_workflow_2945",
      "suggested_filename": "ai_2945_workflow_2945_automate_splitinbatches_n8nnodeslangchainoutputparserstruc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.outputParserStructured",
        "wait",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "Xx4zOjRFLI8W9PiC_Analyze_Reddit_Posts_with_AI_to_Identify_Business_Opportunities.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Xx4zOjRFLI8W9PiC_Analyze_Reddit_Posts_with_AI_to_Identify_Business_Opportunities.json",
      "workflow_name": "Analyze Reddit Posts with AI to Identify Business Opportunities",
      "suggested_filename": "ai_analyze_analyze_reddit_gmail.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "reddit",
        "if",
        "gmail",
        "set",
        "stickyNote",
        "n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "googleSheets",
        "n8n-nodes-langchain.sentimentAnalysis",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "reddit",
        "gmail",
        "n8n-nodes-langchain.chainsummarization"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.sentimentAnalysis",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.reddit",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that analyzes data/processes using reddit, gmail, n8n-nodes-langchain.chainsummarization, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "100_Create_a_new_task_in_Todoist.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/100_Create_a_new_task_in_Todoist.json",
      "workflow_name": "Create a new task in Todoist",
      "suggested_filename": "util_create_create_task_todoist_manual.json",
      "category": "UTIL",
      "business_function": "create_task",
      "trigger_type": "manual",
      "integrations": [
        "todoist",
        "manualTrigger"
      ],
      "primary_integrations": [
        "todoist",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.todoist"
      ],
      "business_description": "UTIL workflow that create_tasks data/processes using todoist, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "14_Update_Crypto_Values.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/14_Update_Crypto_Values.json",
      "workflow_name": "Update Crypto Values",
      "suggested_filename": "data_update_update_coingecko_airtable_cron.json",
      "category": "DATA",
      "business_function": "update",
      "trigger_type": "cron",
      "integrations": [
        "set",
        "coinGecko",
        "airtable",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "coingecko",
        "airtable",
        "cron"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.coinGecko",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.function",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable"
      ],
      "business_description": "DATA workflow that updates data/processes using coingecko, airtable, cron, triggered via cron",
      "complexity_score": 13
    },
    {
      "original_filename": "wng5xcxlYA6jFS6n_MAIA_-_Health_Check.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/wng5xcxlYA6jFS6n_MAIA_-_Health_Check.json",
      "workflow_name": "MAIA - Health Check",
      "suggested_filename": "ai_maia_ai_process_httprequest_schedule_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "noOp",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "telegram",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "telegram"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, schedule, telegram, triggered via cron",
      "complexity_score": 13
    },
    {
      "original_filename": "Transcribing Bank Statements To Markdown Using Gemini Vision AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Transcribing Bank Statements To Markdown Using Gemini Vision AI.json",
      "workflow_name": "Transcribing Bank Statements To Markdown Using Gemini Vision AI",
      "suggested_filename": "ai_transcribing_ai_process_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "httpRequest",
        "sort",
        "code",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "manualTrigger",
        "googleDrive",
        "aggregate",
        "n8n-nodes-langchain.informationExtractor",
        "compression",
        "editImage"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "sort"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.compression",
        "n8n-nodes-base.code",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, httprequest, sort, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "2448_workflow_2448.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2448_workflow_2448.json",
      "workflow_name": "2448_workflow_2448",
      "suggested_filename": "util_2448_workflow_2448_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "switch",
        "html",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "html"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.html",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, html, triggered via webhook",
      "complexity_score": 18
    },
    {
      "original_filename": "949_workflow_949.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/949_workflow_949.json",
      "workflow_name": "949_workflow_949",
      "suggested_filename": "util_949_workflow_949_automate_quickbooks.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "quickbooks"
      ],
      "primary_integrations": [
        "quickbooks"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.quickbooks",
        "n8n-nodes-base.quickbooks",
        "n8n-nodes-base.quickbooks"
      ],
      "business_description": "UTIL workflow that automates data/processes using quickbooks, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "_Easily_Compare_LLMs_Using_OpenAI_and_Google_Sheets.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/_Easily_Compare_LLMs_Using_OpenAI_and_Google_Sheets.json",
      "workflow_name": "Easily Compare LLMs Using OpenAI and Google Sheets",
      "suggested_filename": "ai_easily_ai_process_splitinbatches_n8nnodeslangchainmemorybufferwindow.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "n8n-nodes-langchain.memoryManager",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "splitOut",
        "n8n-nodes-langchain.agent",
        "aggregate",
        "googleSheets",
        "summarize"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 21,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.memoryManager",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "90_Post_a_message_to_a_channel_in_RocketChat.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/90_Post_a_message_to_a_channel_in_RocketChat.json",
      "workflow_name": "Post a message to a channel in RocketChat",
      "suggested_filename": "comm_post_automate_rocketchat_manual.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "rocketchat",
        "manualTrigger"
      ],
      "primary_integrations": [
        "rocketchat",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.rocketchat"
      ],
      "business_description": "COMM workflow that automates data/processes using rocketchat, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Telegram AI bot assistant_ ready-made template for voice & text messages.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Telegram AI bot assistant_ ready-made template for voice & text messages.json",
      "workflow_name": "Telegram AI multi-format chatbot",
      "suggested_filename": "ai_telegram_ai_process_n8nnodeslangchainmemorybufferwindow_telegram.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.agent",
        "switch",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "telegram",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 15,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.switch"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, telegram, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "LSH4x5nnNGQbNBkh_Notify_user_in_Slack_of_quarantined_email_and_create_Jira_ticket_if_opened.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/LSH4x5nnNGQbNBkh_Notify_user_in_Slack_of_quarantined_email_and_create_Jira_ticket_if_opened.json",
      "workflow_name": "Notify_user_in_Slack_of_quarantined_email_and_create_Jira_ticket_if_opened",
      "suggested_filename": "ai_notify_user_in_slack_of_quarantined_email_and_create_jira_ticket_if_opened_ai.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "slack",
        "if",
        "noOp",
        "stickyNote",
        "httpRequest",
        "jira",
        "webhook",
        "code"
      ],
      "primary_integrations": [
        "slack",
        "httprequest",
        "jira"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.code"
      ],
      "business_description": "AI workflow that ai_processs data/processes using slack, httprequest, jira, triggered via webhook",
      "complexity_score": 21
    },
    {
      "original_filename": "30r9acI1XVIIwAMi_mails2notion_V2.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/30r9acI1XVIIwAMi_mails2notion_V2.json",
      "workflow_name": "mails2notion V2",
      "suggested_filename": "ai_mails2notion_ai_process_n8nnodeslangchaincalculator_n8nnodeslangchainoutputpa.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-langchain.outputParserStructured",
        "gmailTrigger",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "noOp",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "airtable",
        "code",
        "n8n-nodes-langchain.agent",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.calculator",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 38,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.calculator, n8n-nodes-langchain.outputparserstructured, gmail, triggered via manual",
      "complexity_score": 52
    },
    {
      "original_filename": "IwOOVikQC7cn9VTv_Email_verification_with_Icypeas_(single).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/IwOOVikQC7cn9VTv_Email_verification_with_Icypeas_(single).json",
      "workflow_name": "Email verification with Icypeas (single)",
      "suggested_filename": "ai_email_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "29_N8N_Español_-_Ejemplos.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/29_N8N_Español_-_Ejemplos.json",
      "workflow_name": "N8N Español - Ejemplos",
      "suggested_filename": "util_español_automate_manual_executecommand.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "set",
        "manualTrigger",
        "executeCommand"
      ],
      "primary_integrations": [
        "manual",
        "executecommand"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, executecommand, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "586_workflow_586.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/586_workflow_586.json",
      "workflow_name": "586_workflow_586",
      "suggested_filename": "util_586_workflow_586_automate_spreadsheetfile_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "manualTrigger",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "manual",
        "readbinaryfile"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.readBinaryFile"
      ],
      "business_description": "UTIL workflow that automates data/processes using spreadsheetfile, manual, readbinaryfile, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "r1u4HOJu5j5sP27x_Social_Media_Publisher.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/r1u4HOJu5j5sP27x_Social_Media_Publisher.json",
      "workflow_name": "Social Media Publisher",
      "suggested_filename": "content_social_automate_httprequest_form.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "form",
        "switch",
        "formTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "form",
        "form"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "CONTENT workflow that automates data/processes using httprequest, form, form, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "2025_workflow_2025.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2025_workflow_2025.json",
      "workflow_name": "2025_workflow_2025",
      "suggested_filename": "ai_2025_workflow_2025_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "n8n-nodes-langchain.toolCode",
        "n8n-nodes-langchain.toolWorkflow",
        "code",
        "summarize",
        "n8n-nodes-langchain.openAi",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.code"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolCode",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.code, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "Sebvr1R2t4zkAg1V_Gratitude_Jar_Reminder.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Sebvr1R2t4zkAg1V_Gratitude_Jar_Reminder.json",
      "workflow_name": "Gratitude Jar Reminder",
      "suggested_filename": "ai_gratitude_automate_n8nnodeslangchainlmchatazureopenai_n8nnodeslangchainchainl.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.lmChatAzureOpenAi",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmchatazureopenai",
        "n8n-nodes-langchain.chainllm",
        "httprequest"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.lmchatazureopenai, n8n-nodes-langchain.chainllm, httprequest, triggered via cron",
      "complexity_score": 15
    },
    {
      "original_filename": "60_n8n_mysql_purge_history_greater_than_10_days.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/60_n8n_mysql_purge_history_greater_than_10_days.json",
      "workflow_name": "n8n_mysql_purge_history_greater_than_10_days",
      "suggested_filename": "data_n8n_mysql_purge_history_greater_than_10_days_automate_cron_manual_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "cron",
        "manualTrigger",
        "mySql"
      ],
      "primary_integrations": [
        "cron",
        "manual",
        "mysql"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.cron"
      ],
      "business_description": "DATA workflow that automates data/processes using cron, manual, mysql, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "14_Activity_Encouragement.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/14_Activity_Encouragement.json",
      "workflow_name": "Activity Encouragement",
      "suggested_filename": "util_activity_automate_strava_emailsend_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "noOp",
        "if",
        "set",
        "strava",
        "emailSend",
        "cron"
      ],
      "primary_integrations": [
        "strava",
        "emailsend",
        "cron"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.strava",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.cron"
      ],
      "business_description": "UTIL workflow that automates data/processes using strava, emailsend, cron, triggered via cron",
      "complexity_score": 12
    },
    {
      "original_filename": "3JsfhcDcjqxx0hr3_Extract_And_Decode_Google_News_RSS_URLs_to_Clean_Article_Links.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3JsfhcDcjqxx0hr3_Extract_And_Decode_Google_News_RSS_URLs_to_Clean_Article_Links.json",
      "workflow_name": "Extract And Decode Google News RSS URLs to Clean Article Links",
      "suggested_filename": "util_extract_extract_httprequest_rssfeedread.json",
      "category": "UTIL",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "rssFeedRead",
        "manualTrigger",
        "limit",
        "code",
        "aggregate",
        "html"
      ],
      "primary_integrations": [
        "httprequest",
        "rssfeedread",
        "manual"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.aggregate"
      ],
      "business_description": "UTIL workflow that extracts data/processes using httprequest, rssfeedread, manual, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "1892_workflow_1892.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1892_workflow_1892.json",
      "workflow_name": "1892_workflow_1892",
      "suggested_filename": "util_1892_workflow_1892_automate_webhook_n8n_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "code",
        "n8n",
        "html",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "n8n",
        "html"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.html",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, n8n, html, triggered via webhook",
      "complexity_score": 15
    },
    {
      "original_filename": "Parents_smart_bot (2).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Parents_smart_bot (2).json",
      "workflow_name": "Parents smart bot",
      "suggested_filename": "ai_parents_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalcula.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolCalculator",
        "if",
        "set",
        "n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "telegramTrigger",
        "n8n-nodes-langchain.toolWorkflow",
        "telegram",
        "n8n-nodes-langchain.agent",
        "switch",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.lmChatOpenAi",
        "code",
        "n8n-nodes-langchain.openAi",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.calculator",
        "n8n-nodes-langchain.wikipedia"
      ],
      "total_nodes": 27,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.calculator, n8n-nodes-langchain.wikipedia, triggered via manual",
      "complexity_score": 45
    },
    {
      "original_filename": "Scrape and summarize webpages with AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Scrape and summarize webpages with AI.json",
      "workflow_name": "Scrape and summarize webpages with AI",
      "suggested_filename": "ai_scrape_ai_process_httprequest_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.chainSummarization",
        "splitOut",
        "manualTrigger",
        "limit",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "html",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.chainsummarization",
        "manual"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.limit",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.chainSummarization"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, n8n-nodes-langchain.chainsummarization, manual, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "Social Media Analysis and Automated Email Generation.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Social Media Analysis and Automated Email Generation.json",
      "workflow_name": "Social Media Analysis and Automated Email Generation",
      "suggested_filename": "ai_social_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstru.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "set",
        "emailSend",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "code",
        "googleSheets",
        "googleSheetsTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "emailsend"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, emailsend, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "3039_workflow_3039.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3039_workflow_3039.json",
      "workflow_name": "3039_workflow_3039",
      "suggested_filename": "data_3039_workflow_3039_automate_notion_executeworkflow.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "if",
        "stickyNote",
        "set",
        "notion",
        "splitOut",
        "aggregate",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "notion",
        "executeworkflow"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.notion"
      ],
      "business_description": "DATA workflow that automates data/processes using notion, executeworkflow, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "1821_workflow_1821.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1821_workflow_1821.json",
      "workflow_name": "1821_workflow_1821",
      "suggested_filename": "util_1821_workflow_1821_automate_asana_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "asana",
        "webhook",
        "zendesk",
        "function"
      ],
      "primary_integrations": [
        "asana",
        "webhook",
        "zendesk"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.asana",
        "n8n-nodes-base.if",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.function",
        "n8n-nodes-base.asana",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using asana, webhook, zendesk, triggered via webhook",
      "complexity_score": 12
    },
    {
      "original_filename": "2499_workflow_2499.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2499_workflow_2499.json",
      "workflow_name": "2499_workflow_2499",
      "suggested_filename": "util_2499_workflow_2499_automate_filemaker_crypto_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "filemaker",
        "crypto",
        "if",
        "stickyNote",
        "set",
        "webhook",
        "moveBinaryData",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "filemaker",
        "crypto",
        "webhook"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.filemaker",
        "n8n-nodes-base.filemaker",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using filemaker, crypto, webhook, triggered via webhook",
      "complexity_score": 19
    },
    {
      "original_filename": "Y5URlIlbX4HDzWKA_airflow_dag_run.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Y5URlIlbX4HDzWKA_airflow_dag_run.json",
      "workflow_name": "airflow dag_run",
      "suggested_filename": "ai_airflow_ai_process_httprequest_stopanderror.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "wait",
        "set",
        "httpRequest",
        "stopAndError",
        "code",
        "switch",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "stopanderror",
        "executeworkflow"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, stopanderror, executeworkflow, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "1776_workflow_1776.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1776_workflow_1776.json",
      "workflow_name": "1776_workflow_1776",
      "suggested_filename": "biz_1776_workflow_1776_automate_pipedrive_itemlists_cron.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "pipedrive",
        "merge",
        "itemLists",
        "stripe",
        "set",
        "httpRequest",
        "functionItem",
        "cron"
      ],
      "primary_integrations": [
        "pipedrive",
        "itemlists",
        "stripe"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.stripe",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.cron"
      ],
      "business_description": "BIZ workflow that automates data/processes using pipedrive, itemlists, stripe, triggered via cron",
      "complexity_score": 19
    },
    {
      "original_filename": "q8IFGLeOCGSfoWZu_Email_AI_Auto-responder._Summerize_and_send_email.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/q8IFGLeOCGSfoWZu_Email_AI_Auto-responder._Summerize_and_send_email.json",
      "workflow_name": "Email AI Auto-responder. Summerize and send email",
      "suggested_filename": "ai_email_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchaintextsplittertoken.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "noOp",
        "stickyNote",
        "emailSend",
        "n8n-nodes-langchain.textClassifier",
        "n8n-nodes-langchain.chainSummarization",
        "httpRequest",
        "markdown",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "googleDrive",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "emailReadImap"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.textsplittertokensplitter",
        "emailsend"
      ],
      "total_nodes": 26,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.markdown",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.emailSend",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.textsplittertokensplitter, emailsend, triggered via manual",
      "complexity_score": 43
    },
    {
      "original_filename": "Extract and process information directly from PDF using Claude and Gemini.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Extract and process information directly from PDF using Claude and Gemini.json",
      "workflow_name": "Extract and process information directly from PDF using Claude and Gemini",
      "suggested_filename": "ai_extract_extract_httprequest_manual.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "extractFromFile",
        "googleDrive"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "extractfromfile"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that extracts data/processes using httprequest, manual, extractfromfile, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "6_Dashboard.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/6_Dashboard.json",
      "workflow_name": "Dashboard",
      "suggested_filename": "ops_dashboard_report_httprequest_github_cron.json",
      "category": "OPS",
      "business_function": "report",
      "trigger_type": "cron",
      "integrations": [
        "set",
        "httpRequest",
        "github",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "httprequest",
        "github",
        "cron"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.github",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function"
      ],
      "business_description": "OPS workflow that reports data/processes using httprequest, github, cron, triggered via cron",
      "complexity_score": 29
    },
    {
      "original_filename": "xM8Z5vZVNTNjCySL_News_Extraction.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/xM8Z5vZVNTNjCySL_News_Extraction.json",
      "workflow_name": "News Extraction",
      "suggested_filename": "ai_news_extract_nocodb_itemlists_cron.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "nocoDb",
        "itemLists",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "openAi",
        "code",
        "html"
      ],
      "primary_integrations": [
        "nocodb",
        "itemlists",
        "httprequest"
      ],
      "total_nodes": 36,
      "node_types": [
        "n8n-nodes-base.html",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.html",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.itemLists"
      ],
      "business_description": "AI workflow that extracts data/processes using nocodb, itemlists, httprequest, triggered via cron",
      "complexity_score": 46
    },
    {
      "original_filename": "caaf1WFANPKAikiH_Auto_categorize_wordpress_template.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/caaf1WFANPKAikiH_Auto_categorize_wordpress_template.json",
      "workflow_name": "Auto categorize wordpress template",
      "suggested_filename": "ai_auto_automate_wordpress_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wordpress",
        "stickyNote",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "wordpress",
        "n8n-nodes-langchain.lmchatopenai",
        "manual"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wordpress",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using wordpress, n8n-nodes-langchain.lmchatopenai, manual, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "KgoL0qrLYZUJFuAS_Summarize_YouTube_Videos_&_Chat_About_Content_with_GPT-4o-mini_via_Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/KgoL0qrLYZUJFuAS_Summarize_YouTube_Videos_&_Chat_About_Content_with_GPT-4o-mini_via_Telegram.json",
      "workflow_name": "Summarize YouTube Videos & Chat About Content with GPT-4o-mini via Telegram",
      "suggested_filename": "ai_summarize_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchain.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.chainLlm",
        "googleDocs",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "stickyNote",
        "googleDocsTool",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "telegram",
        "code",
        "telegramTrigger",
        "n8n-nodes-langchain.agent",
        "summarize",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chainllm",
        "googledocs"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.summarize",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-youtube-transcription-kasha.youtubeTranscripter",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.googleDocs",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.googleDocsTool",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chainllm, googledocs, triggered via webhook",
      "complexity_score": 38
    },
    {
      "original_filename": "89_Create_a_new_card_in_Trello.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/89_Create_a_new_card_in_Trello.json",
      "workflow_name": "Create a new card in Trello",
      "suggested_filename": "util_create_create_trello_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "trello",
        "manualTrigger"
      ],
      "primary_integrations": [
        "trello",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.trello"
      ],
      "business_description": "UTIL workflow that creates data/processes using trello, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "15_Bubble_Data_Access.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/15_Bubble_Data_Access.json",
      "workflow_name": "Bubble Data Access",
      "suggested_filename": "data_bubble_automate_httprequest_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "32_Create_a_customer_and_add_them_to_a_segment_in_Customer.io.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/32_Create_a_customer_and_add_them_to_a_segment_in_Customer.io.json",
      "workflow_name": "Create a customer and add them to a segment in Customer.io",
      "suggested_filename": "biz_create_create_contact_customerio_manual.json",
      "category": "BIZ",
      "business_function": "create_contact",
      "trigger_type": "manual",
      "integrations": [
        "customerIo",
        "manualTrigger"
      ],
      "primary_integrations": [
        "customerio",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.customerIo",
        "n8n-nodes-base.customerIo"
      ],
      "business_description": "BIZ workflow that create_contacts data/processes using customerio, manual, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "696_workflow_696.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/696_workflow_696.json",
      "workflow_name": "696_workflow_696",
      "suggested_filename": "comm_696_workflow_696_automate_error_gmail.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "errorTrigger",
        "gmail"
      ],
      "primary_integrations": [
        "error",
        "gmail"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.errorTrigger",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "COMM workflow that automates data/processes using error, gmail, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "96_Create_a_new_contact_in_Agile_CRM.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/96_Create_a_new_contact_in_Agile_CRM.json",
      "workflow_name": "Create a new contact in Agile CRM",
      "suggested_filename": "biz_create_create_contact_agilecrm_manual.json",
      "category": "BIZ",
      "business_function": "create_contact",
      "trigger_type": "manual",
      "integrations": [
        "agileCrm",
        "manualTrigger"
      ],
      "primary_integrations": [
        "agilecrm",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.agileCrm"
      ],
      "business_description": "BIZ workflow that create_contacts data/processes using agilecrm, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "3696_workflow_3696.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3696_workflow_3696.json",
      "workflow_name": "3696_workflow_3696",
      "suggested_filename": "util_3696_workflow_3696_automate_converttofile_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "convertToFile",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "converttofile",
        "httprequest",
        "manual"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using converttofile, httprequest, manual, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "115_Archive_empty_pages_in_Notion_Database.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/115_Archive_empty_pages_in_Notion_Database.json",
      "workflow_name": "Archive empty pages in Notion Database",
      "suggested_filename": "data_archive_backup_splitinbatches_notion_cron.json",
      "category": "DATA",
      "business_function": "backup",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "if",
        "notion",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "splitinbatches",
        "notion",
        "cron"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.function",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.function",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.cron"
      ],
      "business_description": "DATA workflow that backups data/processes using splitinbatches, notion, cron, triggered via cron",
      "complexity_score": 15
    },
    {
      "original_filename": "📚 Auto-generate documentation for n8n workflows with GPT and Docsify.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/📚 Auto-generate documentation for n8n workflows with GPT and Docsify.json",
      "workflow_name": "Docsify example",
      "suggested_filename": "ai_docsify_automate_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainout.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.outputParserStructured",
        "executeCommand",
        "sort",
        "extractFromFile",
        "convertToFile",
        "noOp",
        "n8n-nodes-langchain.lmChatOpenAi",
        "html",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "stickyNote",
        "readWriteFile",
        "n8n",
        "respondToWebhook",
        "set",
        "webhook",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.outputparserstructured",
        "executecommand"
      ],
      "total_nodes": 60,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.if",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.html",
        "n8n-nodes-base.html",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.html",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.html",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.html",
        "n8n-nodes-base.html",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.outputparserstructured, executecommand, triggered via webhook",
      "complexity_score": 80
    },
    {
      "original_filename": "2285_workflow_2285.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2285_workflow_2285.json",
      "workflow_name": "2285_workflow_2285",
      "suggested_filename": "util_2285_workflow_2285_automate_splitinbatches_schedule_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "filter",
        "if",
        "stickyNote",
        "set",
        "scheduleTrigger",
        "splitOut",
        "code",
        "aggregate",
        "spotify"
      ],
      "primary_integrations": [
        "splitinbatches",
        "schedule",
        "spotify"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, schedule, spotify, triggered via cron",
      "complexity_score": 33
    },
    {
      "original_filename": "7_YouTube_to_Raindrop.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/7_YouTube_to_Raindrop.json",
      "workflow_name": "YouTube to Raindrop",
      "suggested_filename": "ai_youtube_ai_process_functionitem_manual_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "functionItem",
        "manualTrigger",
        "cron",
        "function",
        "raindrop",
        "youTube"
      ],
      "primary_integrations": [
        "functionitem",
        "manual",
        "cron"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.function",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.raindrop",
        "n8n-nodes-base.cron"
      ],
      "business_description": "AI workflow that ai_processs data/processes using functionitem, manual, cron, triggered via cron",
      "complexity_score": 12
    },
    {
      "original_filename": "qhZvZVCoV3HLjRkq_Google_Maps_FULL.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/qhZvZVCoV3HLjRkq_Google_Maps_FULL.json",
      "workflow_name": "Google Maps FULL",
      "suggested_filename": "ai_google_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.toolSerpApi",
        "aggregate",
        "googleSheets",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 17,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolSerpApi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "12_Create_Onfleet_tasks_from_Spreadsheets.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/12_Create_Onfleet_tasks_from_Spreadsheets.json",
      "workflow_name": "Create Onfleet tasks from Spreadsheets",
      "suggested_filename": "data_create_create_task_spreadsheetfile_onfleet.json",
      "category": "DATA",
      "business_function": "create_task",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "onfleet",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "onfleet",
        "readbinaryfile"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.onfleet",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.spreadsheetFile"
      ],
      "business_description": "DATA workflow that create_tasks data/processes using spreadsheetfile, onfleet, readbinaryfile, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2612_workflow_2612.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2612_workflow_2612.json",
      "workflow_name": "2612_workflow_2612",
      "suggested_filename": "ai_2612_workflow_2612_automate_n8nnodeslangchainchat_postgres.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "postgresTool",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "postgres",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.postgresTool",
        "n8n-nodes-base.postgresTool",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.postgresTool"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, postgres, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "ImiznkEUWCkKbg1w_CoinMarketCap_DEXScan_Agent_Tool.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ImiznkEUWCkKbg1w_CoinMarketCap_DEXScan_Agent_Tool.json",
      "workflow_name": "CoinMarketCap_DEXScan_Agent_Tool",
      "suggested_filename": "ai_coinmarketcap_dexscan_agent_tool_automate_n8nnodeslangchainmemorybufferwindow.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "1330_workflow_1330.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1330_workflow_1330.json",
      "workflow_name": "1330_workflow_1330",
      "suggested_filename": "util_1330_workflow_1330_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "httpRequest",
        "manualTrigger",
        "n8nTrainingCustomerDatastore"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "n8ntrainingcustomerdatastore"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.n8nTrainingCustomerDatastore",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, n8ntrainingcustomerdatastore, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "jzcvnlV8g6aseE4A_GitLab_MR_Auto-Review_&_Risk_Assessment.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/jzcvnlV8g6aseE4A_GitLab_MR_Auto-Review_&_Risk_Assessment.json",
      "workflow_name": "GitLab MR Auto-Review & Risk Assessment",
      "suggested_filename": "ai_gitlab_automate_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainoutp.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.outputParserAutofixing",
        "if",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "gmail",
        "httpRequest",
        "gitlabTrigger",
        "n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-langchain.agent",
        "code"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gitlabTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gitlabTrigger",
        "n8n-nodes-base.gitlabTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.outputparserstructured, gmail, triggered via manual",
      "complexity_score": 34
    },
    {
      "original_filename": "piapgd2e6zmzFxAq_HDW_Lead_Geländewagen.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/piapgd2e6zmzFxAq_HDW_Lead_Geländewagen.json",
      "workflow_name": "HDW Lead Geländewagen",
      "suggested_filename": "ai_lead_automate_n8nnodeslangchainmemorybufferwindow_splitinbatches_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "splitInBatches",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "wait",
        "scheduleTrigger",
        "sort",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "n8n-nodes-langchain.agent",
        "limit",
        "aggregate",
        "googleSheets",
        "manualTrigger",
        "code",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "splitinbatches",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 92,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-hdw.hdwLinkedin",
        "n8n-nodes-hdw.hdwLinkedin",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-hdw.hdwLinkedin",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-hdw.hdwLinkedin",
        "n8n-nodes-hdw.hdwLinkedin",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-hdw.hdwWebParserTool",
        "n8n-nodes-hdw.hdwWebParserTool",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.if",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-hdw.hdwLinkedinManagement",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-hdw.hdwLinkedinManagement",
        "n8n-nodes-hdw.hdwLinkedinManagement",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-hdw.hdwLinkedin",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, splitinbatches, n8n-nodes-langchain.outputparserstructured, triggered via cron",
      "complexity_score": 110
    },
    {
      "original_filename": "3_Daily_poems_in_Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3_Daily_poems_in_Telegram.json",
      "workflow_name": "Daily poems in Telegram",
      "suggested_filename": "ai_daily_ai_process_lingvanex_httprequest_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "lingvaNex",
        "httpRequest",
        "telegram",
        "cron"
      ],
      "primary_integrations": [
        "lingvanex",
        "httprequest",
        "telegram"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.lingvaNex"
      ],
      "business_description": "AI workflow that ai_processs data/processes using lingvanex, httprequest, telegram, triggered via cron",
      "complexity_score": 8
    },
    {
      "original_filename": "1049_workflow_1049.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1049_workflow_1049.json",
      "workflow_name": "1049_workflow_1049",
      "suggested_filename": "util_1049_workflow_1049_automate_googlebigquery_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "set",
        "googleBigQuery",
        "httpRequest",
        "cron"
      ],
      "primary_integrations": [
        "googlebigquery",
        "httprequest",
        "cron"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.googleBigQuery",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.cron"
      ],
      "business_description": "UTIL workflow that automates data/processes using googlebigquery, httprequest, cron, triggered via cron",
      "complexity_score": 8
    },
    {
      "original_filename": "aOP0D1cAqzGv7Xa8_spy_tool.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/aOP0D1cAqzGv7Xa8_spy_tool.json",
      "workflow_name": "spy tool",
      "suggested_filename": "ai_tool_automate_httprequest_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "code",
        "gmailTool",
        "formTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai",
        "n8n-nodes-langchain.agent"
      ],
      "total_nodes": 14,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, n8n-nodes-langchain.lmchatopenai, n8n-nodes-langchain.agent, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "2_Telegram_Weather_Workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2_Telegram_Weather_Workflow.json",
      "workflow_name": "Telegram Weather Workflow",
      "suggested_filename": "comm_telegram_automate_openweathermap_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "openWeatherMap",
        "telegramTrigger",
        "telegram"
      ],
      "primary_integrations": [
        "openweathermap",
        "telegram",
        "telegram"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.openWeatherMap",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "COMM workflow that automates data/processes using openweathermap, telegram, telegram, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "1497_workflow_1497.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1497_workflow_1497.json",
      "workflow_name": "1497_workflow_1497",
      "suggested_filename": "util_1497_workflow_1497_automate_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "function",
        "manualTrigger"
      ],
      "primary_integrations": [
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "511_Send_an_SMS_using_MSG91.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/511_Send_an_SMS_using_MSG91.json",
      "workflow_name": "Send an SMS using MSG91",
      "suggested_filename": "util_send_automate_manual_msg91.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "msg91"
      ],
      "primary_integrations": [
        "manual",
        "msg91"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.msg91"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, msg91, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Analyze feedback using AWS Comprehend and send it to a Mattermost channel.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Analyze feedback using AWS Comprehend and send it to a Mattermost channel.json",
      "workflow_name": "Analyze feedback using AWS Comprehend and send it to a Mattermost channel",
      "suggested_filename": "comm_analyze_analyze_awscomprehend_mattermost.json",
      "category": "COMM",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "noOp",
        "awsComprehend",
        "mattermost",
        "typeformTrigger"
      ],
      "primary_integrations": [
        "awscomprehend",
        "mattermost",
        "typeform"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.awsComprehend",
        "n8n-nodes-base.typeformTrigger"
      ],
      "business_description": "COMM workflow that analyzes data/processes using awscomprehend, mattermost, typeform, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "1960_workflow_1960.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1960_workflow_1960.json",
      "workflow_name": "1960_workflow_1960",
      "suggested_filename": "ai_1960_workflow_1960_automate_n8nnodeslangchainchat_n8nnodeslangchainembeddings.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "googleDrive",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.vectorStorePinecone",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.embeddingsopenai",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, n8n-nodes-langchain.embeddingsopenai, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "2106_workflow_2106.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2106_workflow_2106.json",
      "workflow_name": "2106_workflow_2106",
      "suggested_filename": "comm_2106_workflow_2106_automate_gmail_clearbit.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "filter",
        "if",
        "noOp",
        "stickyNote",
        "gmail",
        "set",
        "clearbit",
        "formTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "clearbit",
        "form"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.clearbit",
        "n8n-nodes-base.clearbit",
        "n8n-nodes-base.if",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.filter"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, clearbit, form, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "bh3H2b654RSYgIm9_Inverview_Scheduler.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/bh3H2b654RSYgIm9_Inverview_Scheduler.json",
      "workflow_name": "Inverview Scheduler",
      "suggested_filename": "ai_inverview_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainoutpu.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "if",
        "noOp",
        "stickyNote",
        "n8n-nodes-langchain.outputParserStructured",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "googleCalendar",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "code",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 25,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 39
    },
    {
      "original_filename": "3930_workflow_3930.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3930_workflow_3930.json",
      "workflow_name": "3930_workflow_3930",
      "suggested_filename": "ai_3930_workflow_3930_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "gmailTrigger",
        "if",
        "gmail",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegramTrigger",
        "telegram",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 24,
      "node_types": [
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, gmail, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "113_Standup_Bot_-_Override_Config.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/113_Standup_Bot_-_Override_Config.json",
      "workflow_name": "Standup Bot - Override Config",
      "suggested_filename": "util_standup_automate_writebinaryfile_movebinarydata.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "writeBinaryFile",
        "moveBinaryData",
        "manualTrigger"
      ],
      "primary_integrations": [
        "writebinaryfile",
        "movebinarydata",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.writeBinaryFile",
        "n8n-nodes-base.moveBinaryData"
      ],
      "business_description": "UTIL workflow that automates data/processes using writebinaryfile, movebinarydata, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "Store Notion_s Pages as Vector Documents into Supabase with OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Store Notion_s Pages as Vector Documents into Supabase with OpenAI.json",
      "workflow_name": "Store Notion's Pages as Vector Documents into Supabase with OpenAI",
      "suggested_filename": "ai_store_ai_process_n8nnodeslangchaintextsplittertokensplitter_n8nnodeslangchain.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-langchain.vectorStoreSupabase",
        "stickyNote",
        "notion",
        "notionTrigger",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "summarize",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.textsplittertokensplitter",
        "n8n-nodes-langchain.vectorstoresupabase",
        "notion"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.notionTrigger",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.summarize",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.textsplittertokensplitter, n8n-nodes-langchain.vectorstoresupabase, notion, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "84dT8cFL0FV8ZGPx_Slack_Webhook_-_Verify_Signature.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/84dT8cFL0FV8ZGPx_Slack_Webhook_-_Verify_Signature.json",
      "workflow_name": "Slack Webhook - Verify Signature",
      "suggested_filename": "util_slack_validate_crypto_stopanderror.json",
      "category": "UTIL",
      "business_function": "validate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "crypto",
        "if",
        "stickyNote",
        "set",
        "stopAndError",
        "code",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "crypto",
        "stopanderror",
        "executeworkflow"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that validates data/processes using crypto, stopanderror, executeworkflow, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "Obsidian Notes Read Aloud using AI_ Available as a Podcast Feed.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Obsidian Notes Read Aloud using AI_ Available as a Podcast Feed.json",
      "workflow_name": "Obsidian Notes Read Aloud: Available as a Podcast Feed",
      "suggested_filename": "ai_obsidian_ai_process_httprequest_webhook_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "code",
        "aggregate",
        "googleSheets",
        "n8n-nodes-langchain.openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "googlesheets"
      ],
      "total_nodes": 23,
      "node_types": [
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, webhook, googlesheets, triggered via webhook",
      "complexity_score": 33
    },
    {
      "original_filename": "2468_workflow_2468.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2468_workflow_2468.json",
      "workflow_name": "2468_workflow_2468",
      "suggested_filename": "ai_2468_workflow_2468_automate_slack_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.textClassifier",
        "scheduleTrigger",
        "jiraTool",
        "jira",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "aggregate",
        "n8n-nodes-langchain.sentimentAnalysis",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "notionTool"
      ],
      "primary_integrations": [
        "slack",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 36,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.set",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.sentimentAnalysis",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.jiraTool",
        "n8n-nodes-base.notionTool",
        "n8n-nodes-base.slack",
        "@n8n/n8n-nodes-langchain.textClassifier"
      ],
      "business_description": "AI workflow that automates data/processes using slack, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via cron",
      "complexity_score": 53
    },
    {
      "original_filename": "ikxQzs58WxtUjbuE_Entra_Contacts_to_Zammad_User_Sync.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ikxQzs58WxtUjbuE_Entra_Contacts_to_Zammad_User_Sync.json",
      "workflow_name": "Entra Contacts to Zammad User Sync",
      "suggested_filename": "data_entra_sync_httprequest_comparedatasets.json",
      "category": "DATA",
      "business_function": "sync",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "compareDatasets",
        "splitOut",
        "manualTrigger",
        "zammad"
      ],
      "primary_integrations": [
        "httprequest",
        "comparedatasets",
        "manual"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.zammad",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.zammad",
        "n8n-nodes-base.zammad",
        "n8n-nodes-base.zammad",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if"
      ],
      "business_description": "DATA workflow that syncs data/processes using httprequest, comparedatasets, manual, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "Vector Database as a Big Data Analysis Tool for AI Agents [2_2 KNN].json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Vector Database as a Big Data Analysis Tool for AI Agents [2_2 KNN].json",
      "workflow_name": "[2/2] KNN classifier (lands dataset)",
      "suggested_filename": "data_classifier_automate_httprequest_executeworkflow.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "code",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "executeworkflow"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, executeworkflow, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "1_Create_Nextcloud_Deck_card_from_email.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_Create_Nextcloud_Deck_card_from_email.json",
      "workflow_name": "Create Nextcloud Deck card from email",
      "suggested_filename": "ai_create_ai_process_httprequest_emailreadimap.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "function",
        "emailReadImap"
      ],
      "primary_integrations": [
        "httprequest",
        "emailreadimap"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.function",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, emailreadimap, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "13_Creating_an_Onfleet_Task_for_a_new_Shopify_Fulfillment.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/13_Creating_an_Onfleet_Task_for_a_new_Shopify_Fulfillment.json",
      "workflow_name": "Creating an Onfleet Task for a new Shopify Fulfillment",
      "suggested_filename": "ecommerce_creating_automate_onfleet_shopify.json",
      "category": "ECOMMERCE",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "onfleet",
        "shopifyTrigger"
      ],
      "primary_integrations": [
        "onfleet",
        "shopify"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.shopifyTrigger",
        "n8n-nodes-base.onfleet"
      ],
      "business_description": "ECOMMERCE workflow that automates data/processes using onfleet, shopify, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "mb2MU4xOaT3NrvqN_Automate_LinkedIn_Posts_with_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/mb2MU4xOaT3NrvqN_Automate_LinkedIn_Posts_with_AI.json",
      "workflow_name": "Automate LinkedIn Posts with AI",
      "suggested_filename": "ai_automate_ai_process_linkedin_httprequest_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "stickyNote",
        "linkedIn",
        "httpRequest",
        "notion",
        "scheduleTrigger",
        "aggregate",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "linkedin",
        "httprequest",
        "notion"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.linkedIn",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.notion"
      ],
      "business_description": "AI workflow that ai_processs data/processes using linkedin, httprequest, notion, triggered via cron",
      "complexity_score": 19
    },
    {
      "original_filename": "Turn Emails into AI-Enhanced Tasks in Notion (Multi-User Support) with Gmail, Airtable and Softr.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Turn Emails into AI-Enhanced Tasks in Notion (Multi-User Support) with Gmail, Airtable and Softr.json",
      "workflow_name": "mails2notion V2",
      "suggested_filename": "ai_mails2notion_ai_process_n8nnodeslangchaincalculator_n8nnodeslangchainoutputpa.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-langchain.outputParserStructured",
        "gmailTrigger",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "noOp",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "airtable",
        "code",
        "n8n-nodes-langchain.agent",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.calculator",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 38,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.calculator, n8n-nodes-langchain.outputparserstructured, gmail, triggered via manual",
      "complexity_score": 52
    },
    {
      "original_filename": "2421_workflow_2421.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2421_workflow_2421.json",
      "workflow_name": "2421_workflow_2421",
      "suggested_filename": "ai_2421_workflow_2421_automate_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "httpRequest",
        "sort",
        "code",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "manualTrigger",
        "googleDrive",
        "aggregate",
        "n8n-nodes-langchain.informationExtractor",
        "compression",
        "editImage"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "sort"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.compression",
        "n8n-nodes-base.code",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, httprequest, sort, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "fqaNojXWrspqjfkY_RAG_Workflow_For_Stock_Earnings_Report_Analysis.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/fqaNojXWrspqjfkY_RAG_Workflow_For_Stock_Earnings_Report_Analysis.json",
      "workflow_name": "RAG Workflow For Stock Earnings Report Analysis",
      "suggested_filename": "ai_stock_report_splitinbatches_n8nnodeslangchainvectorstore.json",
      "category": "AI",
      "business_function": "report",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.toolVectorStore",
        "googleDocs",
        "stickyNote",
        "n8n-nodes-langchain.embeddingsGoogleGemini",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "googleDrive",
        "googleSheets",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.vectorStorePinecone",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.vectorstore",
        "googledocs"
      ],
      "total_nodes": 18,
      "node_types": [
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "n8n-nodes-base.googleDocs",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that reports data/processes using splitinbatches, n8n-nodes-langchain.vectorstore, googledocs, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "158_Receive_the_weather_information_of_any_city.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/158_Receive_the_weather_information_of_any_city.json",
      "workflow_name": "Receive the weather information of any city",
      "suggested_filename": "util_receive_automate_openweathermap_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "openWeatherMap",
        "webhook",
        "set"
      ],
      "primary_integrations": [
        "openweathermap",
        "webhook"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.openWeatherMap",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using openweathermap, webhook, triggered via webhook",
      "complexity_score": 6
    },
    {
      "original_filename": "547_workflow_547.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/547_workflow_547.json",
      "workflow_name": "547_workflow_547",
      "suggested_filename": "ecommerce_547_workflow_547_automate_shopify.json",
      "category": "ECOMMERCE",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "shopifyTrigger"
      ],
      "primary_integrations": [
        "shopify"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.shopifyTrigger"
      ],
      "business_description": "ECOMMERCE workflow that automates data/processes using shopify, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "184_Send_updates_about_the_position_of_the_ISS_every_minute_to_a_topic_in_RabbitMQ.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/184_Send_updates_about_the_position_of_the_ISS_every_minute_to_a_topic_in_RabbitMQ.json",
      "workflow_name": "Send updates about the position of the ISS every minute to a topic in RabbitMQ",
      "suggested_filename": "util_send_update_rabbitmq_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "update",
      "trigger_type": "cron",
      "integrations": [
        "set",
        "rabbitmq",
        "httpRequest",
        "cron"
      ],
      "primary_integrations": [
        "rabbitmq",
        "httprequest",
        "cron"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.rabbitmq",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.cron"
      ],
      "business_description": "UTIL workflow that updates data/processes using rabbitmq, httprequest, cron, triggered via cron",
      "complexity_score": 8
    },
    {
      "original_filename": "3_Clockify_to_Syncro.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3_Clockify_to_Syncro.json",
      "workflow_name": "Clockify to Syncro",
      "suggested_filename": "data_clockify_sync_httprequest_webhook_webhook.json",
      "category": "DATA",
      "business_function": "sync",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "noOp",
        "set",
        "httpRequest",
        "webhook",
        "googleSheets",
        "function"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "googlesheets"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.function",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "DATA workflow that syncs data/processes using httprequest, webhook, googlesheets, triggered via webhook",
      "complexity_score": 20
    },
    {
      "original_filename": "3032_workflow_3032.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3032_workflow_3032.json",
      "workflow_name": "3032_workflow_3032",
      "suggested_filename": "data_3032_workflow_3032_automate_splitinbatches_gong.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "merge",
        "noOp",
        "stickyNote",
        "gong",
        "set",
        "compareDatasets",
        "notion",
        "splitOut",
        "manualTrigger",
        "aggregate",
        "googleSheets",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "gong",
        "comparedatasets"
      ],
      "total_nodes": 26,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.gong",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.set",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "DATA workflow that automates data/processes using splitinbatches, gong, comparedatasets, triggered via manual",
      "complexity_score": 40
    },
    {
      "original_filename": "3979_workflow_3979.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3979_workflow_3979.json",
      "workflow_name": "3979_workflow_3979",
      "suggested_filename": "comm_3979_workflow_3979_automate_supabase_itemlists_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "supabase",
        "merge",
        "itemLists",
        "if",
        "gmail",
        "set",
        "stickyNote",
        "webhook",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "supabase",
        "itemlists",
        "gmail"
      ],
      "total_nodes": 51,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.code",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.if",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.if"
      ],
      "business_description": "COMM workflow that automates data/processes using supabase, itemlists, gmail, triggered via webhook",
      "complexity_score": 61
    },
    {
      "original_filename": "2443_workflow_2443.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2443_workflow_2443.json",
      "workflow_name": "2443_workflow_2443",
      "suggested_filename": "util_2443_workflow_2443_automate_httprequest_schedule_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@horka.tv/n8n-nodes-storage-kv.keyValueStorage",
        "@horka.tv/n8n-nodes-storage-kv.keyValueStorage",
        "@horka.tv/n8n-nodes-storage-kv.keyValueStorage",
        "@horka.tv/n8n-nodes-storage-kv.keyValueStorage",
        "n8n-nodes-base.if"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, schedule, triggered via cron",
      "complexity_score": 25
    },
    {
      "original_filename": "2335_workflow_2335.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2335_workflow_2335.json",
      "workflow_name": "2335_workflow_2335",
      "suggested_filename": "util_2335_workflow_2335_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangc.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "switch",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatMistralCloud",
        "httpRequest",
        "n8n-nodes-langchain.retrieverVectorStore",
        "readWriteFile",
        "manualTrigger",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "localFileTrigger",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.embeddingsMistralCloud",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.lmchatmistralcloud"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.localFileTrigger",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.readWriteFile",
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant"
      ],
      "business_description": "UTIL workflow that automates data/processes using n8n-nodes-langchain.chainretrievalqa, n8n-nodes-langchain.chat, n8n-nodes-langchain.lmchatmistralcloud, triggered via manual",
      "complexity_score": 45
    },
    {
      "original_filename": "ZdGZh4qmOqTQe1oq_MONDAY_GET_FULL_ITEM.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ZdGZh4qmOqTQe1oq_MONDAY_GET_FULL_ITEM.json",
      "workflow_name": "MONDAY GET FULL ITEM",
      "suggested_filename": "util_monday_read_mondaycom_executeworkflow.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "splitOut",
        "code",
        "aggregate",
        "mondayCom",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "mondaycom",
        "executeworkflow",
        "executeworkflow"
      ],
      "total_nodes": 26,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.mondayCom",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.mondayCom",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.code",
        "n8n-nodes-base.mondayCom",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that reads data/processes using mondaycom, executeworkflow, executeworkflow, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "U9RofpXSIIUg12f9_AI_Social_Media_Publisher_from_WordPress.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/U9RofpXSIIUg12f9_AI_Social_Media_Publisher_from_WordPress.json",
      "workflow_name": "AI Social Media Publisher from WordPress",
      "suggested_filename": "ai_social_ai_process_wordpress_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "wordpress",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "linkedIn",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "manualTrigger",
        "facebookGraphApi",
        "googleSheets",
        "n8n-nodes-langchain.openAi",
        "twitter"
      ],
      "primary_integrations": [
        "wordpress",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.linkedIn",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using wordpress, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "OpenAI assistant with custom tools.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/OpenAI assistant with custom tools.json",
      "workflow_name": "OpenAI Assistant with custom n8n tools",
      "suggested_filename": "ai_openai_ai_process_n8nnodeslangchainopenaiassistant_n8nnodeslangchainmanualcha.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.openAiAssistant",
        "set",
        "n8n-nodes-langchain.manualChatTrigger",
        "n8n-nodes-langchain.toolCode",
        "n8n-nodes-langchain.toolWorkflow",
        "code",
        "summarize",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.openaiassistant",
        "n8n-nodes-langchain.manualchat",
        "n8n-nodes-langchain.code"
      ],
      "total_nodes": 14,
      "node_types": [
        "@n8n/n8n-nodes-langchain.manualChatTrigger",
        "@n8n/n8n-nodes-langchain.openAiAssistant",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolCode"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.openaiassistant, n8n-nodes-langchain.manualchat, n8n-nodes-langchain.code, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "3050_workflow_3050.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3050_workflow_3050.json",
      "workflow_name": "3050_workflow_3050",
      "suggested_filename": "ai_3050_workflow_3050_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolCalculator",
        "googleSheetsTool",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "code",
        "aggregate",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.calculator",
        "googlesheets"
      ],
      "total_nodes": 30,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-base.code",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheetsTool",
        "n8n-nodes-base.googleSheetsTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.googleSheetsTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.calculator, googlesheets, triggered via manual",
      "complexity_score": 43
    },
    {
      "original_filename": "7wwY8wfZdNpL83QQ_LinkedIn_Leads_Scraping_&_Enrichment_(Main).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/7wwY8wfZdNpL83QQ_LinkedIn_Leads_Scraping_&_Enrichment_(Main).json",
      "workflow_name": "LinkedIn Leads Scraping & Enrichment (Main)",
      "suggested_filename": "ai_linkedin_ai_process_httprequest_schedule_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "code",
        "googleSheets",
        "n8n-nodes-langchain.openAi",
        "googleSheetsTrigger",
        "formTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "googlesheets"
      ],
      "total_nodes": 66,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleSheetsTrigger",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, schedule, googlesheets, triggered via cron",
      "complexity_score": 78
    },
    {
      "original_filename": "2758_workflow_2758.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2758_workflow_2758.json",
      "workflow_name": "2758_workflow_2758",
      "suggested_filename": "ai_2758_workflow_2758_automate_googlesheets_httprequest_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "googleSheetsTool",
        "stickyNote",
        "set",
        "httpRequest",
        "microsoftOutlook",
        "googleDocsTool",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "code"
      ],
      "primary_integrations": [
        "googlesheets",
        "httprequest",
        "microsoftoutlook"
      ],
      "total_nodes": 27,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.googleSheetsTool",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleDocsTool",
        "n8n-nodes-base.googleDocsTool",
        "n8n-nodes-base.googleSheetsTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "AI workflow that automates data/processes using googlesheets, httprequest, microsoftoutlook, triggered via webhook",
      "complexity_score": 38
    },
    {
      "original_filename": "AI-Powered Email Automation for Business_ Summarize & Respond with RAG.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI-Powered Email Automation for Business_ Summarize & Respond with RAG.json",
      "workflow_name": "Email AI Auto-responder. Summerize and send email",
      "suggested_filename": "ai_email_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchaintextsplittertoken.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "noOp",
        "stickyNote",
        "emailSend",
        "n8n-nodes-langchain.textClassifier",
        "n8n-nodes-langchain.chainSummarization",
        "httpRequest",
        "markdown",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "googleDrive",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "emailReadImap"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.textsplittertokensplitter",
        "emailsend"
      ],
      "total_nodes": 26,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.markdown",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.emailSend",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.textsplittertokensplitter, emailsend, triggered via manual",
      "complexity_score": 43
    },
    {
      "original_filename": "LMMle9xFHQxXUWQy_Airtable_markdown_to_html.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/LMMle9xFHQxXUWQy_Airtable_markdown_to_html.json",
      "workflow_name": "Airtable markdown to html",
      "suggested_filename": "ai_airtable_ai_process_markdown_webhook_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "markdown",
        "webhook",
        "airtable"
      ],
      "primary_integrations": [
        "markdown",
        "webhook",
        "airtable"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using markdown, webhook, airtable, triggered via webhook",
      "complexity_score": 14
    },
    {
      "original_filename": "bhWsUxipJ9wuTA5K_n8n_workflow_deployer.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/bhWsUxipJ9wuTA5K_n8n_workflow_deployer.json",
      "workflow_name": "n8n workflow deployer",
      "suggested_filename": "ops_deployer_automate_httprequest_manual.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "extractFromFile",
        "code",
        "googleDrive",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "extractfromfile"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleDriveTrigger"
      ],
      "business_description": "OPS workflow that automates data/processes using httprequest, manual, extractfromfile, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "3476_workflow_3476.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3476_workflow_3476.json",
      "workflow_name": "3476_workflow_3476",
      "suggested_filename": "data_3476_workflow_3476_automate_googlesheets_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "code",
        "manualTrigger",
        "airtop"
      ],
      "primary_integrations": [
        "googlesheets",
        "manual",
        "airtop"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, manual, airtop, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "510_workflow_510.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/510_workflow_510.json",
      "workflow_name": "510_workflow_510",
      "suggested_filename": "util_510_workflow_510_automate_awslambda_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "awsLambda",
        "manualTrigger"
      ],
      "primary_integrations": [
        "awslambda",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.awsLambda"
      ],
      "business_description": "UTIL workflow that automates data/processes using awslambda, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "1282_workflow_1282.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1282_workflow_1282.json",
      "workflow_name": "1282_workflow_1282",
      "suggested_filename": "util_1282_workflow_1282_automate_awstextract_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "awsTextract",
        "manualTrigger",
        "awsS3"
      ],
      "primary_integrations": [
        "awstextract",
        "manual",
        "awss3"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.awsTextract",
        "n8n-nodes-base.awsS3"
      ],
      "business_description": "UTIL workflow that automates data/processes using awstextract, manual, awss3, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2771_workflow_2771.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2771_workflow_2771.json",
      "workflow_name": "2771_workflow_2771",
      "suggested_filename": "ai_2771_workflow_2771_automate_splitinbatches_n8nnodeslangchainchainllm_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.chainLlm",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "extractFromFile",
        "code",
        "switch",
        "airtable",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chainllm",
        "httprequest"
      ],
      "total_nodes": 51,
      "node_types": [
        "n8n-nodes-base.switch",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.chainllm, httprequest, triggered via webhook",
      "complexity_score": 65
    },
    {
      "original_filename": "546_workflow_546.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/546_workflow_546.json",
      "workflow_name": "546_workflow_546",
      "suggested_filename": "content_546_workflow_546_automate_wordpress_manual.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wordpress",
        "manualTrigger"
      ],
      "primary_integrations": [
        "wordpress",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.wordpress"
      ],
      "business_description": "CONTENT workflow that automates data/processes using wordpress, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "1253_workflow_1253.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1253_workflow_1253.json",
      "workflow_name": "1253_workflow_1253",
      "suggested_filename": "data_1253_workflow_1253_automate_airtable_netlify.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "airtable",
        "set",
        "netlifyTrigger"
      ],
      "primary_integrations": [
        "airtable",
        "netlify"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.netlifyTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable"
      ],
      "business_description": "DATA workflow that automates data/processes using airtable, netlify, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "43gMd18arOcxqDcC_LLM_Chaining_examples.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/43gMd18arOcxqDcC_LLM_Chaining_examples.json",
      "workflow_name": "LLM Chaining examples",
      "suggested_filename": "ai_chaining_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchai.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "markdown",
        "n8n-nodes-langchain.memoryManager",
        "n8n-nodes-langchain.lmChatAnthropic",
        "manualTrigger",
        "splitOut",
        "webhook",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chainllm",
        "httprequest"
      ],
      "total_nodes": 38,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.memoryManager",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chainllm, httprequest, triggered via webhook",
      "complexity_score": 52
    },
    {
      "original_filename": "920_workflow_920.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/920_workflow_920.json",
      "workflow_name": "920_workflow_920",
      "suggested_filename": "util_920_workflow_920_automate_manual_securityscorecard.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "securityScorecard"
      ],
      "primary_integrations": [
        "manual",
        "securityscorecard"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.securityScorecard",
        "n8n-nodes-base.securityScorecard",
        "n8n-nodes-base.securityScorecard"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, securityscorecard, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "pPtCy6qPfEv1qNRn_[1_3_-_anomaly_detection]_[1_2_-_KNN_classification]_Batch_upload_dataset_to_Qdrant_(crops_dataset).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/pPtCy6qPfEv1qNRn_[1_3_-_anomaly_detection]_[1_2_-_KNN_classification]_Batch_upload_dataset_to_Qdrant_(crops_dataset).json",
      "workflow_name": "[1/3 - anomaly detection] [1/2 - KNN classification] Batch upload dataset to Qdrant (crops dataset)",
      "suggested_filename": "data_anomaly_automate_httprequest_googlecloudstorage.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "googleCloudStorage",
        "manualTrigger",
        "code",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "googlecloudstorage",
        "manual"
      ],
      "total_nodes": 25,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleCloudStorage",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, googlecloudstorage, manual, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "989_workflow_989.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/989_workflow_989.json",
      "workflow_name": "989_workflow_989",
      "suggested_filename": "util_989_workflow_989_automate_typeform_apitemplateio.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "typeformTrigger",
        "apiTemplateIo"
      ],
      "primary_integrations": [
        "typeform",
        "apitemplateio"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.apiTemplateIo"
      ],
      "business_description": "UTIL workflow that automates data/processes using typeform, apitemplateio, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Daily meetings summarization with Gemini AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Daily meetings summarization with Gemini AI.json",
      "workflow_name": "Daily meetings summarization with Gemini AI",
      "suggested_filename": "ai_daily_ai_process_slack_googlecalendar_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "stickyNote",
        "googleCalendarTool",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "slack",
        "googlecalendar",
        "schedule"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.googleCalendarTool",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini"
      ],
      "business_description": "AI workflow that ai_processs data/processes using slack, googlecalendar, schedule, triggered via cron",
      "complexity_score": 15
    },
    {
      "original_filename": "91_Create_a_new_user_in_Intercom.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/91_Create_a_new_user_in_Intercom.json",
      "workflow_name": "Create a new user in Intercom",
      "suggested_filename": "util_create_create_contact_manual_intercom.json",
      "category": "UTIL",
      "business_function": "create_contact",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "intercom"
      ],
      "primary_integrations": [
        "manual",
        "intercom"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.intercom"
      ],
      "business_description": "UTIL workflow that create_contacts data/processes using manual, intercom, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "58_Receive_updates_from_Telegram_and_send_an_image_of_a_cocktail.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/58_Receive_updates_from_Telegram_and_send_an_image_of_a_cocktail.json",
      "workflow_name": "Receive updates from Telegram and send an image of a cocktail",
      "suggested_filename": "ai_receive_ai_process_httprequest_telegram.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "telegramTrigger",
        "telegram"
      ],
      "primary_integrations": [
        "httprequest",
        "telegram",
        "telegram"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, telegram, telegram, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "1828_workflow_1828.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1828_workflow_1828.json",
      "workflow_name": "1828_workflow_1828",
      "suggested_filename": "util_1828_workflow_1828_automate_mautic_calendly.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "mautic",
        "stickyNote",
        "calendlyTrigger"
      ],
      "primary_integrations": [
        "mautic",
        "calendly"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.calendlyTrigger",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using mautic, calendly, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "164_Create_a_channel,_invite_users_to_the_channel,_post_a_message,_and_upload_a_file.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/164_Create_a_channel,_invite_users_to_the_channel,_post_a_message,_and_upload_a_file.json",
      "workflow_name": "Create a channel, invite users to the channel, post a message, and upload a file",
      "suggested_filename": "comm_create_create_contact_slack_httprequest.json",
      "category": "COMM",
      "business_function": "create_contact",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "slack",
        "httprequest",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that create_contacts data/processes using slack, httprequest, manual, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "615_workflow_615.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/615_workflow_615.json",
      "workflow_name": "615_workflow_615",
      "suggested_filename": "util_615_workflow_615_automate_httprequest_dropbox.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "dropbox",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "dropbox",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.dropbox"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, dropbox, manual, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "3052_workflow_3052.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3052_workflow_3052.json",
      "workflow_name": "3052_workflow_3052",
      "suggested_filename": "ai_3052_workflow_3052_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "switch",
        "todoist",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "telegram"
      ],
      "total_nodes": 13,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, telegram, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "1_Google_Cal_to_Zoom_meeting.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_Google_Cal_to_Zoom_meeting.json",
      "workflow_name": "Google Cal to Zoom meeting",
      "suggested_filename": "util_google_automate_datetime_googlecalendar_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "dateTime",
        "googleCalendar",
        "manualTrigger",
        "cron",
        "zoom"
      ],
      "primary_integrations": [
        "datetime",
        "googlecalendar",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.zoom",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.if",
        "n8n-nodes-base.cron"
      ],
      "business_description": "UTIL workflow that automates data/processes using datetime, googlecalendar, manual, triggered via cron",
      "complexity_score": 12
    },
    {
      "original_filename": "Sentiment Analysis Tracking on Support Issues with Linear and Slack (1).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Sentiment Analysis Tracking on Support Issues with Linear and Slack (1).json",
      "workflow_name": "Sentiment Analysis Tracking on Support Issues with Linear and Slack (1)",
      "suggested_filename": "ai_sentiment_analyze_splitinbatches_removeduplicates_cron.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "removeDuplicates",
        "slack",
        "stickyNote",
        "set",
        "graphql",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "splitOut",
        "airtable",
        "switch",
        "airtableTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "removeduplicates",
        "slack"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtableTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that analyzes data/processes using splitinbatches, removeduplicates, slack, triggered via cron",
      "complexity_score": 32
    },
    {
      "original_filename": "2441_workflow_2441.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2441_workflow_2441.json",
      "workflow_name": "2441_workflow_2441",
      "suggested_filename": "ai_2441_workflow_2441_automate_httprequest_n8nnodeslangchainopenai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "n8n-nodes-langchain.openAi",
        "emailReadImap",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.openai",
        "emailreadimap"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, n8n-nodes-langchain.openai, emailreadimap, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "[CENSORED]_(G)_LineChatBot_+_Google_Sheets_(as_a_memory).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/[CENSORED]_(G)_LineChatBot_+_Google_Sheets_(as_a_memory).json",
      "workflow_name": "(G) LineChatBot + Google Sheets (as a memory)",
      "suggested_filename": "ai_linechatbot_automate_httprequest_webhook_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "n8n-nodes-langchain.lmchatgooglegemini"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, webhook, n8n-nodes-langchain.lmchatgooglegemini, triggered via webhook",
      "complexity_score": 25
    },
    {
      "original_filename": "119_workflow_119.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/119_workflow_119.json",
      "workflow_name": "119_workflow_119",
      "suggested_filename": "util_119_workflow_119_automate_webhook_xml_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "set",
        "webhook",
        "xml",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "xml",
        "respondtowebhook"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.xml",
        "n8n-nodes-base.set",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, xml, respondtowebhook, triggered via webhook",
      "complexity_score": 8
    },
    {
      "original_filename": "2688_workflow_2688.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2688_workflow_2688.json",
      "workflow_name": "2688_workflow_2688",
      "suggested_filename": "ai_2688_workflow_2688_automate_n8nnodeslangchainchainllm_httprequest_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "telegram",
        "code",
        "aggregate",
        "html"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 13,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, httprequest, schedule, triggered via cron",
      "complexity_score": 24
    },
    {
      "original_filename": "RtTHLr1SAwIpntKr_Push_Multiple_Files_to_Github_Repo_via_Github_REST_API.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/RtTHLr1SAwIpntKr_Push_Multiple_Files_to_Github_Repo_via_Github_REST_API.json",
      "workflow_name": "Push Multiple Files to Github Repo via Github REST API",
      "suggested_filename": "util_push_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "81_Execute_a_command_that_gives_the_hard_disk_memory_used_on_the_host_machine.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/81_Execute_a_command_that_gives_the_hard_disk_memory_used_on_the_host_machine.json",
      "workflow_name": "Execute a command that gives the hard disk memory used on the host machine",
      "suggested_filename": "util_execute_automate_executecommand_cron_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "noOp",
        "executeCommand",
        "cron",
        "twilio"
      ],
      "primary_integrations": [
        "executecommand",
        "cron",
        "twilio"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.if",
        "n8n-nodes-base.twilio",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "UTIL workflow that automates data/processes using executecommand, cron, twilio, triggered via cron",
      "complexity_score": 10
    },
    {
      "original_filename": "TS1wT16JCcy1Dt9Q_Airtop_Web_Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/TS1wT16JCcy1Dt9Q_Airtop_Web_Agent.json",
      "workflow_name": "Airtop Web Agent",
      "suggested_filename": "ai_airtop_ai_process_slack_n8nnodeslangchainoutputparserstructured.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "airtop",
        "airtopTool",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.lmChatAnthropic",
        "executeWorkflowTrigger",
        "formTrigger"
      ],
      "primary_integrations": [
        "slack",
        "n8n-nodes-langchain.outputparserstructured",
        "airtop"
      ],
      "total_nodes": 19,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.airtopTool",
        "n8n-nodes-base.airtopTool",
        "n8n-nodes-base.airtopTool",
        "n8n-nodes-base.airtopTool",
        "n8n-nodes-base.airtopTool",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.slack"
      ],
      "business_description": "AI workflow that ai_processs data/processes using slack, n8n-nodes-langchain.outputparserstructured, airtop, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "13_workflow_13.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/13_workflow_13.json",
      "workflow_name": "13_workflow_13",
      "suggested_filename": "util_13_workflow_13_automate_httprequest_xml.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "httpRequest",
        "xml",
        "dropbox"
      ],
      "primary_integrations": [
        "httprequest",
        "xml",
        "dropbox"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.xml",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.xml"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, xml, dropbox, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "3808_AccountCraft_WhatsApp_Automation_-_Infridet.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3808_AccountCraft_WhatsApp_Automation_-_Infridet.json",
      "workflow_name": "AccountCraft WhatsApp Automation - Infridet",
      "suggested_filename": "data_accountcraft_automate_googlesheets_emailsend_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "googleSheets",
        "emailSend",
        "webhook",
        "httpRequest"
      ],
      "primary_integrations": [
        "googlesheets",
        "emailsend",
        "webhook"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, emailsend, webhook, triggered via webhook",
      "complexity_score": 10
    },
    {
      "original_filename": "2287_workflow_2287.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2287_workflow_2287.json",
      "workflow_name": "2287_workflow_2287",
      "suggested_filename": "ai_2287_workflow_2287_automate_slack_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "slack",
        "n8n-nodes-langchain.chainLlm",
        "lemlist",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "lemlistTrigger",
        "httpRequest",
        "markdown",
        "n8n-nodes-langchain.lmChatOpenAi",
        "switch"
      ],
      "primary_integrations": [
        "slack",
        "n8n-nodes-langchain.chainllm",
        "lemlist"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.lemlistTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.lemlist",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using slack, n8n-nodes-langchain.chainllm, lemlist, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "1949_workflow_1949.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1949_workflow_1949.json",
      "workflow_name": "1949_workflow_1949",
      "suggested_filename": "data_1949_workflow_1949_automate_itemlists_xml.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "itemLists",
        "stickyNote",
        "set",
        "xml",
        "manualTrigger",
        "writeBinaryFile",
        "moveBinaryData",
        "mySql"
      ],
      "primary_integrations": [
        "itemlists",
        "xml",
        "manual"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.set",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.set",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.writeBinaryFile"
      ],
      "business_description": "DATA workflow that automates data/processes using itemlists, xml, manual, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "cGNK44mkCzIh4113_My_workflow_3.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/cGNK44mkCzIh4113_My_workflow_3.json",
      "workflow_name": "My workflow 3",
      "suggested_filename": "ai_automate_n8nnodeslangchainchainretrievalqa_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "httpRequest",
        "n8n-nodes-langchain.informationExtractor",
        "aggregate",
        "convertToFile",
        "n8n-nodes-langchain.embeddingsMistralCloud",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "splitInBatches",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.retrieverVectorStore",
        "if",
        "gmail",
        "stickyNote",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.vectorStorePinecone",
        "markdown",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "code",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "httprequest",
        "n8n-nodes-langchain.informationextractor"
      ],
      "total_nodes": 36,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.if",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.code",
        "n8n-nodes-base.convertToFile",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.convertToFile",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainretrievalqa, httprequest, n8n-nodes-langchain.informationextractor, triggered via manual",
      "complexity_score": 56
    },
    {
      "original_filename": "2234_workflow_2234.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2234_workflow_2234.json",
      "workflow_name": "2234_workflow_2234",
      "suggested_filename": "ai_2234_workflow_2234_automate_n8nnodeslangchainchainsummarization_schedule_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chainSummarization",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.openAi",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainsummarization",
        "schedule",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 15,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.chainSummarization"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainsummarization, schedule, n8n-nodes-langchain.lmchatopenai, triggered via cron",
      "complexity_score": 22
    },
    {
      "original_filename": "2610_workflow_2610.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2610_workflow_2610.json",
      "workflow_name": "2610_workflow_2610",
      "suggested_filename": "biz_2610_workflow_2610_automate_splitinbatches_postgres_cron.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "postgres",
        "hubspot",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "postgres",
        "hubspot"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.if",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "BIZ workflow that automates data/processes using splitinbatches, postgres, hubspot, triggered via cron",
      "complexity_score": 34
    },
    {
      "original_filename": "AvCMhDoSUAYXsrQX_Automate_Event_Creation_in_Google_Calendar_from_Google_Sheets.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AvCMhDoSUAYXsrQX_Automate_Event_Creation_in_Google_Calendar_from_Google_Sheets.json",
      "workflow_name": "Automate Event Creation in Google Calendar from Google Sheets",
      "suggested_filename": "data_automate_automate_googlecalendar_googlesheets.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "googleCalendar",
        "googleSheetsTrigger",
        "code"
      ],
      "primary_integrations": [
        "googlecalendar",
        "googlesheets"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.googleCalendar"
      ],
      "business_description": "DATA workflow that automates data/processes using googlecalendar, googlesheets, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "Nvn78tMRNnKji7Fg_Very_simple_Human_in_the_loop_system_email_with_AI_e_IMAP.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Nvn78tMRNnKji7Fg_Very_simple_Human_in_the_loop_system_email_with_AI_e_IMAP.json",
      "workflow_name": "Very simple Human in the loop system email with AI e IMAP",
      "suggested_filename": "ai_very_ai_process_emailsend_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "emailSend",
        "set",
        "n8n-nodes-langchain.chainSummarization",
        "markdown",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "emailReadImap"
      ],
      "primary_integrations": [
        "emailsend",
        "n8n-nodes-langchain.chainsummarization",
        "markdown"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.emailSend",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.emailSend",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if"
      ],
      "business_description": "AI workflow that ai_processs data/processes using emailsend, n8n-nodes-langchain.chainsummarization, markdown, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "1381_workflow_1381.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1381_workflow_1381.json",
      "workflow_name": "1381_workflow_1381",
      "suggested_filename": "comm_1381_workflow_1381_automate_httprequest_functionitem_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "httpRequest",
        "functionItem",
        "webhook",
        "telegram"
      ],
      "primary_integrations": [
        "httprequest",
        "functionitem",
        "webhook"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, functionitem, webhook, triggered via webhook",
      "complexity_score": 13
    },
    {
      "original_filename": "A4hqQNFLymCRKnYK_Discord_Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/A4hqQNFLymCRKnYK_Discord_Agent.json",
      "workflow_name": "Discord Agent",
      "suggested_filename": "ai_discord_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "discordTool",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.discordTool",
        "n8n-nodes-base.discordTool",
        "n8n-nodes-base.discordTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "33_Postgres_Data_Ingestion.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/33_Postgres_Data_Ingestion.json",
      "workflow_name": "Postgres Data Ingestion",
      "suggested_filename": "data_postgres_automate_postgres_cron_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "postgres",
        "function",
        "cron"
      ],
      "primary_integrations": [
        "postgres",
        "cron"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.function",
        "n8n-nodes-base.postgres"
      ],
      "business_description": "DATA workflow that automates data/processes using postgres, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "4nBQyhwqDqmXY2AL_Automated_Image_Metadata_Tagging_(Community_Node).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/4nBQyhwqDqmXY2AL_Automated_Image_Metadata_Tagging_(Community_Node).json",
      "workflow_name": "Automated Image Metadata Tagging (Community Node)",
      "suggested_filename": "ai_automated_automate_googledrive_n8nnodeslangchainopenai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "googleDrive",
        "n8n-nodes-langchain.openAi",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "googledrive",
        "n8n-nodes-langchain.openai",
        "googledrive"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.merge",
        "n8n-nodes-exif-data.exifData",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using googledrive, n8n-nodes-langchain.openai, googledrive, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "Query n8n Credentials with AI SQL Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Query n8n Credentials with AI SQL Agent.json",
      "workflow_name": "Query n8n Credentials with AI SQL Agent",
      "suggested_filename": "ai_query_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.toolCode",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "code",
        "n8n-nodes-langchain.agent",
        "n8n"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.code"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.toolCode",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.n8n"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.code, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "Conversational Interviews with AI Agents and n8n Forms.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Conversational Interviews with AI Agents and n8n Forms.json",
      "workflow_name": "Conversational Interviews with AI Agents and n8n Forms",
      "suggested_filename": "ai_conversational_ai_process_n8nnodeslangchainmemorybufferwindow_respondtowebhoo.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "respondToWebhook",
        "crypto",
        "if",
        "stickyNote",
        "set",
        "form",
        "n8n-nodes-langchain.memoryManager",
        "webhook",
        "splitOut",
        "n8n-nodes-langchain.agent",
        "googleSheets",
        "html",
        "n8n-nodes-langchain.lmChatGroq",
        "redis",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "respondtowebhook",
        "crypto"
      ],
      "total_nodes": 40,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.memoryManager",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.form",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.set",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.if",
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.form",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.html",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatGroq",
        "n8n-nodes-base.html",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, respondtowebhook, crypto, triggered via webhook",
      "complexity_score": 56
    },
    {
      "original_filename": "1962_workflow_1962.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1962_workflow_1962.json",
      "workflow_name": "1962_workflow_1962",
      "suggested_filename": "ai_1962_workflow_1962_automate_n8nnodeslangchaintextsplittertokensplitter_n8nnod.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "googleDrive",
        "n8n-nodes-langchain.documentDefaultDataLoader"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.textsplittertokensplitter",
        "n8n-nodes-langchain.chainsummarization",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.chainSummarization"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.textsplittertokensplitter, n8n-nodes-langchain.chainsummarization, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "92_Sending_an_SMS_using_sms77.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/92_Sending_an_SMS_using_sms77.json",
      "workflow_name": "Sending an SMS using sms77",
      "suggested_filename": "comm_sending_automate_manual_sms77.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "sms77"
      ],
      "primary_integrations": [
        "manual",
        "sms77"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.sms77"
      ],
      "business_description": "COMM workflow that automates data/processes using manual, sms77, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Reconcile Rent Payments with Local Excel Spreadsheet and OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Reconcile Rent Payments with Local Excel Spreadsheet and OpenAI.json",
      "workflow_name": "Reconcile Rent Payments with Local Excel Spreadsheet and OpenAI",
      "suggested_filename": "ai_reconcile_ai_process_n8nnodeslangchainoutputparserstructured_readwritefile.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "readWriteFile",
        "n8n-nodes-langchain.toolCode",
        "splitOut",
        "extractFromFile",
        "code",
        "localFileTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "readwritefile",
        "n8n-nodes-langchain.code"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.localFileTrigger",
        "@n8n/n8n-nodes-langchain.toolCode",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolCode",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.outputparserstructured, readwritefile, n8n-nodes-langchain.code, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "3BkxvtCbF6hHGUgM_N8N_Financial_Tracker_Telegram_Invoices_to_Notion_with_AI_Summaries_&_Reports.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3BkxvtCbF6hHGUgM_N8N_Financial_Tracker_Telegram_Invoices_to_Notion_with_AI_Summaries_&_Reports.json",
      "workflow_name": "N8N Financial Tracker Telegram Invoices to Notion with AI Summaries & Reports",
      "suggested_filename": "ai_financial_ai_process_editimage_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "editImage",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "quickChart",
        "notion",
        "scheduleTrigger",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "telegram",
        "code",
        "splitOut",
        "summarize"
      ],
      "primary_integrations": [
        "editimage",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 28,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.quickChart",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.code",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.editImage",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "AI workflow that ai_processs data/processes using editimage, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via cron",
      "complexity_score": 41
    },
    {
      "original_filename": "98_Send_updates_about_the_position_of_the_ISS_every_minute_to_a_topic_in_Kafka.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/98_Send_updates_about_the_position_of_the_ISS_every_minute_to_a_topic_in_Kafka.json",
      "workflow_name": "Send updates about the position of the ISS every minute to a topic in Kafka",
      "suggested_filename": "util_send_update_httprequest_kafka_cron.json",
      "category": "UTIL",
      "business_function": "update",
      "trigger_type": "cron",
      "integrations": [
        "set",
        "httpRequest",
        "kafka",
        "cron"
      ],
      "primary_integrations": [
        "httprequest",
        "kafka",
        "cron"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.kafka"
      ],
      "business_description": "UTIL workflow that updates data/processes using httprequest, kafka, cron, triggered via cron",
      "complexity_score": 8
    },
    {
      "original_filename": "3517_workflow_3517.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3517_workflow_3517.json",
      "workflow_name": "3517_workflow_3517",
      "suggested_filename": "ai_3517_workflow_3517_automate_splitinbatches_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "extractFromFile",
        "googleDrive",
        "n8n-nodes-langchain.agent",
        "googleSheets",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.lmchatopenai",
        "manual"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.lmchatopenai, manual, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "kjyWJWfDlyXkKL3m_✨🔪_Advanced_AI_Powered_Document_Parsing_&_Text_Extraction_with_Llama_Parse.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/kjyWJWfDlyXkKL3m_✨🔪_Advanced_AI_Powered_Document_Parsing_&_Text_Extraction_with_Llama_Parse.json",
      "workflow_name": "✨🔪 Advanced AI Powered Document Parsing & Text Extraction with Llama Parse",
      "suggested_filename": "ai_advanced_ai_process_n8nnodeslangchainchainllm_gmail_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "gmailTrigger",
        "gmail",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.textClassifier",
        "aggregate",
        "noOp",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "limit",
        "googleDrive",
        "telegram",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "gmail",
        "gmail"
      ],
      "total_nodes": 54,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, gmail, gmail, triggered via webhook",
      "complexity_score": 71
    },
    {
      "original_filename": "1_workflow_1.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_workflow_1.json",
      "workflow_name": "1_workflow_1",
      "suggested_filename": "data_1_workflow_1_automate_spreadsheetfile_postgres.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "postgres",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "postgres",
        "readbinaryfile"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.postgres"
      ],
      "business_description": "DATA workflow that automates data/processes using spreadsheetfile, postgres, readbinaryfile, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "rtsvydad1MOCryia_🐋🤖_DeepSeek_AI_Agent_+_Telegram_+_LONG_TERM_Memory_🧠.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/rtsvydad1MOCryia_🐋🤖_DeepSeek_AI_Agent_+_Telegram_+_LONG_TERM_Memory_🧠.json",
      "workflow_name": "🐋🤖 DeepSeek AI Agent + Telegram + LONG TERM Memory 🧠",
      "suggested_filename": "ai_deepseek_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "googleDocs",
        "googleDocsTool",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.agent",
        "switch"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "googledocs"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.googleDocsTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, googledocs, triggered via webhook",
      "complexity_score": 36
    },
    {
      "original_filename": "2925_workflow_2925.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2925_workflow_2925.json",
      "workflow_name": "2925_workflow_2925",
      "suggested_filename": "util_2925_workflow_2925_automate_ssh_emailsend_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "ssh",
        "stickyNote",
        "emailSend",
        "scheduleTrigger",
        "code"
      ],
      "primary_integrations": [
        "ssh",
        "emailsend",
        "schedule"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.ssh",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using ssh, emailsend, schedule, triggered via cron",
      "complexity_score": 13
    },
    {
      "original_filename": "578_workflow_578.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/578_workflow_578.json",
      "workflow_name": "578_workflow_578",
      "suggested_filename": "util_578_workflow_578_automate_readbinaryfiles_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "readBinaryFiles",
        "manualTrigger"
      ],
      "primary_integrations": [
        "readbinaryfiles",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readBinaryFiles"
      ],
      "business_description": "UTIL workflow that automates data/processes using readbinaryfiles, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2317_workflow_2317.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2317_workflow_2317.json",
      "workflow_name": "2317_workflow_2317",
      "suggested_filename": "util_2317_workflow_2317_automate_readwritefile_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "readWriteFile",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "readwritefile",
        "httprequest",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using readwritefile, httprequest, manual, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "3_StatsInstagram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3_StatsInstagram.json",
      "workflow_name": "StatsInstagram",
      "suggested_filename": "comm_statsinstagram_automate_datetime_cron_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "dateTime",
        "cron",
        "googleSheets",
        "function",
        "mattermost"
      ],
      "primary_integrations": [
        "datetime",
        "cron",
        "googlesheets"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.function",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "COMM workflow that automates data/processes using datetime, cron, googlesheets, triggered via cron",
      "complexity_score": 10
    },
    {
      "original_filename": "1808_workflow_1808.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1808_workflow_1808.json",
      "workflow_name": "1808_workflow_1808",
      "suggested_filename": "ecommerce_1808_workflow_1808_automate_shopify_zendesk.json",
      "category": "ECOMMERCE",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "noOp",
        "if",
        "set",
        "shopifyTrigger",
        "zendesk"
      ],
      "primary_integrations": [
        "shopify",
        "zendesk"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.shopifyTrigger",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.zendesk"
      ],
      "business_description": "ECOMMERCE workflow that automates data/processes using shopify, zendesk, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "Enrich Pipedrive_s Organization Data with OpenAI GPT-4o & Notify it in Slack.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Enrich Pipedrive_s Organization Data with OpenAI GPT-4o & Notify it in Slack.json",
      "workflow_name": "piepdrive-test",
      "suggested_filename": "ai_piepdrive_automate_pipedrive_pipedrive.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "pipedrive",
        "pipedriveTrigger",
        "slack",
        "stickyNote",
        "httpRequest",
        "markdown",
        "code",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "pipedrive",
        "pipedrive",
        "slack"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.pipedriveTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.slack",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that automates data/processes using pipedrive, pipedrive, slack, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "fa2TGWrY9rPurC30_Agent_Access_Control_Template.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/fa2TGWrY9rPurC30_Agent_Access_Control_Template.json",
      "workflow_name": "Agent Access Control Template",
      "suggested_filename": "ai_agent_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalculato.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolCalculator",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.code",
        "n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-langchain.toolHttpRequest",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "airtable",
        "n8n-nodes-langchain.toolCode",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "telegram",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.calculator",
        "n8n-nodes-langchain.code"
      ],
      "total_nodes": 36,
      "node_types": [
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.code",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.code",
        "@n8n/n8n-nodes-langchain.toolCode",
        "@n8n/n8n-nodes-langchain.toolCode",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.calculator, n8n-nodes-langchain.code, triggered via manual",
      "complexity_score": 52
    },
    {
      "original_filename": "587_workflow_587.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/587_workflow_587.json",
      "workflow_name": "587_workflow_587",
      "suggested_filename": "util_587_workflow_587_automate_emailreadimap.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "emailReadImap"
      ],
      "primary_integrations": [
        "emailreadimap"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.emailReadImap"
      ],
      "business_description": "UTIL workflow that automates data/processes using emailreadimap, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "3_Mailchimp.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3_Mailchimp.json",
      "workflow_name": "Mailchimp",
      "suggested_filename": "ai_mailchimp_ai_process_mailchimp_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "mailchimp",
        "manualTrigger"
      ],
      "primary_integrations": [
        "mailchimp",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.mailchimp"
      ],
      "business_description": "AI workflow that ai_processs data/processes using mailchimp, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "65_Get_Product_Feedback.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/65_Get_Product_Feedback.json",
      "workflow_name": "Get Product Feedback",
      "suggested_filename": "data_product_read_trello_airtable.json",
      "category": "DATA",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "trello",
        "noOp",
        "set",
        "airtable",
        "typeformTrigger"
      ],
      "primary_integrations": [
        "trello",
        "airtable",
        "typeform"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.if",
        "n8n-nodes-base.trello",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "DATA workflow that reads data/processes using trello, airtable, typeform, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "2403_workflow_2403.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2403_workflow_2403.json",
      "workflow_name": "2403_workflow_2403",
      "suggested_filename": "util_2403_workflow_2403_automate_datetime_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "if",
        "dateTime",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "manualTrigger"
      ],
      "primary_integrations": [
        "datetime",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using datetime, httprequest, schedule, triggered via cron",
      "complexity_score": 38
    },
    {
      "original_filename": "180_Discord_AI_bot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/180_Discord_AI_bot.json",
      "workflow_name": "Discord AI bot",
      "suggested_filename": "ai_discord_ai_process_webhook_openai_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "noOp",
        "set",
        "webhook",
        "openAi",
        "manualTrigger",
        "switch",
        "discord"
      ],
      "primary_integrations": [
        "webhook",
        "openai",
        "manual"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.discord"
      ],
      "business_description": "AI workflow that ai_processs data/processes using webhook, openai, manual, triggered via webhook",
      "complexity_score": 16
    },
    {
      "original_filename": "85_Sending_an_SMS_with_MessageBird.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/85_Sending_an_SMS_with_MessageBird.json",
      "workflow_name": "Sending an SMS with MessageBird",
      "suggested_filename": "comm_sending_automate_messagebird_manual.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "messageBird",
        "manualTrigger"
      ],
      "primary_integrations": [
        "messagebird",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.messageBird"
      ],
      "business_description": "COMM workflow that automates data/processes using messagebird, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "1841_workflow_1841.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1841_workflow_1841.json",
      "workflow_name": "1841_workflow_1841",
      "suggested_filename": "biz_1841_workflow_1841_automate_hubspot_functionitem_cron.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "hubspot",
        "if",
        "set",
        "functionItem",
        "zendesk",
        "cron"
      ],
      "primary_integrations": [
        "hubspot",
        "functionitem",
        "zendesk"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.hubspot"
      ],
      "business_description": "BIZ workflow that automates data/processes using hubspot, functionitem, zendesk, triggered via cron",
      "complexity_score": 20
    },
    {
      "original_filename": "2027_workflow_2027.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2027_workflow_2027.json",
      "workflow_name": "2027_workflow_2027",
      "suggested_filename": "util_2027_workflow_2027_automate_httprequest_graphql_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "httpRequest",
        "graphql",
        "webhook",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "graphql",
        "webhook"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, graphql, webhook, triggered via webhook",
      "complexity_score": 21
    },
    {
      "original_filename": "3970_workflow_3970.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3970_workflow_3970.json",
      "workflow_name": "3970_workflow_3970",
      "suggested_filename": "util_3970_workflow_3970_automate_webhook_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "noOp",
        "stickyNote",
        "set",
        "webhook",
        "code",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 23
    },
    {
      "original_filename": "2094_workflow_2094.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2094_workflow_2094.json",
      "workflow_name": "2094_workflow_2094",
      "suggested_filename": "ai_2094_workflow_2094_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "aggregate",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "2045_workflow_2045.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2045_workflow_2045.json",
      "workflow_name": "2045_workflow_2045",
      "suggested_filename": "comm_2045_workflow_2045_automate_splitinbatches_httprequest.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "if",
        "noOp",
        "stickyNote",
        "set",
        "wait",
        "httpRequest",
        "telegramTrigger",
        "telegram",
        "code",
        "switch",
        "redis",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "telegram"
      ],
      "total_nodes": 36,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.if",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.redis"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, httprequest, telegram, triggered via manual",
      "complexity_score": 49
    },
    {
      "original_filename": "Simple Expense Tracker with n8n Chat, AI Agent and Google Sheets.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Simple Expense Tracker with n8n Chat, AI Agent and Google Sheets.json",
      "workflow_name": "AI agent: expense tracker in Google Sheets and n8n chat",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.toolWorkflow",
        "googleSheets",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 10,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.toolWorkflow"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "105_screenshot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/105_screenshot.json",
      "workflow_name": "screenshot",
      "suggested_filename": "util_screenshot_automate_awsses_uproc.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "awsSes",
        "uproc",
        "httpRequest",
        "functionItem",
        "manualTrigger",
        "dropbox"
      ],
      "primary_integrations": [
        "awsses",
        "uproc",
        "httprequest"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.awsSes",
        "n8n-nodes-base.uproc",
        "n8n-nodes-base.uproc",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.dropbox"
      ],
      "business_description": "UTIL workflow that automates data/processes using awsses, uproc, httprequest, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "1823_workflow_1823.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1823_workflow_1823.json",
      "workflow_name": "1823_workflow_1823",
      "suggested_filename": "util_1823_workflow_1823_automate_mondaycom_mautic.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "mondayCom",
        "mauticTrigger"
      ],
      "primary_integrations": [
        "mondaycom",
        "mautic"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.mondayCom",
        "n8n-nodes-base.mauticTrigger",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using mondaycom, mautic, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "wDD4XugmHIvx3KMT_Analyze_Screenshots_with_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/wDD4XugmHIvx3KMT_Analyze_Screenshots_with_AI.json",
      "workflow_name": "Analyze Screenshots with AI",
      "suggested_filename": "ai_analyze_analyze_httprequest_manual.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger"
      ],
      "business_description": "AI workflow that analyzes data/processes using httprequest, manual, n8n-nodes-langchain.openai, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "2780_workflow_2780.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2780_workflow_2780.json",
      "workflow_name": "2780_workflow_2780",
      "suggested_filename": "ai_2780_workflow_2780_automate_splitinbatches_n8nnodeslangchainchainllm_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.chainLlm",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "extractFromFile",
        "code",
        "switch",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chainllm",
        "httprequest"
      ],
      "total_nodes": 45,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.chainllm, httprequest, triggered via webhook",
      "complexity_score": 58
    },
    {
      "original_filename": "247_Congratulations_Workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/247_Congratulations_Workflow.json",
      "workflow_name": "Congratulations Workflow",
      "suggested_filename": "data_congratulations_automate_cron_googlesheets_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "if",
        "noOp",
        "cron",
        "googleSheets",
        "function",
        "twilio"
      ],
      "primary_integrations": [
        "cron",
        "googlesheets",
        "twilio"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.function",
        "n8n-nodes-base.twilio"
      ],
      "business_description": "DATA workflow that automates data/processes using cron, googlesheets, twilio, triggered via cron",
      "complexity_score": 15
    },
    {
      "original_filename": "2652_workflow_2652.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2652_workflow_2652.json",
      "workflow_name": "2652_workflow_2652",
      "suggested_filename": "ops_2652_workflow_2652_automate_splitinbatches_httprequest_cron.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "if",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "manualTrigger",
        "github",
        "code",
        "switch",
        "n8n",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.github",
        "n8n-nodes-base.github",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.github",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.executeWorkflow"
      ],
      "business_description": "OPS workflow that automates data/processes using splitinbatches, httprequest, schedule, triggered via cron",
      "complexity_score": 38
    },
    {
      "original_filename": "TTj6BiN7bQKTa6FM_Indeed_Company_Data_Scraper_&_Summarization_with_Airtable,_Bright_Data_and_Google_Gemini.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/TTj6BiN7bQKTa6FM_Indeed_Company_Data_Scraper_&_Summarization_with_Airtable,_Bright_Data_and_Google_Gemini.json",
      "workflow_name": "Indeed Company Data Scraper & Summarization with Airtable, Bright Data and Google Gemini",
      "suggested_filename": "ai_indeed_ai_process_splitinbatches_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.chainSummarization",
        "markdown",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "airtable"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chainllm",
        "httprequest"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, n8n-nodes-langchain.chainllm, httprequest, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "2124_workflow_2124.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2124_workflow_2124.json",
      "workflow_name": "2124_workflow_2124",
      "suggested_filename": "comm_2124_workflow_2124_automate_gmail_httprequest_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "googleCalendar",
        "splitOut",
        "code",
        "switch",
        "html",
        "clearbit",
        "filter"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.clearbit",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.html",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, httprequest, schedule, triggered via cron",
      "complexity_score": 32
    },
    {
      "original_filename": "ZeSJSbwXI593H1Qj_Social_Media_AI_Agent_-_Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ZeSJSbwXI593H1Qj_Social_Media_AI_Agent_-_Telegram.json",
      "workflow_name": "Social Media AI Agent - Telegram",
      "suggested_filename": "ai_social_ai_process_httprequest_linkedin_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "noOp",
        "wait",
        "stickyNote",
        "httpRequest",
        "linkedIn",
        "markdown",
        "scheduleTrigger",
        "airtable",
        "code",
        "telegram",
        "twitter",
        "n8n-nodes-langchain.openAi",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "linkedin",
        "markdown"
      ],
      "total_nodes": 26,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.linkedIn",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.code",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, linkedin, markdown, triggered via cron",
      "complexity_score": 40
    },
    {
      "original_filename": "9r4T5kELOXAV8L1F_3D_Figurine_Orthographic_Views_with_Midjourney_and_GPT-4o-Image_API.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/9r4T5kELOXAV8L1F_3D_Figurine_Orthographic_Views_with_Midjourney_and_GPT-4o-Image_API.json",
      "workflow_name": "3D Figurine Orthographic Views with Midjourney and GPT-4o-Image API",
      "suggested_filename": "ai_figurine_automate_httprequest_manual.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "if",
        "httpRequest",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "935_workflow_935.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/935_workflow_935.json",
      "workflow_name": "935_workflow_935",
      "suggested_filename": "util_935_workflow_935_automate_manual_peekalink.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "noOp",
        "manualTrigger",
        "peekalink"
      ],
      "primary_integrations": [
        "manual",
        "peekalink"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.peekalink",
        "n8n-nodes-base.if",
        "n8n-nodes-base.peekalink",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, peekalink, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "A5R7XYSzrCJKlw9k_Agent_Milvus_tool.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/A5R7XYSzrCJKlw9k_Agent_Milvus_tool.json",
      "workflow_name": "Agent Milvus tool",
      "suggested_filename": "ai_agent_automate_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.vectorStoreMilvus",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "splitOut",
        "manualTrigger",
        "limit",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "html",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "httprequest",
        "n8n-nodes-langchain.vectorstoremilvus"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.vectorStoreMilvus",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.vectorStoreMilvus",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, httprequest, n8n-nodes-langchain.vectorstoremilvus, triggered via manual",
      "complexity_score": 34
    },
    {
      "original_filename": "14_Add_a_subscriber_to_a_list_and_create_and_send_a_campaign.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/14_Add_a_subscriber_to_a_list_and_create_and_send_a_campaign.json",
      "workflow_name": "Add a subscriber to a list and create and send a campaign",
      "suggested_filename": "ai_subscriber_ai_process_sendy_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "sendy",
        "manualTrigger"
      ],
      "primary_integrations": [
        "sendy",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.sendy",
        "n8n-nodes-base.sendy"
      ],
      "business_description": "AI workflow that ai_processs data/processes using sendy, manual, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "F7CfIF10XjXhqbGb_Play_with_Spotify_from_Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/F7CfIF10XjXhqbGb_Play_with_Spotify_from_Telegram.json",
      "workflow_name": "Play with Spotify from Telegram",
      "suggested_filename": "ai_play_automate_telegram_telegram.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "set",
        "telegramTrigger",
        "telegram",
        "n8n-nodes-langchain.openAi",
        "spotify"
      ],
      "primary_integrations": [
        "telegram",
        "telegram",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that automates data/processes using telegram, telegram, n8n-nodes-langchain.openai, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "dLKIZxM6c0lRVbjb_Tech_Radar.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/dLKIZxM6c0lRVbjb_Tech_Radar.json",
      "workflow_name": "Tech Radar",
      "suggested_filename": "ai_tech_automate_n8nnodeslangchainlmchatanthropic_googledrive_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.lmChatAnthropic",
        "googleDrive",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-langchain.agent",
        "cron",
        "executeWorkflow",
        "googleDriveTrigger",
        "mySql",
        "n8n-nodes-langchain.toolVectorStore",
        "mySqlTool",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "stickyNote",
        "googleSheets",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.lmChatGroq",
        "executeWorkflowTrigger",
        "n8n-nodes-langchain.vectorStorePinecone",
        "respondToWebhook",
        "n8n-nodes-langchain.memoryBufferWindow",
        "googleDocs",
        "n8n-nodes-langchain.embeddingsGoogleGemini",
        "webhook",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "code"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmchatanthropic",
        "googledrive",
        "n8n-nodes-langchain.textsplitterrecursivecharactertextsplitter"
      ],
      "total_nodes": 53,
      "node_types": [
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDriveTrigger",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflow",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.mySqlTool",
        "n8n-nodes-base.mySqlTool",
        "n8n-nodes-base.mySqlTool",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "@n8n/n8n-nodes-langchain.lmChatGroq",
        "@n8n/n8n-nodes-langchain.lmChatGroq",
        "@n8n/n8n-nodes-langchain.lmChatGroq",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.lmchatanthropic, googledrive, n8n-nodes-langchain.textsplitterrecursivecharactertextsplitter, triggered via cron",
      "complexity_score": 78
    },
    {
      "original_filename": "2197_workflow_2197.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2197_workflow_2197.json",
      "workflow_name": "2197_workflow_2197",
      "suggested_filename": "ai_2197_workflow_2197_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "gmailTrigger",
        "stickyNote",
        "gmail",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "aggregate"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.set",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, gmail, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "553_workflow_553.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/553_workflow_553.json",
      "workflow_name": "553_workflow_553",
      "suggested_filename": "util_553_workflow_553_automate_keap_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "keap",
        "manualTrigger"
      ],
      "primary_integrations": [
        "keap",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.keap"
      ],
      "business_description": "UTIL workflow that automates data/processes using keap, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "83_New_WooCommerce_Customer_to_Mautic.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/83_New_WooCommerce_Customer_to_Mautic.json",
      "workflow_name": "New WooCommerce Customer to Mautic",
      "suggested_filename": "biz_woocommerce_automate_mautic_woocommerce.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "mautic",
        "wooCommerceTrigger",
        "if"
      ],
      "primary_integrations": [
        "mautic",
        "woocommerce"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.if",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.wooCommerceTrigger"
      ],
      "business_description": "BIZ workflow that automates data/processes using mautic, woocommerce, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "I2qMAcQET7isaqYD_n8napi-check-workflow-which-model-is-using.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/I2qMAcQET7isaqYD_n8napi-check-workflow-which-model-is-using.json",
      "workflow_name": "n8napi-check-workflow-which-model-is-using",
      "suggested_filename": "data_n8napi_validate_splitinbatches_n8n.json",
      "category": "DATA",
      "business_function": "validate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "stickyNote",
        "set",
        "n8n",
        "splitOut",
        "manualTrigger",
        "googleSheets",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n",
        "manual"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that validates data/processes using splitinbatches, n8n, manual, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "1920_workflow_1920.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1920_workflow_1920.json",
      "workflow_name": "1920_workflow_1920",
      "suggested_filename": "util_1920_workflow_1920_automate_webhook_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "webhook",
        "httpRequest",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "httprequest",
        "respondtowebhook"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, httprequest, respondtowebhook, triggered via webhook",
      "complexity_score": 6
    },
    {
      "original_filename": "122_Steam_+_CF_Report.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/122_Steam_+_CF_Report.json",
      "workflow_name": "Steam + CF Report",
      "suggested_filename": "analytics_steam_report_webhook_mailgun_webhook.json",
      "category": "ANALYTICS",
      "business_function": "report",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "webhook",
        "mailgun",
        "executeCommand"
      ],
      "primary_integrations": [
        "webhook",
        "mailgun",
        "executecommand"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.if",
        "n8n-nodes-base.mailgun",
        "n8n-nodes-base.mailgun",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if"
      ],
      "business_description": "ANALYTICS workflow that reports data/processes using webhook, mailgun, executecommand, triggered via webhook",
      "complexity_score": 13
    },
    {
      "original_filename": "2146_workflow_2146.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2146_workflow_2146.json",
      "workflow_name": "2146_workflow_2146",
      "suggested_filename": "comm_2146_workflow_2146_automate_itemlists_gmail_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "itemLists",
        "stickyNote",
        "gmail",
        "scheduleTrigger",
        "filter"
      ],
      "primary_integrations": [
        "itemlists",
        "gmail",
        "schedule"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using itemlists, gmail, schedule, triggered via cron",
      "complexity_score": 15
    },
    {
      "original_filename": "2683_workflow_2683.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2683_workflow_2683.json",
      "workflow_name": "2683_workflow_2683",
      "suggested_filename": "ai_2683_workflow_2683_automate_httprequest_googlecalendar_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "googleCalendarTool",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "splitOut",
        "airtable",
        "gmailTool",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "googlecalendar",
        "webhook"
      ],
      "total_nodes": 18,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, googlecalendar, webhook, triggered via webhook",
      "complexity_score": 29
    },
    {
      "original_filename": "6FSx5OMVxp8Ldg8A_Prepare_CSV_files_with_GPT-4.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/6FSx5OMVxp8Ldg8A_Prepare_CSV_files_with_GPT-4.json",
      "workflow_name": "Prepare CSV files with GPT-4",
      "suggested_filename": "ai_prepare_automate_splitinbatches_spreadsheetfile.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "spreadsheetFile",
        "itemLists",
        "stickyNote",
        "set",
        "openAi",
        "manualTrigger",
        "writeBinaryFile",
        "moveBinaryData"
      ],
      "primary_integrations": [
        "splitinbatches",
        "spreadsheetfile",
        "itemlists"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.writeBinaryFile",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, spreadsheetfile, itemlists, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "2_Syncro_to_Clockify.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2_Syncro_to_Clockify.json",
      "workflow_name": "Syncro to Clockify",
      "suggested_filename": "data_syncro_sync_webhook_clockify_webhook.json",
      "category": "DATA",
      "business_function": "sync",
      "trigger_type": "webhook",
      "integrations": [
        "webhook",
        "clockify"
      ],
      "primary_integrations": [
        "webhook",
        "clockify"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.clockify"
      ],
      "business_description": "DATA workflow that syncs data/processes using webhook, clockify, triggered via webhook",
      "complexity_score": 4
    },
    {
      "original_filename": "1785_workflow_1785.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1785_workflow_1785.json",
      "workflow_name": "1785_workflow_1785",
      "suggested_filename": "comm_1785_workflow_1785_automate_htmlextract_sendgrid_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "htmlExtract",
        "sendGrid",
        "set",
        "httpRequest",
        "baserow",
        "manualTrigger",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "htmlextract",
        "sendgrid",
        "httprequest"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.baserow",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.htmlExtract",
        "n8n-nodes-base.function",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.sendGrid"
      ],
      "business_description": "COMM workflow that automates data/processes using htmlextract, sendgrid, httprequest, triggered via cron",
      "complexity_score": 17
    },
    {
      "original_filename": "wZBgoWrBZveMmzYi_Turn_YouTube_Videos_into_Summaries,_Transcripts,_and_Visual_Insights.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/wZBgoWrBZveMmzYi_Turn_YouTube_Videos_into_Summaries,_Transcripts,_and_Visual_Insights.json",
      "workflow_name": "Turn YouTube Videos into Summaries, Transcripts, and Visual Insights",
      "suggested_filename": "content_turn_automate_httprequest_manual.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 26,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "CONTENT workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "3607_workflow_3607.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3607_workflow_3607.json",
      "workflow_name": "3607_workflow_3607",
      "suggested_filename": "ai_3607_workflow_3607_automate_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "wait",
        "if",
        "stickyNote",
        "httpRequest",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "2679_workflow_2679.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2679_workflow_2679.json",
      "workflow_name": "2679_workflow_2679",
      "suggested_filename": "ai_2679_workflow_2679_automate_n8nnodeslangchainchainllm_youtube_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "set",
        "youTube",
        "webhook",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "code",
        "summarize",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "youtube",
        "webhook"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-youtube-transcription.youtubeTranscripter",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.youTube",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, youtube, webhook, triggered via webhook",
      "complexity_score": 22
    },
    {
      "original_filename": "Dctc6QKyRXK17oEq_All-in-One_Telegram_Baserow_AI_Assistant_🤖🧠_Voice_Photo_Save_Notes_Long_Term_Mem.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Dctc6QKyRXK17oEq_All-in-One_Telegram_Baserow_AI_Assistant_🤖🧠_Voice_Photo_Save_Notes_Long_Term_Mem.json",
      "workflow_name": "All-in-One Telegram/Baserow AI Assistant 🤖🧠 Voice/Photo/Save Notes/Long Term Mem",
      "suggested_filename": "ai_telegram_ai_process_baserow_n8nnodeslangchainmemorybufferwindow_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "baserowTool",
        "merge",
        "n8n-nodes-langchain.memoryBufferWindow",
        "switch",
        "n8n-nodes-langchain.memoryPostgresChat",
        "if",
        "stickyNote",
        "set",
        "baserow",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "n8n-nodes-langchain.agent",
        "telegram",
        "aggregate",
        "extractFromFile",
        "convertToFile",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "baserow",
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.memorypostgreschat"
      ],
      "total_nodes": 48,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "n8n-nodes-base.baserowTool",
        "n8n-nodes-base.baserowTool",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.baserow",
        "n8n-nodes-base.baserow",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using baserow, n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.memorypostgreschat, triggered via webhook",
      "complexity_score": 66
    },
    {
      "original_filename": "3_workflow_3.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3_workflow_3.json",
      "workflow_name": "3_workflow_3",
      "suggested_filename": "util_3_workflow_3_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "httpRequest",
        "webhook",
        "editImage"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "editimage"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, editimage, triggered via webhook",
      "complexity_score": 6
    },
    {
      "original_filename": "1736_workflow_1736.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1736_workflow_1736.json",
      "workflow_name": "1736_workflow_1736",
      "suggested_filename": "data_1736_workflow_1736_automate_googlesheets_movebinarydata.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "moveBinaryData",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "googlesheets",
        "movebinarydata",
        "readbinaryfile"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.moveBinaryData"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, movebinarydata, readbinaryfile, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2214_workflow_2214.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2214_workflow_2214.json",
      "workflow_name": "2214_workflow_2214",
      "suggested_filename": "util_2214_workflow_2214_automate_grist_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "grist",
        "webhook",
        "if"
      ],
      "primary_integrations": [
        "grist",
        "webhook"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.grist",
        "n8n-nodes-base.if",
        "n8n-nodes-base.grist",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using grist, webhook, triggered via webhook",
      "complexity_score": 11
    },
    {
      "original_filename": "167_Smart_Factory_Data_Generator.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/167_Smart_Factory_Data_Generator.json",
      "workflow_name": "Smart Factory Data Generator",
      "suggested_filename": "data_smart_automate_amqp_interval.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "amqp",
        "set",
        "interval"
      ],
      "primary_integrations": [
        "amqp",
        "interval"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.interval",
        "n8n-nodes-base.amqp"
      ],
      "business_description": "DATA workflow that automates data/processes using amqp, interval, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "OqfQNcgTqUK7UvZG_Youtube_Discord_Bot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/OqfQNcgTqUK7UvZG_Youtube_Discord_Bot.json",
      "workflow_name": "Youtube Discord Bot",
      "suggested_filename": "ai_youtube_automate_n8nnodeslangchainmemorybufferwindow_webhook_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "webhook",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "code",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "webhook",
        "n8n-nodes-langchain.lmchatgooglegemini"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, webhook, n8n-nodes-langchain.lmchatgooglegemini, triggered via webhook",
      "complexity_score": 12
    },
    {
      "original_filename": "600_workflow_600.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/600_workflow_600.json",
      "workflow_name": "600_workflow_600",
      "suggested_filename": "data_600_workflow_600_automate_googlesheets_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "set",
        "manualTrigger"
      ],
      "primary_integrations": [
        "googlesheets",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, manual, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "215_Create,_update,_and_get_a_user_using_the_G_Suite_Admin_node.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/215_Create,_update,_and_get_a_user_using_the_G_Suite_Admin_node.json",
      "workflow_name": "Create, update, and get a user using the G Suite Admin node",
      "suggested_filename": "util_create_create_contact_gsuiteadmin_manual.json",
      "category": "UTIL",
      "business_function": "create_contact",
      "trigger_type": "manual",
      "integrations": [
        "gSuiteAdmin",
        "manualTrigger"
      ],
      "primary_integrations": [
        "gsuiteadmin",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.gSuiteAdmin",
        "n8n-nodes-base.gSuiteAdmin",
        "n8n-nodes-base.gSuiteAdmin"
      ],
      "business_description": "UTIL workflow that create_contacts data/processes using gsuiteadmin, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "rLoXUoKSZ4a9XUAv_My_workflow_6.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/rLoXUoKSZ4a9XUAv_My_workflow_6.json",
      "workflow_name": "My workflow 6",
      "suggested_filename": "util_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@custom-js/n8n-nodes-pdf-toolkit.ExtractPages",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "1754_workflow_1754.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1754_workflow_1754.json",
      "workflow_name": "1754_workflow_1754",
      "suggested_filename": "data_1754_workflow_1754_automate_interval_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "if",
        "set",
        "interval",
        "manualTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "interval",
        "manual",
        "googlesheets"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.interval"
      ],
      "business_description": "DATA workflow that automates data/processes using interval, manual, googlesheets, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "As8TxF3PjyXygc0o_🧹_Archive_(delete)_duplicate_items_from_a_Notion_database.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/As8TxF3PjyXygc0o_🧹_Archive_(delete)_duplicate_items_from_a_Notion_database.json",
      "workflow_name": "🧹 Archive (delete) duplicate items from a Notion database",
      "suggested_filename": "data_archive_backup_notion_schedule_cron.json",
      "category": "DATA",
      "business_function": "backup",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "notion",
        "scheduleTrigger",
        "notionTrigger",
        "code",
        "aggregate"
      ],
      "primary_integrations": [
        "notion",
        "schedule",
        "notion"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notionTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that backups data/processes using notion, schedule, notion, triggered via cron",
      "complexity_score": 18
    },
    {
      "original_filename": "2500_workflow_2500.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2500_workflow_2500.json",
      "workflow_name": "2500_workflow_2500",
      "suggested_filename": "util_2500_workflow_2500_automate_elasticsearch_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "elasticsearch",
        "if",
        "noOp",
        "httpRequest",
        "cron"
      ],
      "primary_integrations": [
        "elasticsearch",
        "httprequest",
        "cron"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.elasticsearch",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "UTIL workflow that automates data/processes using elasticsearch, httprequest, cron, triggered via cron",
      "complexity_score": 10
    },
    {
      "original_filename": "mqindLlOy0A0e5aA_Outlook.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/mqindLlOy0A0e5aA_Outlook.json",
      "workflow_name": "Outlook",
      "suggested_filename": "ai_outlook_automate_microsoftoutlook_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "microsoftOutlookTool",
        "stickyNote",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "microsoftOutlookTrigger"
      ],
      "primary_integrations": [
        "microsoftoutlook",
        "n8n-nodes-langchain.lmchatopenai",
        "n8n-nodes-langchain.agent"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.microsoftOutlookTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.microsoftOutlookTool"
      ],
      "business_description": "AI workflow that automates data/processes using microsoftoutlook, n8n-nodes-langchain.lmchatopenai, n8n-nodes-langchain.agent, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "161_Create_a_table_and_insert_data_into_it.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/161_Create_a_table_and_insert_data_into_it.json",
      "workflow_name": "Create a table and insert data into it",
      "suggested_filename": "data_create_create_questdb_manual.json",
      "category": "DATA",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "questDb",
        "set",
        "manualTrigger"
      ],
      "primary_integrations": [
        "questdb",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.questDb",
        "n8n-nodes-base.questDb"
      ],
      "business_description": "DATA workflow that creates data/processes using questdb, manual, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "554_workflow_554.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/554_workflow_554.json",
      "workflow_name": "554_workflow_554",
      "suggested_filename": "util_554_workflow_554_automate_keap.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "keapTrigger"
      ],
      "primary_integrations": [
        "keap"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.keapTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using keap, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "83_Create_a_room,_invite_members_from_a_different_room,_and_send_a_message_in_the_room_we_created.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/83_Create_a_room,_invite_members_from_a_different_room,_and_send_a_message_in_the_room_we_created.json",
      "workflow_name": "Create a room, invite members from a different room, and send a message in the room we created",
      "suggested_filename": "comm_create_create_matrix_manual.json",
      "category": "COMM",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "matrix",
        "noOp",
        "manualTrigger",
        "if"
      ],
      "primary_integrations": [
        "matrix",
        "manual"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.matrix",
        "n8n-nodes-base.if",
        "n8n-nodes-base.matrix",
        "n8n-nodes-base.matrix",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.matrix",
        "n8n-nodes-base.matrix"
      ],
      "business_description": "COMM workflow that creates data/processes using matrix, manual, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "Extract spending history from gmail to google sheet.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Extract spending history from gmail to google sheet.json",
      "workflow_name": "Extract spend details (template)",
      "suggested_filename": "ai_extract_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "gmailTrigger",
        "stickyNote",
        "set",
        "splitOut",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "extractFromFile",
        "switch",
        "googleSheets",
        "html",
        "n8n-nodes-langchain.lmChatGroq"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.html",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.lmChatGroq",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, gmail, triggered via manual",
      "complexity_score": 37
    },
    {
      "original_filename": "V8ypWn7oaOVS3zH0_AI_Social_Media_Caption_Creator.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/V8ypWn7oaOVS3zH0_AI_Social_Media_Caption_Creator.json",
      "workflow_name": "AI Social Media Caption Creator",
      "suggested_filename": "ai_social_ai_process_n8nnodeslangchainmemorybufferwindow_airtable.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "airtableTool",
        "wait",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "airtable",
        "n8n-nodes-langchain.agent",
        "airtableTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "airtable",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 10,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtableTrigger",
        "n8n-nodes-base.airtableTool",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, airtable, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "2371_workflow_2371.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2371_workflow_2371.json",
      "workflow_name": "2371_workflow_2371",
      "suggested_filename": "util_2371_workflow_2371_automate_schedule_ftp_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "scheduleTrigger",
        "ftp",
        "code",
        "mqtt",
        "mqttTrigger",
        "convertToFile"
      ],
      "primary_integrations": [
        "schedule",
        "ftp",
        "mqtt"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.ftp",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.mqtt",
        "n8n-nodes-base.mqttTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.convertToFile"
      ],
      "business_description": "UTIL workflow that automates data/processes using schedule, ftp, mqtt, triggered via cron",
      "complexity_score": 12
    },
    {
      "original_filename": "2407_workflow_2407.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2407_workflow_2407.json",
      "workflow_name": "2407_workflow_2407",
      "suggested_filename": "comm_2407_workflow_2407_automate_gmail_schedule_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "gmail",
        "set",
        "stickyNote",
        "scheduleTrigger",
        "webhook",
        "airtable",
        "code",
        "html"
      ],
      "primary_integrations": [
        "gmail",
        "schedule",
        "webhook"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.code",
        "n8n-nodes-base.html",
        "n8n-nodes-base.set",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, schedule, webhook, triggered via cron",
      "complexity_score": 21
    },
    {
      "original_filename": "7gRbzEzCuOzQKn4M_SHEETS_RAG.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/7gRbzEzCuOzQKn4M_SHEETS_RAG.json",
      "workflow_name": "SHEETS RAG",
      "suggested_filename": "ai_sheets_automate_postgres_n8nnodeslangchainmanualchat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "postgres",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.manualChatTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.toolWorkflow",
        "code",
        "n8n-nodes-langchain.agent",
        "googleSheets",
        "executeWorkflowTrigger",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "postgres",
        "n8n-nodes-langchain.manualchat",
        "n8n-nodes-langchain.lmchatgooglegemini"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleDriveTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.manualChatTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using postgres, n8n-nodes-langchain.manualchat, n8n-nodes-langchain.lmchatgooglegemini, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "3700_workflow_3700.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3700_workflow_3700.json",
      "workflow_name": "3700_workflow_3700",
      "suggested_filename": "ai_3700_workflow_3700_automate_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "googleDrive",
        "googleSheets",
        "convertToFile",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 18,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "DswhuYzoemjA6iNN_Scrape_Books_from_URL_with_Dumpling_AI,_Clean_HTML,_Save_to_Sheets,_Email_as_CSV.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/DswhuYzoemjA6iNN_Scrape_Books_from_URL_with_Dumpling_AI,_Clean_HTML,_Save_to_Sheets,_Email_as_CSV.json",
      "workflow_name": "Scrape Books from URL with Dumpling AI, Clean HTML, Save to Sheets, Email as CSV",
      "suggested_filename": "ai_scrape_ai_process_gmail_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "gmail",
        "stickyNote",
        "httpRequest",
        "sort",
        "splitOut",
        "convertToFile",
        "html",
        "googleSheetsTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "sort"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.html",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.html",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, httprequest, sort, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "AC4paL1SXMFURgmc_Translate_questions_about_e-mails_into_SQL_queries_and_run_them.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AC4paL1SXMFURgmc_Translate_questions_about_e-mails_into_SQL_queries_and_run_them.json",
      "workflow_name": "Translate questions about e-mails into SQL queries and run them",
      "suggested_filename": "ai_translate_ai_process_postgres_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "postgres",
        "merge",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "readWriteFile",
        "manualTrigger",
        "extractFromFile",
        "n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-langchain.agent",
        "convertToFile",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "postgres",
        "n8n-nodes-langchain.chat",
        "readwritefile"
      ],
      "total_nodes": 26,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgres",
        "@n8n/n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using postgres, n8n-nodes-langchain.chat, readwritefile, triggered via manual",
      "complexity_score": 39
    },
    {
      "original_filename": "2465_workflow_2465.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2465_workflow_2465.json",
      "workflow_name": "2465_workflow_2465",
      "suggested_filename": "ai_2465_workflow_2465_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolVectorStore",
        "whatsApp",
        "n8n-nodes-langchain.vectorStoreInMemory",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "extractFromFile",
        "n8n-nodes-langchain.agent",
        "switch",
        "whatsAppTrigger",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.vectorstore",
        "whatsapp"
      ],
      "total_nodes": 28,
      "node_types": [
        "n8n-nodes-base.whatsAppTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.whatsApp",
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.vectorstore, whatsapp, triggered via manual",
      "complexity_score": 43
    },
    {
      "original_filename": "1599_workflow_1599.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1599_workflow_1599.json",
      "workflow_name": "1599_workflow_1599",
      "suggested_filename": "comm_1599_workflow_1599_automate_interval_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "interval",
        "telegram",
        "function",
        "youTube"
      ],
      "primary_integrations": [
        "interval",
        "telegram",
        "youtube"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.function",
        "n8n-nodes-base.interval",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "COMM workflow that automates data/processes using interval, telegram, youtube, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "xibc6WDU53isYN1o_Line_Chatbot_Handling_AI_Responses_with_Groq_and_Llama3.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/xibc6WDU53isYN1o_Line_Chatbot_Handling_AI_Responses_with_Groq_and_Llama3.json",
      "workflow_name": "Line Chatbot Handling AI Responses with Groq and Llama3",
      "suggested_filename": "ai_line_ai_process_webhook_httprequest_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "webhook",
        "httpRequest"
      ],
      "primary_integrations": [
        "webhook",
        "httprequest"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using webhook, httprequest, triggered via webhook",
      "complexity_score": 13
    },
    {
      "original_filename": "829_Moving_metrics_from_Google_Sheets_to_Orbit.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/829_Moving_metrics_from_Google_Sheets_to_Orbit.json",
      "workflow_name": "Moving metrics from Google Sheets to Orbit",
      "suggested_filename": "data_moving_automate_googlesheets_orbit.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "merge",
        "orbit"
      ],
      "primary_integrations": [
        "googlesheets",
        "orbit"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.merge",
        "n8n-nodes-base.orbit",
        "n8n-nodes-base.orbit",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.orbit"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, orbit, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "Auto Categorise Outlook Emails with AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Auto Categorise Outlook Emails with AI.json",
      "workflow_name": "Auto Categorise Outlook Emails with AI",
      "suggested_filename": "ai_auto_ai_process_splitinbatches_microsoftoutlook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "merge",
        "if",
        "stickyNote",
        "set",
        "microsoftOutlook",
        "markdown",
        "n8n-nodes-langchain.lmChatOllama",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "switch",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "microsoftoutlook",
        "markdown"
      ],
      "total_nodes": 36,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.set",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.microsoftOutlook",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.switch"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, microsoftoutlook, markdown, triggered via manual",
      "complexity_score": 48
    },
    {
      "original_filename": "IvIzphIxPj1rZ3az_Dynamically_create_tables_in_Airtable_for_your_Webflow_form_submissions.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/IvIzphIxPj1rZ3az_Dynamically_create_tables_in_Airtable_for_your_Webflow_form_submissions.json",
      "workflow_name": "Dynamically create tables in Airtable for your Webflow form submissions",
      "suggested_filename": "ai_dynamically_ai_process_httprequest_webflow.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "webflowTrigger",
        "airtable",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "webflow",
        "airtable"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.webflowTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, webflow, airtable, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "mbgpq1PH1SFkHi6w_Add_new_clients_from_Notion_to_Clockify.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/mbgpq1PH1SFkHi6w_Add_new_clients_from_Notion_to_Clockify.json",
      "workflow_name": "Add new clients from Notion to Clockify",
      "suggested_filename": "data_clients_create_notion_clockify.json",
      "category": "DATA",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "notionTrigger",
        "stickyNote",
        "clockify"
      ],
      "primary_integrations": [
        "notion",
        "clockify"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.notionTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that creates data/processes using notion, clockify, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "3397_workflow_3397.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3397_workflow_3397.json",
      "workflow_name": "3397_workflow_3397",
      "suggested_filename": "ai_3397_workflow_3397_automate_splitinbatches_hubspot.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "hubspot",
        "noOp",
        "gmail",
        "set",
        "stickyNote",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.informationExtractor",
        "manualTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "hubspot",
        "gmail"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, hubspot, gmail, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "Respond to WhatsApp Messages with AI Like a Pro!.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Respond to WhatsApp Messages with AI Like a Pro!.json",
      "workflow_name": "Respond to WhatsApp Messages with AI Like a Pro!",
      "suggested_filename": "ai_respond_ai_process_n8nnodeslangchainmemorybufferwindow_whatsapp.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "whatsApp",
        "n8n-nodes-langchain.chainLlm",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.toolWikipedia",
        "splitOut",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "switch",
        "whatsAppTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "whatsapp",
        "n8n-nodes-langchain.chainllm"
      ],
      "total_nodes": 35,
      "node_types": [
        "n8n-nodes-base.whatsAppTrigger",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, whatsapp, n8n-nodes-langchain.chainllm, triggered via manual",
      "complexity_score": 48
    },
    {
      "original_filename": "Generate SQL queries from schema only - AI-powered.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Generate SQL queries from schema only - AI-powered.json",
      "workflow_name": "Generate SQL queries from schema only - AI-powered",
      "suggested_filename": "ai_generate_generate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "generate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "noOp",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "readWriteFile",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "extractFromFile",
        "n8n-nodes-langchain.agent",
        "convertToFile",
        "mySql"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "readwritefile"
      ],
      "total_nodes": 29,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge"
      ],
      "business_description": "AI workflow that generates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, readwritefile, triggered via manual",
      "complexity_score": 43
    },
    {
      "original_filename": "1277_workflow_1277.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1277_workflow_1277.json",
      "workflow_name": "1277_workflow_1277",
      "suggested_filename": "comm_1277_workflow_1277_automate_slack_datetime_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "slack",
        "if",
        "dateTime",
        "set",
        "googleCalendar",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "slack",
        "datetime",
        "googlecalendar"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.function",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.if",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.function",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.cron"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, datetime, googlecalendar, triggered via cron",
      "complexity_score": 20
    },
    {
      "original_filename": "2755_workflow_2755.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2755_workflow_2755.json",
      "workflow_name": "2755_workflow_2755",
      "suggested_filename": "util_2755_workflow_2755_automate_jotform.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "set",
        "jotFormTrigger",
        "splitOut",
        "aggregate"
      ],
      "primary_integrations": [
        "jotform"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.jotFormTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-base.merge"
      ],
      "business_description": "UTIL workflow that automates data/processes using jotform, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "225_workflow_225.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/225_workflow_225.json",
      "workflow_name": "225_workflow_225",
      "suggested_filename": "util_225_workflow_225_automate_htmlextract_emailsend_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "htmlExtract",
        "if",
        "emailSend",
        "httpRequest",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "htmlextract",
        "emailsend",
        "httprequest"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.function",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.htmlExtract",
        "n8n-nodes-base.htmlExtract"
      ],
      "business_description": "UTIL workflow that automates data/processes using htmlextract, emailsend, httprequest, triggered via cron",
      "complexity_score": 13
    },
    {
      "original_filename": "IO0OrQ6ao4vm9urI_Automated_Resume_Review_System_Using_OpenAI_+_Google_Sheets.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/IO0OrQ6ao4vm9urI_Automated_Resume_Review_System_Using_OpenAI_+_Google_Sheets.json",
      "workflow_name": "Automated Resume Review System Using OpenAI + Google Sheets",
      "suggested_filename": "ai_automated_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparsers.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "googleDrive",
        "extractFromFile",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.chainsummarization"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.chainsummarization, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "2023_workflow_2023.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2023_workflow_2023.json",
      "workflow_name": "2023_workflow_2023",
      "suggested_filename": "comm_2023_workflow_2023_automate_itemlists_slack_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "itemLists",
        "slack",
        "stickyNote",
        "httpRequest",
        "markdown",
        "scheduleTrigger",
        "code",
        "googleSheets",
        "html"
      ],
      "primary_integrations": [
        "itemlists",
        "slack",
        "httprequest"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.html",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "COMM workflow that automates data/processes using itemlists, slack, httprequest, triggered via cron",
      "complexity_score": 23
    },
    {
      "original_filename": "xEij0kj2I1DHbL3I_💡🌐_Essential_Multipage_Website_Scraper_with_Jina.ai.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/xEij0kj2I1DHbL3I_💡🌐_Essential_Multipage_Website_Scraper_with_Jina.ai.json",
      "workflow_name": "💡🌐 Essential Multipage Website Scraper with Jina.ai",
      "suggested_filename": "ai_essential_ai_process_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "code",
        "splitOut",
        "manualTrigger",
        "limit",
        "xml",
        "googleDrive",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "manual"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, httprequest, manual, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "5dcd71e5db772d996680f0be_Example_-_Backup_n8n_to_Nextcloud.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/5dcd71e5db772d996680f0be_Example_-_Backup_n8n_to_Nextcloud.json",
      "workflow_name": "Example - Backup n8n to Nextcloud",
      "suggested_filename": "util_example_backup_movebinarydata_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "backup",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "moveBinaryData",
        "httpRequest",
        "functionItem",
        "nextCloud",
        "manualTrigger",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "movebinarydata",
        "httprequest",
        "functionitem"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.function",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.nextCloud"
      ],
      "business_description": "UTIL workflow that backups data/processes using movebinarydata, httprequest, functionitem, triggered via cron",
      "complexity_score": 17
    },
    {
      "original_filename": "Zp0R3I1dUjZOIz2l_Sync_New_Shopify_Customers_to_Odoo_Contacts.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Zp0R3I1dUjZOIz2l_Sync_New_Shopify_Customers_to_Odoo_Contacts.json",
      "workflow_name": "Sync New Shopify Customers to Odoo Contacts",
      "suggested_filename": "biz_sync_sync_odoo_shopify.json",
      "category": "BIZ",
      "business_function": "sync",
      "trigger_type": "manual",
      "integrations": [
        "code",
        "odoo",
        "shopifyTrigger",
        "filter"
      ],
      "primary_integrations": [
        "odoo",
        "shopify"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.filter",
        "n8n-nodes-base.odoo",
        "n8n-nodes-base.shopifyTrigger",
        "n8n-nodes-base.odoo",
        "n8n-nodes-base.code"
      ],
      "business_description": "BIZ workflow that syncs data/processes using odoo, shopify, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "5ec2322573f7590007802e1f_Extranet_Releases.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/5ec2322573f7590007802e1f_Extranet_Releases.json",
      "workflow_name": "Extranet Releases",
      "suggested_filename": "comm_extranet_automate_slack_github.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "githubTrigger"
      ],
      "primary_integrations": [
        "slack",
        "github"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.slack",
        "n8n-nodes-base.githubTrigger"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, github, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "GWXjIqENWvx6OqvX_TEMPLATE_-_Multi_Methods_API_Endpoint.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/GWXjIqENWvx6OqvX_TEMPLATE_-_Multi_Methods_API_Endpoint.json",
      "workflow_name": "TEMPLATE - Multi Methods API Endpoint",
      "suggested_filename": "data_template_automate_webhook_airtable_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "airtable",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "airtable",
        "respondtowebhook"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "DATA workflow that automates data/processes using webhook, airtable, respondtowebhook, triggered via webhook",
      "complexity_score": 22
    },
    {
      "original_filename": "2090_workflow_2090.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2090_workflow_2090.json",
      "workflow_name": "2090_workflow_2090",
      "suggested_filename": "ai_2090_workflow_2090_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "postgresTool",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "postgres"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.postgresTool",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, postgres, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "2338_workflow_2338.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2338_workflow_2338.json",
      "workflow_name": "2338_workflow_2338",
      "suggested_filename": "ai_2338_workflow_2338_automate_n8nnodeslangchainoutputparserstructured_readwrite.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "readWriteFile",
        "n8n-nodes-langchain.toolCode",
        "splitOut",
        "extractFromFile",
        "code",
        "localFileTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "readwritefile",
        "n8n-nodes-langchain.code"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.localFileTrigger",
        "@n8n/n8n-nodes-langchain.toolCode",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolCode",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserstructured, readwritefile, n8n-nodes-langchain.code, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "Suggest meeting slots using AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Suggest meeting slots using AI.json",
      "workflow_name": "Calendar_scheduling",
      "suggested_filename": "ai_calendar_scheduling_automate_itemlists_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "itemLists",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "gmailTrigger",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.outputParserStructured",
        "gmail",
        "googleCalendar",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "itemlists",
        "n8n-nodes-langchain.chainllm",
        "gmail"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using itemlists, n8n-nodes-langchain.chainllm, gmail, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "GrGmuKzZAsCkd4bt_Send_TTS_(Text-to-speech)_voice_calls.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/GrGmuKzZAsCkd4bt_Send_TTS_(Text-to-speech)_voice_calls.json",
      "workflow_name": "Send TTS (Text-to-speech) voice calls",
      "suggested_filename": "util_send_automate_httprequest_form.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "formTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "form"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, form, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "29_workflow_29.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/29_workflow_29.json",
      "workflow_name": "29_workflow_29",
      "suggested_filename": "comm_29_workflow_29_automate_slack_emailsend.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "if",
        "emailSend",
        "typeformTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "slack",
        "emailsend",
        "typeform"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, emailsend, typeform, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "529_workflow_529.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/529_workflow_529.json",
      "workflow_name": "529_workflow_529",
      "suggested_filename": "util_529_workflow_529_automate_bitbucket.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "bitbucketTrigger"
      ],
      "primary_integrations": [
        "bitbucket"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.bitbucketTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using bitbucket, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "1546_Create_a_QuickBooks_invoice_on_a_new_Onfleet_Task_creation.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1546_Create_a_QuickBooks_invoice_on_a_new_Onfleet_Task_creation.json",
      "workflow_name": "Create a QuickBooks invoice on a new Onfleet Task creation",
      "suggested_filename": "biz_create_create_task_onfleet_quickbooks.json",
      "category": "BIZ",
      "business_function": "create_task",
      "trigger_type": "manual",
      "integrations": [
        "onfleetTrigger",
        "quickbooks"
      ],
      "primary_integrations": [
        "onfleet",
        "quickbooks"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.onfleetTrigger",
        "n8n-nodes-base.quickbooks"
      ],
      "business_description": "BIZ workflow that create_tasks data/processes using onfleet, quickbooks, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2120_workflow_2120.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2120_workflow_2120.json",
      "workflow_name": "2120_workflow_2120",
      "suggested_filename": "comm_2120_workflow_2120_automate_gmail_httprequest.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "noOp",
        "stickyNote",
        "gmail",
        "httpRequest",
        "hunter",
        "formTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "hunter"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.hunter",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, httprequest, hunter, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "3580_workflow_3580.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3580_workflow_3580.json",
      "workflow_name": "3580_workflow_3580",
      "suggested_filename": "data_3580_workflow_3580_automate_httprequest_googlesheets.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "code",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "googlesheets",
        "form"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, googlesheets, form, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "1374_workflow_1374.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1374_workflow_1374.json",
      "workflow_name": "1374_workflow_1374",
      "suggested_filename": "data_1374_workflow_1374_automate_notion_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "if",
        "set",
        "notion",
        "webhook",
        "function"
      ],
      "primary_integrations": [
        "notion",
        "webhook"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.function",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.if",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.set",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "DATA workflow that automates data/processes using notion, webhook, triggered via webhook",
      "complexity_score": 29
    },
    {
      "original_filename": "Hacker News Throwback Machine - See What Was Hot on This Day, Every Year!.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Hacker News Throwback Machine - See What Was Hot on This Day, Every Year!.json",
      "workflow_name": "Hacker News Throwback Machine - See What Was Hot on This Day, Every Year!",
      "suggested_filename": "ai_hacker_automate_n8nnodeslangchainchainllm_httprequest_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "telegram",
        "code",
        "aggregate",
        "html"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 13,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, httprequest, schedule, triggered via cron",
      "complexity_score": 24
    },
    {
      "original_filename": "133_Analyze_the_sentiment_of_feedback_and_send_a_message_on_Mattermost.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/133_Analyze_the_sentiment_of_feedback_and_send_a_message_on_Mattermost.json",
      "workflow_name": "Analyze the sentiment of feedback and send a message on Mattermost",
      "suggested_filename": "comm_analyze_analyze_googlecloudnaturallanguage_mattermost.json",
      "category": "COMM",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [
        "googleCloudNaturalLanguage",
        "noOp",
        "if",
        "mattermost",
        "typeformTrigger"
      ],
      "primary_integrations": [
        "googlecloudnaturallanguage",
        "mattermost",
        "typeform"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.googleCloudNaturalLanguage",
        "n8n-nodes-base.if",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "COMM workflow that analyzes data/processes using googlecloudnaturallanguage, mattermost, typeform, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "Analyze feedback and send a message on Mattermost.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Analyze feedback and send a message on Mattermost.json",
      "workflow_name": "Analyze the sentiment of feedback and send a message on Mattermost",
      "suggested_filename": "comm_analyze_analyze_googlecloudnaturallanguage_mattermost.json",
      "category": "COMM",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [
        "googleCloudNaturalLanguage",
        "noOp",
        "if",
        "mattermost",
        "typeformTrigger"
      ],
      "primary_integrations": [
        "googlecloudnaturallanguage",
        "mattermost",
        "typeform"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.googleCloudNaturalLanguage",
        "n8n-nodes-base.if",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "COMM workflow that analyzes data/processes using googlecloudnaturallanguage, mattermost, typeform, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "R4EuB1gx1IpMXCJM_CoinMarketCap_Crypto_Agent_Tool.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/R4EuB1gx1IpMXCJM_CoinMarketCap_Crypto_Agent_Tool.json",
      "workflow_name": "CoinMarketCap_Crypto_Agent_Tool",
      "suggested_filename": "ai_coinmarketcap_crypto_agent_tool_automate_n8nnodeslangchainmemorybufferwindow.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "2169_workflow_2169.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2169_workflow_2169.json",
      "workflow_name": "2169_workflow_2169",
      "suggested_filename": "data_2169_workflow_2169_automate_postgres_schedule_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "postgres",
        "set",
        "scheduleTrigger",
        "manualTrigger",
        "n8n",
        "filter"
      ],
      "primary_integrations": [
        "postgres",
        "schedule",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.n8n"
      ],
      "business_description": "DATA workflow that automates data/processes using postgres, schedule, manual, triggered via cron",
      "complexity_score": 12
    },
    {
      "original_filename": "2272_workflow_2272.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2272_workflow_2272.json",
      "workflow_name": "2272_workflow_2272",
      "suggested_filename": "comm_2272_workflow_2272_automate_postgres_splitinbatches_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "postgres",
        "splitInBatches",
        "slack",
        "wait",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "code",
        "aggregate"
      ],
      "primary_integrations": [
        "postgres",
        "splitinbatches",
        "slack"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.code",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.scheduleTrigger"
      ],
      "business_description": "COMM workflow that automates data/processes using postgres, splitinbatches, slack, triggered via cron",
      "complexity_score": 22
    },
    {
      "original_filename": "1750_workflow_1750.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1750_workflow_1750.json",
      "workflow_name": "1750_workflow_1750",
      "suggested_filename": "util_1750_workflow_1750_automate_webhook_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "webhook",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 9
    },
    {
      "original_filename": "2840_workflow_2840.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2840_workflow_2840.json",
      "workflow_name": "2840_workflow_2840",
      "suggested_filename": "ai_2840_workflow_2840_automate_n8nnodeslangchainmemorybufferwindow_splitinbatche.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "splitInBatches",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "noOp",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "extractFromFile",
        "manualTrigger",
        "googleDrive",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "zendesk"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "splitinbatches",
        "n8n-nodes-langchain.textsplittertokensplitter"
      ],
      "total_nodes": 26,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, splitinbatches, n8n-nodes-langchain.textsplittertokensplitter, triggered via manual",
      "complexity_score": 43
    },
    {
      "original_filename": "zeyTmqqmXaQIFWzV_OIDC_client_workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/zeyTmqqmXaQIFWzV_OIDC_client_workflow.json",
      "workflow_name": "OIDC client workflow",
      "suggested_filename": "util_oidc_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "code",
        "html",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "html"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.html",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, html, triggered via webhook",
      "complexity_score": 23
    },
    {
      "original_filename": "2990_Generate_Image_Workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2990_Generate_Image_Workflow.json",
      "workflow_name": "Generate Image Workflow",
      "suggested_filename": "util_generate_generate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "generate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that generates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "Venafi Cloud Slack Cert Bot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Venafi Cloud Slack Cert Bot.json",
      "workflow_name": "Venafi Cloud Slack Cert Bot",
      "suggested_filename": "ai_venafi_automate_venafitlsprotectcloud_slack_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "venafiTlsProtectCloud",
        "merge",
        "slack",
        "if",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "switch",
        "n8n-nodes-langchain.openAi",
        "executeWorkflow",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "venafitlsprotectcloud",
        "slack",
        "httprequest"
      ],
      "total_nodes": 38,
      "node_types": [
        "n8n-nodes-base.venafiTlsProtectCloud",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.venafiTlsProtectCloud",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook"
      ],
      "business_description": "AI workflow that automates data/processes using venafitlsprotectcloud, slack, httprequest, triggered via webhook",
      "complexity_score": 51
    },
    {
      "original_filename": "2566_workflow_2566.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2566_workflow_2566.json",
      "workflow_name": "2566_workflow_2566",
      "suggested_filename": "data_2566_workflow_2566_automate_n8nnodeslangchainmemorybufferwindow_respondtowe.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "respondToWebhook",
        "crypto",
        "if",
        "stickyNote",
        "set",
        "form",
        "n8n-nodes-langchain.memoryManager",
        "webhook",
        "splitOut",
        "n8n-nodes-langchain.agent",
        "googleSheets",
        "html",
        "n8n-nodes-langchain.lmChatGroq",
        "redis",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "respondtowebhook",
        "crypto"
      ],
      "total_nodes": 40,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.memoryManager",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.form",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.set",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.if",
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.form",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.html",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatGroq",
        "n8n-nodes-base.html",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis"
      ],
      "business_description": "DATA workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, respondtowebhook, crypto, triggered via webhook",
      "complexity_score": 56
    },
    {
      "original_filename": "__Content_Creator_Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/__Content_Creator_Agent.json",
      "workflow_name": "🤖Content Creator Agent",
      "suggested_filename": "ai_content_automate_n8nnodeslangchainhttprequest_n8nnodeslangchainlmchatanthropi.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.httprequest",
        "n8n-nodes-langchain.lmchatanthropic",
        "n8n-nodes-langchain.agent"
      ],
      "total_nodes": 6,
      "node_types": [
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.httprequest, n8n-nodes-langchain.lmchatanthropic, n8n-nodes-langchain.agent, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "Chat with local LLMs using n8n and Ollama.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Chat with local LLMs using n8n and Ollama.json",
      "workflow_name": "Chat with local LLMs using n8n and Ollama",
      "suggested_filename": "ai_chat_automate_n8nnodeslangchainchat_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.lmChatOllama"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.lmchatollama"
      ],
      "total_nodes": 5,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.lmchatollama, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "WUFuYk56jNNpjfZm_Real_Estate_Market_Scanning.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/WUFuYk56jNNpjfZm_Real_Estate_Market_Scanning.json",
      "workflow_name": "Real Estate Market Scanning",
      "suggested_filename": "comm_real_automate_slack_emailsend_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "stickyNote",
        "set",
        "emailSend",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "code",
        "filter"
      ],
      "primary_integrations": [
        "slack",
        "emailsend",
        "httprequest"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, emailsend, httprequest, triggered via cron",
      "complexity_score": 24
    },
    {
      "original_filename": "w434EiZ2z7klQAyp_Scrape_Trustpilot_Reviews_with_DeepSeek,_Analyze_Sentiment_with_OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/w434EiZ2z7klQAyp_Scrape_Trustpilot_Reviews_with_DeepSeek,_Analyze_Sentiment_with_OpenAI.json",
      "workflow_name": "Scrape Trustpilot Reviews with DeepSeek, Analyze Sentiment with OpenAI",
      "suggested_filename": "ai_scrape_analyze_httprequest_manual.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "n8n-nodes-langchain.informationExtractor",
        "limit",
        "n8n-nodes-langchain.lmChatOpenAi",
        "googleSheets",
        "n8n-nodes-langchain.sentimentAnalysis",
        "html"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "n8n-nodes-langchain.informationextractor"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.if",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.sentimentAnalysis",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that analyzes data/processes using httprequest, manual, n8n-nodes-langchain.informationextractor, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "Intelligent Web Query and Semantic Re-Ranking Flow using Brave and Google Gemini.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Intelligent Web Query and Semantic Re-Ranking Flow using Brave and Google Gemini.json",
      "workflow_name": "Intelligent Web Query and Semantic Re-Ranking Flow",
      "suggested_filename": "ai_intelligent_automate_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "dateTime",
        "stickyNote",
        "httpRequest",
        "webhook",
        "n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "code",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.code",
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via webhook",
      "complexity_score": 32
    },
    {
      "original_filename": "3954_workflow_3954.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3954_workflow_3954.json",
      "workflow_name": "3954_workflow_3954",
      "suggested_filename": "comm_3954_workflow_3954_automate_gmail_httprequest.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "gmail",
        "httpRequest",
        "form",
        "splitOut",
        "extractFromFile",
        "convertToFile",
        "html",
        "formTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "form"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.form",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.html",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.form",
        "n8n-nodes-base.if",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, httprequest, form, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "Customer Insights with Qdrant, Python and Information Extractor.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Customer Insights with Qdrant, Python and Information Extractor.json",
      "workflow_name": "Customer Insights with Qdrant, Python and Information Extractor",
      "suggested_filename": "ai_customer_extract_executeworkflow_httprequest.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "executeWorkflowTrigger",
        "set",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "code",
        "splitOut",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.informationExtractor",
        "googleSheets",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "html",
        "executeWorkflow",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "filter"
      ],
      "primary_integrations": [
        "executeworkflow",
        "httprequest",
        "n8n-nodes-langchain.embeddingsopenai"
      ],
      "total_nodes": 37,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.html",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that extracts data/processes using executeworkflow, httprequest, n8n-nodes-langchain.embeddingsopenai, triggered via manual",
      "complexity_score": 54
    },
    {
      "original_filename": "AI Crew to Automate Fundamental Stock Analysis - Q&A Workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Crew to Automate Fundamental Stock Analysis - Q&A Workflow.json",
      "workflow_name": "Stock Q&A Workflow",
      "suggested_filename": "ai_stock_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangchaindocumentbin.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "stickyNote",
        "n8n-nodes-langchain.documentBinaryInputLoader",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.manualChatTrigger",
        "webhook",
        "manualTrigger",
        "googleDrive",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.retrieverVectorStore",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "n8n-nodes-langchain.documentbinaryinputloader",
        "n8n-nodes-langchain.embeddingsopenai"
      ],
      "total_nodes": 17,
      "node_types": [
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.manualChatTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.documentBinaryInputLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainretrievalqa, n8n-nodes-langchain.documentbinaryinputloader, n8n-nodes-langchain.embeddingsopenai, triggered via webhook",
      "complexity_score": 30
    },
    {
      "original_filename": "Nfh274NHoDy7pB4M_Integrating_AI_with_Open-Meteo_API_for_Enhanced_Weather_Forecasting.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Nfh274NHoDy7pB4M_Integrating_AI_with_Open-Meteo_API_for_Enhanced_Weather_Forecasting.json",
      "workflow_name": "Integrating AI with Open-Meteo API for Enhanced Weather Forecasting",
      "suggested_filename": "ai_integrating_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainc.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.httprequest"
      ],
      "total_nodes": 12,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.httprequest, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "cRprVEUCjjvozkfb_Get_all_orders_in_Squarespace_to_Google_Sheets.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/cRprVEUCjjvozkfb_Get_all_orders_in_Squarespace_to_Google_Sheets.json",
      "workflow_name": "Get all orders in Squarespace to Google Sheets",
      "suggested_filename": "data_orders_read_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "read",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "manualTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "manual"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that reads data/processes using httprequest, schedule, manual, triggered via cron",
      "complexity_score": 15
    },
    {
      "original_filename": "3366_workflow_3366.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3366_workflow_3366.json",
      "workflow_name": "3366_workflow_3366",
      "suggested_filename": "comm_3366_workflow_3366_automate_crypto_gmail_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "crypto",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "markdown",
        "html",
        "scheduleTrigger",
        "googleDrive",
        "googleSheets",
        "removeDuplicates"
      ],
      "primary_integrations": [
        "crypto",
        "gmail",
        "httprequest"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.set",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using crypto, gmail, httprequest, triggered via cron",
      "complexity_score": 25
    },
    {
      "original_filename": "113_Create_an_deal_in_Pipedrive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/113_Create_an_deal_in_Pipedrive.json",
      "workflow_name": "Create an deal in Pipedrive",
      "suggested_filename": "biz_create_create_pipedrive_manual.json",
      "category": "BIZ",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "pipedrive",
        "manualTrigger"
      ],
      "primary_integrations": [
        "pipedrive",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.pipedrive"
      ],
      "business_description": "BIZ workflow that creates data/processes using pipedrive, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "95_Receive_updates_when_a_new_activity_gets_created_and_tweet_about_it.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/95_Receive_updates_when_a_new_activity_gets_created_and_tweet_about_it.json",
      "workflow_name": "Receive updates when a new activity gets created and tweet about it",
      "suggested_filename": "content_receive_create_strava_twitter.json",
      "category": "CONTENT",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "stravaTrigger",
        "twitter"
      ],
      "primary_integrations": [
        "strava",
        "twitter"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.stravaTrigger",
        "n8n-nodes-base.twitter"
      ],
      "business_description": "CONTENT workflow that creates data/processes using strava, twitter, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Handling Appointment Leads and Follow-up With Twilio, Cal.com and AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Handling Appointment Leads and Follow-up With Twilio, Cal.com and AI.json",
      "workflow_name": "Handling Appointment Leads and Follow-up With Twilio, Cal.com and AI",
      "suggested_filename": "ai_handling_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchain.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "scheduleTrigger",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "airtable",
        "n8n-nodes-langchain.agent",
        "switch",
        "twilioTrigger",
        "twilio"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 36,
      "node_types": [
        "n8n-nodes-base.twilioTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.twilio",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.twilio",
        "n8n-nodes-base.twilio",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via cron",
      "complexity_score": 48
    },
    {
      "original_filename": "AI Data Extraction with Dynamic Prompts and Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Data Extraction with Dynamic Prompts and Airtable.json",
      "workflow_name": "AI Data Extraction with Dynamic Prompts and Airtable",
      "suggested_filename": "ai_data_ai_process_splitinbatches_n8nnodeslangchainchainllm_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.chainLlm",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "extractFromFile",
        "code",
        "switch",
        "airtable",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chainllm",
        "httprequest"
      ],
      "total_nodes": 51,
      "node_types": [
        "n8n-nodes-base.switch",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, n8n-nodes-langchain.chainllm, httprequest, triggered via webhook",
      "complexity_score": 65
    },
    {
      "original_filename": "1807_workflow_1807.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1807_workflow_1807.json",
      "workflow_name": "1807_workflow_1807",
      "suggested_filename": "biz_1807_workflow_1807_automate_pipedrive_splitinbatches_cron.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "pipedrive",
        "merge",
        "splitInBatches",
        "itemLists",
        "if",
        "noOp",
        "set",
        "httpRequest",
        "functionItem",
        "zendesk",
        "cron"
      ],
      "primary_integrations": [
        "pipedrive",
        "splitinbatches",
        "itemlists"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.if",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.if"
      ],
      "business_description": "BIZ workflow that automates data/processes using pipedrive, splitinbatches, itemlists, triggered via cron",
      "complexity_score": 32
    },
    {
      "original_filename": "DvP6IHWymTIVg8Up_Store_Notion's_Pages_as_Vector_Documents_into_Supabase_with_OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/DvP6IHWymTIVg8Up_Store_Notion's_Pages_as_Vector_Documents_into_Supabase_with_OpenAI.json",
      "workflow_name": "Store Notion's Pages as Vector Documents into Supabase with OpenAI",
      "suggested_filename": "ai_store_ai_process_n8nnodeslangchaintextsplittertokensplitter_n8nnodeslangchain.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-langchain.vectorStoreSupabase",
        "stickyNote",
        "notion",
        "notionTrigger",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "summarize",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.textsplittertokensplitter",
        "n8n-nodes-langchain.vectorstoresupabase",
        "notion"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.notionTrigger",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.summarize",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.textsplittertokensplitter, n8n-nodes-langchain.vectorstoresupabase, notion, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "Flux AI Image Generator.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Flux AI Image Generator.json",
      "workflow_name": "Flux AI Image Generator",
      "suggested_filename": "ai_flux_ai_process_respondtowebhook_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "respondToWebhook",
        "stickyNote",
        "set",
        "httpRequest",
        "switch",
        "s3",
        "formTrigger"
      ],
      "primary_integrations": [
        "respondtowebhook",
        "httprequest",
        "form"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.s3",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch"
      ],
      "business_description": "AI workflow that ai_processs data/processes using respondtowebhook, httprequest, form, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "3304_workflow_3304.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3304_workflow_3304.json",
      "workflow_name": "3304_workflow_3304",
      "suggested_filename": "ai_3304_workflow_3304_automate_emailsend_form.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "emailSend",
        "form",
        "splitOut",
        "html",
        "n8n-nodes-langchain.openAi",
        "formTrigger"
      ],
      "primary_integrations": [
        "emailsend",
        "form",
        "html"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-brightdata.brightData",
        "n8n-nodes-document-generator.documentGenerator",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.form",
        "n8n-nodes-base.html",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.formTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using emailsend, form, html, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "Extract license plate number from image uploaded via an n8n form.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Extract license plate number from image uploaded via an n8n form.json",
      "workflow_name": "Image to license plate number",
      "suggested_filename": "util_image_automate_n8nnodeslangchainchainllm_form.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "set",
        "form",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "form",
        "n8n-nodes-langchain.lmchatopenrouter"
      ],
      "total_nodes": 5,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.form",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.formTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using n8n-nodes-langchain.chainllm, form, n8n-nodes-langchain.lmchatopenrouter, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "2380_workflow_2380.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2380_workflow_2380.json",
      "workflow_name": "2380_workflow_2380",
      "suggested_filename": "util_2380_workflow_2380_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, triggered via webhook",
      "complexity_score": 11
    },
    {
      "original_filename": "7_6.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/7_6.json",
      "workflow_name": "6",
      "suggested_filename": "biz_automate_hubspot_manual.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "hubspot",
        "manualTrigger"
      ],
      "primary_integrations": [
        "hubspot",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.hubspot"
      ],
      "business_description": "BIZ workflow that automates data/processes using hubspot, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "29P4X9mTSmplnjlJ_AI_Phone_Agent_with_RetellAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/29P4X9mTSmplnjlJ_AI_Phone_Agent_with_RetellAI.json",
      "workflow_name": "AI Phone Agent with RetellAI",
      "suggested_filename": "ai_phone_ai_process_n8nnodeslangchainoutputparserstructured_httprequest_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.outputParserStructured",
        "httpRequest",
        "telegram",
        "googleDrive",
        "filter",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.toolVectorStore",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "googleCalendar",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "respondToWebhook",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "set",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "webhook",
        "manualTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest",
        "telegram"
      ],
      "total_nodes": 36,
      "node_types": [
        "n8n-nodes-base.filter",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.googleCalendar",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.outputparserstructured, httprequest, telegram, triggered via webhook",
      "complexity_score": 55
    },
    {
      "original_filename": "2901_workflow_2901.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2901_workflow_2901.json",
      "workflow_name": "2901_workflow_2901",
      "suggested_filename": "data_2901_workflow_2901_automate_httprequest_notion.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "notion",
        "notionTrigger",
        "splitOut",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "notion",
        "notion"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.notionTrigger",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, notion, notion, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "2333_workflow_2333.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2333_workflow_2333.json",
      "workflow_name": "2333_workflow_2333",
      "suggested_filename": "util_2333_workflow_2333_automate_executeworkflow_n8nnodeslangchainchat.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "wait",
        "executeWorkflowTrigger",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.lmChatMistralCloud",
        "stickyNote",
        "manualTrigger",
        "n8n-nodes-langchain.toolWorkflow",
        "code",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "html",
        "n8n-nodes-langchain.embeddingsMistralCloud",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "executeworkflow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 33,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.html",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.html",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using executeworkflow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 50
    },
    {
      "original_filename": "2494_workflow_2494.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2494_workflow_2494.json",
      "workflow_name": "2494_workflow_2494",
      "suggested_filename": "util_2494_workflow_2494_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "3034_workflow_3034.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3034_workflow_3034.json",
      "workflow_name": "3034_workflow_3034",
      "suggested_filename": "comm_3034_workflow_3034_automate_splitinbatches_slack.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "merge",
        "slack",
        "noOp",
        "stickyNote",
        "set",
        "compareDatasets",
        "notion",
        "aggregate",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "slack",
        "comparedatasets"
      ],
      "total_nodes": 25,
      "node_types": [
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.set",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, slack, comparedatasets, triggered via manual",
      "complexity_score": 36
    },
    {
      "original_filename": "1_Add_a_event_to_Calender.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_Add_a_event_to_Calender.json",
      "workflow_name": "Add a event to Calender",
      "suggested_filename": "util_event_create_googlecalendar_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "googleCalendar",
        "manualTrigger"
      ],
      "primary_integrations": [
        "googlecalendar",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleCalendar"
      ],
      "business_description": "UTIL workflow that creates data/processes using googlecalendar, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Classify lemlist replies using OpenAI and automate reply handling.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Classify lemlist replies using OpenAI and automate reply handling.json",
      "workflow_name": "Classify lemlist replies using OpenAI and automate reply handling",
      "suggested_filename": "ai_classify_classify_slack_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "classify",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "slack",
        "n8n-nodes-langchain.chainLlm",
        "lemlist",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "lemlistTrigger",
        "httpRequest",
        "markdown",
        "n8n-nodes-langchain.lmChatOpenAi",
        "switch"
      ],
      "primary_integrations": [
        "slack",
        "n8n-nodes-langchain.chainllm",
        "lemlist"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.lemlistTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.lemlist",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that classifys data/processes using slack, n8n-nodes-langchain.chainllm, lemlist, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "aswQJmksAOmHmn8c_Fetch_the_Most_Recent_Document_from_Google_Drive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/aswQJmksAOmHmn8c_Fetch_the_Most_Recent_Document_from_Google_Drive.json",
      "workflow_name": "Fetch the Most Recent Document from Google Drive",
      "suggested_filename": "ai_fetch_extract_n8nnodeslangchaincalculator_googledocs.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.toolCalculator",
        "googleDocs",
        "stickyNote",
        "n8n-nodes-langchain.toolWikipedia",
        "googleSheets",
        "n8n-nodes-langchain.openAi",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.calculator",
        "googledocs",
        "n8n-nodes-langchain.wikipedia"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.googleDocs",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that extracts data/processes using n8n-nodes-langchain.calculator, googledocs, n8n-nodes-langchain.wikipedia, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "PtPKIqDlz5xrrvHP_Sync_Todoist_tasks_to_Notion.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/PtPKIqDlz5xrrvHP_Sync_Todoist_tasks_to_Notion.json",
      "workflow_name": "Sync Todoist tasks to Notion",
      "suggested_filename": "data_sync_sync_schedule_todoist_cron.json",
      "category": "DATA",
      "business_function": "sync",
      "trigger_type": "cron",
      "integrations": [
        "scheduleTrigger",
        "todoist",
        "notion"
      ],
      "primary_integrations": [
        "schedule",
        "todoist",
        "notion"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.todoist"
      ],
      "business_description": "DATA workflow that syncs data/processes using schedule, todoist, notion, triggered via cron",
      "complexity_score": 7
    },
    {
      "original_filename": "171_Insert_and_update_data_in_Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/171_Insert_and_update_data_in_Airtable.json",
      "workflow_name": "Insert and update data in Airtable",
      "suggested_filename": "ai_insert_ai_process_manual_airtable.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "manualTrigger",
        "airtable"
      ],
      "primary_integrations": [
        "manual",
        "airtable"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable"
      ],
      "business_description": "AI workflow that ai_processs data/processes using manual, airtable, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "48_Workflow_management.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/48_Workflow_management.json",
      "workflow_name": "Workflow management",
      "suggested_filename": "data_management_automate_splitinbatches_movebinarydata_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "moveBinaryData",
        "dropbox",
        "noOp",
        "if",
        "set",
        "httpRequest",
        "manualTrigger",
        "airtable",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "splitinbatches",
        "movebinarydata",
        "dropbox"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.function",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if"
      ],
      "business_description": "DATA workflow that automates data/processes using splitinbatches, movebinarydata, dropbox, triggered via cron",
      "complexity_score": 30
    },
    {
      "original_filename": "Organise Your Local File Directories With AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Organise Your Local File Directories With AI.json",
      "workflow_name": "Organise Your Local File Directories With AI",
      "suggested_filename": "ai_organise_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserst.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmChatMistralCloud",
        "executeCommand",
        "splitOut",
        "localFileTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.lmchatmistralcloud"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.localFileTrigger",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.lmchatmistralcloud, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "1_Twitter_notifications.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_Twitter_notifications.json",
      "workflow_name": "Twitter notifications",
      "suggested_filename": "comm_twitter_automate_cron_twitter_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "set",
        "cron",
        "twitter",
        "function",
        "mattermost"
      ],
      "primary_integrations": [
        "cron",
        "twitter",
        "mattermost"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.function",
        "n8n-nodes-base.set",
        "n8n-nodes-base.mattermost"
      ],
      "business_description": "COMM workflow that automates data/processes using cron, twitter, mattermost, triggered via cron",
      "complexity_score": 10
    },
    {
      "original_filename": "RKbQHfblpcvMGZ4w_Form_with_Dynamic_Dropdown_Field.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/RKbQHfblpcvMGZ4w_Form_with_Dynamic_Dropdown_Field.json",
      "workflow_name": "Form with Dynamic Dropdown Field",
      "suggested_filename": "data_form_automate_googlesheets_n8n.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "stickyNote",
        "set",
        "code",
        "n8n",
        "executeWorkflow",
        "googleSheetsTrigger",
        "formTrigger"
      ],
      "primary_integrations": [
        "googlesheets",
        "n8n",
        "executeworkflow"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, n8n, executeworkflow, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "cDmsWx8ASzIxE3zw_Update_all_Zammad_Roles_to_default_values.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/cDmsWx8ASzIxE3zw_Update_all_Zammad_Roles_to_default_values.json",
      "workflow_name": "Update all Zammad Roles to default values",
      "suggested_filename": "util_update_update_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "set",
        "httpRequest",
        "manualTrigger",
        "zammad",
        "convertToFile"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "zammad"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.zammad",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that updates data/processes using httprequest, manual, zammad, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "187_Create,_update_and_get_a_product_from_WooCommerce.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/187_Create,_update_and_get_a_product_from_WooCommerce.json",
      "workflow_name": "Create, update and get a product from WooCommerce",
      "suggested_filename": "ecommerce_create_create_woocommerce_manual.json",
      "category": "ECOMMERCE",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "wooCommerce",
        "manualTrigger"
      ],
      "primary_integrations": [
        "woocommerce",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.wooCommerce",
        "n8n-nodes-base.wooCommerce",
        "n8n-nodes-base.wooCommerce"
      ],
      "business_description": "ECOMMERCE workflow that creates data/processes using woocommerce, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "82_New_WooCommerce_refund_to_Slack.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/82_New_WooCommerce_refund_to_Slack.json",
      "workflow_name": "New WooCommerce refund to Slack",
      "suggested_filename": "comm_woocommerce_automate_slack_woocommerce.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "wooCommerceTrigger",
        "if"
      ],
      "primary_integrations": [
        "slack",
        "woocommerce"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.wooCommerceTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, woocommerce, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "NLOITjwt4iZK16Qq_Business_WhatsApp_AI_RAG_Chatbot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/NLOITjwt4iZK16Qq_Business_WhatsApp_AI_RAG_Chatbot.json",
      "workflow_name": "Business WhatsApp AI RAG Chatbot",
      "suggested_filename": "ai_business_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvect.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolVectorStore",
        "whatsApp",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "if",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "googleDrive",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.vectorstore",
        "whatsapp"
      ],
      "total_nodes": 28,
      "node_types": [
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.whatsApp",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.toolVectorStore"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.vectorstore, whatsapp, triggered via webhook",
      "complexity_score": 44
    },
    {
      "original_filename": "dMiUunCiaMsCr1Wu_📄🛠️PDF2Blog.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/dMiUunCiaMsCr1Wu_📄🛠️PDF2Blog.json",
      "workflow_name": "📄🛠️PDF2Blog",
      "suggested_filename": "ai_pdf2blog_automate_n8nnodeslangchainoutputparserstructured_ghost.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "noOp",
        "ghost",
        "n8n-nodes-langchain.lmChatOpenAi",
        "extractFromFile",
        "code",
        "n8n-nodes-langchain.agent",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "ghost",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.ghost",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserstructured, ghost, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "3690_workflow_3690.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3690_workflow_3690.json",
      "workflow_name": "3690_workflow_3690",
      "suggested_filename": "util_3690_workflow_3690_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "2802_workflow_2802.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2802_workflow_2802.json",
      "workflow_name": "2802_workflow_2802",
      "suggested_filename": "data_2802_workflow_2802_automate_splitinbatches_httprequest_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "noOp",
        "stickyNote",
        "httpRequest",
        "notion",
        "scheduleTrigger",
        "code",
        "switch",
        "function"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "notion"
      ],
      "total_nodes": 27,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.function",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using splitinbatches, httprequest, notion, triggered via cron",
      "complexity_score": 37
    },
    {
      "original_filename": "EnfvHdczSXHN8vNv_Resume_Screening_&_Behavioral_Interviews_with_Gemini,_Elevenlabs,_&_Notion_ATS_copy.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/EnfvHdczSXHN8vNv_Resume_Screening_&_Behavioral_Interviews_with_Gemini,_Elevenlabs,_&_Notion_ATS_copy.json",
      "workflow_name": "Resume Screening & Behavioral Interviews with Gemini, Elevenlabs, & Notion ATS copy",
      "suggested_filename": "ai_resume_automate_n8nnodeslangchainoutputparserstructured_httprequest_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.outputParserStructured",
        "wait",
        "httpRequest",
        "n8n-nodes-langchain.informationExtractor",
        "googleDrive",
        "extractFromFile",
        "filter",
        "n8n-nodes-langchain.agent",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "n8n-nodes-langchain.chainSummarization",
        "googleSheets",
        "notionTool",
        "set",
        "notion",
        "webhook",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest",
        "n8n-nodes-langchain.informationextractor"
      ],
      "total_nodes": 67,
      "node_types": [
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.filter",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.notionTool",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserstructured, httprequest, n8n-nodes-langchain.informationextractor, triggered via webhook",
      "complexity_score": 86
    },
    {
      "original_filename": "uLHpFu2ndN6ZKClZ_Sync_New_Files_From_Google_Drive_with_Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/uLHpFu2ndN6ZKClZ_Sync_New_Files_From_Google_Drive_with_Airtable.json",
      "workflow_name": "Sync New Files From Google Drive with Airtable",
      "suggested_filename": "ai_sync_ai_process_airtable_googledrive.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "airtable",
        "stickyNote",
        "googleDrive",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "airtable",
        "googledrive",
        "googledrive"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using airtable, googledrive, googledrive, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "2198_workflow_2198.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2198_workflow_2198.json",
      "workflow_name": "2198_workflow_2198",
      "suggested_filename": "ai_2198_workflow_2198_automate_splitinbatches_gmail_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "gmail",
        "stickyNote",
        "set",
        "httpRequest",
        "markdown",
        "scheduleTrigger",
        "limit",
        "code",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "splitinbatches",
        "gmail",
        "httprequest"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.scheduleTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, gmail, httprequest, triggered via cron",
      "complexity_score": 33
    },
    {
      "original_filename": "J2D0BssoDmn4BC6D_AI_Customer-Support_Assistant_·_WhatsApp_Ready_·_Works_for_Any_Business.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/J2D0BssoDmn4BC6D_AI_Customer-Support_Assistant_·_WhatsApp_Ready_·_Works_for_Any_Business.json",
      "workflow_name": "AI Customer-Support Assistant · WhatsApp Ready · Works for Any Business",
      "suggested_filename": "ai_customer_ai_process_whatsapp_n8nnodeslangchainmemorypostgreschat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "whatsApp",
        "n8n-nodes-langchain.memoryPostgresChat",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "code",
        "whatsAppTrigger"
      ],
      "primary_integrations": [
        "whatsapp",
        "n8n-nodes-langchain.memorypostgreschat",
        "n8n-nodes-langchain.httprequest"
      ],
      "total_nodes": 12,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.whatsAppTrigger",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.whatsApp",
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using whatsapp, n8n-nodes-langchain.memorypostgreschat, n8n-nodes-langchain.httprequest, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "2149_workflow_2149.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2149_workflow_2149.json",
      "workflow_name": "2149_workflow_2149",
      "suggested_filename": "util_2149_workflow_2149_automate_schedule_todoist_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "stickyNote",
        "scheduleTrigger",
        "code",
        "todoist",
        "filter"
      ],
      "primary_integrations": [
        "schedule",
        "todoist"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.todoist"
      ],
      "business_description": "UTIL workflow that automates data/processes using schedule, todoist, triggered via cron",
      "complexity_score": 19
    },
    {
      "original_filename": "heyKyETy1uK0xoX4_Optimize_Prompt.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/heyKyETy1uK0xoX4_Optimize_Prompt.json",
      "workflow_name": "Optimize Prompt",
      "suggested_filename": "ai_optimize_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainlmchat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "code",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "telegram",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.lmchatopenai",
        "n8n-nodes-langchain.agent"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.lmchatopenai, n8n-nodes-langchain.agent, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "541_workflow_541.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/541_workflow_541.json",
      "workflow_name": "541_workflow_541",
      "suggested_filename": "util_541_workflow_541_automate_jotform.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "jotFormTrigger"
      ],
      "primary_integrations": [
        "jotform"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.jotFormTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using jotform, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "AI Agent _ Google calendar assistant using OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Agent _ Google calendar assistant using OpenAI.json",
      "workflow_name": "AI Agent : Google calendar assistant using OpenAI",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "googleCalendarTool",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "googlecalendar"
      ],
      "total_nodes": 13,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, googlecalendar, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "sUGieRWulZJ7scll_Fetch_Squarespace_Blog_&_Event_Collections_to_Google_Sheets__.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/sUGieRWulZJ7scll_Fetch_Squarespace_Blog_&_Event_Collections_to_Google_Sheets__.json",
      "workflow_name": "Fetch Squarespace Blog & Event Collections to Google Sheets  ",
      "suggested_filename": "data_fetch_extract_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "extract",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "manualTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "manual"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that extracts data/processes using httprequest, schedule, manual, triggered via cron",
      "complexity_score": 13
    },
    {
      "original_filename": "119_Create,_update,_and_get_an_entry_in_Strapi.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/119_Create,_update,_and_get_an_entry_in_Strapi.json",
      "workflow_name": "Create, update, and get an entry in Strapi",
      "suggested_filename": "content_create_create_manual_strapi.json",
      "category": "CONTENT",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "manualTrigger",
        "strapi"
      ],
      "primary_integrations": [
        "manual",
        "strapi"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.strapi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.strapi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.strapi"
      ],
      "business_description": "CONTENT workflow that creates data/processes using manual, strapi, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "fW6PV9IaePKSMGbN_Unique_QRcode_coupon_assignment_and_validation_for_Lead_Generation_system.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/fW6PV9IaePKSMGbN_Unique_QRcode_coupon_assignment_and_validation_for_Lead_Generation_system.json",
      "workflow_name": "Unique QRcode coupon assignment and validation for Lead Generation system",
      "suggested_filename": "biz_unique_automate_respondtowebhook_emailsend_webhook.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "respondToWebhook",
        "if",
        "stickyNote",
        "set",
        "emailSend",
        "httpRequest",
        "webhook",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "respondtowebhook",
        "emailsend",
        "httprequest"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "BIZ workflow that automates data/processes using respondtowebhook, emailsend, httprequest, triggered via webhook",
      "complexity_score": 38
    },
    {
      "original_filename": "Automated End-to-End Fine-Tuning of OpenAI Models with Google Drive Integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Automated End-to-End Fine-Tuning of OpenAI Models with Google Drive Integration.json",
      "workflow_name": "Fine-tuning with OpenAI models",
      "suggested_filename": "ai_fine_ai_process_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "googleDrive",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chat, httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "1770_workflow_1770.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1770_workflow_1770.json",
      "workflow_name": "1770_workflow_1770",
      "suggested_filename": "comm_1770_workflow_1770_automate_hubspot_mailchimp_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "hubspot",
        "mailchimp",
        "cron"
      ],
      "primary_integrations": [
        "hubspot",
        "mailchimp",
        "cron"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.mailchimp"
      ],
      "business_description": "COMM workflow that automates data/processes using hubspot, mailchimp, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "2676_workflow_2676.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2676_workflow_2676.json",
      "workflow_name": "2676_workflow_2676",
      "suggested_filename": "comm_2676_workflow_2676_automate_httprequest_webhook_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "if",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "aggregate",
        "webhook",
        "limit",
        "code",
        "microsoftOutlookTrigger",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "limit"
      ],
      "total_nodes": 41,
      "node_types": [
        "n8n-nodes-base.microsoftOutlookTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, webhook, limit, triggered via webhook",
      "complexity_score": 53
    },
    {
      "original_filename": "Reddit AI digest.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Reddit AI digest.json",
      "workflow_name": "Reddit AI digest",
      "suggested_filename": "ai_reddit_ai_process_reddit_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "reddit",
        "if",
        "stickyNote",
        "set",
        "manualTrigger",
        "openAi"
      ],
      "primary_integrations": [
        "reddit",
        "manual",
        "openai"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.reddit",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using reddit, manual, openai, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "Xk0W98z9DVrNHeku_AI-Powered_Information_Monitoring_with_OpenAI,_Google_Sheets,_Jina_AI_and_Slack.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Xk0W98z9DVrNHeku_AI-Powered_Information_Monitoring_with_OpenAI,_Google_Sheets,_Jina_AI_and_Slack.json",
      "workflow_name": "AI-Powered Information Monitoring with OpenAI, Google Sheets, Jina AI and Slack",
      "suggested_filename": "ai_powered_ai_process_slack_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "n8n-nodes-langchain.chainLlm",
        "noOp",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "set",
        "httpRequest",
        "rssFeedRead",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "slack",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.textclassifier"
      ],
      "total_nodes": 31,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.rssFeedRead",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using slack, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.textclassifier, triggered via cron",
      "complexity_score": 44
    },
    {
      "original_filename": "AI-Generated Summary Block for WordPress Posts.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI-Generated Summary Block for WordPress Posts.json",
      "workflow_name": "AI-Generated Summary Block for WordPress Posts - with OpenAI, WordPress, Google Sheets & Slack",
      "suggested_filename": "ai_generated_generate_splitinbatches_wordpress_webhook.json",
      "category": "AI",
      "business_function": "generate",
      "trigger_type": "webhook",
      "integrations": [
        "splitInBatches",
        "wordpress",
        "slack",
        "if",
        "dateTime",
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "set",
        "httpRequest",
        "noOp",
        "markdown",
        "scheduleTrigger",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "googleSheets",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "splitinbatches",
        "wordpress",
        "slack"
      ],
      "total_nodes": 32,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.if",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.markdown",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.wordpress"
      ],
      "business_description": "AI workflow that generates data/processes using splitinbatches, wordpress, slack, triggered via webhook",
      "complexity_score": 49
    },
    {
      "original_filename": "1739_workflow_1739.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1739_workflow_1739.json",
      "workflow_name": "1739_workflow_1739",
      "suggested_filename": "comm_1739_workflow_1739_automate_spreadsheetfile_gmail.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "gmail",
        "set",
        "writeBinaryFile",
        "httpRequest",
        "stickyNote",
        "googleSheets",
        "moveBinaryData"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "gmail",
        "writebinaryfile"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.writeBinaryFile",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using spreadsheetfile, gmail, writebinaryfile, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "166_Receive_messages_from_a_topic_and_send_an_SMS.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/166_Receive_messages_from_a_topic_and_send_an_SMS.json",
      "workflow_name": "Receive messages from a topic and send an SMS",
      "suggested_filename": "comm_receive_automate_vonage_kafka.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "vonage",
        "kafkaTrigger",
        "if"
      ],
      "primary_integrations": [
        "vonage",
        "kafka"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.kafkaTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.vonage",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "COMM workflow that automates data/processes using vonage, kafka, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "744G7emgZe0pXaPB_Hacker_News_to_Video_Template_-_AlexK1919.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/744G7emgZe0pXaPB_Hacker_News_to_Video_Template_-_AlexK1919.json",
      "workflow_name": "Hacker News to Video Template - AlexK1919",
      "suggested_filename": "ai_hacker_automate_n8nnodeslangchainoutputparserstructured_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserStructured",
        "wait",
        "httpRequest",
        "googleDrive",
        "hackerNews",
        "splitInBatches",
        "n8n-nodes-langchain.lmChatOpenAi",
        "microsoftOneDrive",
        "limit",
        "n8n-nodes-langchain.agent",
        "dropbox",
        "n8n-nodes-langchain.openAi",
        "youTube",
        "twitter",
        "if",
        "stickyNote",
        "linkedIn",
        "n8n-nodes-langchain.toolHttpRequest",
        "s3",
        "set",
        "manualTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest",
        "googledrive"
      ],
      "total_nodes": 48,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.hackerNews",
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.s3",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.limit",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.wait",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.microsoftOneDrive",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.linkedIn",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserstructured, httprequest, googledrive, triggered via manual",
      "complexity_score": 69
    },
    {
      "original_filename": "1440_workflow_1440.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1440_workflow_1440.json",
      "workflow_name": "1440_workflow_1440",
      "suggested_filename": "util_1440_workflow_1440_automate_webhook_crypto_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "set",
        "webhook",
        "crypto"
      ],
      "primary_integrations": [
        "webhook",
        "crypto"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, crypto, triggered via webhook",
      "complexity_score": 6
    },
    {
      "original_filename": "Spot Workplace Discrimination Patterns with AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Spot Workplace Discrimination Patterns with AI.json",
      "workflow_name": "Spot Workplace Discrimination Patterns with AI",
      "suggested_filename": "ai_spot_ai_process_n8nnodeslangchainchainllm_quickchart.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "quickChart",
        "set",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.informationExtractor",
        "code",
        "html"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "quickchart",
        "httprequest"
      ],
      "total_nodes": 38,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.html",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.quickChart",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, quickchart, httprequest, triggered via manual",
      "complexity_score": 49
    },
    {
      "original_filename": "Generate Text-to-Speech Using Elevenlabs via API.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Generate Text-to-Speech Using Elevenlabs via API.json",
      "workflow_name": "Generate Text-to-Speech Using Elevenlabs via API",
      "suggested_filename": "util_generate_generate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "generate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "httpRequest",
        "webhook",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook"
      ],
      "business_description": "UTIL workflow that generates data/processes using httprequest, webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 11
    },
    {
      "original_filename": "82_Create_a_new_list,_add_a_new_contact_to_the_list,_update_the_contact,_and_get_all_contacts_in_the_list.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/82_Create_a_new_list,_add_a_new_contact_to_the_list,_update_the_contact,_and_get_all_contacts_in_the_list.json",
      "workflow_name": "Create a new list, add a new contact to the list, update the contact, and get all contacts in the list",
      "suggested_filename": "util_create_create_contact_manual_automizy.json",
      "category": "UTIL",
      "business_function": "create_contact",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "automizy"
      ],
      "primary_integrations": [
        "manual",
        "automizy"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.automizy",
        "n8n-nodes-base.automizy",
        "n8n-nodes-base.automizy",
        "n8n-nodes-base.automizy"
      ],
      "business_description": "UTIL workflow that create_contacts data/processes using manual, automizy, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "Chat with OpenAIs GPT via a simple Telegram Bot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Chat with OpenAIs GPT via a simple Telegram Bot.json",
      "workflow_name": "Chat with OpenAIs GPT via a simple Telegram Bot",
      "suggested_filename": "ai_chat_ai_process_n8nnodeslangchainlmchatopenai_telegram.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "telegramTrigger",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmchatopenai",
        "telegram",
        "telegram"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.lmchatopenai, telegram, telegram, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "WulUYgcXvako9hBy_Testing_Mulitple_Local_LLM_with_LM_Studio.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/WulUYgcXvako9hBy_Testing_Mulitple_Local_LLM_with_LM_Studio.json",
      "workflow_name": "Testing Mulitple Local LLM with LM Studio",
      "suggested_filename": "ai_testing_automate_n8nnodeslangchainchainllm_datetime.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "dateTime",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "datetime",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, datetime, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 31
    },
    {
      "original_filename": "dYjQS1bJmVSAxNnj_BambooHR_AI-Powered_Company_Policies_and_Benefits_Chatbot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/dYjQS1bJmVSAxNnj_BambooHR_AI-Powered_Company_Policies_and_Benefits_Chatbot.json",
      "workflow_name": "BambooHR AI-Powered Company Policies and Benefits Chatbot",
      "suggested_filename": "ai_bamboohr_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchain.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-langchain.informationExtractor",
        "aggregate",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "filter",
        "bambooHr",
        "n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.toolVectorStore",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "executeWorkflowTrigger",
        "n8n-nodes-langchain.memoryBufferWindow",
        "set",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "splitOut",
        "manualTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.informationextractor"
      ],
      "total_nodes": 50,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.bambooHr",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.bambooHr",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.bambooHr",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.bambooHr",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.bambooHr",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.informationextractor, triggered via manual",
      "complexity_score": 73
    },
    {
      "original_filename": "Remove Personally Identifiable Information (PII) from CSV Files with OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Remove Personally Identifiable Information (PII) from CSV Files with OpenAI.json",
      "workflow_name": "Remove Personally Identifiable Information (PII) from CSV Files with OpenAI",
      "suggested_filename": "ai_remove_ai_process_extractfromfile_googledrive.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "code",
        "splitOut",
        "extractFromFile",
        "googleDrive",
        "n8n-nodes-langchain.openAi",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "extractfromfile",
        "googledrive",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using extractfromfile, googledrive, n8n-nodes-langchain.openai, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "80_New_WooCommerce_product_to_Slack.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/80_New_WooCommerce_product_to_Slack.json",
      "workflow_name": "New WooCommerce product to Slack",
      "suggested_filename": "comm_woocommerce_automate_slack_woocommerce.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "wooCommerceTrigger"
      ],
      "primary_integrations": [
        "slack",
        "woocommerce"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.wooCommerceTrigger",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, woocommerce, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "3621_workflow_3621.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3621_workflow_3621.json",
      "workflow_name": "3621_workflow_3621",
      "suggested_filename": "comm_3621_workflow_3621_automate_httprequest_schedule_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "telegram",
        "function"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "telegram"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.function",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, schedule, telegram, triggered via cron",
      "complexity_score": 14
    },
    {
      "original_filename": "2281_workflow_2281.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2281_workflow_2281.json",
      "workflow_name": "2281_workflow_2281",
      "suggested_filename": "data_2281_workflow_2281_automate_wordpress_httprequest_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "wordpress",
        "stickyNote",
        "set",
        "httpRequest",
        "markdown",
        "scheduleTrigger",
        "airtable",
        "filter"
      ],
      "primary_integrations": [
        "wordpress",
        "httprequest",
        "markdown"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using wordpress, httprequest, markdown, triggered via cron",
      "complexity_score": 21
    },
    {
      "original_filename": "2129_workflow_2129.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2129_workflow_2129.json",
      "workflow_name": "2129_workflow_2129",
      "suggested_filename": "biz_2129_workflow_2129_automate_hubspot_calendly.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "hubspot",
        "calendlyTrigger",
        "noOp",
        "if",
        "stickyNote",
        "clearbit",
        "filter"
      ],
      "primary_integrations": [
        "hubspot",
        "calendly",
        "clearbit"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.clearbit",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.clearbit",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.if",
        "n8n-nodes-base.calendlyTrigger"
      ],
      "business_description": "BIZ workflow that automates data/processes using hubspot, calendly, clearbit, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "ViCY8FzVGcRsxVcK_Sell_a_Used_Car.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ViCY8FzVGcRsxVcK_Sell_a_Used_Car.json",
      "workflow_name": "Sell a Used Car",
      "suggested_filename": "util_sell_automate_airtop_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "set",
        "airtop",
        "manualTrigger",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "airtop",
        "manual"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.code",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop"
      ],
      "business_description": "UTIL workflow that automates data/processes using airtop, manual, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "88_Get_the_current_weather_data_for_a_city.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/88_Get_the_current_weather_data_for_a_city.json",
      "workflow_name": "Get the current weather data for a city",
      "suggested_filename": "data_current_read_openweathermap_manual.json",
      "category": "DATA",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "openWeatherMap",
        "manualTrigger"
      ],
      "primary_integrations": [
        "openweathermap",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.openWeatherMap"
      ],
      "business_description": "DATA workflow that reads data/processes using openweathermap, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "U8EOTtZvmZPMYc6m_Agentic_Telegram_AI_bot_with_LangChain_nodes_and_new_tools.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/U8EOTtZvmZPMYc6m_Agentic_Telegram_AI_bot_with_LangChain_nodes_and_new_tools.json",
      "workflow_name": "Agentic Telegram AI bot with LangChain nodes and new tools",
      "suggested_filename": "ai_agentic_ai_process_n8nnodeslangchainmemorybufferwindow_telegram.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "telegramTool",
        "stickyNote",
        "n8n-nodes-langchain.toolHttpRequest",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "telegram",
        "n8n-nodes-langchain.httprequest"
      ],
      "total_nodes": 8,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegramTool",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, telegram, n8n-nodes-langchain.httprequest, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "i8nBvPOtFYWk5eoq_Get_PDF_with_JSReport.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/i8nBvPOtFYWk5eoq_Get_PDF_with_JSReport.json",
      "workflow_name": "Get PDF with JSReport",
      "suggested_filename": "comm_jsreport_read_gmail_httprequest.json",
      "category": "COMM",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "gmail",
        "stickyNote",
        "httpRequest",
        "formTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "form"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "COMM workflow that reads data/processes using gmail, httprequest, form, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "3186_workflow_3186.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3186_workflow_3186.json",
      "workflow_name": "3186_workflow_3186",
      "suggested_filename": "util_3186_workflow_3186_automate_stopanderror_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "stopAndError",
        "webhook",
        "switch"
      ],
      "primary_integrations": [
        "stopanderror",
        "webhook"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using stopanderror, webhook, triggered via webhook",
      "complexity_score": 21
    },
    {
      "original_filename": "613_workflow_613.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/613_workflow_613.json",
      "workflow_name": "613_workflow_613",
      "suggested_filename": "comm_613_workflow_613_automate_webhook_mattermost_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "set",
        "webhook",
        "mattermost"
      ],
      "primary_integrations": [
        "webhook",
        "mattermost"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.mattermost"
      ],
      "business_description": "COMM workflow that automates data/processes using webhook, mattermost, triggered via webhook",
      "complexity_score": 6
    },
    {
      "original_filename": "IT Ops AI SlackBot Workflow - Chat with your knowledge base.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/IT Ops AI SlackBot Workflow - Chat with your knowledge base.json",
      "workflow_name": "IT Ops AI SlackBot Workflow - Chat with your knowledge base",
      "suggested_filename": "ai_slackbot_ai_process_n8nnodeslangchainmemorybufferwindow_slack_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "slack",
        "if",
        "noOp",
        "stickyNote",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "slack",
        "webhook"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, slack, webhook, triggered via webhook",
      "complexity_score": 30
    },
    {
      "original_filename": "XYz1JYUXFHFVdlLj_Restore_your_workflows_from_GitHub.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/XYz1JYUXFHFVdlLj_Restore_your_workflows_from_GitHub.json",
      "workflow_name": "Restore your workflows from GitHub",
      "suggested_filename": "ops_restore_automate_httprequest_manual.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "github",
        "extractFromFile",
        "n8n"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "github"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.github",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.n8n"
      ],
      "business_description": "OPS workflow that automates data/processes using httprequest, manual, github, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "8Sbrzc7Au3ZGf62p_Publish_Videos_&_Images_-_Blotato.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/8Sbrzc7Au3ZGf62p_Publish_Videos_&_Images_-_Blotato.json",
      "workflow_name": "Publish Videos & Images - Blotato",
      "suggested_filename": "ai_publish_automate_httprequest_manual.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "airtable",
        "code",
        "n8n-nodes-langchain.openAi",
        "formTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "airtable"
      ],
      "total_nodes": 30,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, manual, airtable, triggered via manual",
      "complexity_score": 38
    },
    {
      "original_filename": "AI Agent to chat with Supabase_PostgreSQL DB.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Agent to chat with Supabase_PostgreSQL DB.json",
      "workflow_name": "AI Agent to chat with Supabase_PostgreSQL DB",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainchat_postgres.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "postgresTool",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "postgres",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.postgresTool",
        "n8n-nodes-base.postgresTool",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.postgresTool"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chat, postgres, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "69_Creating_your_first_workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/69_Creating_your_first_workflow.json",
      "workflow_name": "Creating your first workflow",
      "suggested_filename": "util_creating_automate_openweathermap_cron_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "noOp",
        "if",
        "openWeatherMap",
        "cron",
        "twilio"
      ],
      "primary_integrations": [
        "openweathermap",
        "cron",
        "twilio"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.openWeatherMap",
        "n8n-nodes-base.if",
        "n8n-nodes-base.twilio",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "UTIL workflow that automates data/processes using openweathermap, cron, twilio, triggered via cron",
      "complexity_score": 10
    },
    {
      "original_filename": "NPGAfBzz4nv8lTpl_Save_New_Sales_Opportunities.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/NPGAfBzz4nv8lTpl_Save_New_Sales_Opportunities.json",
      "workflow_name": "Save New Sales Opportunities",
      "suggested_filename": "ai_save_automate_gmail_n8nnodeslangchainlmopenai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "gmailTrigger",
        "stickyNote",
        "n8n-nodes-langchain.lmOpenAi",
        "n8n-nodes-langchain.chainSummarization",
        "odoo"
      ],
      "primary_integrations": [
        "gmail",
        "n8n-nodes-langchain.lmopenai",
        "n8n-nodes-langchain.chainsummarization"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.odoo",
        "@n8n/n8n-nodes-langchain.lmOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainSummarization"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, n8n-nodes-langchain.lmopenai, n8n-nodes-langchain.chainsummarization, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "API Schema Extractor.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/API Schema Extractor.json",
      "workflow_name": "API Schema Extractor",
      "suggested_filename": "ai_schema_extract_httprequest_n8nnodeslangchaininformationextractor.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "httpRequest",
        "n8n-nodes-langchain.informationExtractor",
        "googleDrive",
        "aggregate",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "filter",
        "splitInBatches",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "removeDuplicates",
        "executeWorkflow",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "googleSheets",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "executeWorkflowTrigger",
        "executionData",
        "set",
        "n8n-nodes-langchain.embeddingsGoogleGemini",
        "splitOut",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.informationextractor",
        "googledrive"
      ],
      "total_nodes": 88,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.executionData",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.code",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that extracts data/processes using httprequest, n8n-nodes-langchain.informationextractor, googledrive, triggered via manual",
      "complexity_score": 113
    },
    {
      "original_filename": "140_Get_today's_date_and_day_using_the_Function_node.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/140_Get_today's_date_and_day_using_the_Function_node.json",
      "workflow_name": "Get today's date and day using the Function node",
      "suggested_filename": "util_today_read_manual.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "function",
        "manualTrigger"
      ],
      "primary_integrations": [
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.function"
      ],
      "business_description": "UTIL workflow that reads data/processes using manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Summarize Umami data with AI (via Openrouter) and save it to Baserow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Summarize Umami data with AI (via Openrouter) and save it to Baserow.json",
      "workflow_name": "Umami analytics template",
      "suggested_filename": "analytics_umami_automate_httprequest_schedule_cron.json",
      "category": "ANALYTICS",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "baserow",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "baserow"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.baserow"
      ],
      "business_description": "ANALYTICS workflow that automates data/processes using httprequest, schedule, baserow, triggered via cron",
      "complexity_score": 23
    },
    {
      "original_filename": "2219_workflow_2219.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2219_workflow_2219.json",
      "workflow_name": "2219_workflow_2219",
      "suggested_filename": "ai_2219_workflow_2219_automate_gmail_gmail.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "gmailTrigger",
        "gmail",
        "stickyNote",
        "n8n-nodes-langchain.chainSummarization",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "code",
        "aggregate",
        "convertToFile"
      ],
      "primary_integrations": [
        "gmail",
        "gmail",
        "n8n-nodes-langchain.chainsummarization"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, gmail, n8n-nodes-langchain.chainsummarization, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "Build an OpenAI Assistant with Google Drive Integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Build an OpenAI Assistant with Google Drive Integration.json",
      "workflow_name": "Build an OpenAI Assistant with Google Drive Integration",
      "suggested_filename": "ai_build_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "manualTrigger",
        "googleDrive",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "manual"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, manual, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "540_workflow_540.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/540_workflow_540.json",
      "workflow_name": "540_workflow_540",
      "suggested_filename": "util_540_workflow_540_automate_calendly.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "calendlyTrigger"
      ],
      "primary_integrations": [
        "calendly"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.calendlyTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using calendly, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "nkMjcOC4hpte1a0t_Extract_spend_details_(template).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/nkMjcOC4hpte1a0t_Extract_spend_details_(template).json",
      "workflow_name": "Extract spend details (template)",
      "suggested_filename": "ai_extract_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "gmailTrigger",
        "stickyNote",
        "set",
        "splitOut",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "extractFromFile",
        "switch",
        "googleSheets",
        "html",
        "n8n-nodes-langchain.lmChatGroq"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.html",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.lmChatGroq",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, gmail, triggered via manual",
      "complexity_score": 37
    },
    {
      "original_filename": "85_New_WooCommerce_Product_to_Twitter_and_Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/85_New_WooCommerce_Product_to_Twitter_and_Telegram.json",
      "workflow_name": "New WooCommerce Product to Twitter and Telegram",
      "suggested_filename": "comm_woocommerce_automate_woocommerce_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wooCommerceTrigger",
        "telegram",
        "twitter"
      ],
      "primary_integrations": [
        "woocommerce",
        "telegram",
        "twitter"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.wooCommerceTrigger"
      ],
      "business_description": "COMM workflow that automates data/processes using woocommerce, telegram, twitter, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "1788_workflow_1788.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1788_workflow_1788.json",
      "workflow_name": "1788_workflow_1788",
      "suggested_filename": "biz_1788_workflow_1788_automate_pipedrive_github.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "pipedrive",
        "githubTrigger",
        "if",
        "set",
        "httpRequest"
      ],
      "primary_integrations": [
        "pipedrive",
        "github",
        "httprequest"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.githubTrigger",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.pipedrive"
      ],
      "business_description": "BIZ workflow that automates data/processes using pipedrive, github, httprequest, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "Recipe Recommendations with Qdrant and Mistral.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Recipe Recommendations with Qdrant and Mistral.json",
      "workflow_name": "Recipe Recommendations with Qdrant and Mistral",
      "suggested_filename": "util_recipe_automate_generic.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [],
      "primary_integrations": [],
      "total_nodes": 0,
      "node_types": [],
      "business_description": "UTIL workflow that automates data/processes using generic components, triggered via manual",
      "complexity_score": 0
    },
    {
      "original_filename": "516_workflow_516.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/516_workflow_516.json",
      "workflow_name": "516_workflow_516",
      "suggested_filename": "comm_516_workflow_516_automate_mailchimp.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "mailchimpTrigger"
      ],
      "primary_integrations": [
        "mailchimp"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.mailchimpTrigger"
      ],
      "business_description": "COMM workflow that automates data/processes using mailchimp, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "3205_workflow_3205.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3205_workflow_3205.json",
      "workflow_name": "3205_workflow_3205",
      "suggested_filename": "util_3205_workflow_3205_automate_httprequest_schedule_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "if",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "readWriteFile",
        "splitOut",
        "manualTrigger",
        "extractFromFile",
        "convertToFile"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "readwritefile"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, schedule, readwritefile, triggered via cron",
      "complexity_score": 36
    },
    {
      "original_filename": "Automate Your RFP Process with OpenAI Assistants.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Automate Your RFP Process with OpenAI Assistants.json",
      "workflow_name": "Automate Your RFP Process with OpenAI Assistants",
      "suggested_filename": "ai_automate_ai_process_splitinbatches_slack_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "splitInBatches",
        "slack",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserItemList",
        "stickyNote",
        "set",
        "googleDocs",
        "gmail",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "extractFromFile",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "splitinbatches",
        "slack",
        "n8n-nodes-langchain.chainllm"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.outputParserItemList",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, slack, n8n-nodes-langchain.chainllm, triggered via webhook",
      "complexity_score": 35
    },
    {
      "original_filename": "1334_workflow_1334.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1334_workflow_1334.json",
      "workflow_name": "1334_workflow_1334",
      "suggested_filename": "biz_1334_workflow_1334_automate_pipedrive_hubspot_cron.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "pipedrive",
        "hubspot",
        "merge",
        "cron"
      ],
      "primary_integrations": [
        "pipedrive",
        "hubspot",
        "cron"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.cron"
      ],
      "business_description": "BIZ workflow that automates data/processes using pipedrive, hubspot, cron, triggered via cron",
      "complexity_score": 9
    },
    {
      "original_filename": "4_Email.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/4_Email.json",
      "workflow_name": "Email",
      "suggested_filename": "ai_email_ai_process_emailreadimap_cortex.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "emailReadImap",
        "if",
        "cortex",
        "theHive"
      ],
      "primary_integrations": [
        "emailreadimap",
        "cortex",
        "thehive"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.theHive",
        "n8n-nodes-base.theHive",
        "n8n-nodes-base.theHive",
        "n8n-nodes-base.theHive",
        "n8n-nodes-base.theHive",
        "n8n-nodes-base.cortex",
        "n8n-nodes-base.if",
        "n8n-nodes-base.theHive",
        "n8n-nodes-base.theHive",
        "n8n-nodes-base.theHive",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.theHive",
        "n8n-nodes-base.theHive",
        "n8n-nodes-base.theHive"
      ],
      "business_description": "AI workflow that ai_processs data/processes using emailreadimap, cortex, thehive, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "2160_workflow_2160.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2160_workflow_2160.json",
      "workflow_name": "2160_workflow_2160",
      "suggested_filename": "comm_2160_workflow_2160_automate_error_gmail.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "errorTrigger",
        "stickyNote",
        "gmail"
      ],
      "primary_integrations": [
        "error",
        "gmail"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.errorTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "COMM workflow that automates data/processes using error, gmail, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "33_Receive_updates_for_support_in_Zendesk.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/33_Receive_updates_for_support_in_Zendesk.json",
      "workflow_name": "Receive updates for support in Zendesk",
      "suggested_filename": "util_receive_update_zendesk.json",
      "category": "UTIL",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "zendeskTrigger"
      ],
      "primary_integrations": [
        "zendesk"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.zendeskTrigger"
      ],
      "business_description": "UTIL workflow that updates data/processes using zendesk, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "sczRNO4u1HYc5YV7_Extract_&_Summarize_Wikipedia_Data_with_Bright_Data_and_Gemini_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/sczRNO4u1HYc5YV7_Extract_&_Summarize_Wikipedia_Data_with_Bright_Data_and_Gemini_AI.json",
      "workflow_name": "Extract & Summarize Wikipedia Data with Bright Data and Gemini AI",
      "suggested_filename": "ai_extract_ai_process_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "manualTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "n8n-nodes-langchain.chainsummarization"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, httprequest, n8n-nodes-langchain.chainsummarization, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "3709_workflow_3709.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3709_workflow_3709.json",
      "workflow_name": "3709_workflow_3709",
      "suggested_filename": "util_3709_workflow_3709_automate_manual_googledrive.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "manualTrigger",
        "googleDrive",
        "code",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "manual",
        "googledrive",
        "executeworkflow"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, googledrive, executeworkflow, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "AlEVIPHR3dMJkYWt_Monitor_USDT_ERC-20_Wallet_Balance_with_Etherscan_and_Telegram_Notifications.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AlEVIPHR3dMJkYWt_Monitor_USDT_ERC-20_Wallet_Balance_with_Etherscan_and_Telegram_Notifications.json",
      "workflow_name": "Monitor USDT ERC-20 Wallet Balance with Etherscan and Telegram Notifications",
      "suggested_filename": "comm_monitor_monitor_cron_httprequest_cron.json",
      "category": "COMM",
      "business_function": "monitor",
      "trigger_type": "cron",
      "integrations": [
        "cron",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "telegram",
        "code"
      ],
      "primary_integrations": [
        "cron",
        "httprequest",
        "telegram"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "COMM workflow that monitors data/processes using cron, httprequest, telegram, triggered via cron",
      "complexity_score": 15
    },
    {
      "original_filename": "1255_workflow_1255.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1255_workflow_1255.json",
      "workflow_name": "1255_workflow_1255",
      "suggested_filename": "comm_1255_workflow_1255_automate_slack_netlify.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "netlifyTrigger"
      ],
      "primary_integrations": [
        "slack",
        "netlify"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.netlifyTrigger",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, netlify, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "5lMPjSDuoMvCJnko_🔍🛠️Generate_SEO-Optimized_WordPress_Content_with_Perplexity_Research.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/5lMPjSDuoMvCJnko_🔍🛠️Generate_SEO-Optimized_WordPress_Content_with_Perplexity_Research.json",
      "workflow_name": "🔍🛠️Generate SEO-Optimized WordPress Content with Perplexity Research",
      "suggested_filename": "ai_generate_generate_wordpress_n8nnodeslangchainoutputparserstructured.json",
      "category": "AI",
      "business_function": "generate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "wordpress",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "telegram",
        "aggregate",
        "n8n-nodes-langchain.openAi",
        "formTrigger"
      ],
      "primary_integrations": [
        "wordpress",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 25,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.aggregate"
      ],
      "business_description": "AI workflow that generates data/processes using wordpress, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via manual",
      "complexity_score": 37
    },
    {
      "original_filename": "xQ0xqhNzFeEdBpFK_Generate_360°_Virtual_Try-on_Videos_for_Clothing_with_Kling_API.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/xQ0xqhNzFeEdBpFK_Generate_360°_Virtual_Try-on_Videos_for_Clothing_with_Kling_API.json",
      "workflow_name": "Generate 360° Virtual Try-on Videos for Clothing with Kling API",
      "suggested_filename": "content_generate_generate_httprequest_manual.json",
      "category": "CONTENT",
      "business_function": "generate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "switch"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "CONTENT workflow that generates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "Automate SIEM Alert Enrichment with MITRE ATT&CK, Qdrant & Zendesk in n8n.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Automate SIEM Alert Enrichment with MITRE ATT&CK, Qdrant & Zendesk in n8n.json",
      "workflow_name": "Automate SIEM Alert Enrichment with MITRE ATT&CK, Qdrant & Zendesk in n8n",
      "suggested_filename": "ai_automate_notify_n8nnodeslangchainmemorybufferwindow_splitinbatches.json",
      "category": "AI",
      "business_function": "notify",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "splitInBatches",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "noOp",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "extractFromFile",
        "manualTrigger",
        "googleDrive",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "zendesk"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "splitinbatches",
        "n8n-nodes-langchain.textsplittertokensplitter"
      ],
      "total_nodes": 26,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "AI workflow that notifys data/processes using n8n-nodes-langchain.memorybufferwindow, splitinbatches, n8n-nodes-langchain.textsplittertokensplitter, triggered via manual",
      "complexity_score": 43
    },
    {
      "original_filename": "Manipulate PDF with Adobe developer API.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Manipulate PDF with Adobe developer API.json",
      "workflow_name": "Manipulate PDF with Adobe developer API",
      "suggested_filename": "util_manipulate_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "switch",
        "dropbox",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "dropbox"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, dropbox, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "vzU9QRZsHcyRsord_Spot_Workplace_Discrimination_Patterns_with_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/vzU9QRZsHcyRsord_Spot_Workplace_Discrimination_Patterns_with_AI.json",
      "workflow_name": "Spot Workplace Discrimination Patterns with AI",
      "suggested_filename": "ai_spot_ai_process_n8nnodeslangchainchainllm_quickchart.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "quickChart",
        "set",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.informationExtractor",
        "code",
        "html"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "quickchart",
        "httprequest"
      ],
      "total_nodes": 38,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.html",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.quickChart",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, quickchart, httprequest, triggered via manual",
      "complexity_score": 49
    },
    {
      "original_filename": "NMGsDLoVZ7DUukGs_PG&E_Daily_Cost_Tracker.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/NMGsDLoVZ7DUukGs_PG&E_Daily_Cost_Tracker.json",
      "workflow_name": "PG&E Daily Cost Tracker",
      "suggested_filename": "ai_daily_ai_process_gmail_airtop_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "wait",
        "gmail",
        "set",
        "stickyNote",
        "airtop",
        "scheduleTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "airtop",
        "schedule"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, airtop, schedule, triggered via cron",
      "complexity_score": 21
    },
    {
      "original_filename": "2063_workflow_2063.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2063_workflow_2063.json",
      "workflow_name": "2063_workflow_2063",
      "suggested_filename": "data_2063_workflow_2063_automate_itemlists_httprequest_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "itemLists",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "manualTrigger",
        "code",
        "googleSheets",
        "filter"
      ],
      "primary_integrations": [
        "itemlists",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using itemlists, httprequest, schedule, triggered via cron",
      "complexity_score": 30
    },
    {
      "original_filename": "TtoDcjgthgA4NTkU_AI_Voice_Chat_using_Webhook,_Memory_Manager,_OpenAI,_Google_Gemini_&_ElevenLabs.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/TtoDcjgthgA4NTkU_AI_Voice_Chat_using_Webhook,_Memory_Manager,_OpenAI,_Google_Gemini_&_ElevenLabs.json",
      "workflow_name": "AI Voice Chat using Webhook, Memory Manager, OpenAI, Google Gemini & ElevenLabs",
      "suggested_filename": "ai_voice_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchainll.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.memoryManager",
        "webhook",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "limit",
        "aggregate",
        "n8n-nodes-langchain.openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chainllm",
        "httprequest"
      ],
      "total_nodes": 15,
      "node_types": [
        "@n8n/n8n-nodes-langchain.memoryManager",
        "@n8n/n8n-nodes-langchain.memoryManager",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.limit",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chainllm, httprequest, triggered via webhook",
      "complexity_score": 26
    },
    {
      "original_filename": "122_Automate_assigning_GitHub_issues.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/122_Automate_assigning_GitHub_issues.json",
      "workflow_name": "Automate assigning GitHub issues",
      "suggested_filename": "ops_automate_automate_github_github.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "githubTrigger",
        "noOp",
        "if",
        "github",
        "switch"
      ],
      "primary_integrations": [
        "github",
        "github"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.switch",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.github",
        "n8n-nodes-base.github",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.github",
        "n8n-nodes-base.githubTrigger"
      ],
      "business_description": "OPS workflow that automates data/processes using github, github, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "1805_workflow_1805.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1805_workflow_1805.json",
      "workflow_name": "1805_workflow_1805",
      "suggested_filename": "biz_1805_workflow_1805_automate_hubspot_shopify.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "hubspot",
        "merge",
        "noOp",
        "if",
        "set",
        "shopifyTrigger"
      ],
      "primary_integrations": [
        "hubspot",
        "shopify"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.shopifyTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.hubspot"
      ],
      "business_description": "BIZ workflow that automates data/processes using hubspot, shopify, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "ReXF4z8ZKcEd6Kea_dub.co_URL_Shortener.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ReXF4z8ZKcEd6Kea_dub.co_URL_Shortener.json",
      "workflow_name": "dub.co URL Shortener",
      "suggested_filename": "util_shortener_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "2331_workflow_2331.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2331_workflow_2331.json",
      "workflow_name": "2331_workflow_2331",
      "suggested_filename": "util_2331_workflow_2331_automate_elasticsearch_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "elasticsearch",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "editImage",
        "filter"
      ],
      "primary_integrations": [
        "elasticsearch",
        "httprequest",
        "manual"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.elasticsearch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using elasticsearch, httprequest, manual, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "VwU1zMhcgzgPS9ak_List_Builder.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/VwU1zMhcgzgPS9ak_List_Builder.json",
      "workflow_name": "List Builder",
      "suggested_filename": "data_list_automate_airtop_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "airtop",
        "manualTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "airtop",
        "manual",
        "googlesheets"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that automates data/processes using airtop, manual, googlesheets, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "af8RV5b2TWB2LclA_Chat_with_local_LLMs_using_n8n_and_Ollama.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/af8RV5b2TWB2LclA_Chat_with_local_LLMs_using_n8n_and_Ollama.json",
      "workflow_name": "Chat with local LLMs using n8n and Ollama",
      "suggested_filename": "ai_chat_automate_n8nnodeslangchainchat_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.lmChatOllama"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.lmchatollama"
      ],
      "total_nodes": 5,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.lmchatollama, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "3054_workflow_3054.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3054_workflow_3054.json",
      "workflow_name": "3054_workflow_3054",
      "suggested_filename": "util_3054_workflow_3054_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "2353_workflow_2353.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2353_workflow_2353.json",
      "workflow_name": "2353_workflow_2353",
      "suggested_filename": "comm_2353_workflow_2353_automate_slack_httprequest_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "if",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "code"
      ],
      "primary_integrations": [
        "slack",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, httprequest, schedule, triggered via cron",
      "complexity_score": 13
    },
    {
      "original_filename": "1107_workflow_1107.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1107_workflow_1107.json",
      "workflow_name": "1107_workflow_1107",
      "suggested_filename": "data_1107_workflow_1107_automate_calendly_humanticai.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "calendlyTrigger",
        "humanticAi",
        "notion"
      ],
      "primary_integrations": [
        "calendly",
        "humanticai",
        "notion"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.notion",
        "n8n-nodes-base.humanticAi",
        "n8n-nodes-base.calendlyTrigger",
        "n8n-nodes-base.humanticAi"
      ],
      "business_description": "DATA workflow that automates data/processes using calendly, humanticai, notion, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "Basic Automatic Gmail Email Labelling with OpenAI and Gmail API.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Basic Automatic Gmail Email Labelling with OpenAI and Gmail API.json",
      "workflow_name": "Basic Automatic Gmail Email Labelling with OpenAI and Gmail API",
      "suggested_filename": "ai_basic_ai_process_n8nnodeslangchainmemorybufferwindow_gmail.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "wait",
        "gmailTrigger",
        "stickyNote",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "gmailTool"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "gmail",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, gmail, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "3036_workflow_3036.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3036_workflow_3036.json",
      "workflow_name": "3036_workflow_3036",
      "suggested_filename": "data_3036_workflow_3036_automate_httprequest_notion.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "notion",
        "splitOut",
        "aggregate",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "notion",
        "executeworkflow"
      ],
      "total_nodes": 37,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, notion, executeworkflow, triggered via manual",
      "complexity_score": 46
    },
    {
      "original_filename": "115_Receive_updates_for_all_changes_in_Pipedrive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/115_Receive_updates_for_all_changes_in_Pipedrive.json",
      "workflow_name": "Receive updates for all changes in Pipedrive",
      "suggested_filename": "biz_receive_update_pipedrive.json",
      "category": "BIZ",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "pipedriveTrigger"
      ],
      "primary_integrations": [
        "pipedrive"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.pipedriveTrigger"
      ],
      "business_description": "BIZ workflow that updates data/processes using pipedrive, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "2140_workflow_2140.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2140_workflow_2140.json",
      "workflow_name": "2140_workflow_2140",
      "suggested_filename": "data_2140_workflow_2140_automate_httprequest_notion_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "notion",
        "webhook",
        "switch"
      ],
      "primary_integrations": [
        "httprequest",
        "notion",
        "webhook"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, notion, webhook, triggered via webhook",
      "complexity_score": 14
    },
    {
      "original_filename": "3296_workflow_3296.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3296_workflow_3296.json",
      "workflow_name": "3296_workflow_3296",
      "suggested_filename": "ecommerce_3296_workflow_3296_automate_splitinbatches_shopify_cron.json",
      "category": "ECOMMERCE",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "shopify",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "manualTrigger",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "shopify",
        "httprequest"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.shopify",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "ECOMMERCE workflow that automates data/processes using splitinbatches, shopify, httprequest, triggered via cron",
      "complexity_score": 21
    },
    {
      "original_filename": "2239_workflow_2239.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2239_workflow_2239.json",
      "workflow_name": "2239_workflow_2239",
      "suggested_filename": "util_2239_workflow_2239_automate_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "debugHelper",
        "manualTrigger"
      ],
      "primary_integrations": [
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.debugHelper",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "81aN6oJGMho5kCvQ_OpenAI_ImageGen1_Template.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/81aN6oJGMho5kCvQ_OpenAI_ImageGen1_Template.json",
      "workflow_name": "OpenAI ImageGen1 Template",
      "suggested_filename": "ai_openai_ai_process_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "httpRequest",
        "convertToFile"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "httprequest",
        "converttofile"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.convertToFile",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chat, httprequest, converttofile, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "BambooHR AI-Powered Company Policies and Benefits Chatbot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/BambooHR AI-Powered Company Policies and Benefits Chatbot.json",
      "workflow_name": "BambooHR AI-Powered Company Policies and Benefits Chatbot",
      "suggested_filename": "ai_bamboohr_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchain.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-langchain.informationExtractor",
        "aggregate",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "filter",
        "bambooHr",
        "n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.toolVectorStore",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "executeWorkflowTrigger",
        "n8n-nodes-langchain.memoryBufferWindow",
        "set",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "splitOut",
        "manualTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.informationextractor"
      ],
      "total_nodes": 50,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.bambooHr",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.bambooHr",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.bambooHr",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.bambooHr",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.bambooHr",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.informationextractor, triggered via manual",
      "complexity_score": 73
    },
    {
      "original_filename": "Building Your First WhatsApp Chatbot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Building Your First WhatsApp Chatbot.json",
      "workflow_name": "Building Your First WhatsApp Chatbot",
      "suggested_filename": "ai_building_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvector.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolVectorStore",
        "whatsApp",
        "n8n-nodes-langchain.vectorStoreInMemory",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "extractFromFile",
        "n8n-nodes-langchain.agent",
        "switch",
        "whatsAppTrigger",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.vectorstore",
        "whatsapp"
      ],
      "total_nodes": 28,
      "node_types": [
        "n8n-nodes-base.whatsAppTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.whatsApp",
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.vectorstore, whatsapp, triggered via manual",
      "complexity_score": 43
    },
    {
      "original_filename": "2191_workflow_2191.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2191_workflow_2191.json",
      "workflow_name": "2191_workflow_2191",
      "suggested_filename": "data_2191_workflow_2191_automate_httprequest_googlesheets.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "httpRequest",
        "googleSheets",
        "removeDuplicates",
        "googleSheetsTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "googlesheets",
        "removeduplicates"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, googlesheets, removeduplicates, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "Telr6HU0ltH7s9f7_🗨️Ollama_Chat.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Telr6HU0ltH7s9f7_🗨️Ollama_Chat.json",
      "workflow_name": "🗨️Ollama Chat",
      "suggested_filename": "ai_ollama_automate_n8nnodeslangchainlmollama_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.lmOllama",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmollama",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 14,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmOllama",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.lmollama, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "1376_workflow_1376.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1376_workflow_1376.json",
      "workflow_name": "1376_workflow_1376",
      "suggested_filename": "content_1376_workflow_1376_automate_twitter_httprequest_cron.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "twitter",
        "httpRequest",
        "cron"
      ],
      "primary_integrations": [
        "twitter",
        "httprequest",
        "cron"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.twitter"
      ],
      "business_description": "CONTENT workflow that automates data/processes using twitter, httprequest, cron, triggered via cron",
      "complexity_score": 7
    },
    {
      "original_filename": "2122_workflow_2122.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2122_workflow_2122.json",
      "workflow_name": "2122_workflow_2122",
      "suggested_filename": "comm_2122_workflow_2122_automate_hubspot_gmail.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "hubspot",
        "if",
        "noOp",
        "stickyNote",
        "gmail",
        "set",
        "httpRequest",
        "hunter",
        "formTrigger"
      ],
      "primary_integrations": [
        "hubspot",
        "gmail",
        "httprequest"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.hunter",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.set",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.hubspot"
      ],
      "business_description": "COMM workflow that automates data/processes using hubspot, gmail, httprequest, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "4_Save_Telegram_reply_to_journal_spreadsheet.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/4_Save_Telegram_reply_to_journal_spreadsheet.json",
      "workflow_name": "Save Telegram reply to journal spreadsheet",
      "suggested_filename": "comm_save_read_functionitem_googlesheets.json",
      "category": "COMM",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "functionItem",
        "googleSheets",
        "telegramTrigger"
      ],
      "primary_integrations": [
        "functionitem",
        "googlesheets",
        "telegram"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.functionItem"
      ],
      "business_description": "COMM workflow that reads data/processes using functionitem, googlesheets, telegram, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "79_Get_the_price_of_BTC_in_EUR_and_send_an_SMS_when_the_price_is_larger_than_EUR_9000.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/79_Get_the_price_of_BTC_in_EUR_and_send_an_SMS_when_the_price_is_larger_than_EUR_9000.json",
      "workflow_name": "Get the price of BTC in EUR and send an SMS when the price is larger than EUR 9000",
      "suggested_filename": "util_price_read_coingecko_cron_cron.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "noOp",
        "coinGecko",
        "cron",
        "twilio"
      ],
      "primary_integrations": [
        "coingecko",
        "cron",
        "twilio"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.coinGecko",
        "n8n-nodes-base.if",
        "n8n-nodes-base.twilio",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "UTIL workflow that reads data/processes using coingecko, cron, twilio, triggered via cron",
      "complexity_score": 10
    },
    {
      "original_filename": "1752_workflow_1752.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1752_workflow_1752.json",
      "workflow_name": "1752_workflow_1752",
      "suggested_filename": "data_1752_workflow_1752_automate_googlesheets_mysql_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "googleSheets",
        "mySql",
        "cron"
      ],
      "primary_integrations": [
        "googlesheets",
        "mysql",
        "cron"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, mysql, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "2270_workflow_2270.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2270_workflow_2270.json",
      "workflow_name": "2270_workflow_2270",
      "suggested_filename": "util_2270_workflow_2270_automate_schedule_manual_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "noOp",
        "stickyNote",
        "scheduleTrigger",
        "manualTrigger",
        "executeWorkflow",
        "redis",
        "filter"
      ],
      "primary_integrations": [
        "schedule",
        "manual",
        "executeworkflow"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using schedule, manual, executeworkflow, triggered via cron",
      "complexity_score": 25
    },
    {
      "original_filename": "Auto-Tag Blog Posts in WordPress with AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Auto-Tag Blog Posts in WordPress with AI.json",
      "workflow_name": "Auto-Tag Blog Posts in WordPress with AI",
      "suggested_filename": "ai_auto_ai_process_splitinbatches_n8nnodeslangchainoutputparserautofixing.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.outputParserAutofixing",
        "wordpress",
        "rssFeedReadTrigger",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "code",
        "aggregate",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.outputparserautofixing",
        "wordpress"
      ],
      "total_nodes": 32,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.rssFeedReadTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, n8n-nodes-langchain.outputparserautofixing, wordpress, triggered via manual",
      "complexity_score": 49
    },
    {
      "original_filename": "3578_workflow_3578.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3578_workflow_3578.json",
      "workflow_name": "3578_workflow_3578",
      "suggested_filename": "util_3578_workflow_3578_automate_quickchart_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "quickChart",
        "set",
        "manualTrigger",
        "googleDrive"
      ],
      "primary_integrations": [
        "quickchart",
        "manual",
        "googledrive"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.quickChart",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using quickchart, manual, googledrive, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "XiwLd0JwGmDoY0mr_Image-to-3D.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/XiwLd0JwGmDoY0mr_Image-to-3D.json",
      "workflow_name": "Image-to-3D",
      "suggested_filename": "data_image_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "wait",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "manualTrigger",
        "googleDrive",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "manual"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, schedule, manual, triggered via cron",
      "complexity_score": 26
    },
    {
      "original_filename": "3115_workflow_3115.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3115_workflow_3115.json",
      "workflow_name": "3115_workflow_3115",
      "suggested_filename": "ai_3115_workflow_3115_automate_executiondata_n8nnodeslangchaintextclassifier.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "executionData",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.textClassifier",
        "httpRequest",
        "n8n-nodes-langchain.memoryRedisChat",
        "n8n-nodes-langchain.memoryManager",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.agent",
        "switch",
        "googleSheets",
        "redis"
      ],
      "primary_integrations": [
        "executiondata",
        "n8n-nodes-langchain.textclassifier",
        "httprequest"
      ],
      "total_nodes": 40,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.memoryRedisChat",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.memoryManager",
        "@n8n/n8n-nodes-langchain.memoryRedisChat",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.executionData",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using executiondata, n8n-nodes-langchain.textclassifier, httprequest, triggered via manual",
      "complexity_score": 55
    },
    {
      "original_filename": "581_workflow_581.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/581_workflow_581.json",
      "workflow_name": "581_workflow_581",
      "suggested_filename": "util_581_workflow_581_automate_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "function",
        "manualTrigger",
        "if"
      ],
      "primary_integrations": [
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.function",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "1001_typeform_feedback_workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1001_typeform_feedback_workflow.json",
      "workflow_name": "typeform feedback workflow",
      "suggested_filename": "data_typeform_automate_googlesheets_typeform.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "typeformTrigger",
        "set",
        "if"
      ],
      "primary_integrations": [
        "googlesheets",
        "typeform"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, typeform, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "ynTqojfUnGpG2rBP_Merge_multiple_runs_into_one.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ynTqojfUnGpG2rBP_Merge_multiple_runs_into_one.json",
      "workflow_name": "Merge multiple runs into one",
      "suggested_filename": "util_merge_automate_splitinbatches_n8ntrainingcustomerdatastore.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8nTrainingCustomerDatastore",
        "if",
        "wait",
        "noOp",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8ntrainingcustomerdatastore",
        "manual"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.n8nTrainingCustomerDatastore",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.splitInBatches"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, n8ntrainingcustomerdatastore, manual, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "🎨 Interactive Image Editor with FLUX.1 Fill Tool for Inpainting.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/🎨 Interactive Image Editor with FLUX.1 Fill Tool for Inpainting.json",
      "workflow_name": "FLUX-fill standalone",
      "suggested_filename": "util_flux_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "wait",
        "if",
        "stickyNote",
        "set",
        "noOp",
        "httpRequest",
        "webhook",
        "html",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "html"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.merge",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, html, triggered via webhook",
      "complexity_score": 28
    },
    {
      "original_filename": "528_workflow_528.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/528_workflow_528.json",
      "workflow_name": "528_workflow_528",
      "suggested_filename": "ops_528_workflow_528_automate_gitlab.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "gitlabTrigger"
      ],
      "primary_integrations": [
        "gitlab"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.gitlabTrigger"
      ],
      "business_description": "OPS workflow that automates data/processes using gitlab, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "okjjim5PVb2dZUgg_FetchGithubIssues.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/okjjim5PVb2dZUgg_FetchGithubIssues.json",
      "workflow_name": "FetchGithubIssues",
      "suggested_filename": "comm_fetchgithubissues_extract_schedule_telegram_cron.json",
      "category": "COMM",
      "business_function": "extract",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "scheduleTrigger",
        "telegram",
        "github",
        "filter"
      ],
      "primary_integrations": [
        "schedule",
        "telegram",
        "github"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.github"
      ],
      "business_description": "COMM workflow that extracts data/processes using schedule, telegram, github, triggered via cron",
      "complexity_score": 15
    },
    {
      "original_filename": "gqwYlZvL1dwy9W3T_getBible_Query_v1.0.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/gqwYlZvL1dwy9W3T_getBible_Query_v1.0.json",
      "workflow_name": "getBible Query v1.0",
      "suggested_filename": "util_getbible_read_httprequest_executeworkflow.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "code",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "executeworkflow"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that reads data/processes using httprequest, executeworkflow, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "19_Snowflake_CSV.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/19_Snowflake_CSV.json",
      "workflow_name": "Snowflake CSV",
      "suggested_filename": "util_snowflake_automate_spreadsheetfile_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "set",
        "httpRequest",
        "snowflake",
        "manualTrigger"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "httprequest",
        "snowflake"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.snowflake"
      ],
      "business_description": "UTIL workflow that automates data/processes using spreadsheetfile, httprequest, snowflake, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "2212_workflow_2212.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2212_workflow_2212.json",
      "workflow_name": "2212_workflow_2212",
      "suggested_filename": "comm_2212_workflow_2212_automate_gmail_httprequest_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, httprequest, schedule, triggered via cron",
      "complexity_score": 22
    },
    {
      "original_filename": "2109_workflow_2109.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2109_workflow_2109.json",
      "workflow_name": "2109_workflow_2109",
      "suggested_filename": "comm_2109_workflow_2109_automate_slack_webhook_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "slack",
        "noOp",
        "stickyNote",
        "webhook",
        "clearbit",
        "filter"
      ],
      "primary_integrations": [
        "slack",
        "webhook",
        "clearbit"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.filter",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.clearbit",
        "n8n-nodes-base.clearbit",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, webhook, clearbit, triggered via webhook",
      "complexity_score": 18
    },
    {
      "original_filename": "VhN3CX6QPBkX77pZ_Use_any_LLM-Model_via_OpenRouter.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/VhN3CX6QPBkX77pZ_Use_any_LLM-Model_via_OpenRouter.json",
      "workflow_name": "Use any LLM-Model via OpenRouter",
      "suggested_filename": "ai_model_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "3601_workflow_3601.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3601_workflow_3601.json",
      "workflow_name": "3601_workflow_3601",
      "suggested_filename": "ai_3601_workflow_3601_automate_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "wait",
        "if",
        "stickyNote",
        "httpRequest",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "SJrqDqTBIAyaZQkq_UTM_Link_Creator_&_QR_Code_Generator_with_Scheduled_Google_Analytics_Reports.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/SJrqDqTBIAyaZQkq_UTM_Link_Creator_&_QR_Code_Generator_with_Scheduled_Google_Analytics_Reports.json",
      "workflow_name": "UTM Link Creator & QR Code Generator with Scheduled Google Analytics Reports",
      "suggested_filename": "ai_link_report_n8nnodeslangchainmemorybufferwindow_gmail_cron.json",
      "category": "AI",
      "business_function": "report",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "gmail",
        "set",
        "googleAnalyticsTool",
        "httpRequest",
        "stickyNote",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "airtable",
        "code",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "gmail",
        "googleanalytics"
      ],
      "total_nodes": 14,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.googleAnalyticsTool",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that reports data/processes using n8n-nodes-langchain.memorybufferwindow, gmail, googleanalytics, triggered via cron",
      "complexity_score": 26
    },
    {
      "original_filename": "AuwhspweKSACE1WQ_YouTube_to_X_Post-_AlexK1919.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AuwhspweKSACE1WQ_YouTube_to_X_Post-_AlexK1919.json",
      "workflow_name": "YouTube to X Post- AlexK1919",
      "suggested_filename": "ai_youtube_automate_googlesheets_n8nnodeslangchaincalculator_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "googleSheets",
        "n8n-nodes-langchain.toolCalculator",
        "slack",
        "if",
        "stickyNote",
        "set",
        "gmail",
        "n8n-nodes-langchain.toolWikipedia",
        "scheduleTrigger",
        "manualTrigger",
        "twitter",
        "removeDuplicates",
        "n8n-nodes-langchain.openAi",
        "discord",
        "youTube"
      ],
      "primary_integrations": [
        "googlesheets",
        "n8n-nodes-langchain.calculator",
        "slack"
      ],
      "total_nodes": 28,
      "node_types": [
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.youTube",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using googlesheets, n8n-nodes-langchain.calculator, slack, triggered via cron",
      "complexity_score": 43
    },
    {
      "original_filename": "2pMoIW58KP6ZeGir_Luma_AI_Dream_Machine_-_Simple_v1_-_AK.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2pMoIW58KP6ZeGir_Luma_AI_Dream_Machine_-_Simple_v1_-_AK.json",
      "workflow_name": "Luma AI Dream Machine - Simple v1 - AK",
      "suggested_filename": "ai_luma_ai_process_executiondata_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "executionData",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "airtable",
        "code"
      ],
      "primary_integrations": [
        "executiondata",
        "httprequest",
        "manual"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.executionData",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using executiondata, httprequest, manual, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "2373_workflow_2373.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2373_workflow_2373.json",
      "workflow_name": "2373_workflow_2373",
      "suggested_filename": "ai_2373_workflow_2373_automate_executeworkflow_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "executeWorkflowTrigger",
        "set",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "code",
        "splitOut",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.informationExtractor",
        "googleSheets",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "html",
        "executeWorkflow",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "filter"
      ],
      "primary_integrations": [
        "executeworkflow",
        "httprequest",
        "n8n-nodes-langchain.embeddingsopenai"
      ],
      "total_nodes": 37,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.html",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using executeworkflow, httprequest, n8n-nodes-langchain.embeddingsopenai, triggered via manual",
      "complexity_score": 54
    },
    {
      "original_filename": "Modular & Customizable AI-Powered Email Routing_ Text Classifier for eCommerce.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Modular & Customizable AI-Powered Email Routing_ Text Classifier for eCommerce.json",
      "workflow_name": "Contact Form Text Classifier for eCommerce",
      "suggested_filename": "ai_contact_automate_n8nnodeslangchaintextclassifier_emailsend.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "emailSend",
        "n8n-nodes-langchain.lmChatOpenAi",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.textclassifier",
        "emailsend",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.textclassifier, emailsend, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "Automate Screenshots with URLbox & Analyze them with AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Automate Screenshots with URLbox & Analyze them with AI.json",
      "workflow_name": "Analyze Screenshots with AI",
      "suggested_filename": "ai_analyze_analyze_httprequest_manual.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger"
      ],
      "business_description": "AI workflow that analyzes data/processes using httprequest, manual, n8n-nodes-langchain.openai, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "m8gr0YZgCx5Qrsia_(G)_-_Email_Classification.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/m8gr0YZgCx5Qrsia_(G)_-_Email_Classification.json",
      "workflow_name": "(G) - Email Classification",
      "suggested_filename": "ai_email_ai_process_gmail_gmail.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "gmailTrigger",
        "gmail",
        "n8n-nodes-langchain.textClassifier",
        "stickyNote",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.lmChatGroq"
      ],
      "primary_integrations": [
        "gmail",
        "gmail",
        "n8n-nodes-langchain.textclassifier"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatGroq",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, gmail, n8n-nodes-langchain.textclassifier, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "2467_workflow_2467.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2467_workflow_2467.json",
      "workflow_name": "2467_workflow_2467",
      "suggested_filename": "ai_2467_workflow_2467_automate_splitinbatches_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.chainLlm",
        "wait",
        "stickyNote",
        "httpRequest",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "code",
        "aggregate",
        "googleDrive",
        "convertToFile",
        "editImage",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chainllm",
        "httprequest"
      ],
      "total_nodes": 21,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.chainllm, httprequest, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "Advanced AI Demo (Presented at AI Developers #14 meetup).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Advanced AI Demo (Presented at AI Developers #14 meetup).json",
      "workflow_name": "Advanced AI Demo (Presented at AI Developers #14 meetup)",
      "suggested_filename": "ai_advanced_ai_process_n8nnodeslangchainchainretrievalqa_httprequest_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "httpRequest",
        "n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "noOp",
        "gmailTrigger",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.retrieverVectorStore",
        "slack",
        "if",
        "stickyNote",
        "gmail",
        "n8n-nodes-langchain.textClassifier",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.vectorStorePinecone",
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "webhook",
        "code"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "httprequest",
        "n8n-nodes-langchain.lmchatanthropic"
      ],
      "total_nodes": 39,
      "node_types": [
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.if"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainretrievalqa, httprequest, n8n-nodes-langchain.lmchatanthropic, triggered via webhook",
      "complexity_score": 61
    },
    {
      "original_filename": "mOcaSIUAvpt3QjQ1_🌐_Confluence_Page_AI_Powered_Chatbot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/mOcaSIUAvpt3QjQ1_🌐_Confluence_Page_AI_Powered_Chatbot.json",
      "workflow_name": "🌐 Confluence Page AI Powered Chatbot",
      "suggested_filename": "ai_confluence_ai_process_n8nnodeslangchainmemorybufferwindow_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "httpRequest",
        "markdown",
        "n8n-nodes-langchain.manualChatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "n8n-nodes-langchain.agent",
        "telegram"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "httprequest",
        "markdown"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.markdown",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.manualChatTrigger",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.splitOut"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, httprequest, markdown, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "b0KRVIuuUxE5afHo_Blog_Automation_TEMPLATE.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/b0KRVIuuUxE5afHo_Blog_Automation_TEMPLATE.json",
      "workflow_name": "Blog Automation TEMPLATE",
      "suggested_filename": "ai_blog_automate_n8nnodeslangchainchainllm_httprequest_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 35,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, httprequest, schedule, triggered via cron",
      "complexity_score": 45
    },
    {
      "original_filename": "zMtPPjJ80JJznrJP_AI-Powered_WhatsApp_Chatbot_for_Text,_Voice,_Images_&_PDFs.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/zMtPPjJ80JJznrJP_AI-Powered_WhatsApp_Chatbot_for_Text,_Voice,_Images_&_PDFs.json",
      "workflow_name": "AI-Powered WhatsApp Chatbot for Text, Voice, Images & PDFs",
      "suggested_filename": "ai_powered_ai_process_n8nnodeslangchainmemorybufferwindow_whatsapp.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "whatsApp",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "code",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "extractFromFile",
        "switch",
        "whatsAppTrigger",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "whatsapp",
        "httprequest"
      ],
      "total_nodes": 32,
      "node_types": [
        "n8n-nodes-base.whatsAppTrigger",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.whatsApp",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, whatsapp, httprequest, triggered via manual",
      "complexity_score": 45
    },
    {
      "original_filename": "2567_Google_Maps_Email_Scraper_Template.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2567_Google_Maps_Email_Scraper_Template.json",
      "workflow_name": "Google Maps Email Scraper Template",
      "suggested_filename": "ai_google_ai_process_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "wait",
        "stickyNote",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "code",
        "aggregate",
        "googleSheets",
        "removeDuplicates",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "manual"
      ],
      "total_nodes": 26,
      "node_types": [
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.code",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, httprequest, manual, triggered via manual",
      "complexity_score": 39
    },
    {
      "original_filename": "965_workflow_965.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/965_workflow_965.json",
      "workflow_name": "965_workflow_965",
      "suggested_filename": "comm_965_workflow_965_automate_awscomprehend_mattermost.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "noOp",
        "awsComprehend",
        "mattermost",
        "typeformTrigger"
      ],
      "primary_integrations": [
        "awscomprehend",
        "mattermost",
        "typeform"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.awsComprehend",
        "n8n-nodes-base.typeformTrigger"
      ],
      "business_description": "COMM workflow that automates data/processes using awscomprehend, mattermost, typeform, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "2358_workflow_2358.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2358_workflow_2358.json",
      "workflow_name": "2358_workflow_2358",
      "suggested_filename": "ai_2358_workflow_2358_automate_n8nnodeslangchainchainretrievalqa_httprequest_web.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "httpRequest",
        "n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "noOp",
        "gmailTrigger",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.retrieverVectorStore",
        "slack",
        "if",
        "stickyNote",
        "gmail",
        "n8n-nodes-langchain.textClassifier",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.vectorStorePinecone",
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "webhook",
        "code"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "httprequest",
        "n8n-nodes-langchain.lmchatanthropic"
      ],
      "total_nodes": 39,
      "node_types": [
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.if"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainretrievalqa, httprequest, n8n-nodes-langchain.lmchatanthropic, triggered via webhook",
      "complexity_score": 61
    },
    {
      "original_filename": "2786_workflow_2786.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2786_workflow_2786.json",
      "workflow_name": "2786_workflow_2786",
      "suggested_filename": "ai_2786_workflow_2786_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "microsoftOutlook",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "code",
        "switch",
        "executeWorkflowTrigger",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 24,
      "node_types": [
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.if",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 39
    },
    {
      "original_filename": "wa2uEnSIowqSrHoY_Intelligent_Web_Query_and_Semantic_Re-Ranking_Flow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/wa2uEnSIowqSrHoY_Intelligent_Web_Query_and_Semantic_Re-Ranking_Flow.json",
      "workflow_name": "Intelligent Web Query and Semantic Re-Ranking Flow",
      "suggested_filename": "ai_intelligent_automate_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "dateTime",
        "stickyNote",
        "httpRequest",
        "webhook",
        "n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "code",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.code",
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via webhook",
      "complexity_score": 32
    },
    {
      "original_filename": "110_Get_all_the_stories_starting_with_`release`_and_publish_them.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/110_Get_all_the_stories_starting_with_`release`_and_publish_them.json",
      "workflow_name": "Get all the stories starting with `release` and publish them",
      "suggested_filename": "util_stories_read_storyblok_manual.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "storyblok",
        "manualTrigger"
      ],
      "primary_integrations": [
        "storyblok",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.storyblok",
        "n8n-nodes-base.storyblok"
      ],
      "business_description": "UTIL workflow that reads data/processes using storyblok, manual, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "503_workflow_503.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/503_workflow_503.json",
      "workflow_name": "503_workflow_503",
      "suggested_filename": "data_503_workflow_503_automate_mongodb_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "mongoDb",
        "manualTrigger"
      ],
      "primary_integrations": [
        "mongodb",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.mongoDb"
      ],
      "business_description": "DATA workflow that automates data/processes using mongodb, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "Chat Assistant (OpenAI assistant) with Postgres Memory And API Calling Capabalities.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Chat Assistant (OpenAI assistant) with Postgres Memory And API Calling Capabalities.json",
      "workflow_name": "modelo do chatbot",
      "suggested_filename": "ai_modelo_automate_mysql_n8nnodeslangchainmemorypostgreschat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "mySqlTool",
        "n8n-nodes-langchain.memoryPostgresChat",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "mysql",
        "n8n-nodes-langchain.memorypostgreschat",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "n8n-nodes-base.mySqlTool",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that automates data/processes using mysql, n8n-nodes-langchain.memorypostgreschat, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "Text automations using Apple Shortcuts (1).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Text automations using Apple Shortcuts (1).json",
      "workflow_name": "Text automations using Apple Shortcuts (1)",
      "suggested_filename": "ai_text_automate_webhook_n8nnodeslangchainopenai_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "switch",
        "n8n-nodes-langchain.openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "n8n-nodes-langchain.openai",
        "respondtowebhook"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using webhook, n8n-nodes-langchain.openai, respondtowebhook, triggered via webhook",
      "complexity_score": 15
    },
    {
      "original_filename": "2043_workflow_2043.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2043_workflow_2043.json",
      "workflow_name": "2043_workflow_2043",
      "suggested_filename": "comm_2043_workflow_2043_automate_httprequest_schedule_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "telegram",
        "code",
        "aggregate",
        "function"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "telegram"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.function",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, schedule, telegram, triggered via cron",
      "complexity_score": 14
    },
    {
      "original_filename": "3395_workflow_3395.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3395_workflow_3395.json",
      "workflow_name": "3395_workflow_3395",
      "suggested_filename": "ai_3395_workflow_3395_automate_splitinbatches_n8nnodeslangchainvectorstoresupaba.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "noOp",
        "n8n-nodes-langchain.vectorStoreSupabase",
        "stickyNote",
        "set",
        "if",
        "scheduleTrigger",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "jira",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.informationExtractor",
        "summarize",
        "sort",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "removeDuplicates",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.vectorstoresupabase",
        "schedule"
      ],
      "total_nodes": 36,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.set",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.set",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.vectorstoresupabase, schedule, triggered via cron",
      "complexity_score": 54
    },
    {
      "original_filename": "Monthly Spotify Track Archiving and Playlist Classification.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Monthly Spotify Track Archiving and Playlist Classification.json",
      "workflow_name": "Monthly Spotify Track Archiving and Playlist Classification",
      "suggested_filename": "ai_monthly_monitor_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruct.json",
      "category": "AI",
      "business_function": "monitor",
      "trigger_type": "cron",
      "integrations": [
        "filter",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "n8n-nodes-langchain.lmChatAnthropic",
        "limit",
        "code",
        "googleSheets",
        "spotify"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 37,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that monitors data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via cron",
      "complexity_score": 52
    },
    {
      "original_filename": "nkPjDxMrrkKbgHaV_Effortless_Email_Management_with_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/nkPjDxMrrkKbgHaV_Effortless_Email_Management_with_AI.json",
      "workflow_name": "Effortless Email Management with AI",
      "suggested_filename": "ai_effortless_ai_process_n8nnodeslangchainlmchatdeepseek_n8nnodeslangchaintextsp.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.lmChatDeepSeek",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "gmail",
        "emailSend",
        "n8n-nodes-langchain.textClassifier",
        "n8n-nodes-langchain.chainSummarization",
        "set",
        "markdown",
        "httpRequest",
        "stickyNote",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "googleDrive",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "emailReadImap"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmchatdeepseek",
        "n8n-nodes-langchain.textsplittertokensplitter",
        "gmail"
      ],
      "total_nodes": 31,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.emailSend",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.set",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.lmchatdeepseek, n8n-nodes-langchain.textsplittertokensplitter, gmail, triggered via manual",
      "complexity_score": 49
    },
    {
      "original_filename": "3344_workflow_3344.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3344_workflow_3344.json",
      "workflow_name": "3344_workflow_3344",
      "suggested_filename": "ai_3344_workflow_3344_automate_n8nnodeslangchainoutputparserstructured_gmail.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserStructured",
        "gmailTrigger",
        "stickyNote",
        "if",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "gmail",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserstructured, gmail, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "W1xEzKKEd1qV2D7V_2._Add_Beehiiv_newsletter_subscribers_from_Gumroad_sales.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/W1xEzKKEd1qV2D7V_2._Add_Beehiiv_newsletter_subscribers_from_Gumroad_sales.json",
      "workflow_name": "2. Add Beehiiv newsletter subscribers from Gumroad sales",
      "suggested_filename": "comm_beehiiv_create_httprequest_telegram.json",
      "category": "COMM",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "telegram",
        "googleSheets",
        "gumroadTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "telegram",
        "googlesheets"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.gumroadTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "COMM workflow that creates data/processes using httprequest, telegram, googlesheets, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "a5tCsfMzJPd8WDUj_line_message_api_demo.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/a5tCsfMzJPd8WDUj_line_message_api_demo.json",
      "workflow_name": "line message api demo",
      "suggested_filename": "comm_line_automate_httprequest_webhook_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "manual"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, webhook, manual, triggered via webhook",
      "complexity_score": 14
    },
    {
      "original_filename": "H7porcmXYj7StO23_Generate_Instagram_Content_from_Top_Trends_with_AI_Image_Generation.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/H7porcmXYj7StO23_Generate_Instagram_Content_from_Top_Trends_with_AI_Image_Generation.json",
      "workflow_name": "Generate Instagram Content from Top Trends with AI Image Generation",
      "suggested_filename": "ai_generate_generate_splitinbatches_postgres_cron.json",
      "category": "AI",
      "business_function": "generate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "postgres",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "telegram",
        "code",
        "n8n-nodes-langchain.openAi",
        "facebookGraphApi"
      ],
      "primary_integrations": [
        "splitinbatches",
        "postgres",
        "httprequest"
      ],
      "total_nodes": 44,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.postgres",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that generates data/processes using splitinbatches, postgres, httprequest, triggered via cron",
      "complexity_score": 56
    },
    {
      "original_filename": "2757_workflow_2757.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2757_workflow_2757.json",
      "workflow_name": "2757_workflow_2757",
      "suggested_filename": "ai_2757_workflow_2757_automate_httprequest_microsoftoutlook_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "microsoftOutlook",
        "erpNext",
        "webhook",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "extractFromFile",
        "code",
        "switch",
        "n8n-nodes-langchain.agent",
        "whatsApp"
      ],
      "primary_integrations": [
        "httprequest",
        "microsoftoutlook",
        "erpnext"
      ],
      "total_nodes": 39,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.erpNext",
        "n8n-nodes-base.if",
        "n8n-nodes-base.erpNext",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.erpNext",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.whatsApp"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, microsoftoutlook, erpnext, triggered via webhook",
      "complexity_score": 53
    },
    {
      "original_filename": "Creating a AI Slack Bot with Google Gemini.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Creating a AI Slack Bot with Google Gemini.json",
      "workflow_name": "Creating a AI Slack Bot with Google Gemini",
      "suggested_filename": "ai_creating_ai_process_n8nnodeslangchainmemorybufferwindow_slack_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "slack",
        "stickyNote",
        "webhook",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "slack",
        "webhook"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, slack, webhook, triggered via webhook",
      "complexity_score": 16
    },
    {
      "original_filename": "KWFLpcJytH7qjheD_(Not_published)_Three-View_Orthographic_Projection_to_Dynamic_Video_Conversion.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/KWFLpcJytH7qjheD_(Not_published)_Three-View_Orthographic_Projection_to_Dynamic_Video_Conversion.json",
      "workflow_name": "(Not published) Three-View Orthographic Projection to Dynamic Video Conversion",
      "suggested_filename": "content_published_automate_httprequest_manual.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "if",
        "set",
        "httpRequest",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.set"
      ],
      "business_description": "CONTENT workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "933_workflow_933.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/933_workflow_933.json",
      "workflow_name": "933_workflow_933",
      "suggested_filename": "data_933_workflow_933_automate_getresponse_airtable.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "getResponseTrigger",
        "airtable"
      ],
      "primary_integrations": [
        "getresponse",
        "airtable"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.getResponseTrigger"
      ],
      "business_description": "DATA workflow that automates data/processes using getresponse, airtable, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "Generate audio from text using OpenAI and Webhook _ Text to Speech Workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Generate audio from text using OpenAI and Webhook _ Text to Speech Workflow.json",
      "workflow_name": "Generate audio from text using OpenAI - text-to-speech Workflow",
      "suggested_filename": "ai_generate_generate_webhook_n8nnodeslangchainopenai_webhook.json",
      "category": "AI",
      "business_function": "generate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "n8n-nodes-langchain.openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "n8n-nodes-langchain.openai",
        "respondtowebhook"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that generates data/processes using webhook, n8n-nodes-langchain.openai, respondtowebhook, triggered via webhook",
      "complexity_score": 9
    },
    {
      "original_filename": "🚀 Local Multi-LLM Testing & Performance Tracker.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/🚀 Local Multi-LLM Testing & Performance Tracker.json",
      "workflow_name": "Testing Mulitple Local LLM with LM Studio",
      "suggested_filename": "ai_testing_automate_n8nnodeslangchainchainllm_datetime.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "dateTime",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "datetime",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, datetime, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 31
    },
    {
      "original_filename": "3574_workflow_3574.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3574_workflow_3574.json",
      "workflow_name": "3574_workflow_3574",
      "suggested_filename": "ai_3574_workflow_3574_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangcha.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.vectorStoreMilvus",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "splitOut",
        "limit",
        "n8n-nodes-langchain.retrieverVectorStore",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "html",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 22,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreMilvus",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.vectorStoreMilvus",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainretrievalqa, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 36
    },
    {
      "original_filename": "567_workflow_567.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/567_workflow_567.json",
      "workflow_name": "567_workflow_567",
      "suggested_filename": "util_567_workflow_567_automate_manual_helpscout.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "helpScout"
      ],
      "primary_integrations": [
        "manual",
        "helpscout"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.helpScout"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, helpscout, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "7ZIG5xxEACMBgj4Z_Create_Threads_on_Bluesky.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/7ZIG5xxEACMBgj4Z_Create_Threads_on_Bluesky.json",
      "workflow_name": "Create Threads on Bluesky",
      "suggested_filename": "util_create_create_splitinbatches_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "code"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code"
      ],
      "business_description": "UTIL workflow that creates data/processes using splitinbatches, httprequest, schedule, triggered via cron",
      "complexity_score": 27
    },
    {
      "original_filename": "3830_workflow_3830.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3830_workflow_3830.json",
      "workflow_name": "3830_workflow_3830",
      "suggested_filename": "ai_3830_workflow_3830_automate_splitinbatches_slack_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "slack",
        "if",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "code",
        "googleSheets",
        "n8n-nodes-langchain.openAi",
        "googleSheetsTrigger",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "slack",
        "httprequest"
      ],
      "total_nodes": 35,
      "node_types": [
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, slack, httprequest, triggered via cron",
      "complexity_score": 48
    },
    {
      "original_filename": "1028_workflow_1028.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1028_workflow_1028.json",
      "workflow_name": "1028_workflow_1028",
      "suggested_filename": "util_1028_workflow_1028_automate_copper_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "copper",
        "manualTrigger"
      ],
      "primary_integrations": [
        "copper",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.copper",
        "n8n-nodes-base.copper",
        "n8n-nodes-base.copper"
      ],
      "business_description": "UTIL workflow that automates data/processes using copper, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2167_workflow_2167.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2167_workflow_2167.json",
      "workflow_name": "2167_workflow_2167",
      "suggested_filename": "ai_2167_workflow_2167_automate_n8nnodeslangchainchainllm_httprequest_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "if",
        "stickyNote",
        "httpRequest",
        "webhook",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "code"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, httprequest, webhook, triggered via webhook",
      "complexity_score": 22
    },
    {
      "original_filename": "WsksMHrmAQrG32db_ClockifyBlockiaWorkflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/WsksMHrmAQrG32db_ClockifyBlockiaWorkflow.json",
      "workflow_name": "ClockifyBlockiaWorkflow",
      "suggested_filename": "ai_clockifyblockiaworkflow_automate_n8nnodeslangchainmemorybufferwindow_executio.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "executionData",
        "n8n-nodes-langchain.toolCalculator",
        "slack",
        "slackTrigger",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolCode",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "executiondata",
        "n8n-nodes-langchain.calculator"
      ],
      "total_nodes": 16,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolCode",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.slackTrigger",
        "n8n-nodes-base.executionData",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, executiondata, n8n-nodes-langchain.calculator, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "1333_workflow_1333.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1333_workflow_1333.json",
      "workflow_name": "1333_workflow_1333",
      "suggested_filename": "biz_1333_workflow_1333_automate_pipedrive_hubspot_cron.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "pipedrive",
        "hubspot",
        "merge",
        "cron"
      ],
      "primary_integrations": [
        "pipedrive",
        "hubspot",
        "cron"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge"
      ],
      "business_description": "BIZ workflow that automates data/processes using pipedrive, hubspot, cron, triggered via cron",
      "complexity_score": 11
    },
    {
      "original_filename": "k9abwUyVzl7OCsAl_Realtime_Notion_Todoist_2-way_Sync_Template.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/k9abwUyVzl7OCsAl_Realtime_Notion_Todoist_2-way_Sync_Template.json",
      "workflow_name": "Realtime Notion Todoist 2-way Sync Template",
      "suggested_filename": "comm_realtime_sync_httprequest_comparedatasets_webhook.json",
      "category": "COMM",
      "business_function": "sync",
      "trigger_type": "webhook",
      "integrations": [
        "wait",
        "httpRequest",
        "compareDatasets",
        "aggregate",
        "redis",
        "filter",
        "splitInBatches",
        "crypto",
        "noOp",
        "scheduleTrigger",
        "todoist",
        "html",
        "executeWorkflow",
        "merge",
        "if",
        "gmail",
        "stickyNote",
        "stopAndError",
        "form",
        "executeWorkflowTrigger",
        "respondToWebhook",
        "executionData",
        "set",
        "notion",
        "webhook",
        "splitOut",
        "code",
        "switch",
        "formTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "comparedatasets",
        "redis"
      ],
      "total_nodes": 246,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.if",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.form",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.form",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.if",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.if",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.html",
        "n8n-nodes-base.html",
        "n8n-nodes-base.set",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.if",
        "n8n-nodes-base.executionData",
        "n8n-nodes-base.executionData",
        "n8n-nodes-base.executionData",
        "n8n-nodes-base.executionData",
        "n8n-nodes-base.executionData",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.code",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.executionData",
        "n8n-nodes-base.executionData",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that syncs data/processes using httprequest, comparedatasets, redis, triggered via webhook",
      "complexity_score": 275
    },
    {
      "original_filename": "138_Get_new_time_entries_from_Toggl.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/138_Get_new_time_entries_from_Toggl.json",
      "workflow_name": "Get new time entries from Toggl",
      "suggested_filename": "util_time_read_toggl.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "togglTrigger"
      ],
      "primary_integrations": [
        "toggl"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.togglTrigger"
      ],
      "business_description": "UTIL workflow that reads data/processes using toggl, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "Complete business WhatsApp AI-Powered RAG Chatbot using OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Complete business WhatsApp AI-Powered RAG Chatbot using OpenAI.json",
      "workflow_name": "Business WhatsApp AI RAG Chatbot",
      "suggested_filename": "ai_business_ai_process_n8nnodeslangchainmemorybufferwindow_whatsapp_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "whatsApp",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "if",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "googleDrive",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "whatsapp",
        "n8n-nodes-langchain.textsplittertokensplitter"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.whatsApp",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, whatsapp, n8n-nodes-langchain.textsplittertokensplitter, triggered via webhook",
      "complexity_score": 39
    },
    {
      "original_filename": "Generate Instagram Content from Top Trends with AI Image Generation.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Generate Instagram Content from Top Trends with AI Image Generation.json",
      "workflow_name": "Generate Instagram Content from Top Trends with AI Image Generation",
      "suggested_filename": "ai_generate_generate_splitinbatches_postgres_cron.json",
      "category": "AI",
      "business_function": "generate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "postgres",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "telegram",
        "code",
        "n8n-nodes-langchain.openAi",
        "facebookGraphApi"
      ],
      "primary_integrations": [
        "splitinbatches",
        "postgres",
        "httprequest"
      ],
      "total_nodes": 44,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.postgres",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that generates data/processes using splitinbatches, postgres, httprequest, triggered via cron",
      "complexity_score": 56
    },
    {
      "original_filename": "Chat with OpenAI Assistant (by adding a memory).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Chat with OpenAI Assistant (by adding a memory).json",
      "workflow_name": "Chat with OpenAI Assistant (by adding a memory)",
      "suggested_filename": "ai_chat_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincalculat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolCalculator",
        "stickyNote",
        "n8n-nodes-langchain.openAiAssistant",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.memoryManager",
        "limit",
        "aggregate"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.calculator",
        "n8n-nodes-langchain.openaiassistant"
      ],
      "total_nodes": 14,
      "node_types": [
        "@n8n/n8n-nodes-langchain.openAiAssistant",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "@n8n/n8n-nodes-langchain.memoryManager",
        "@n8n/n8n-nodes-langchain.memoryManager",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.limit",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.calculator, n8n-nodes-langchain.openaiassistant, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "uD31xU0VYjogxWoY_Create_Unique_Jira_tickets_from_Splunk_alerts.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/uD31xU0VYjogxWoY_Create_Unique_Jira_tickets_from_Splunk_alerts.json",
      "workflow_name": "Create_Unique_Jira_tickets_from_Splunk_alerts",
      "suggested_filename": "comm_create_unique_jira_tickets_from_splunk_alerts_notify_jira_webhook_webhook.json",
      "category": "COMM",
      "business_function": "notify",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "jira",
        "webhook"
      ],
      "primary_integrations": [
        "jira",
        "webhook"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that notifys data/processes using jira, webhook, triggered via webhook",
      "complexity_score": 16
    },
    {
      "original_filename": "WordPress - AI Chatbot to enhance user experience - with Supabase and OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/WordPress - AI Chatbot to enhance user experience - with Supabase and OpenAI.json",
      "workflow_name": "RAG & GenAI App With WordPress Content",
      "suggested_filename": "ai_genai_ai_process_n8nnodeslangchainmemorypostgreschat_httprequest_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.memoryPostgresChat",
        "httpRequest",
        "aggregate",
        "filter",
        "postgres",
        "splitInBatches",
        "n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-langchain.chatTrigger",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "supabase",
        "merge",
        "stickyNote",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "respondToWebhook",
        "wordpress",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "set",
        "markdown",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "manualTrigger",
        "switch"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorypostgreschat",
        "httprequest",
        "postgres"
      ],
      "total_nodes": 53,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorypostgreschat, httprequest, postgres, triggered via cron",
      "complexity_score": 76
    },
    {
      "original_filename": "SiQUWOBCyXCAA5f9_Generate_New_Keywords_with_Search_Volumes⚒️⚒️🟢🟢.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/SiQUWOBCyXCAA5f9_Generate_New_Keywords_with_Search_Volumes⚒️⚒️🟢🟢.json",
      "workflow_name": "Generate New Keywords with Search Volumes⚒️⚒️🟢🟢",
      "suggested_filename": "data_generate_generate_httprequest_googlesheets.json",
      "category": "DATA",
      "business_function": "generate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "googleSheets",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "googlesheets",
        "executeworkflow"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that generates data/processes using httprequest, googlesheets, executeworkflow, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "131_Receive_a_Mattermost_message_when_a_user_updates_their_profile_on_Facebook.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/131_Receive_a_Mattermost_message_when_a_user_updates_their_profile_on_Facebook.json",
      "workflow_name": "Receive a Mattermost message when a user updates their profile on Facebook",
      "suggested_filename": "comm_receive_update_facebook_mattermost.json",
      "category": "COMM",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "facebookTrigger",
        "mattermost"
      ],
      "primary_integrations": [
        "facebook",
        "mattermost"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.facebookTrigger",
        "n8n-nodes-base.mattermost"
      ],
      "business_description": "COMM workflow that updates data/processes using facebook, mattermost, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "598_workflow_598.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/598_workflow_598.json",
      "workflow_name": "598_workflow_598",
      "suggested_filename": "data_598_workflow_598_automate_manual_mysql.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "manualTrigger",
        "mySql"
      ],
      "primary_integrations": [
        "manual",
        "mysql"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that automates data/processes using manual, mysql, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "GM9Qxzul4NPQpJkn_⚡📽️_Ultimate_AI-Powered_Chatbot_for_YouTube_Summarization_&_Analysis.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/GM9Qxzul4NPQpJkn_⚡📽️_Ultimate_AI-Powered_Chatbot_for_YouTube_Summarization_&_Analysis.json",
      "workflow_name": "⚡📽️ Ultimate AI-Powered Chatbot for YouTube Summarization & Analysis",
      "suggested_filename": "ai_ultimate_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "n8n-nodes-langchain.agent",
        "code",
        "aggregate",
        "n8n-nodes-langchain.toolWorkflow",
        "summarize",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 43
    },
    {
      "original_filename": "1963_workflow_1963.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1963_workflow_1963.json",
      "workflow_name": "1963_workflow_1963",
      "suggested_filename": "ai_1963_workflow_1963_automate_n8nnodeslangchainchat_n8nnodeslangchainlmchatopen.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.toolCode"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.lmchatopenai",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolCode"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, n8n-nodes-langchain.lmchatopenai, manual, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "2105_workflow_2105.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2105_workflow_2105.json",
      "workflow_name": "2105_workflow_2105",
      "suggested_filename": "comm_2105_workflow_2105_automate_respondtowebhook_webhook_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "respondToWebhook",
        "noOp",
        "if",
        "stickyNote",
        "set",
        "webhook",
        "manualTrigger",
        "googleSheets",
        "discord",
        "filter"
      ],
      "primary_integrations": [
        "respondtowebhook",
        "webhook",
        "manual"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using respondtowebhook, webhook, manual, triggered via webhook",
      "complexity_score": 27
    },
    {
      "original_filename": "Generate 9_16 Images from Content and Brand Guidelines.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Generate 9_16 Images from Content and Brand Guidelines.json",
      "workflow_name": "Content to 9:16 Aspect Image Generator v1",
      "suggested_filename": "ai_content_automate_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.toolWikipedia",
        "splitOut",
        "manualTrigger",
        "airtable",
        "limit",
        "removeDuplicates",
        "n8n-nodes-langchain.openAi",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "n8n-nodes-langchain.wikipedia"
      ],
      "total_nodes": 39,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, httprequest, n8n-nodes-langchain.wikipedia, triggered via manual",
      "complexity_score": 52
    },
    {
      "original_filename": "737_workflow_737.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/737_workflow_737.json",
      "workflow_name": "737_workflow_737",
      "suggested_filename": "util_737_workflow_737_automate_webhook_openweathermap_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "set",
        "webhook",
        "openWeatherMap"
      ],
      "primary_integrations": [
        "webhook",
        "openweathermap"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.openWeatherMap",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, openweathermap, triggered via webhook",
      "complexity_score": 6
    },
    {
      "original_filename": "1999_workflow_1999.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1999_workflow_1999.json",
      "workflow_name": "1999_workflow_1999",
      "suggested_filename": "comm_1999_workflow_1999_automate_telegram_n8n.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "telegramTrigger",
        "switch",
        "n8n",
        "filter"
      ],
      "primary_integrations": [
        "telegram",
        "n8n"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.switch"
      ],
      "business_description": "COMM workflow that automates data/processes using telegram, n8n, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "1775_workflow_1775.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1775_workflow_1775.json",
      "workflow_name": "1775_workflow_1775",
      "suggested_filename": "biz_1775_workflow_1775_automate_pipedrive_pipedrive.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "pipedrive",
        "pipedriveTrigger",
        "merge",
        "if",
        "stripe",
        "httpRequest"
      ],
      "primary_integrations": [
        "pipedrive",
        "pipedrive",
        "stripe"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.pipedriveTrigger",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stripe"
      ],
      "business_description": "BIZ workflow that automates data/processes using pipedrive, pipedrive, stripe, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "3644_workflow_3644.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3644_workflow_3644.json",
      "workflow_name": "3644_workflow_3644",
      "suggested_filename": "ai_3644_workflow_3644_automate_splitinbatches_googletasks.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "merge",
        "googleTasks",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "googleSheets",
        "html",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "splitinbatches",
        "googletasks",
        "httprequest"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.html",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleTasks",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, googletasks, httprequest, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "Add positive feedback messages to a table in Notion.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Add positive feedback messages to a table in Notion.json",
      "workflow_name": "Add positive feedback messages to a table in Notion",
      "suggested_filename": "comm_positive_create_slack_googlecloudnaturallanguage.json",
      "category": "COMM",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "googleCloudNaturalLanguage",
        "if",
        "trello",
        "notion",
        "typeformTrigger"
      ],
      "primary_integrations": [
        "slack",
        "googlecloudnaturallanguage",
        "trello"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.googleCloudNaturalLanguage",
        "n8n-nodes-base.if",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.trello"
      ],
      "business_description": "COMM workflow that creates data/processes using slack, googlecloudnaturallanguage, trello, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "2807_workflow_2807.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2807_workflow_2807.json",
      "workflow_name": "2807_workflow_2807",
      "suggested_filename": "biz_2807_workflow_2807_automate_quickbooks_stripe.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "quickbooks",
        "if",
        "stripe",
        "httpRequest",
        "stripeTrigger"
      ],
      "primary_integrations": [
        "quickbooks",
        "stripe",
        "httprequest"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stripe",
        "n8n-nodes-base.stripeTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.quickbooks",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "BIZ workflow that automates data/processes using quickbooks, stripe, httprequest, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "eXiaTDyKfXpMeyLh_Dynamically_generate_HTML_page_from_user_request_using_OpenAI_Structured_Output.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/eXiaTDyKfXpMeyLh_Dynamically_generate_HTML_page_from_user_request_using_OpenAI_Structured_Output.json",
      "workflow_name": "Dynamically generate HTML page from user request using OpenAI Structured Output",
      "suggested_filename": "ai_dynamically_generate_httprequest_webhook_webhook.json",
      "category": "AI",
      "business_function": "generate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "webhook",
        "html",
        "n8n-nodes-langchain.openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "html"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "AI workflow that generates data/processes using httprequest, webhook, html, triggered via webhook",
      "complexity_score": 13
    },
    {
      "original_filename": "2235_workflow_2235.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2235_workflow_2235.json",
      "workflow_name": "2235_workflow_2235",
      "suggested_filename": "ai_2235_workflow_2235_automate_telegram_telegram.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "stickyNote",
        "telegramTrigger",
        "telegram",
        "switch",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "telegram",
        "telegram",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.switch"
      ],
      "business_description": "AI workflow that automates data/processes using telegram, telegram, n8n-nodes-langchain.openai, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "2543_workflow_2543.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2543_workflow_2543.json",
      "workflow_name": "2543_workflow_2543",
      "suggested_filename": "comm_2543_workflow_2543_automate_schedule_wordpress_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "scheduleTrigger",
        "wordpress",
        "slack",
        "zoom"
      ],
      "primary_integrations": [
        "schedule",
        "wordpress",
        "slack"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.zoom",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using schedule, wordpress, slack, triggered via cron",
      "complexity_score": 8
    },
    {
      "original_filename": "216_workflow_216.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/216_workflow_216.json",
      "workflow_name": "216_workflow_216",
      "suggested_filename": "util_216_workflow_216_automate_webhook_graphql_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "set",
        "webhook",
        "function",
        "graphql"
      ],
      "primary_integrations": [
        "webhook",
        "graphql"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.function",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, graphql, triggered via webhook",
      "complexity_score": 8
    },
    {
      "original_filename": "Automate LinkedIn Outreach with Notion and OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Automate LinkedIn Outreach with Notion and OpenAI.json",
      "workflow_name": "Automate LinkedIn Posts with AI",
      "suggested_filename": "ai_automate_ai_process_linkedin_httprequest_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "stickyNote",
        "linkedIn",
        "httpRequest",
        "notion",
        "scheduleTrigger",
        "aggregate",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "linkedin",
        "httprequest",
        "notion"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.linkedIn",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.notion"
      ],
      "business_description": "AI workflow that ai_processs data/processes using linkedin, httprequest, notion, triggered via cron",
      "complexity_score": 19
    },
    {
      "original_filename": "🐋🤖 DeepSeek AI Agent + Telegram + LONG TERM Memory 🧠.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/🐋🤖 DeepSeek AI Agent + Telegram + LONG TERM Memory 🧠.json",
      "workflow_name": "🐋🤖 DeepSeek AI Agent + Telegram + LONG TERM Memory 🧠",
      "suggested_filename": "ai_deepseek_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "googleDocs",
        "googleDocsTool",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.agent",
        "switch"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "googledocs"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.googleDocsTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, googledocs, triggered via webhook",
      "complexity_score": 36
    },
    {
      "original_filename": "2658_workflow_2658.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2658_workflow_2658.json",
      "workflow_name": "2658_workflow_2658",
      "suggested_filename": "ai_2658_workflow_2658_automate_httprequest_n8nnodeslangchaininformationextractor.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "httpRequest",
        "n8n-nodes-langchain.informationExtractor",
        "googleDrive",
        "aggregate",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "filter",
        "splitInBatches",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "removeDuplicates",
        "executeWorkflow",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "googleSheets",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "executeWorkflowTrigger",
        "executionData",
        "set",
        "n8n-nodes-langchain.embeddingsGoogleGemini",
        "splitOut",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.informationextractor",
        "googledrive"
      ],
      "total_nodes": 88,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.executionData",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.code",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, n8n-nodes-langchain.informationextractor, googledrive, triggered via manual",
      "complexity_score": 113
    },
    {
      "original_filename": "2966_workflow_2966.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2966_workflow_2966.json",
      "workflow_name": "2966_workflow_2966",
      "suggested_filename": "comm_2966_workflow_2966_automate_gmail_googledrive.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "gmailTrigger",
        "stickyNote",
        "splitOut",
        "googleDrive",
        "switch"
      ],
      "primary_integrations": [
        "gmail",
        "googledrive"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, googledrive, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "2422_workflow_2422.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2422_workflow_2422.json",
      "workflow_name": "2422_workflow_2422",
      "suggested_filename": "ai_2422_workflow_2422_automate_venafitlsprotectcloud_slack_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "venafiTlsProtectCloud",
        "merge",
        "slack",
        "if",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "switch",
        "n8n-nodes-langchain.openAi",
        "executeWorkflow",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "venafitlsprotectcloud",
        "slack",
        "httprequest"
      ],
      "total_nodes": 38,
      "node_types": [
        "n8n-nodes-base.venafiTlsProtectCloud",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.venafiTlsProtectCloud",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook"
      ],
      "business_description": "AI workflow that automates data/processes using venafitlsprotectcloud, slack, httprequest, triggered via webhook",
      "complexity_score": 51
    },
    {
      "original_filename": "Tygtx1aZi9pLdtUo_Fully_automated_Video_Captions_generation_with_json2video.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Tygtx1aZi9pLdtUo_Fully_automated_Video_Captions_generation_with_json2video.json",
      "workflow_name": "Fully automated Video Captions generation with json2video",
      "suggested_filename": "content_fully_automate_httprequest_manual.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "wait",
        "noOp",
        "set",
        "stickyNote",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "CONTENT workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "2354_workflow_2354.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2354_workflow_2354.json",
      "workflow_name": "2354_workflow_2354",
      "suggested_filename": "ai_2354_workflow_2354_automate_splitinbatches_n8nnodeslangchainoutputparserstruc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.outputParserStructured",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "notion",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "splitOut",
        "limit",
        "n8n-nodes-langchain.agent",
        "removeDuplicates"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 39,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via manual",
      "complexity_score": 53
    },
    {
      "original_filename": "983_workflow_983.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/983_workflow_983.json",
      "workflow_name": "983_workflow_983",
      "suggested_filename": "data_983_workflow_983_automate_lemlist_airtable.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "lemlist",
        "airtable"
      ],
      "primary_integrations": [
        "lemlist",
        "airtable"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.lemlist",
        "n8n-nodes-base.lemlist"
      ],
      "business_description": "DATA workflow that automates data/processes using lemlist, airtable, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "Analyze tradingview.com charts with Chrome extension, N8N and OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Analyze tradingview.com charts with Chrome extension, N8N and OpenAI.json",
      "workflow_name": "chrome extension backend with AI",
      "suggested_filename": "ai_chrome_ai_process_webhook_n8nnodeslangchainopenai_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "n8n-nodes-langchain.openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "n8n-nodes-langchain.openai",
        "respondtowebhook"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using webhook, n8n-nodes-langchain.openai, respondtowebhook, triggered via webhook",
      "complexity_score": 9
    },
    {
      "original_filename": "G3yjjk93c1bBM5tc_YouTube_Video_Analyzer_with_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/G3yjjk93c1bBM5tc_YouTube_Video_Analyzer_with_AI.json",
      "workflow_name": "YouTube Video Analyzer with AI",
      "suggested_filename": "ai_youtube_analyze_n8nnodeslangchainlmchatdeepseek_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.lmChatDeepSeek",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "emailSend",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmchatdeepseek",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that analyzes data/processes using n8n-nodes-langchain.lmchatdeepseek, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "2491_workflow_2491.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2491_workflow_2491.json",
      "workflow_name": "2491_workflow_2491",
      "suggested_filename": "ai_2491_workflow_2491_automate_nocodb_slack_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "nocoDb",
        "slack",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "manualTrigger",
        "airtable",
        "code",
        "googleSheets",
        "html",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "nocodb",
        "slack",
        "httprequest"
      ],
      "total_nodes": 33,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.html",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using nocodb, slack, httprequest, triggered via cron",
      "complexity_score": 47
    },
    {
      "original_filename": "1829_workflow_1829.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1829_workflow_1829.json",
      "workflow_name": "1829_workflow_1829",
      "suggested_filename": "ecommerce_1829_workflow_1829_automate_mautic_shopify.json",
      "category": "ECOMMERCE",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "mautic",
        "stickyNote",
        "shopifyTrigger"
      ],
      "primary_integrations": [
        "mautic",
        "shopify"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.shopifyTrigger",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "ECOMMERCE workflow that automates data/processes using mautic, shopify, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "PGLFPj5y01s26rE1_My_workflow_6.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/PGLFPj5y01s26rE1_My_workflow_6.json",
      "workflow_name": "My workflow 6",
      "suggested_filename": "ai_automate_slack_n8nnodeslangchainchainllm_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "slack",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "switch"
      ],
      "primary_integrations": [
        "slack",
        "n8n-nodes-langchain.chainllm",
        "webhook"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using slack, n8n-nodes-langchain.chainllm, webhook, triggered via webhook",
      "complexity_score": 17
    },
    {
      "original_filename": "3031_workflow_3031.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3031_workflow_3031.json",
      "workflow_name": "3031_workflow_3031",
      "suggested_filename": "biz_3031_workflow_3031_automate_gong_schedule_cron.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "gong",
        "scheduleTrigger",
        "sort",
        "manualTrigger",
        "salesforce",
        "executeWorkflow"
      ],
      "primary_integrations": [
        "gong",
        "schedule",
        "sort"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.gong",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.salesforce",
        "n8n-nodes-base.scheduleTrigger"
      ],
      "business_description": "BIZ workflow that automates data/processes using gong, schedule, sort, triggered via cron",
      "complexity_score": 20
    },
    {
      "original_filename": "3796_workflow_3796.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3796_workflow_3796.json",
      "workflow_name": "3796_workflow_3796",
      "suggested_filename": "comm_3796_workflow_3796_automate_splitinbatches_gmail.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "if",
        "stickyNote",
        "set",
        "gmail",
        "httpRequest",
        "markdown",
        "splitOut",
        "aggregate",
        "googleCalendarTrigger",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "gmail",
        "httprequest"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleCalendarTrigger",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.if",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, gmail, httprequest, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "880_workflow_880.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/880_workflow_880.json",
      "workflow_name": "880_workflow_880",
      "suggested_filename": "util_880_workflow_880_automate_httprequest_cron_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "httpRequest",
        "set",
        "function",
        "cron"
      ],
      "primary_integrations": [
        "httprequest",
        "cron"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.function",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.cron"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, cron, triggered via cron",
      "complexity_score": 8
    },
    {
      "original_filename": "MVPlLz3CiQok6rXy_Merge_PDFs.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/MVPlLz3CiQok6rXy_Merge_PDFs.json",
      "workflow_name": "Merge PDFs",
      "suggested_filename": "util_merge_automate_readwritefile_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "readWriteFile",
        "merge",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "readwritefile",
        "httprequest",
        "manual"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "@custom-js/n8n-nodes-pdf-toolkit.mergePdfs",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.readWriteFile"
      ],
      "business_description": "UTIL workflow that automates data/processes using readwritefile, httprequest, manual, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "Analyze & Sort Suspicious Email Contents with ChatGPT.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Analyze & Sort Suspicious Email Contents with ChatGPT.json",
      "workflow_name": "Analyze & Sort Suspicious Email Contents with ChatGPT",
      "suggested_filename": "ai_analyze_analyze_gmail_httprequest.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "gmailTrigger",
        "stickyNote",
        "set",
        "httpRequest",
        "jira",
        "code",
        "microsoftOutlookTrigger",
        "convertToFile",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "jira"
      ],
      "total_nodes": 25,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.microsoftOutlookTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that analyzes data/processes using gmail, httprequest, jira, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "77_Extract_information_from_an_image_of_a_receipt.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/77_Extract_information_from_an_image_of_a_receipt.json",
      "workflow_name": "Extract information from an image of a receipt",
      "suggested_filename": "util_extract_extract_mindee_httprequest.json",
      "category": "UTIL",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "mindee",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "mindee",
        "httprequest",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.mindee",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that extracts data/processes using mindee, httprequest, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "3053_workflow_3053.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3053_workflow_3053.json",
      "workflow_name": "3053_workflow_3053",
      "suggested_filename": "ai_3053_workflow_3053_automate_n8nnodeslangchainmemorybufferwindow_airtable_webh.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "airtableTool",
        "splitInBatches",
        "switch",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "webhook",
        "telegramTrigger",
        "n8n-nodes-langchain.toolWorkflow",
        "telegram",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.lmChatOpenAi",
        "airtable",
        "n8n-nodes-langchain.openAi",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "airtable",
        "splitinbatches"
      ],
      "total_nodes": 35,
      "node_types": [
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtableTool",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, airtable, splitinbatches, triggered via webhook",
      "complexity_score": 52
    },
    {
      "original_filename": "2385_workflow_2385.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2385_workflow_2385.json",
      "workflow_name": "2385_workflow_2385",
      "suggested_filename": "ops_2385_workflow_2385_automate_splitinbatches_gitlab.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "noOp",
        "stickyNote",
        "set",
        "gitlab",
        "manualTrigger",
        "extractFromFile",
        "code",
        "switch",
        "n8n"
      ],
      "primary_integrations": [
        "splitinbatches",
        "gitlab",
        "manual"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.gitlab",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.gitlab",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.gitlab",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.set"
      ],
      "business_description": "OPS workflow that automates data/processes using splitinbatches, gitlab, manual, triggered via manual",
      "complexity_score": 31
    },
    {
      "original_filename": "2409_workflow_2409.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2409_workflow_2409.json",
      "workflow_name": "2409_workflow_2409",
      "suggested_filename": "data_2409_workflow_2409_automate_emailsend_pushover_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "emailSend",
        "set",
        "pushover",
        "notion",
        "scheduleTrigger",
        "sort",
        "manualTrigger",
        "aggregate",
        "html",
        "filter"
      ],
      "primary_integrations": [
        "emailsend",
        "pushover",
        "notion"
      ],
      "total_nodes": 27,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.html",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.pushover",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.html",
        "n8n-nodes-base.html",
        "n8n-nodes-base.html",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using emailsend, pushover, notion, triggered via cron",
      "complexity_score": 40
    },
    {
      "original_filename": "1283_workflow_1283.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1283_workflow_1283.json",
      "workflow_name": "1283_workflow_1283",
      "suggested_filename": "util_1283_workflow_1283_automate_emailsend_googledrive.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "emailSend",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "emailsend",
        "googledrive"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.emailSend"
      ],
      "business_description": "UTIL workflow that automates data/processes using emailsend, googledrive, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Scrape Trustpilot Reviews with DeepSeek, Analyze Sentiment with OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Scrape Trustpilot Reviews with DeepSeek, Analyze Sentiment with OpenAI.json",
      "workflow_name": "Scrape Trustpilot Reviews with DeepSeek, Analyze Sentiment with OpenAI",
      "suggested_filename": "ai_scrape_analyze_httprequest_manual.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "n8n-nodes-langchain.informationExtractor",
        "limit",
        "n8n-nodes-langchain.lmChatOpenAi",
        "googleSheets",
        "n8n-nodes-langchain.sentimentAnalysis",
        "html"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "n8n-nodes-langchain.informationextractor"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.if",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.sentimentAnalysis",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that analyzes data/processes using httprequest, manual, n8n-nodes-langchain.informationextractor, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "eB4rTdZFvrdKK5VP_Backup_Squarespace_code_Injections_to_Github.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/eB4rTdZFvrdKK5VP_Backup_Squarespace_code_Injections_to_Github.json",
      "workflow_name": "Backup Squarespace code Injections to Github",
      "suggested_filename": "ops_backup_backup_splitinbatches_httprequest_cron.json",
      "category": "OPS",
      "business_function": "backup",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "manualTrigger",
        "github",
        "code"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.github",
        "n8n-nodes-base.github",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge"
      ],
      "business_description": "OPS workflow that backups data/processes using splitinbatches, httprequest, schedule, triggered via cron",
      "complexity_score": 27
    },
    {
      "original_filename": "1_TwitterWorkflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_TwitterWorkflow.json",
      "workflow_name": "TwitterWorkflow",
      "suggested_filename": "content_twitterworkflow_automate_rocketchat_manual_cron.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "set",
        "rocketchat",
        "manualTrigger",
        "cron",
        "function",
        "twitter"
      ],
      "primary_integrations": [
        "rocketchat",
        "manual",
        "cron"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.function",
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.rocketchat",
        "n8n-nodes-base.cron"
      ],
      "business_description": "CONTENT workflow that automates data/processes using rocketchat, manual, cron, triggered via cron",
      "complexity_score": 12
    },
    {
      "original_filename": "110_Get_SSL_Certificate.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/110_Get_SSL_Certificate.json",
      "workflow_name": "Get SSL Certificate",
      "suggested_filename": "comm_certificate_read_uproc_functionitem.json",
      "category": "COMM",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "uproc",
        "functionItem",
        "manualTrigger",
        "telegram"
      ],
      "primary_integrations": [
        "uproc",
        "functionitem",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.uproc",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if"
      ],
      "business_description": "COMM workflow that reads data/processes using uproc, functionitem, manual, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "151_Receive_a_Mattermost_message_when_new_data_gets_added_to_Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/151_Receive_a_Mattermost_message_when_new_data_gets_added_to_Airtable.json",
      "workflow_name": "Receive a Mattermost message when new data gets added to Airtable",
      "suggested_filename": "ai_receive_ai_process_airtable_mattermost.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "airtableTrigger",
        "mattermost"
      ],
      "primary_integrations": [
        "airtable",
        "mattermost"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.airtableTrigger",
        "n8n-nodes-base.mattermost"
      ],
      "business_description": "AI workflow that ai_processs data/processes using airtable, mattermost, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "6zSE618gr9fDtAfF_🤖🧑‍💻_AI_Agent__for_Top_n8n_Creators_Leaderboard_Reporting.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/6zSE618gr9fDtAfF_🤖🧑‍💻_AI_Agent__for_Top_n8n_Creators_Leaderboard_Reporting.json",
      "workflow_name": "🤖🧑‍💻 AI Agent  for Top n8n Creators Leaderboard Reporting",
      "suggested_filename": "ai_agent_ai_process_httprequest_sort_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "httpRequest",
        "sort",
        "googleDrive",
        "telegram",
        "aggregate",
        "convertToFile",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "limit",
        "n8n-nodes-langchain.agent",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "gmail",
        "readWriteFile",
        "executeWorkflowTrigger",
        "set",
        "markdown",
        "splitOut",
        "n8n-nodes-langchain.lmChatGoogleGemini"
      ],
      "primary_integrations": [
        "httprequest",
        "sort",
        "googledrive"
      ],
      "total_nodes": 49,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.markdown",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, sort, googledrive, triggered via cron",
      "complexity_score": 70
    },
    {
      "original_filename": "RJ4PaYq0JBr29KJm_Reschedule_overdue_Asana_tasks_and_clean_up_completed_tasks.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/RJ4PaYq0JBr29KJm_Reschedule_overdue_Asana_tasks_and_clean_up_completed_tasks.json",
      "workflow_name": "Reschedule overdue Asana tasks and clean up completed tasks",
      "suggested_filename": "util_reschedule_automate_schedule_asana_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "scheduleTrigger",
        "stickyNote",
        "if",
        "asana"
      ],
      "primary_integrations": [
        "schedule",
        "asana"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.asana",
        "n8n-nodes-base.asana",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.asana",
        "n8n-nodes-base.asana",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using schedule, asana, triggered via cron",
      "complexity_score": 14
    },
    {
      "original_filename": "FyoPGDh8r3pxcGxo_New_OpenAI_Image_Generation.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/FyoPGDh8r3pxcGxo_New_OpenAI_Image_Generation.json",
      "workflow_name": "New OpenAI Image Generation",
      "suggested_filename": "ai_openai_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "convertToFile"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "converttofile"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, manual, converttofile, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "r3qHlCVCczqTw3pP_Zip_multiple_files.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/r3qHlCVCczqTw3pP_Zip_multiple_files.json",
      "workflow_name": "Zip multiple files",
      "suggested_filename": "util_multiple_automate_compression_executeworkflow.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "code",
        "compression",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "compression",
        "executeworkflow"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.compression",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code"
      ],
      "business_description": "UTIL workflow that automates data/processes using compression, executeworkflow, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "2006_workflow_2006.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2006_workflow_2006.json",
      "workflow_name": "2006_workflow_2006",
      "suggested_filename": "ai_2006_workflow_2006_automate_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "httpRequest",
        "markdown",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "httprequest",
        "markdown"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.toolWorkflow"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, httprequest, markdown, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "0KZs18Ti2KXKoLIr_✨🩷Automated_Social_Media_Content_Publishing_Factory_+_System_Prompt_Composition.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/0KZs18Ti2KXKoLIr_✨🩷Automated_Social_Media_Content_Publishing_Factory_+_System_Prompt_Composition.json",
      "workflow_name": "✨🩷Automated Social Media Content Publishing Factory + System Prompt Composition",
      "suggested_filename": "ai_automated_automate_httprequest_googledrive.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "googleDrive",
        "telegram",
        "extractFromFile",
        "facebookGraphApi",
        "noOp",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "twitter",
        "merge",
        "if",
        "n8n-nodes-langchain.toolSerpApi",
        "stickyNote",
        "gmail",
        "linkedIn",
        "executeWorkflowTrigger",
        "n8n-nodes-langchain.memoryBufferWindow",
        "googleDocs",
        "set",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "httprequest",
        "googledrive",
        "telegram"
      ],
      "total_nodes": 100,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.linkedIn",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolSerpApi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, googledrive, telegram, triggered via manual",
      "complexity_score": 123
    },
    {
      "original_filename": "3078_workflow_3078.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3078_workflow_3078.json",
      "workflow_name": "3078_workflow_3078",
      "suggested_filename": "ai_3078_workflow_3078_automate_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "extractFromFile",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "n8n-nodes-langchain.lmchatgooglegemini"
      ],
      "total_nodes": 28,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, httprequest, n8n-nodes-langchain.lmchatgooglegemini, triggered via manual",
      "complexity_score": 38
    },
    {
      "original_filename": "368_workflow_368.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/368_workflow_368.json",
      "workflow_name": "368_workflow_368",
      "suggested_filename": "comm_368_workflow_368_automate_freshdesk_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "freshdesk",
        "telegramTrigger",
        "telegram",
        "mondayCom"
      ],
      "primary_integrations": [
        "freshdesk",
        "telegram",
        "telegram"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.mondayCom",
        "n8n-nodes-base.mondayCom",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "n8n-nodes-base.freshdesk",
        "n8n-nodes-base.freshdesk",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "COMM workflow that automates data/processes using freshdesk, telegram, telegram, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "1737_workflow_1737.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1737_workflow_1737.json",
      "workflow_name": "1737_workflow_1737",
      "suggested_filename": "data_1737_workflow_1737_automate_spreadsheetfile_httprequest.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "stickyNote",
        "set",
        "httpRequest",
        "googleSheets"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "httprequest",
        "googlesheets"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using spreadsheetfile, httprequest, googlesheets, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "1041_workflow_1041.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1041_workflow_1041.json",
      "workflow_name": "1041_workflow_1041",
      "suggested_filename": "comm_1041_workflow_1041_automate_emelia_mattermost.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "emeliaTrigger",
        "mattermost"
      ],
      "primary_integrations": [
        "emelia",
        "mattermost"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.emeliaTrigger"
      ],
      "business_description": "COMM workflow that automates data/processes using emelia, mattermost, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "nJwkSOrJIFvutw1n_Flux_Dev_Image_Generation_Fal.ai.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/nJwkSOrJIFvutw1n_Flux_Dev_Image_Generation_Fal.ai.json",
      "workflow_name": "Flux Dev Image Generation Fal.ai",
      "suggested_filename": "ai_flux_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "googleDrive"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "googledrive"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, manual, googledrive, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "VoLT6Omw9KMQgPum_Weekly_Shodan_Query___Report_Accidents__no_function_node_.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/VoLT6Omw9KMQgPum_Weekly_Shodan_Query___Report_Accidents__no_function_node_.json",
      "workflow_name": "Weekly_Shodan_Query___Report_Accidents__no_function_node_",
      "suggested_filename": "analytics_weekly_shodan_query_report_accidents_no_function_node_report_splitinba.json",
      "category": "ANALYTICS",
      "business_function": "report",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "itemLists",
        "stickyNote",
        "set",
        "httpRequest",
        "markdown",
        "scheduleTrigger",
        "html",
        "theHive",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "itemlists",
        "httprequest"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.html",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.theHive",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "ANALYTICS workflow that reports data/processes using splitinbatches, itemlists, httprequest, triggered via cron",
      "complexity_score": 25
    },
    {
      "original_filename": "MkZ77sIELEO2kQx1_SearchApi_Youtube_Video_Summary.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/MkZ77sIELEO2kQx1_SearchApi_Youtube_Video_Summary.json",
      "workflow_name": "SearchApi Youtube Video Summary",
      "suggested_filename": "ai_searchapi_automate_n8nnodeslangchainchainsummarization_manual.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chainSummarization",
        "splitOut",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "summarize",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainsummarization",
        "manual",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@searchapi/n8n-nodes-searchapi.searchApi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainsummarization, manual, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "MKGrRFnUuMZMAxNf_Scrape_Latest_20_TechCrunch_Articles.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/MKGrRFnUuMZMAxNf_Scrape_Latest_20_TechCrunch_Articles.json",
      "workflow_name": "Scrape Latest 20 TechCrunch Articles",
      "suggested_filename": "util_scrape_extract_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "html"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "html"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.html",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.html",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that extracts data/processes using httprequest, manual, html, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "48_Receive_updates_when_an_email_is_bounced_or_opened.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/48_Receive_updates_when_an_email_is_bounced_or_opened.json",
      "workflow_name": "Receive updates when an email is bounced or opened",
      "suggested_filename": "ai_receive_ai_process_postmark.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "postmarkTrigger"
      ],
      "primary_integrations": [
        "postmark"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.postmarkTrigger"
      ],
      "business_description": "AI workflow that ai_processs data/processes using postmark, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "Xs7x61YMFsbpB4vg_Colombian_Invoices_Processing.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Xs7x61YMFsbpB4vg_Colombian_Invoices_Processing.json",
      "workflow_name": "Colombian Invoices Processing",
      "suggested_filename": "ai_colombian_process_splitinbatches_googlesheets.json",
      "category": "AI",
      "business_function": "process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "merge",
        "googleSheets",
        "n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-langchain.outputParserStructured",
        "gmailTrigger",
        "noOp",
        "stickyNote",
        "aggregate",
        "n8n-nodes-langchain.lmChatOpenAi",
        "xml",
        "extractFromFile",
        "code",
        "switch",
        "n8n-nodes-langchain.agent",
        "compression",
        "googleDrive",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "googlesheets",
        "n8n-nodes-langchain.calculator"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.compression",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.code",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that processs data/processes using splitinbatches, googlesheets, n8n-nodes-langchain.calculator, triggered via manual",
      "complexity_score": 41
    },
    {
      "original_filename": "Convert URL HTML to Markdown Format and Get Page Links.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Convert URL HTML to Markdown Format and Get Page Links.json",
      "workflow_name": "Convert URL HTML to Markdown Format and Get Page Links",
      "suggested_filename": "ai_convert_read_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "noOp",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "limit"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "manual"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that reads data/processes using splitinbatches, httprequest, manual, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "HnqGW0eq5asKfZxf_🔍🛠️Perplexity_Researcher_to_HTML_Web_Page.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/HnqGW0eq5asKfZxf_🔍🛠️Perplexity_Researcher_to_HTML_Web_Page.json",
      "workflow_name": "🔍🛠️Perplexity Researcher to HTML Web Page",
      "suggested_filename": "ai_perplexity_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserst.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "noOp",
        "stickyNote",
        "if",
        "set",
        "httpRequest",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "telegram",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 47,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via webhook",
      "complexity_score": 61
    },
    {
      "original_filename": "2678_workflow_2678.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2678_workflow_2678.json",
      "workflow_name": "2678_workflow_2678",
      "suggested_filename": "data_2678_workflow_2678_automate_strava_schedule_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "set",
        "strava",
        "scheduleTrigger",
        "sort",
        "limit",
        "code",
        "googleSheets",
        "removeDuplicates"
      ],
      "primary_integrations": [
        "strava",
        "schedule",
        "sort"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.strava",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.set",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.sort"
      ],
      "business_description": "DATA workflow that automates data/processes using strava, schedule, sort, triggered via cron",
      "complexity_score": 21
    },
    {
      "original_filename": "2501_workflow_2501.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2501_workflow_2501.json",
      "workflow_name": "2501_workflow_2501",
      "suggested_filename": "util_2501_workflow_2501_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "googleDrive"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "googledrive"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, googledrive, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "996_workflow_996.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/996_workflow_996.json",
      "workflow_name": "996_workflow_996",
      "suggested_filename": "util_996_workflow_996_automate_splitinbatches_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "if",
        "set",
        "manualTrigger",
        "function"
      ],
      "primary_integrations": [
        "splitinbatches",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.function",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, manual, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "1338_workflow_1338.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1338_workflow_1338.json",
      "workflow_name": "1338_workflow_1338",
      "suggested_filename": "util_1338_workflow_1338_automate_start_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "start",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "start",
        "httprequest",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.start",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using start, httprequest, manual, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "Upsert huge documents in a vector store with Supabase and Notion.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Upsert huge documents in a vector store with Supabase and Notion.json",
      "workflow_name": "RAG on living data",
      "suggested_filename": "ai_living_automate_splitinbatches_n8nnodeslangchainchainretrievalqa_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.chainRetrievalQa",
        "supabase",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "noOp",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.vectorStoreSupabase",
        "notion",
        "scheduleTrigger",
        "notionTrigger",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "limit",
        "n8n-nodes-langchain.retrieverVectorStore",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "summarize"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chainretrievalqa",
        "supabase"
      ],
      "total_nodes": 34,
      "node_types": [
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.notion",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.notionTrigger",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.summarize"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.chainretrievalqa, supabase, triggered via cron",
      "complexity_score": 51
    },
    {
      "original_filename": "559_workflow_559.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/559_workflow_559.json",
      "workflow_name": "559_workflow_559",
      "suggested_filename": "util_559_workflow_559_automate_box_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "box",
        "manualTrigger"
      ],
      "primary_integrations": [
        "box",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.box"
      ],
      "business_description": "UTIL workflow that automates data/processes using box, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "157_Get_synonyms_of_a_German_word.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/157_Get_synonyms_of_a_German_word.json",
      "workflow_name": "Get synonyms of a German word",
      "suggested_filename": "util_synonyms_read_manual_openthesaurus.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "openThesaurus"
      ],
      "primary_integrations": [
        "manual",
        "openthesaurus"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.openThesaurus"
      ],
      "business_description": "UTIL workflow that reads data/processes using manual, openthesaurus, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Fdbft9uw8mLGXMoE_Speech_Support_Workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Fdbft9uw8mLGXMoE_Speech_Support_Workflow.json",
      "workflow_name": "Speech Support Workflow",
      "suggested_filename": "ai_speech_automate_n8nnodeslangchainmemorybufferwindow_telegram.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "switch",
        "if",
        "stickyNote",
        "set",
        "code",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "telegram",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.memoryManager",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "telegram",
        "n8n-nodes-langchain.lmchatgooglegemini"
      ],
      "total_nodes": 22,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.memoryManager",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, telegram, n8n-nodes-langchain.lmchatgooglegemini, triggered via manual",
      "complexity_score": 34
    },
    {
      "original_filename": "3112_workflow_3112.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3112_workflow_3112.json",
      "workflow_name": "3112_workflow_3112",
      "suggested_filename": "util_3112_workflow_3112_automate_schedule_googledrive_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "scheduleTrigger",
        "googleDrive",
        "code",
        "n8n"
      ],
      "primary_integrations": [
        "schedule",
        "googledrive",
        "n8n"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.googleDrive"
      ],
      "business_description": "UTIL workflow that automates data/processes using schedule, googledrive, n8n, triggered via cron",
      "complexity_score": 12
    },
    {
      "original_filename": "Bitrix24 Chatbot Application Workflow example with Webhook Integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Bitrix24 Chatbot Application Workflow example with Webhook Integration.json",
      "workflow_name": "Bitrix24 Chatbot Application Workflow example with Webhook Integration",
      "suggested_filename": "comm_bitrix24_automate_httprequest_webhook_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "noOp",
        "set",
        "httpRequest",
        "webhook",
        "switch",
        "function",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 21
    },
    {
      "original_filename": "ODZpSQqCxkISEqv8_WooCommerce_AI_Chatbot_Workflow_for_Post-Sales_Support.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ODZpSQqCxkISEqv8_WooCommerce_AI_Chatbot_Workflow_for_Post-Sales_Support.json",
      "workflow_name": "WooCommerce AI Chatbot Workflow for Post-Sales Support",
      "suggested_filename": "ai_woocommerce_ai_process_telegram_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "telegramTool",
        "httpRequest",
        "googleDrive",
        "n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.toolVectorStore",
        "stickyNote",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "executeWorkflowTrigger",
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "set",
        "wooCommerceTool",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "manualTrigger"
      ],
      "primary_integrations": [
        "telegram",
        "httprequest",
        "googledrive"
      ],
      "total_nodes": 31,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.wooCommerceTool",
        "n8n-nodes-base.wooCommerceTool",
        "n8n-nodes-base.wooCommerceTool",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.telegramTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using telegram, httprequest, googledrive, triggered via manual",
      "complexity_score": 50
    },
    {
      "original_filename": "59_Send_an_SMS_using_the_Mocean_node.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/59_Send_an_SMS_using_the_Mocean_node.json",
      "workflow_name": "Send an SMS using the Mocean node",
      "suggested_filename": "util_send_automate_mocean_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "mocean",
        "manualTrigger"
      ],
      "primary_integrations": [
        "mocean",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.mocean"
      ],
      "business_description": "UTIL workflow that automates data/processes using mocean, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2125_workflow_2125.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2125_workflow_2125.json",
      "workflow_name": "2125_workflow_2125",
      "suggested_filename": "ai_2125_workflow_2125_automate_gmail_httprequest_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "googleCalendar",
        "splitOut",
        "openAi",
        "switch",
        "html",
        "clearbit",
        "filter"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.clearbit",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, httprequest, schedule, triggered via cron",
      "complexity_score": 34
    },
    {
      "original_filename": "91_New_invoice_email_notification.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/91_New_invoice_email_notification.json",
      "workflow_name": "New invoice email notification",
      "suggested_filename": "ai_invoice_ai_process_slack_emailsend.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "if",
        "emailSend",
        "mindee",
        "emailReadImap"
      ],
      "primary_integrations": [
        "slack",
        "emailsend",
        "mindee"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.if",
        "n8n-nodes-base.mindee",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.if"
      ],
      "business_description": "AI workflow that ai_processs data/processes using slack, emailsend, mindee, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "1943_workflow_1943.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1943_workflow_1943.json",
      "workflow_name": "1943_workflow_1943",
      "suggested_filename": "util_1943_workflow_1943_automate_comparedatasets_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "compareDatasets",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "comparedatasets",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using comparedatasets, manual, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "55_Convert_the_JSON_data_received_from_the_CocktailDB_API_in_XML.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/55_Convert_the_JSON_data_received_from_the_CocktailDB_API_in_XML.json",
      "workflow_name": "Convert the JSON data received from the CocktailDB API in XML",
      "suggested_filename": "ai_convert_ai_process_xml_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "xml",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "xml",
        "httprequest",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.xml"
      ],
      "business_description": "AI workflow that ai_processs data/processes using xml, httprequest, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "DSP_Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/DSP_Agent.json",
      "workflow_name": "DSP Agent",
      "suggested_filename": "ai_agent_automate_n8nnodeslangchainmemorybufferwindow_airtable.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "airtableTool",
        "n8n-nodes-langchain.toolCalculator",
        "set",
        "aggregate",
        "n8n-nodes-langchain.toolWikipedia",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "telegram",
        "n8n-nodes-langchain.agent",
        "switch",
        "airtable",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "airtable",
        "n8n-nodes-langchain.calculator"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.airtableTool",
        "@n8n/n8n-nodes-langchain.toolWorkflow"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, airtable, n8n-nodes-langchain.calculator, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "QO4Mg23JvVfNCICy_Build_a_Phone_Agent_to_qualify_outbound_leads_and_inbound_calls_with_RetellAI_-vide.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/QO4Mg23JvVfNCICy_Build_a_Phone_Agent_to_qualify_outbound_leads_and_inbound_calls_with_RetellAI_-vide.json",
      "workflow_name": "Build a Phone Agent to qualify outbound leads and inbound calls with RetellAI -vide",
      "suggested_filename": "ai_build_ai_process_gmail_httprequest_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "filter",
        "wait",
        "if",
        "stickyNote",
        "gmail",
        "httpRequest",
        "webhook",
        "googleSheets",
        "n8n-nodes-langchain.openAi",
        "twilio",
        "googleSheetsTrigger",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.twilio",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, httprequest, webhook, triggered via webhook",
      "complexity_score": 30
    },
    {
      "original_filename": "2147_workflow_2147.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2147_workflow_2147.json",
      "workflow_name": "2147_workflow_2147",
      "suggested_filename": "util_2147_workflow_2147_automate_crypto_itemlists_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "crypto",
        "itemLists",
        "if",
        "dateTime",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "todoist",
        "filter"
      ],
      "primary_integrations": [
        "crypto",
        "itemlists",
        "datetime"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using crypto, itemlists, datetime, triggered via cron",
      "complexity_score": 29
    },
    {
      "original_filename": "1465_workflow_1465.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1465_workflow_1465.json",
      "workflow_name": "1465_workflow_1465",
      "suggested_filename": "util_1465_workflow_1465_automate_datetime_emailsend_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "noOp",
        "dateTime",
        "set",
        "emailSend",
        "googleCalendar",
        "code",
        "cron",
        "switch"
      ],
      "primary_integrations": [
        "datetime",
        "emailsend",
        "googlecalendar"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code"
      ],
      "business_description": "UTIL workflow that automates data/processes using datetime, emailsend, googlecalendar, triggered via cron",
      "complexity_score": 22
    },
    {
      "original_filename": "121pu6oiTjzkJ8OT_↔️_Airtable_Batch_Processing.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/121pu6oiTjzkJ8OT_↔️_Airtable_Batch_Processing.json",
      "workflow_name": "↔️ Airtable Batch Processing",
      "suggested_filename": "ai_airtable_ai_process_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "merge",
        "if",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "aggregate",
        "splitOut",
        "manualTrigger",
        "code",
        "switch",
        "debugHelper",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "manual"
      ],
      "total_nodes": 35,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.debugHelper",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.code"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, httprequest, manual, triggered via manual",
      "complexity_score": 50
    },
    {
      "original_filename": "471_workflow_471.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/471_workflow_471.json",
      "workflow_name": "471_workflow_471",
      "suggested_filename": "comm_471_workflow_471_automate_httprequest_cron_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "httpRequest",
        "cron",
        "function",
        "discord"
      ],
      "primary_integrations": [
        "httprequest",
        "cron",
        "discord"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.function",
        "n8n-nodes-base.if",
        "n8n-nodes-base.function"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, cron, discord, triggered via cron",
      "complexity_score": 11
    },
    {
      "original_filename": "1169_workflow_1169.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1169_workflow_1169.json",
      "workflow_name": "1169_workflow_1169",
      "suggested_filename": "util_1169_workflow_1169_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "noOp",
        "set",
        "httpRequest",
        "manualTrigger",
        "function"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.function"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "3971_workflow_3971.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3971_workflow_3971.json",
      "workflow_name": "3971_workflow_3971",
      "suggested_filename": "ai_3971_workflow_3971_automate_n8nnodeslangchainchainllm_markdown_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "markdown",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "microsoftTeams",
        "code",
        "aggregate"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "markdown",
        "schedule"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.microsoftTeams",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.microsoftTeams",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, markdown, schedule, triggered via cron",
      "complexity_score": 27
    },
    {
      "original_filename": "2095_workflow_2095.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2095_workflow_2095.json",
      "workflow_name": "2095_workflow_2095",
      "suggested_filename": "ai_2095_workflow_2095_automate_n8nnodeslangchainmemorybufferwindow_slack.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "slack",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "code",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "slack",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, slack, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "1840_workflow_1840.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1840_workflow_1840.json",
      "workflow_name": "1840_workflow_1840",
      "suggested_filename": "biz_1840_workflow_1840_automate_hubspot_functionitem_cron.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "hubspot",
        "if",
        "functionItem",
        "zendesk",
        "cron"
      ],
      "primary_integrations": [
        "hubspot",
        "functionitem",
        "zendesk"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.merge",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.if",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.cron"
      ],
      "business_description": "BIZ workflow that automates data/processes using hubspot, functionitem, zendesk, triggered via cron",
      "complexity_score": 15
    },
    {
      "original_filename": "Chat with GitHub API Documentation_ RAG-Powered Chatbot with Pinecone & OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Chat with GitHub API Documentation_ RAG-Powered Chatbot with Pinecone & OpenAI.json",
      "workflow_name": "Chat with GitHub OpenAPI Specification using RAG (Pinecone and OpenAI)",
      "suggested_filename": "ai_chat_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvectorst.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolVectorStore",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.vectorStorePinecone",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.vectorstore",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.vectorstore, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "817_workflow_817.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/817_workflow_817.json",
      "workflow_name": "817_workflow_817",
      "suggested_filename": "ops_817_workflow_817_automate_splitinbatches_httprequest_cron.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "noOp",
        "set",
        "httpRequest",
        "manualTrigger",
        "github",
        "cron",
        "switch",
        "function"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "manual"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.function",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.github",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.github",
        "n8n-nodes-base.github",
        "n8n-nodes-base.function",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set"
      ],
      "business_description": "OPS workflow that automates data/processes using splitinbatches, httprequest, manual, triggered via cron",
      "complexity_score": 26
    },
    {
      "original_filename": "2026_workflow_2026.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2026_workflow_2026.json",
      "workflow_name": "2026_workflow_2026",
      "suggested_filename": "ai_2026_workflow_2026_automate_n8nnodeslangchainchat_executeworkflow.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "executeWorkflowTrigger",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "code",
        "hackerNews"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "executeworkflow",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.hackerNews",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, executeworkflow, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "Gmail AI Auto-Responder_ Create Draft Replies to incoming emails.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Gmail AI Auto-Responder_ Create Draft Replies to incoming emails.json",
      "workflow_name": "Gmail AI auto-responder: create draft replies to incoming emails",
      "suggested_filename": "ai_gmail_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruc.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "gmailTrigger",
        "stickyNote",
        "if",
        "gmail",
        "n8n-nodes-langchain.lmChatOpenAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, gmail, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "1891_workflow_1891.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1891_workflow_1891.json",
      "workflow_name": "1891_workflow_1891",
      "suggested_filename": "comm_1891_workflow_1891_automate_hubspot_slack_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "hubspot",
        "slack",
        "lemlist",
        "if",
        "webhook",
        "dropcontact"
      ],
      "primary_integrations": [
        "hubspot",
        "slack",
        "lemlist"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.lemlist",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.if",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.dropcontact",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.if",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.hubspot"
      ],
      "business_description": "COMM workflow that automates data/processes using hubspot, slack, lemlist, triggered via webhook",
      "complexity_score": 24
    },
    {
      "original_filename": "3913_workflow_3913.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3913_workflow_3913.json",
      "workflow_name": "3913_workflow_3913",
      "suggested_filename": "util_3913_workflow_3913_automate_webhook_converttofile_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "noOp",
        "stickyNote",
        "set",
        "webhook",
        "convertToFile",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "converttofile",
        "respondtowebhook"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, converttofile, respondtowebhook, triggered via webhook",
      "complexity_score": 12
    },
    {
      "original_filename": "Compose reply draft in Gmail with OpenAI Assistant.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Compose reply draft in Gmail with OpenAI Assistant.json",
      "workflow_name": "Compose reply draft in Gmail with OpenAI Assistant",
      "suggested_filename": "ai_compose_ai_process_splitinbatches_gmail_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "markdown",
        "scheduleTrigger",
        "limit",
        "code",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "splitinbatches",
        "gmail",
        "httprequest"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, gmail, httprequest, triggered via cron",
      "complexity_score": 33
    },
    {
      "original_filename": "lStrENIdqN2WyGqW_Business_Canvas_Generator.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/lStrENIdqN2WyGqW_Business_Canvas_Generator.json",
      "workflow_name": "Business Canvas Generator",
      "suggested_filename": "ai_business_automate_n8nnodeslangchainchat_n8nnodeslangchainlmchatollama.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-langchain.agent",
        "code",
        "convertToFile"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.lmchatollama",
        "n8n-nodes-langchain.agent"
      ],
      "total_nodes": 28,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOllama",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, n8n-nodes-langchain.lmchatollama, n8n-nodes-langchain.agent, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "2732_workflow_2732.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2732_workflow_2732.json",
      "workflow_name": "2732_workflow_2732",
      "suggested_filename": "comm_2732_workflow_2732_automate_slack_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "slack",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "aggregate",
        "webhook",
        "extractFromFile",
        "code",
        "switch",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "slack",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.respondToWebhook"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, httprequest, webhook, triggered via webhook",
      "complexity_score": 28
    },
    {
      "original_filename": "2044_workflow_2044.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2044_workflow_2044.json",
      "workflow_name": "2044_workflow_2044",
      "suggested_filename": "util_2044_workflow_2044_automate_schedule_spotify_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "scheduleTrigger",
        "switch",
        "spotify"
      ],
      "primary_integrations": [
        "schedule",
        "spotify"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using schedule, spotify, triggered via cron",
      "complexity_score": 17
    },
    {
      "original_filename": "cY8OVKzHS0ScRhP9_puq-docker-n8n-deploy.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/cY8OVKzHS0ScRhP9_puq-docker-n8n-deploy.json",
      "workflow_name": "puq-docker-n8n-deploy",
      "suggested_filename": "ops_docker_automate_ssh_webhook_webhook.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "ssh",
        "stickyNote",
        "set",
        "webhook",
        "code",
        "switch",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "ssh",
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 34,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.ssh",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set"
      ],
      "business_description": "OPS workflow that automates data/processes using ssh, webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 42
    },
    {
      "original_filename": "Open Deep Research - AI-Powered Autonomous Research Workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Open Deep Research - AI-Powered Autonomous Research Workflow.json",
      "workflow_name": "Open Deep Research - AI-Powered Autonomous Research Workflow",
      "suggested_filename": "ai_open_ai_process_splitinbatches_n8nnodeslangchainmemorybufferwindow.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-langchain.agent",
        "code"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chainllm"
      ],
      "total_nodes": 17,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chainllm, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "Hacker News Job Listing Scraper and Parser.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Hacker News Job Listing Scraper and Parser.json",
      "workflow_name": "HN Who is Hiring Scrape",
      "suggested_filename": "ai_hiring_extract_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstructu.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "manualTrigger",
        "code",
        "limit",
        "airtable",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that extracts data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "2316_workflow_2316.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2316_workflow_2316.json",
      "workflow_name": "2316_workflow_2316",
      "suggested_filename": "util_2316_workflow_2316_automate_readwritefile_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "readWriteFile",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "readwritefile",
        "httprequest",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using readwritefile, httprequest, manual, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "688_workflow_688.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/688_workflow_688.json",
      "workflow_name": "688_workflow_688",
      "suggested_filename": "util_688_workflow_688_automate_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "set",
        "manualTrigger",
        "switch",
        "function"
      ],
      "primary_integrations": [
        "manual"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.function",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "HJwTWtzlhK8Q5SOv_Telegram_AI_multi-format_chatbot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/HJwTWtzlhK8Q5SOv_Telegram_AI_multi-format_chatbot.json",
      "workflow_name": "Telegram AI multi-format chatbot",
      "suggested_filename": "ai_telegram_ai_process_n8nnodeslangchainmemorybufferwindow_telegram.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.agent",
        "switch",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "telegram",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 15,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.switch"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, telegram, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "117_Syncro_Alert_to_OpsGenie.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/117_Syncro_Alert_to_OpsGenie.json",
      "workflow_name": "Syncro Alert to OpsGenie",
      "suggested_filename": "comm_syncro_sync_httprequest_webhook_webhook.json",
      "category": "COMM",
      "business_function": "sync",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "noOp",
        "set",
        "httpRequest",
        "webhook",
        "switch"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.switch"
      ],
      "business_description": "COMM workflow that syncs data/processes using httprequest, webhook, triggered via webhook",
      "complexity_score": 13
    },
    {
      "original_filename": "7zRCNv7B5WFRg7ux_Restore_your_credentials_from_GitHub.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/7zRCNv7B5WFRg7ux_Restore_your_credentials_from_GitHub.json",
      "workflow_name": "Restore your credentials from GitHub",
      "suggested_filename": "ops_restore_automate_httprequest_manual.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "github",
        "extractFromFile",
        "n8n"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "github"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.github",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.if"
      ],
      "business_description": "OPS workflow that automates data/processes using httprequest, manual, github, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "128_Create_a_company_in_Salesmate.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/128_Create_a_company_in_Salesmate.json",
      "workflow_name": "Create a company in Salesmate",
      "suggested_filename": "biz_create_create_salesmate_manual.json",
      "category": "BIZ",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "salesmate",
        "manualTrigger"
      ],
      "primary_integrations": [
        "salesmate",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.salesmate"
      ],
      "business_description": "BIZ workflow that creates data/processes using salesmate, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2374_workflow_2374.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2374_workflow_2374.json",
      "workflow_name": "2374_workflow_2374",
      "suggested_filename": "ai_2374_workflow_2374_automate_executeworkflow_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "filter",
        "executeWorkflowTrigger",
        "set",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "code",
        "splitOut",
        "manualTrigger",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "googleSheets",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "executeWorkflow",
        "hackerNews",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "executeworkflow",
        "httprequest",
        "n8n-nodes-langchain.embeddingsopenai"
      ],
      "total_nodes": 36,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.hackerNews",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using executeworkflow, httprequest, n8n-nodes-langchain.embeddingsopenai, triggered via manual",
      "complexity_score": 53
    },
    {
      "original_filename": "193_Create,_add_an_attachment,_and_send_a_draft_using_the_Microsoft_Outlook_node.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/193_Create,_add_an_attachment,_and_send_a_draft_using_the_Microsoft_Outlook_node.json",
      "workflow_name": "Create, add an attachment, and send a draft using the Microsoft Outlook node",
      "suggested_filename": "comm_create_create_microsoftoutlook_httprequest.json",
      "category": "COMM",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "microsoftOutlook",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "microsoftoutlook",
        "httprequest",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook"
      ],
      "business_description": "COMM workflow that creates data/processes using microsoftoutlook, httprequest, manual, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "2402_workflow_2402.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2402_workflow_2402.json",
      "workflow_name": "2402_workflow_2402",
      "suggested_filename": "comm_2402_workflow_2402_automate_telegram_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "telegramTrigger",
        "telegram",
        "switch",
        "googleSheets",
        "executeWorkflow"
      ],
      "primary_integrations": [
        "telegram",
        "telegram",
        "googlesheets"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch"
      ],
      "business_description": "COMM workflow that automates data/processes using telegram, telegram, googlesheets, triggered via manual",
      "complexity_score": 37
    },
    {
      "original_filename": "xQHiKDTkezDY5lFu_Suspicious_login_detection.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/xQHiKDTkezDY5lFu_Suspicious_login_detection.json",
      "workflow_name": "Suspicious_login_detection",
      "suggested_filename": "comm_suspicious_login_detection_automate_postgres_slack_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "postgres",
        "merge",
        "slack",
        "if",
        "noOp",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "webhook",
        "manualTrigger",
        "code",
        "switch",
        "html"
      ],
      "primary_integrations": [
        "postgres",
        "slack",
        "gmail"
      ],
      "total_nodes": 43,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.html",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "COMM workflow that automates data/processes using postgres, slack, gmail, triggered via webhook",
      "complexity_score": 57
    },
    {
      "original_filename": "SvYHgLmzosuLAe4A_Google_Calendar_Event_Reminder.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/SvYHgLmzosuLAe4A_Google_Calendar_Event_Reminder.json",
      "workflow_name": "Google Calendar Event Reminder",
      "suggested_filename": "ai_google_automate_schedule_googlecalendar_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "scheduleTrigger",
        "googleCalendar",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "telegram",
        "removeDuplicates"
      ],
      "primary_integrations": [
        "schedule",
        "googlecalendar",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.removeDuplicates",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using schedule, googlecalendar, n8n-nodes-langchain.lmchatopenai, triggered via cron",
      "complexity_score": 16
    },
    {
      "original_filename": "o8HjmolfMilbaEkk_Telegram_echo-bot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/o8HjmolfMilbaEkk_Telegram_echo-bot.json",
      "workflow_name": "Telegram echo-bot",
      "suggested_filename": "comm_telegram_automate_telegram_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "telegramTrigger",
        "telegram"
      ],
      "primary_integrations": [
        "telegram",
        "telegram"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "COMM workflow that automates data/processes using telegram, telegram, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "Use OpenRouter in n8n versions _1.78.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Use OpenRouter in n8n versions _1.78.json",
      "workflow_name": "Use any LLM-Model via OpenRouter",
      "suggested_filename": "ai_model_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "1809_workflow_1809.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1809_workflow_1809.json",
      "workflow_name": "1809_workflow_1809",
      "suggested_filename": "ecommerce_1809_workflow_1809_automate_zendesk_shopify.json",
      "category": "ECOMMERCE",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "noOp",
        "if",
        "set",
        "zendesk",
        "shopifyTrigger"
      ],
      "primary_integrations": [
        "zendesk",
        "shopify"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.shopifyTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.zendesk"
      ],
      "business_description": "ECOMMERCE workflow that automates data/processes using zendesk, shopify, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "3767_workflow_3767.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3767_workflow_3767.json",
      "workflow_name": "3767_workflow_3767",
      "suggested_filename": "ai_3767_workflow_3767_automate_hubspot_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "hubspot",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "emailReadImap"
      ],
      "primary_integrations": [
        "hubspot",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.hubspot",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.hubspot",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using hubspot, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "103_verify_email.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/103_verify_email.json",
      "workflow_name": "verify email",
      "suggested_filename": "ai_verify_ai_process_functionitem_uproc.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "functionItem",
        "uproc",
        "manualTrigger",
        "if"
      ],
      "primary_integrations": [
        "functionitem",
        "uproc",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.uproc",
        "n8n-nodes-base.if"
      ],
      "business_description": "AI workflow that ai_processs data/processes using functionitem, uproc, manual, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "Building RAG Chatbot for Movie Recommendations with Qdrant and Open AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Building RAG Chatbot for Movie Recommendations with Qdrant and Open AI.json",
      "workflow_name": "Building RAG Chatbot for Movie Recommendations with Qdrant and Open AI",
      "suggested_filename": "ai_building_ai_process_httprequest_extractfromfile.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "extractFromFile",
        "aggregate",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "merge",
        "stickyNote",
        "github",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "executeWorkflowTrigger",
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "set",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "splitOut",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "extractfromfile",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 27,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.github",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, extractfromfile, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 46
    },
    {
      "original_filename": "3973_workflow_3973.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3973_workflow_3973.json",
      "workflow_name": "3973_workflow_3973",
      "suggested_filename": "util_3973_workflow_3973_automate_webhook_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "code",
        "switch",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 17
    },
    {
      "original_filename": "TWcBOEMLFs7e6KjP_Whisper_Transkription_copy.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/TWcBOEMLFs7e6KjP_Whisper_Transkription_copy.json",
      "workflow_name": "Whisper Transkription copy",
      "suggested_filename": "ai_whisper_automate_notion_googledrive.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "notion",
        "googleDrive",
        "n8n-nodes-langchain.openAi",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "notion",
        "googledrive",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.notion",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that automates data/processes using notion, googledrive, n8n-nodes-langchain.openai, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "2046_workflow_2046.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2046_workflow_2046.json",
      "workflow_name": "2046_workflow_2046",
      "suggested_filename": "util_2046_workflow_2046_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 47,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 51
    },
    {
      "original_filename": "VLRbAr4OrtnHUU2l_Todoist_Weekly_Review_Template.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/VLRbAr4OrtnHUU2l_Todoist_Weekly_Review_Template.json",
      "workflow_name": "Todoist Weekly Review Template",
      "suggested_filename": "util_todoist_automate_emailsend_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "emailSend",
        "httpRequest",
        "scheduleTrigger",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "emailsend",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.emailSend"
      ],
      "business_description": "UTIL workflow that automates data/processes using emailsend, httprequest, schedule, triggered via cron",
      "complexity_score": 11
    },
    {
      "original_filename": "1820_workflow_1820.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1820_workflow_1820.json",
      "workflow_name": "1820_workflow_1820",
      "suggested_filename": "comm_1820_workflow_1820_automate_slack_webhook_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "slack",
        "if",
        "stickyNote",
        "set",
        "webhook",
        "zendesk",
        "code"
      ],
      "primary_integrations": [
        "slack",
        "webhook",
        "zendesk"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.if",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, webhook, zendesk, triggered via webhook",
      "complexity_score": 16
    },
    {
      "original_filename": "AI Social Media Caption Creator creates social media post captions in Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Social Media Caption Creator creates social media post captions in Airtable.json",
      "workflow_name": "AI Social Media Caption Creator",
      "suggested_filename": "ai_social_ai_process_n8nnodeslangchainmemorybufferwindow_airtable.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "airtableTool",
        "wait",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "airtable",
        "n8n-nodes-langchain.agent",
        "airtableTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "airtable",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 10,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtableTrigger",
        "n8n-nodes-base.airtableTool",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, airtable, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "1109_workflow_1109.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1109_workflow_1109.json",
      "workflow_name": "1109_workflow_1109",
      "suggested_filename": "comm_1109_workflow_1109_automate_slack_googlecloudnaturallanguage.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "googleCloudNaturalLanguage",
        "if",
        "trello",
        "notion",
        "typeformTrigger"
      ],
      "primary_integrations": [
        "slack",
        "googlecloudnaturallanguage",
        "trello"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.googleCloudNaturalLanguage",
        "n8n-nodes-base.if",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.trello"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, googlecloudnaturallanguage, trello, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "620_workflow_620.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/620_workflow_620.json",
      "workflow_name": "620_workflow_620",
      "suggested_filename": "util_620_workflow_620_automate_nextcloud_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "nextCloud",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "nextcloud",
        "httprequest",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.nextCloud",
        "n8n-nodes-base.nextCloud",
        "n8n-nodes-base.nextCloud"
      ],
      "business_description": "UTIL workflow that automates data/processes using nextcloud, httprequest, manual, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "dCLvOuZgc8tToQwu_Add_new_incoming_emails_to_a_Google_Sheets_spreadsheet_as_a_new_row..json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/dCLvOuZgc8tToQwu_Add_new_incoming_emails_to_a_Google_Sheets_spreadsheet_as_a_new_row..json",
      "workflow_name": "Add new incoming emails to a Google Sheets spreadsheet as a new row.",
      "suggested_filename": "ai_incoming_ai_process_gmail_googlesheets.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "gmailTrigger",
        "googleSheets",
        "stickyNote"
      ],
      "primary_integrations": [
        "gmail",
        "googlesheets"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, googlesheets, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "2779_workflow_2779.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2779_workflow_2779.json",
      "workflow_name": "2779_workflow_2779",
      "suggested_filename": "ai_2779_workflow_2779_automate_extractfromfile_googledrive.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "code",
        "splitOut",
        "extractFromFile",
        "googleDrive",
        "n8n-nodes-langchain.openAi",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "extractfromfile",
        "googledrive",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using extractfromfile, googledrive, n8n-nodes-langchain.openai, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "87_Create_a_new_issue_in_Jira.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/87_Create_a_new_issue_in_Jira.json",
      "workflow_name": "Create a new issue in Jira",
      "suggested_filename": "util_create_create_task_jira_manual.json",
      "category": "UTIL",
      "business_function": "create_task",
      "trigger_type": "manual",
      "integrations": [
        "jira",
        "manualTrigger"
      ],
      "primary_integrations": [
        "jira",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.jira"
      ],
      "business_description": "UTIL workflow that create_tasks data/processes using jira, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Enhance Customer Chat by Buffering Messages with Twilio and Redis.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Enhance Customer Chat by Buffering Messages with Twilio and Redis.json",
      "workflow_name": "Enhance Customer Chat by Buffering Messages with Twilio and Redis",
      "suggested_filename": "ai_enhance_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainmemorym.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "if",
        "noOp",
        "stickyNote",
        "wait",
        "set",
        "n8n-nodes-langchain.memoryManager",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "twilioTrigger",
        "twilio",
        "redis"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.memorymanager",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 18,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.twilioTrigger",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.twilio",
        "n8n-nodes-base.wait",
        "@n8n/n8n-nodes-langchain.memoryManager",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.memorymanager, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "ChatGPT Automatic Code Review in Gitlab MR.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ChatGPT Automatic Code Review in Gitlab MR.json",
      "workflow_name": "ChatGPT Automatic Code Review in Gitlab MR",
      "suggested_filename": "ai_chatgpt_automate_n8nnodeslangchainchainllm_httprequest_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "if",
        "stickyNote",
        "httpRequest",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "code"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, httprequest, webhook, triggered via webhook",
      "complexity_score": 22
    },
    {
      "original_filename": "✨ Vision-Based AI Agent Scraper - with Google Sheets, ScrapingBee, and Gemini.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/✨ Vision-Based AI Agent Scraper - with Google Sheets, ScrapingBee, and Gemini.json",
      "workflow_name": "Vision-Based AI Agent Scraper - with Google Sheets, ScrapingBee, and Gemini",
      "suggested_filename": "ai_vision_ai_process_n8nnodeslangchainoutputparserstructured_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "markdown",
        "splitOut",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "manualTrigger",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "googleSheets",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest",
        "markdown"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.outputparserstructured, httprequest, markdown, triggered via manual",
      "complexity_score": 41
    },
    {
      "original_filename": "2462_workflow_2462.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2462_workflow_2462.json",
      "workflow_name": "2462_workflow_2462",
      "suggested_filename": "ai_2462_workflow_2462_automate_n8nnodeslangchainmemorybufferwindow_baserow.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "baserowTool",
        "if",
        "stickyNote",
        "set",
        "googleCalendarTool",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.agent",
        "gmailTool",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "baserow",
        "googlecalendar"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.googleCalendarTool",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.gmailTool",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.baserowTool",
        "n8n-nodes-base.baserowTool",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, baserow, googlecalendar, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "2314_workflow_2314.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2314_workflow_2314.json",
      "workflow_name": "2314_workflow_2314",
      "suggested_filename": "util_2314_workflow_2314_automate_httprequest_readwritefile.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "readWriteFile",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "readwritefile",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, readwritefile, manual, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "3958_workflow_3958.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3958_workflow_3958.json",
      "workflow_name": "3958_workflow_3958",
      "suggested_filename": "ai_3958_workflow_3958_automate_hubspot_n8nnodeslangchainoutputparserstructured_w.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "hubspot",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "set",
        "gmail",
        "httpRequest",
        "googleCalendarTool",
        "markdown",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "splitOut",
        "hubspotTrigger",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "hubspot",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 31,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.hubspotTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.hubspot",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using hubspot, n8n-nodes-langchain.outputparserstructured, gmail, triggered via webhook",
      "complexity_score": 48
    },
    {
      "original_filename": "Summarize SERPBear data with AI (via Openrouter) and save it to Baserow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Summarize SERPBear data with AI (via Openrouter) and save it to Baserow.json",
      "workflow_name": "SERPBear analytics template",
      "suggested_filename": "analytics_serpbear_automate_httprequest_schedule_cron.json",
      "category": "ANALYTICS",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "baserow",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "baserow"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.baserow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "ANALYTICS workflow that automates data/processes using httprequest, schedule, baserow, triggered via cron",
      "complexity_score": 16
    },
    {
      "original_filename": "vpZ1wpsniCvKYjCF_General_3D_Presentation.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/vpZ1wpsniCvKYjCF_General_3D_Presentation.json",
      "workflow_name": "General 3D Presentation",
      "suggested_filename": "util_general_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "wait",
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "3McL3itHTso0Cy10_Automated_PDF_to_HTML_Conversion.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3McL3itHTso0Cy10_Automated_PDF_to_HTML_Conversion.json",
      "workflow_name": "Automated PDF to HTML Conversion",
      "suggested_filename": "ai_automated_automate_httprequest_googledrive.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "httpRequest",
        "googleDrive",
        "code",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "googledrive",
        "googledrive"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, googledrive, googledrive, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "xEij0kj2I1DHbL3I_🌐🪛_AI_Agent_Chatbot_with_Jina.ai_Webpage_Scraper.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/xEij0kj2I1DHbL3I_🌐🪛_AI_Agent_Chatbot_with_Jina.ai_Webpage_Scraper.json",
      "workflow_name": "🌐🪛 AI Agent Chatbot with Jina.ai Webpage Scraper",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.httprequest"
      ],
      "total_nodes": 9,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolHttpRequest"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.httprequest, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "2376_workflow_2376.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2376_workflow_2376.json",
      "workflow_name": "2376_workflow_2376",
      "suggested_filename": "ops_2376_workflow_2376_automate_gitlab_schedule_cron.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "gitlab",
        "scheduleTrigger",
        "manualTrigger",
        "aggregate",
        "n8n",
        "filter"
      ],
      "primary_integrations": [
        "gitlab",
        "schedule",
        "manual"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.set",
        "n8n-nodes-base.gitlab",
        "n8n-nodes-base.gitlab",
        "n8n-nodes-base.set",
        "n8n-nodes-base.gitlab",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.gitlab",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.if"
      ],
      "business_description": "OPS workflow that automates data/processes using gitlab, schedule, manual, triggered via cron",
      "complexity_score": 25
    },
    {
      "original_filename": "DNqCvzBvS7GAFWm4_Send_Emails_from_Obsidian.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/DNqCvzBvS7GAFWm4_Send_Emails_from_Obsidian.json",
      "workflow_name": "Send Emails from Obsidian",
      "suggested_filename": "ai_send_ai_process_splitinbatches_datetime_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "splitInBatches",
        "if",
        "dateTime",
        "stickyNote",
        "gmail",
        "set",
        "webhook",
        "splitOut",
        "aggregate",
        "convertToFile",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "splitinbatches",
        "datetime",
        "gmail"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, datetime, gmail, triggered via webhook",
      "complexity_score": 30
    },
    {
      "original_filename": "1122_workflow_1122.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1122_workflow_1122.json",
      "workflow_name": "1122_workflow_1122",
      "suggested_filename": "data_1122_workflow_1122_automate_interval_notion_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "interval",
        "notion",
        "notionTrigger",
        "webhook",
        "signl4",
        "function"
      ],
      "primary_integrations": [
        "interval",
        "notion",
        "notion"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.function",
        "n8n-nodes-base.notionTrigger",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.function",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.interval",
        "n8n-nodes-base.signl4",
        "n8n-nodes-base.signl4",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.signl4"
      ],
      "business_description": "DATA workflow that automates data/processes using interval, notion, notion, triggered via webhook",
      "complexity_score": 19
    },
    {
      "original_filename": "525_workflow_525.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/525_workflow_525.json",
      "workflow_name": "525_workflow_525",
      "suggested_filename": "util_525_workflow_525_automate_manual_hackernews.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "hackerNews"
      ],
      "primary_integrations": [
        "manual",
        "hackernews"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.hackerNews"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, hackernews, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "B37wvB0tdKgjuabw_Image_to_license_plate_number.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/B37wvB0tdKgjuabw_Image_to_license_plate_number.json",
      "workflow_name": "Image to license plate number",
      "suggested_filename": "util_image_automate_n8nnodeslangchainchainllm_form.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "set",
        "form",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "form",
        "n8n-nodes-langchain.lmchatopenrouter"
      ],
      "total_nodes": 5,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.form",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.formTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using n8n-nodes-langchain.chainllm, form, n8n-nodes-langchain.lmchatopenrouter, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "zlHbtHIcCZ9enKwg_v1_helper_-_Find_params_with_affected_expressions.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/zlHbtHIcCZ9enKwg_v1_helper_-_Find_params_with_affected_expressions.json",
      "workflow_name": "v1 helper - Find params with affected expressions",
      "suggested_filename": "util_helper_automate_n8n_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "n8n",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using n8n, manual, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "Ef2uEM6H19K2DGUO_Backup_workflows_to_git_repository_on_Gitea.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Ef2uEM6H19K2DGUO_Backup_workflows_to_git_repository_on_Gitea.json",
      "workflow_name": "Backup workflows to git repository on Gitea",
      "suggested_filename": "util_backup_backup_splitinbatches_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "backup",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "code",
        "n8n"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that backups data/processes using splitinbatches, httprequest, schedule, triggered via cron",
      "complexity_score": 28
    },
    {
      "original_filename": "2618_workflow_2618.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2618_workflow_2618.json",
      "workflow_name": "2618_workflow_2618",
      "suggested_filename": "ai_2618_workflow_2618_automate_n8nnodeslangchainmemorybufferwindow_executiondata.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "filter",
        "n8n-nodes-langchain.memoryBufferWindow",
        "executionData",
        "n8n-nodes-langchain.lmChatGroq",
        "gmail",
        "set",
        "stickyNote",
        "scheduleTrigger",
        "n8n-nodes-langchain.toolWikipedia",
        "airtable",
        "code",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.openAi",
        "editImage",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "executiondata",
        "n8n-nodes-langchain.lmchatgroq"
      ],
      "total_nodes": 32,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.code",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.executionData",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatGroq",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, executiondata, n8n-nodes-langchain.lmchatgroq, triggered via cron",
      "complexity_score": 49
    },
    {
      "original_filename": "1700_Very_quick_quickstart.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1700_Very_quick_quickstart.json",
      "workflow_name": "Very quick quickstart",
      "suggested_filename": "util_very_automate_manual_n8ntrainingcustomerdatastore.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "manualTrigger",
        "n8nTrainingCustomerDatastore"
      ],
      "primary_integrations": [
        "manual",
        "n8ntrainingcustomerdatastore"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.n8nTrainingCustomerDatastore",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, n8ntrainingcustomerdatastore, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "Fetch Dynamic Prompts from GitHub and Auto-Populate n8n Expressions in Prompt.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Fetch Dynamic Prompts from GitHub and Auto-Populate n8n Expressions in Prompt.json",
      "workflow_name": "Load Prompts from Github Repo and auto populate n8n expressions",
      "suggested_filename": "ai_load_automate_stopanderror_manual.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "stopAndError",
        "manualTrigger",
        "github",
        "code",
        "extractFromFile",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.lmChatOllama"
      ],
      "primary_integrations": [
        "stopanderror",
        "manual",
        "github"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.github",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOllama"
      ],
      "business_description": "AI workflow that automates data/processes using stopanderror, manual, github, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "1021_workflow_1021.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1021_workflow_1021.json",
      "workflow_name": "1021_workflow_1021",
      "suggested_filename": "util_1021_workflow_1021_automate_copper_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "copper",
        "manualTrigger"
      ],
      "primary_integrations": [
        "copper",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.copper",
        "n8n-nodes-base.copper",
        "n8n-nodes-base.copper"
      ],
      "business_description": "UTIL workflow that automates data/processes using copper, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "165_Create,_update_and_get_a_user_from_Iterable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/165_Create,_update_and_get_a_user_from_Iterable.json",
      "workflow_name": "Create, update and get a user from Iterable",
      "suggested_filename": "util_create_create_contact_manual_iterable.json",
      "category": "UTIL",
      "business_function": "create_contact",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "iterable"
      ],
      "primary_integrations": [
        "manual",
        "iterable"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.iterable",
        "n8n-nodes-base.iterable",
        "n8n-nodes-base.iterable"
      ],
      "business_description": "UTIL workflow that create_contacts data/processes using manual, iterable, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "1757_workflow_1757.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1757_workflow_1757.json",
      "workflow_name": "1757_workflow_1757",
      "suggested_filename": "data_1757_workflow_1757_automate_googlesheets_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "googleSheets",
        "webhook",
        "function",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "googlesheets",
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.function",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 8
    },
    {
      "original_filename": "1373_workflow_1373.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1373_workflow_1373.json",
      "workflow_name": "1373_workflow_1373",
      "suggested_filename": "data_1373_workflow_1373_automate_notion_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "if",
        "set",
        "notion",
        "webhook",
        "function"
      ],
      "primary_integrations": [
        "notion",
        "webhook"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.set",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.function",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.notion"
      ],
      "business_description": "DATA workflow that automates data/processes using notion, webhook, triggered via webhook",
      "complexity_score": 18
    },
    {
      "original_filename": "2651_workflow_2651.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2651_workflow_2651.json",
      "workflow_name": "2651_workflow_2651",
      "suggested_filename": "ai_2651_workflow_2651_automate_postgres_supabase_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "postgres",
        "supabase",
        "if",
        "stickyNote",
        "postgresTool",
        "set",
        "httpRequest",
        "webhook",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "postgres",
        "supabase",
        "postgres"
      ],
      "total_nodes": 19,
      "node_types": [
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgresTool",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using postgres, supabase, postgres, triggered via webhook",
      "complexity_score": 28
    },
    {
      "original_filename": "1941_workflow_1941.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1941_workflow_1941.json",
      "workflow_name": "1941_workflow_1941",
      "suggested_filename": "comm_1941_workflow_1941_automate_discord_googlesheets.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "discord",
        "googleSheetsTrigger",
        "code"
      ],
      "primary_integrations": [
        "discord",
        "googlesheets"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using discord, googlesheets, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "p7xESnT1xMZD2hRk_🧠_Give_Your_AI_Agent_Chatbot_Long_Term_Memory_Tools_Router.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/p7xESnT1xMZD2hRk_🧠_Give_Your_AI_Agent_Chatbot_Long_Term_Memory_Tools_Router.json",
      "workflow_name": "🧠 Give Your AI Agent Chatbot Long Term Memory Tools Router",
      "suggested_filename": "ai_give_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.chainLlm",
        "gmail",
        "googleDocs",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "stickyNote",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "telegram",
        "n8n-nodes-langchain.agent",
        "switch",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chainllm",
        "gmail"
      ],
      "total_nodes": 39,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chainllm, gmail, triggered via manual",
      "complexity_score": 52
    },
    {
      "original_filename": "558_workflow_558.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/558_workflow_558.json",
      "workflow_name": "558_workflow_558",
      "suggested_filename": "util_558_workflow_558_automate_graphql_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "graphql",
        "manualTrigger"
      ],
      "primary_integrations": [
        "graphql",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.graphql"
      ],
      "business_description": "UTIL workflow that automates data/processes using graphql, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "15_Tools___Backup_Gitlab.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/15_Tools___Backup_Gitlab.json",
      "workflow_name": "Tools / Backup Gitlab",
      "suggested_filename": "util_tools_backup_cron_manual_cron.json",
      "category": "UTIL",
      "business_function": "backup",
      "trigger_type": "cron",
      "integrations": [
        "cron",
        "manualTrigger",
        "executeCommand"
      ],
      "primary_integrations": [
        "cron",
        "manual",
        "executecommand"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.cron"
      ],
      "business_description": "UTIL workflow that backups data/processes using cron, manual, executecommand, triggered via cron",
      "complexity_score": 10
    },
    {
      "original_filename": "A7dRnMf9WybO8O02_Telegram_ChatBot_with_multiple_sessions.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/A7dRnMf9WybO8O02_Telegram_ChatBot_with_multiple_sessions.json",
      "workflow_name": "Telegram ChatBot with multiple sessions",
      "suggested_filename": "ai_telegram_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchainl.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chainSummarization",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "code",
        "switch",
        "googleSheets",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.chainsummarization"
      ],
      "total_nodes": 38,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.chainsummarization, triggered via manual",
      "complexity_score": 51
    },
    {
      "original_filename": "3870_workflow_3870.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3870_workflow_3870.json",
      "workflow_name": "3870_workflow_3870",
      "suggested_filename": "util_3870_workflow_3870_automate_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "manual"
      ],
      "total_nodes": 9,
      "node_types": [
        "@custom-js/n8n-nodes-pdf-toolkit.html2Pdf",
        "n8n-nodes-base.manualTrigger",
        "@custom-js/n8n-nodes-pdf-toolkit.PdfToPng",
        "@custom-js/n8n-nodes-pdf-toolkit.PdfToPng",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "33_n8n_check.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/33_n8n_check.json",
      "workflow_name": "n8n_check",
      "suggested_filename": "comm_n8n_check_validate_awsses_rssfeedread_cron.json",
      "category": "COMM",
      "business_function": "validate",
      "trigger_type": "cron",
      "integrations": [
        "awsSes",
        "if",
        "rssFeedRead",
        "manualTrigger",
        "telegram",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "awsses",
        "rssfeedread",
        "manual"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.if",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.function",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.awsSes"
      ],
      "business_description": "COMM workflow that validates data/processes using awsses, rssfeedread, manual, triggered via cron",
      "complexity_score": 14
    },
    {
      "original_filename": "1068_workflow_1068.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1068_workflow_1068.json",
      "workflow_name": "1068_workflow_1068",
      "suggested_filename": "util_1068_workflow_1068_automate_filemaker_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "filemaker",
        "manualTrigger"
      ],
      "primary_integrations": [
        "filemaker",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.filemaker",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.filemaker",
        "n8n-nodes-base.filemaker",
        "n8n-nodes-base.filemaker"
      ],
      "business_description": "UTIL workflow that automates data/processes using filemaker, manual, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "968_workflow_968.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/968_workflow_968.json",
      "workflow_name": "968_workflow_968",
      "suggested_filename": "util_968_workflow_968_automate_webhook_posthog_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "webhook",
        "postHog"
      ],
      "primary_integrations": [
        "webhook",
        "posthog"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.postHog",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, posthog, triggered via webhook",
      "complexity_score": 4
    },
    {
      "original_filename": "Learn Anything from HN - Get Top Resource Recommendations from Hacker News.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Learn Anything from HN - Get Top Resource Recommendations from Hacker News.json",
      "workflow_name": "Learn Anything from HN - Get Top Resource Recommendations from Hacker News",
      "suggested_filename": "ai_learn_read_n8nnodeslangchainchainllm_emailsend.json",
      "category": "AI",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "noOp",
        "emailSend",
        "httpRequest",
        "markdown",
        "splitOut",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "aggregate",
        "hackerNews",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "emailsend",
        "httprequest"
      ],
      "total_nodes": 10,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.hackerNews",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "AI workflow that reads data/processes using n8n-nodes-langchain.chainllm, emailsend, httprequest, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "AI Agent for realtime insights on meetings.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Agent for realtime insights on meetings.json",
      "workflow_name": "AI Agent for realtime insights on meetings",
      "suggested_filename": "ai_agent_ai_process_postgres_supabase_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "postgres",
        "supabase",
        "if",
        "stickyNote",
        "postgresTool",
        "set",
        "httpRequest",
        "webhook",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "postgres",
        "supabase",
        "postgres"
      ],
      "total_nodes": 19,
      "node_types": [
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgresTool",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using postgres, supabase, postgres, triggered via webhook",
      "complexity_score": 28
    },
    {
      "original_filename": "3293_workflow_3293.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3293_workflow_3293.json",
      "workflow_name": "3293_workflow_3293",
      "suggested_filename": "util_3293_workflow_3293_automate_executecommand_schedule_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "set",
        "executeCommand",
        "scheduleTrigger",
        "n8nTrigger",
        "splitOut",
        "manualTrigger"
      ],
      "primary_integrations": [
        "executecommand",
        "schedule",
        "n8n"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.n8nTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using executecommand, schedule, n8n, triggered via cron",
      "complexity_score": 13
    },
    {
      "original_filename": "ozo5jlbwPHgaMnVt_Error_Handler_send_Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ozo5jlbwPHgaMnVt_Error_Handler_send_Telegram.json",
      "workflow_name": "Error Handler send Telegram",
      "suggested_filename": "comm_error_automate_error_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "errorTrigger",
        "stickyNote",
        "set",
        "telegram"
      ],
      "primary_integrations": [
        "error",
        "telegram"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.errorTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "COMM workflow that automates data/processes using error, telegram, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "CNOMivCLJRGfZnUM_🦜✨Use_OpenAI_to_Transcribe_Audio_+_Summarize_with_AI_+_Save_to_Google_Drive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/CNOMivCLJRGfZnUM_🦜✨Use_OpenAI_to_Transcribe_Audio_+_Summarize_with_AI_+_Save_to_Google_Drive.json",
      "workflow_name": "🦜✨Use OpenAI to Transcribe Audio + Summarize with AI + Save to Google Drive",
      "suggested_filename": "ai_openai_ai_process_gmail_googledrive.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "gmail",
        "set",
        "googleDriveTrigger",
        "manualTrigger",
        "limit",
        "googleDrive",
        "telegram",
        "n8n-nodes-langchain.openAi",
        "filter"
      ],
      "primary_integrations": [
        "gmail",
        "googledrive",
        "manual"
      ],
      "total_nodes": 33,
      "node_types": [
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleDriveTrigger"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, googledrive, manual, triggered via manual",
      "complexity_score": 44
    },
    {
      "original_filename": "AI Agent with Ollama for current weather and wiki.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Agent with Ollama for current weather and wiki.json",
      "workflow_name": "AI Agent with Ollama for current weather and wiki",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainwikiped.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.manualChatTrigger",
        "n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.wikipedia",
        "n8n-nodes-langchain.httprequest"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.manualChatTrigger",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.wikipedia, n8n-nodes-langchain.httprequest, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "iA0rm7IWi7xmY5sQ_Get_Long_Lived_Facebook_User_or_Page_Access_Token.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/iA0rm7IWi7xmY5sQ_Get_Long_Lived_Facebook_User_or_Page_Access_Token.json",
      "workflow_name": "Get Long Lived Facebook User or Page Access Token",
      "suggested_filename": "util_long_read_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that reads data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "3556_workflow_3556.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3556_workflow_3556.json",
      "workflow_name": "3556_workflow_3556",
      "suggested_filename": "data_3556_workflow_3556_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "googlesheets"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, schedule, googlesheets, triggered via cron",
      "complexity_score": 17
    },
    {
      "original_filename": "eMxH0GjgfWEvBDic_HR_Job_Posting_and_Evaluation_with_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/eMxH0GjgfWEvBDic_HR_Job_Posting_and_Evaluation_with_AI.json",
      "workflow_name": "HR Job Posting and Evaluation with AI",
      "suggested_filename": "ai_posting_ai_process_airtable_n8nnodeslangchainoutputparserstructured.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "airtableTool",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "set",
        "emailSend",
        "googleCalendarTool",
        "form",
        "n8n-nodes-langchain.lmChatOpenAi",
        "googleDrive",
        "airtable",
        "extractFromFile",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.openAi",
        "formTrigger"
      ],
      "primary_integrations": [
        "airtable",
        "n8n-nodes-langchain.outputparserstructured",
        "emailsend"
      ],
      "total_nodes": 36,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.airtableTool",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtableTool",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.form",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtableTool",
        "n8n-nodes-base.airtableTool",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.airtable",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.airtableTool",
        "n8n-nodes-base.airtableTool",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using airtable, n8n-nodes-langchain.outputparserstructured, emailsend, triggered via manual",
      "complexity_score": 51
    },
    {
      "original_filename": "3033_workflow_3033.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3033_workflow_3033.json",
      "workflow_name": "3033_workflow_3033",
      "suggested_filename": "biz_3033_workflow_3033_automate_httprequest_salesforce.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "salesforce",
        "code",
        "aggregate",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "salesforce",
        "executeworkflow"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.salesforce",
        "n8n-nodes-base.salesforce",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge"
      ],
      "business_description": "BIZ workflow that automates data/processes using httprequest, salesforce, executeworkflow, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "GcSlNHOnN39cPhRA_Google_Search_Engine_Results_Page_Extraction_with_Bright_Data.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/GcSlNHOnN39cPhRA_Google_Search_Engine_Results_Page_Extraction_with_Bright_Data.json",
      "workflow_name": "Google Search Engine Results Page Extraction with Bright Data",
      "suggested_filename": "ai_google_extract_n8nnodeslangchainchainsummarization_httprequest.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chainSummarization",
        "httpRequest",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "manualTrigger",
        "n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainsummarization",
        "httprequest",
        "n8n-nodes-langchain.httprequest"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that extracts data/processes using n8n-nodes-langchain.chainsummarization, httprequest, n8n-nodes-langchain.httprequest, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "1898_workflow_1898.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1898_workflow_1898.json",
      "workflow_name": "1898_workflow_1898",
      "suggested_filename": "ai_1898_workflow_1898_automate_crypto_gmail_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "crypto",
        "if",
        "gmailTrigger",
        "stickyNote",
        "set",
        "gmail",
        "noOp",
        "webhook",
        "openAi",
        "code",
        "switch",
        "googleSheets",
        "html",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "crypto",
        "gmail",
        "gmail"
      ],
      "total_nodes": 49,
      "node_types": [
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.html",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.html",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using crypto, gmail, gmail, triggered via webhook",
      "complexity_score": 63
    },
    {
      "original_filename": "87FUCRVFV07sNlbM_Workflow_Importer.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/87FUCRVFV07sNlbM_Workflow_Importer.json",
      "workflow_name": "Workflow Importer",
      "suggested_filename": "util_importer_transfer_httprequest_executecommand.json",
      "category": "UTIL",
      "business_function": "transfer",
      "trigger_type": "manual",
      "integrations": [
        "filter",
        "merge",
        "noOp",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "executeCommand",
        "readWriteFile",
        "form",
        "sort",
        "splitOut",
        "renameKeys",
        "extractFromFile",
        "code",
        "n8n",
        "removeDuplicates",
        "formTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "executecommand",
        "readwritefile"
      ],
      "total_nodes": 58,
      "node_types": [
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.code",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.renameKeys",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.form",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that transfers data/processes using httprequest, executecommand, readwritefile, triggered via manual",
      "complexity_score": 76
    },
    {
      "original_filename": "2420_workflow_2420.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2420_workflow_2420.json",
      "workflow_name": "2420_workflow_2420",
      "suggested_filename": "ai_2420_workflow_2420_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "splitOut",
        "manualTrigger",
        "googleDrive",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "editImage"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "manual"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, manual, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "AI-powered email processing autoresponder and response approval (Yes_No).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI-powered email processing autoresponder and response approval (Yes_No).json",
      "workflow_name": "AI Email processing autoresponder with approval (Yes/No)",
      "suggested_filename": "ai_email_ai_process_emailsend_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "emailSend",
        "set",
        "n8n-nodes-langchain.chainSummarization",
        "gmail",
        "markdown",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "emailReadImap"
      ],
      "primary_integrations": [
        "emailsend",
        "n8n-nodes-langchain.chainsummarization",
        "gmail"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.markdown",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.emailSend",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using emailsend, n8n-nodes-langchain.chainsummarization, gmail, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "2334_workflow_2334.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2334_workflow_2334.json",
      "workflow_name": "2334_workflow_2334",
      "suggested_filename": "util_2334_workflow_2334_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutp.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmChatMistralCloud",
        "executeCommand",
        "splitOut",
        "localFileTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.lmchatmistralcloud"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.localFileTrigger",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "UTIL workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.lmchatmistralcloud, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "JxFP8FJ2W7e4Kmqn_RAG_on_living_data.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/JxFP8FJ2W7e4Kmqn_RAG_on_living_data.json",
      "workflow_name": "RAG on living data",
      "suggested_filename": "ai_living_automate_splitinbatches_n8nnodeslangchainchainretrievalqa_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.chainRetrievalQa",
        "supabase",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "noOp",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.vectorStoreSupabase",
        "notion",
        "scheduleTrigger",
        "notionTrigger",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "limit",
        "n8n-nodes-langchain.retrieverVectorStore",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "summarize"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chainretrievalqa",
        "supabase"
      ],
      "total_nodes": 34,
      "node_types": [
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.notion",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.notionTrigger",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.summarize"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.chainretrievalqa, supabase, triggered via cron",
      "complexity_score": 51
    },
    {
      "original_filename": "1160_workflow_1160.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1160_workflow_1160.json",
      "workflow_name": "1160_workflow_1160",
      "suggested_filename": "util_1160_workflow_1160_automate_splitinbatches_rssfeedread.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "if",
        "rssFeedRead",
        "manualTrigger",
        "function"
      ],
      "primary_integrations": [
        "splitinbatches",
        "rssfeedread",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.if"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, rssfeedread, manual, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "FQ0Uljxi7aIBdTFX_Coinmarketcap_Price_Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/FQ0Uljxi7aIBdTFX_Coinmarketcap_Price_Agent.json",
      "workflow_name": "Coinmarketcap Price Agent",
      "suggested_filename": "ai_coinmarketcap_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainh.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "set",
        "n8n-nodes-langchain.toolHttpRequest",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "telegram"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.httprequest",
        "telegram"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.telegramTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.toolHttpRequest"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.httprequest, telegram, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "7Gw4IfHaVMDSj70o_Convert_Squarespace_Profiles_to_Shopify_Customers_in_Google_Sheets.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/7Gw4IfHaVMDSj70o_Convert_Squarespace_Profiles_to_Shopify_Customers_in_Google_Sheets.json",
      "workflow_name": "Convert Squarespace Profiles to Shopify Customers in Google Sheets",
      "suggested_filename": "biz_convert_process_splitinbatches_webhook_webhook.json",
      "category": "BIZ",
      "business_function": "process",
      "trigger_type": "webhook",
      "integrations": [
        "splitInBatches",
        "stickyNote",
        "webhook",
        "manualTrigger",
        "extractFromFile",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "webhook",
        "manual"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.manualTrigger"
      ],
      "business_description": "BIZ workflow that processs data/processes using splitinbatches, webhook, manual, triggered via webhook",
      "complexity_score": 14
    },
    {
      "original_filename": "Automate Sales Meeting Prep with AI & APIFY Sent To WhatsApp.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Automate Sales Meeting Prep with AI & APIFY Sent To WhatsApp.json",
      "workflow_name": "Automate Sales Meeting Prep with AI & APIFY Sent To WhatsApp",
      "suggested_filename": "ai_automate_ai_process_n8nnodeslangchainchainllm_gmail_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "aggregate",
        "scheduleTrigger",
        "googleCalendar",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "splitOut",
        "switch",
        "whatsApp",
        "html",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "gmail",
        "httprequest"
      ],
      "total_nodes": 61,
      "node_types": [
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleCalendar",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.html",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.html",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.html",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, gmail, httprequest, triggered via cron",
      "complexity_score": 79
    },
    {
      "original_filename": "39_PostgreSQL_export_to_CSV.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/39_PostgreSQL_export_to_CSV.json",
      "workflow_name": "PostgreSQL export to CSV",
      "suggested_filename": "data_postgresql_transfer_spreadsheetfile_manual.json",
      "category": "DATA",
      "business_function": "transfer",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "set",
        "manualTrigger",
        "postgres"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "manual",
        "postgres"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.postgres"
      ],
      "business_description": "DATA workflow that transfers data/processes using spreadsheetfile, manual, postgres, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "OO4izN00xPfIPGaB_Ahrefs_Keyword_Research_Workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/OO4izN00xPfIPGaB_Ahrefs_Keyword_Research_Workflow.json",
      "workflow_name": "Ahrefs Keyword Research Workflow",
      "suggested_filename": "ai_ahrefs_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "code",
        "aggregate"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 14,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.code",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "1U5Jf4NMQEw9LtxY_Capture_Website_Screenshots_with_Bright_Data_Web_Unlocker_and_Save_to_Disk.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1U5Jf4NMQEw9LtxY_Capture_Website_Screenshots_with_Bright_Data_Web_Unlocker_and_Save_to_Disk.json",
      "workflow_name": "Capture Website Screenshots with Bright Data Web Unlocker and Save to Disk",
      "suggested_filename": "data_capture_automate_httprequest_readwritefile.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "readWriteFile",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "readwritefile",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, readwritefile, manual, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "jAML9xW28lOdsObH_Daily_meetings_summarization_with_Gemini_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/jAML9xW28lOdsObH_Daily_meetings_summarization_with_Gemini_AI.json",
      "workflow_name": "Daily meetings summarization with Gemini AI",
      "suggested_filename": "ai_daily_ai_process_slack_googlecalendar_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "stickyNote",
        "googleCalendarTool",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "slack",
        "googlecalendar",
        "schedule"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.googleCalendarTool",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini"
      ],
      "business_description": "AI workflow that ai_processs data/processes using slack, googlecalendar, schedule, triggered via cron",
      "complexity_score": 15
    },
    {
      "original_filename": "3303_workflow_3303.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3303_workflow_3303.json",
      "workflow_name": "3303_workflow_3303",
      "suggested_filename": "ai_3303_workflow_3303_automate_n8nnodeslangchainchat_n8nnodeslangchainlmchatopen.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.lmchatopenai",
        "n8n-nodes-langchain.agent"
      ],
      "total_nodes": 5,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-mcp.mcpClientTool",
        "n8n-nodes-mcp.mcpClientTool",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, n8n-nodes-langchain.lmchatopenai, n8n-nodes-langchain.agent, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "1250_workflow_1250.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1250_workflow_1250.json",
      "workflow_name": "1250_workflow_1250",
      "suggested_filename": "util_1250_workflow_1250_automate_spreadsheetfile_itemlists.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "merge",
        "itemLists",
        "htmlExtract",
        "emailSend",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "itemlists",
        "htmlextract"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.htmlExtract",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.emailSend"
      ],
      "business_description": "UTIL workflow that automates data/processes using spreadsheetfile, itemlists, htmlextract, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "1862_workflow_1862.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1862_workflow_1862.json",
      "workflow_name": "1862_workflow_1862",
      "suggested_filename": "ai_1862_workflow_1862_automate_splitinbatches_htmlextract.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "merge",
        "htmlExtract",
        "wait",
        "httpRequest",
        "openAi",
        "manualTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "htmlextract",
        "httprequest"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.htmlExtract",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, htmlextract, httprequest, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "418_workflow_418.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/418_workflow_418.json",
      "workflow_name": "418_workflow_418",
      "suggested_filename": "util_418_workflow_418_automate_medium_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "medium",
        "webhook",
        "httpRequest"
      ],
      "primary_integrations": [
        "medium",
        "webhook",
        "httprequest"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.medium",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using medium, webhook, httprequest, triggered via webhook",
      "complexity_score": 6
    },
    {
      "original_filename": "2469_workflow_2469.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2469_workflow_2469.json",
      "workflow_name": "2469_workflow_2469",
      "suggested_filename": "util_2469_workflow_2469_automate_splitinbatches_itemlists_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "itemLists",
        "if",
        "stickyNote",
        "scheduleTrigger",
        "googleDrive",
        "code",
        "n8n",
        "moveBinaryData",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "itemlists",
        "schedule"
      ],
      "total_nodes": 33,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.scheduleTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, itemlists, schedule, triggered via cron",
      "complexity_score": 44
    },
    {
      "original_filename": "2165_workflow_2165.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2165_workflow_2165.json",
      "workflow_name": "2165_workflow_2165",
      "suggested_filename": "ai_2165_workflow_2165_automate_n8nnodeslangchainchat_n8nnodeslangchainembeddings.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "googleDrive",
        "code",
        "n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.vectorStorePinecone",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.embeddingsopenai",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, n8n-nodes-langchain.embeddingsopenai, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "2613_workflow_2613.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2613_workflow_2613.json",
      "workflow_name": "2613_workflow_2613",
      "suggested_filename": "data_2613_workflow_2613_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "googlesheets"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, schedule, googlesheets, triggered via cron",
      "complexity_score": 24
    },
    {
      "original_filename": "108_Receive_updates_for_events_in_Chargebee.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/108_Receive_updates_for_events_in_Chargebee.json",
      "workflow_name": "Receive updates for events in Chargebee",
      "suggested_filename": "biz_receive_update_chargebee.json",
      "category": "BIZ",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "chargebeeTrigger"
      ],
      "primary_integrations": [
        "chargebee"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.chargebeeTrigger"
      ],
      "business_description": "BIZ workflow that updates data/processes using chargebee, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "3832_workflow_3832.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3832_workflow_3832.json",
      "workflow_name": "3832_workflow_3832",
      "suggested_filename": "ai_3832_workflow_3832_automate_n8nnodeslangchainchat_executeworkflow.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "if",
        "wait",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "executeWorkflowTrigger",
        "stickyNote",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "manualTrigger",
        "code",
        "redis"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "executeworkflow",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 30,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, executeworkflow, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 42
    },
    {
      "original_filename": "nV1xFcF5HWJcD6w7_Automatically_Send_Daily_Meeting_List_to_Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/nV1xFcF5HWJcD6w7_Automatically_Send_Daily_Meeting_List_to_Telegram.json",
      "workflow_name": "Automatically Send Daily Meeting List to Telegram",
      "suggested_filename": "ai_automatically_ai_process_schedule_googlecalendar_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "scheduleTrigger",
        "googleCalendar",
        "telegram",
        "function"
      ],
      "primary_integrations": [
        "schedule",
        "googlecalendar",
        "telegram"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.function",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using schedule, googlecalendar, telegram, triggered via cron",
      "complexity_score": 14
    },
    {
      "original_filename": "114_Send_daily_weather_updates_via_a_message_in_Line.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/114_Send_daily_weather_updates_via_a_message_in_Line.json",
      "workflow_name": "Send daily weather updates via a message in Line",
      "suggested_filename": "ai_send_ai_process_openweathermap_line_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "openWeatherMap",
        "line",
        "cron"
      ],
      "primary_integrations": [
        "openweathermap",
        "line",
        "cron"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.line",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.openWeatherMap"
      ],
      "business_description": "AI workflow that ai_processs data/processes using openweathermap, line, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "1961_workflow_1961.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1961_workflow_1961.json",
      "workflow_name": "1961_workflow_1961",
      "suggested_filename": "ai_1961_workflow_1961_automate_n8nnodeslangchainmemorybufferwindow_slack_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "slack",
        "if",
        "noOp",
        "stickyNote",
        "n8n-nodes-langchain.toolWikipedia",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.toolSerpApi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "slack",
        "n8n-nodes-langchain.wikipedia"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.toolSerpApi",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, slack, n8n-nodes-langchain.wikipedia, triggered via webhook",
      "complexity_score": 24
    },
    {
      "original_filename": "65_Two_Way_Sync_Pipedrive_and_MySQL.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/65_Two_Way_Sync_Pipedrive_and_MySQL.json",
      "workflow_name": "Two Way Sync Pipedrive and MySQL",
      "suggested_filename": "biz_sync_sync_pipedrive_datetime_cron.json",
      "category": "BIZ",
      "business_function": "sync",
      "trigger_type": "cron",
      "integrations": [
        "pipedrive",
        "if",
        "dateTime",
        "set",
        "compareDatasets",
        "scheduleTrigger",
        "mySql"
      ],
      "primary_integrations": [
        "pipedrive",
        "datetime",
        "comparedatasets"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set"
      ],
      "business_description": "BIZ workflow that syncs data/processes using pipedrive, datetime, comparedatasets, triggered via cron",
      "complexity_score": 21
    },
    {
      "original_filename": "1425_workflow_1425.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1425_workflow_1425.json",
      "workflow_name": "1425_workflow_1425",
      "suggested_filename": "comm_1425_workflow_1425_automate_cron_httprequest_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "cron",
        "if",
        "set",
        "httpRequest",
        "telegramTrigger",
        "telegram",
        "airtable"
      ],
      "primary_integrations": [
        "cron",
        "httprequest",
        "telegram"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "COMM workflow that automates data/processes using cron, httprequest, telegram, triggered via cron",
      "complexity_score": 22
    },
    {
      "original_filename": "2107_workflow_2107.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2107_workflow_2107.json",
      "workflow_name": "2107_workflow_2107",
      "suggested_filename": "data_2107_workflow_2107_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "if",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "googlesheets"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, schedule, googlesheets, triggered via cron",
      "complexity_score": 19
    },
    {
      "original_filename": "Enrich FAQ sections on your website pages at scale with AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Enrich FAQ sections on your website pages at scale with AI.json",
      "workflow_name": "Enrich FAQ sections on your website pages at scale with AI",
      "suggested_filename": "ai_enrich_ai_process_splitinbatches_strapi.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "strapi",
        "wordpress",
        "switch",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "stickyNote",
        "set",
        "webflow",
        "httpRequest",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "googleDrive",
        "aggregate",
        "googleSheets",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "strapi",
        "wordpress"
      ],
      "total_nodes": 36,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.strapi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.webflow",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, strapi, wordpress, triggered via manual",
      "complexity_score": 54
    },
    {
      "original_filename": "1048_workflow_1048.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1048_workflow_1048.json",
      "workflow_name": "1048_workflow_1048",
      "suggested_filename": "util_1048_workflow_1048_automate_webflow_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "webflow",
        "manualTrigger"
      ],
      "primary_integrations": [
        "webflow",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.webflow",
        "n8n-nodes-base.webflow",
        "n8n-nodes-base.webflow"
      ],
      "business_description": "UTIL workflow that automates data/processes using webflow, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "114_Verify_phone_numbers.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/114_Verify_phone_numbers.json",
      "workflow_name": "Verify phone numbers",
      "suggested_filename": "util_verify_validate_functionitem_uproc.json",
      "category": "UTIL",
      "business_function": "validate",
      "trigger_type": "manual",
      "integrations": [
        "functionItem",
        "uproc",
        "manualTrigger",
        "if"
      ],
      "primary_integrations": [
        "functionitem",
        "uproc",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.uproc",
        "n8n-nodes-base.if"
      ],
      "business_description": "UTIL workflow that validates data/processes using functionitem, uproc, manual, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "663_workflow_663.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/663_workflow_663.json",
      "workflow_name": "663_workflow_663",
      "suggested_filename": "util_663_workflow_663_automate_ftp_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "ftp",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "ftp",
        "httprequest",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.ftp",
        "n8n-nodes-base.ftp",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using ftp, httprequest, manual, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "2590_workflow_2590.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2590_workflow_2590.json",
      "workflow_name": "2590_workflow_2590",
      "suggested_filename": "util_2590_workflow_2590_automate_emailsend_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "stickyNote",
        "emailSend",
        "httpRequest",
        "markdown",
        "scheduleTrigger",
        "splitOut"
      ],
      "primary_integrations": [
        "emailsend",
        "httprequest",
        "markdown"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.if"
      ],
      "business_description": "UTIL workflow that automates data/processes using emailsend, httprequest, markdown, triggered via cron",
      "complexity_score": 15
    },
    {
      "original_filename": "129_Get_information_about_a_company_with_UpLead.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/129_Get_information_about_a_company_with_UpLead.json",
      "workflow_name": "Get information about a company with UpLead",
      "suggested_filename": "biz_information_read_uplead_manual.json",
      "category": "BIZ",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "uplead",
        "manualTrigger"
      ],
      "primary_integrations": [
        "uplead",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.uplead"
      ],
      "business_description": "BIZ workflow that reads data/processes using uplead, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "599_workflow_599.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/599_workflow_599.json",
      "workflow_name": "599_workflow_599",
      "suggested_filename": "data_599_workflow_599_automate_postgres_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "postgres",
        "set",
        "manualTrigger"
      ],
      "primary_integrations": [
        "postgres",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgres"
      ],
      "business_description": "DATA workflow that automates data/processes using postgres, manual, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "VaU41OXvni95OlAL_address_validation.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/VaU41OXvni95OlAL_address_validation.json",
      "workflow_name": "address validation",
      "suggested_filename": "util_address_create_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "splitOut",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook"
      ],
      "total_nodes": 31,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "UTIL workflow that creates data/processes using httprequest, webhook, triggered via webhook",
      "complexity_score": 39
    },
    {
      "original_filename": "1777_workflow_1777.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1777_workflow_1777.json",
      "workflow_name": "1777_workflow_1777",
      "suggested_filename": "biz_1777_workflow_1777_automate_pipedrive_itemlists.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "pipedriveTrigger",
        "merge",
        "itemLists",
        "set",
        "httpRequest",
        "functionItem"
      ],
      "primary_integrations": [
        "pipedrive",
        "itemlists",
        "httprequest"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.pipedriveTrigger",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.itemLists"
      ],
      "business_description": "BIZ workflow that automates data/processes using pipedrive, itemlists, httprequest, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "1001_workflow_1001.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1001_workflow_1001.json",
      "workflow_name": "1001_workflow_1001",
      "suggested_filename": "util_1001_workflow_1001_automate_bitwarden.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "bitwarden"
      ],
      "primary_integrations": [
        "bitwarden"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.bitwarden",
        "n8n-nodes-base.bitwarden",
        "n8n-nodes-base.bitwarden",
        "n8n-nodes-base.bitwarden"
      ],
      "business_description": "UTIL workflow that automates data/processes using bitwarden, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "2523_workflow_2523.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2523_workflow_2523.json",
      "workflow_name": "2523_workflow_2523",
      "suggested_filename": "util_2523_workflow_2523_automate_splitinbatches_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "noOp",
        "if",
        "httpRequest",
        "scheduleTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, httprequest, schedule, triggered via cron",
      "complexity_score": 12
    },
    {
      "original_filename": "AI chat with any data source (using the n8n workflow tool).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI chat with any data source (using the n8n workflow tool).json",
      "workflow_name": "AI chat with any data source (using the n8n workflow tool)",
      "suggested_filename": "ai_chat_ai_process_executeworkflow_n8nnodeslangchainmanualchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "executeWorkflowTrigger",
        "set",
        "stickyNote",
        "n8n-nodes-langchain.manualChatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "code",
        "hackerNews"
      ],
      "primary_integrations": [
        "executeworkflow",
        "n8n-nodes-langchain.manualchat",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 12,
      "node_types": [
        "@n8n/n8n-nodes-langchain.manualChatTrigger",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.hackerNews",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow"
      ],
      "business_description": "AI workflow that ai_processs data/processes using executeworkflow, n8n-nodes-langchain.manualchat, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "KKCfXEpBjjhp1LC8_Entra_User_to_Zammad_User_Sync.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/KKCfXEpBjjhp1LC8_Entra_User_to_Zammad_User_Sync.json",
      "workflow_name": "Entra User to Zammad User Sync",
      "suggested_filename": "data_entra_sync_httprequest_comparedatasets.json",
      "category": "DATA",
      "business_function": "sync",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "compareDatasets",
        "splitOut",
        "manualTrigger",
        "zammad"
      ],
      "primary_integrations": [
        "httprequest",
        "comparedatasets",
        "manual"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.if",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.zammad",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.zammad",
        "n8n-nodes-base.zammad",
        "n8n-nodes-base.zammad",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if"
      ],
      "business_description": "DATA workflow that syncs data/processes using httprequest, comparedatasets, manual, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "2379_TOTP_VALIDATION_(WITHOUT_CREATING_CREDENTIAL).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2379_TOTP_VALIDATION_(WITHOUT_CREATING_CREDENTIAL).json",
      "workflow_name": "TOTP VALIDATION (WITHOUT CREATING CREDENTIAL)",
      "suggested_filename": "util_totp_automate_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "iGAzT789R7Q1fOOE_Travel_Planning_Agent_with_Couchbase_Vector_Search,_Gemini_2.0_Flash_and_OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/iGAzT789R7Q1fOOE_Travel_Planning_Agent_with_Couchbase_Vector_Search,_Gemini_2.0_Flash_and_OpenAI.json",
      "workflow_name": "Travel Planning Agent with Couchbase Vector Search, Gemini 2.0 Flash and OpenAI",
      "suggested_filename": "ai_travel_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat_w.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "webhook",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.embeddingsopenai"
      ],
      "total_nodes": 13,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-couchbase.vectorStoreCouchbaseSearch",
        "n8n-nodes-couchbase.vectorStoreCouchbaseSearch",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.embeddingsopenai, triggered via webhook",
      "complexity_score": 22
    },
    {
      "original_filename": "Update Twitter banner using HTTP request.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Update Twitter banner using HTTP request.json",
      "workflow_name": "Update Twitter banner using HTTP request",
      "suggested_filename": "util_update_update_start_httprequest.json",
      "category": "UTIL",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "start",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "start",
        "httprequest",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.start",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that updates data/processes using start, httprequest, manual, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "3624_workflow_3624.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3624_workflow_3624.json",
      "workflow_name": "3624_workflow_3624",
      "suggested_filename": "ai_3624_workflow_3624_automate_n8nnodeslangchainchainllm_gmail.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "if",
        "wait",
        "stickyNote",
        "gmail",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "aggregate",
        "googleSheets",
        "n8n-nodes-langchain.openAi",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "gmail",
        "httprequest"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, gmail, httprequest, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "wDD4XugmHIvx3KMT_Synchronize_your_Google_Sheets_with_Postgres.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/wDD4XugmHIvx3KMT_Synchronize_your_Google_Sheets_with_Postgres.json",
      "workflow_name": "Synchronize your Google Sheets with Postgres",
      "suggested_filename": "data_synchronize_sync_postgres_comparedatasets_cron.json",
      "category": "DATA",
      "business_function": "sync",
      "trigger_type": "cron",
      "integrations": [
        "postgres",
        "stickyNote",
        "compareDatasets",
        "scheduleTrigger",
        "splitOut",
        "googleSheets"
      ],
      "primary_integrations": [
        "postgres",
        "comparedatasets",
        "schedule"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that syncs data/processes using postgres, comparedatasets, schedule, triggered via cron",
      "complexity_score": 16
    },
    {
      "original_filename": "566_workflow_566.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/566_workflow_566.json",
      "workflow_name": "566_workflow_566",
      "suggested_filename": "util_566_workflow_566_automate_manual_microsoftexcel.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "microsoftExcel"
      ],
      "primary_integrations": [
        "manual",
        "microsoftexcel"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.microsoftExcel"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, microsoftexcel, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Gd4MsAZGnSGfBwaw_Telegram_channel_to_Readeck_&_Hoarder.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Gd4MsAZGnSGfBwaw_Telegram_channel_to_Readeck_&_Hoarder.json",
      "workflow_name": "Telegram channel to Readeck & Hoarder",
      "suggested_filename": "util_telegram_read_httprequest_schedule_cron.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that reads data/processes using httprequest, schedule, triggered via cron",
      "complexity_score": 21
    },
    {
      "original_filename": "3697_workflow_3697.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3697_workflow_3697.json",
      "workflow_name": "3697_workflow_3697",
      "suggested_filename": "util_3697_workflow_3697_automate_emailsend_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "wait",
        "stickyNote",
        "set",
        "emailSend",
        "httpRequest",
        "webhook",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "emailsend",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.code",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using emailsend, httprequest, webhook, triggered via webhook",
      "complexity_score": 23
    },
    {
      "original_filename": "201_Store_the_output_of_a_phantom_in_Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/201_Store_the_output_of_a_phantom_in_Airtable.json",
      "workflow_name": "Store the output of a phantom in Airtable",
      "suggested_filename": "ai_store_ai_process_phantombuster_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "phantombuster",
        "manualTrigger",
        "airtable"
      ],
      "primary_integrations": [
        "phantombuster",
        "manual",
        "airtable"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.phantombuster",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable"
      ],
      "business_description": "AI workflow that ai_processs data/processes using phantombuster, manual, airtable, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "Qpxx8UnnACBONNJu_The_Easiest_Way_to_Send_SMS_Worldwide.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Qpxx8UnnACBONNJu_The_Easiest_Way_to_Send_SMS_Worldwide.json",
      "workflow_name": "The Easiest Way to Send SMS Worldwide",
      "suggested_filename": "util_easiest_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "YOUR_WORKFLOW_ID_Automated_Content_Generation_&_Publishing_-_Wordpress.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/YOUR_WORKFLOW_ID_Automated_Content_Generation_&_Publishing_-_Wordpress.json",
      "workflow_name": "Automated Content Generation & Publishing - Wordpress",
      "suggested_filename": "ai_automated_automate_wordpress_httprequest_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "wordpress",
        "wait",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "manualTrigger",
        "code",
        "googleSheets",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "wordpress",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.code",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that automates data/processes using wordpress, httprequest, schedule, triggered via cron",
      "complexity_score": 26
    },
    {
      "original_filename": "KB Tool - Confluence Knowledge Base.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/KB Tool - Confluence Knowledge Base.json",
      "workflow_name": "KB Tool - Confluence Knowledge Base",
      "suggested_filename": "util_tool_automate_httprequest_executeworkflow.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "executeworkflow"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, executeworkflow, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "4001_workflow_4001.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/4001_workflow_4001.json",
      "workflow_name": "4001_workflow_4001",
      "suggested_filename": "ai_4001_workflow_4001_automate_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "n8n-nodes-langchain.outputParserStructured",
        "gmail",
        "set",
        "stickyNote",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "googleSheets",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via cron",
      "complexity_score": 28
    },
    {
      "original_filename": "767_workflow_767.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/767_workflow_767.json",
      "workflow_name": "767_workflow_767",
      "suggested_filename": "util_767_workflow_767_automate_generic.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "function"
      ],
      "primary_integrations": [],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.function",
        "n8n-nodes-base.function"
      ],
      "business_description": "UTIL workflow that automates data/processes using generic components, triggered via manual",
      "complexity_score": 3
    },
    {
      "original_filename": "632_workflow_632.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/632_workflow_632.json",
      "workflow_name": "632_workflow_632",
      "suggested_filename": "comm_632_workflow_632_automate_spreadsheetfile_slack.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "merge",
        "slack",
        "emailSend",
        "switch",
        "function",
        "emailReadImap",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "slack",
        "emailsend"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.function",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using spreadsheetfile, slack, emailsend, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "2383_workflow_2383.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2383_workflow_2383.json",
      "workflow_name": "2383_workflow_2383",
      "suggested_filename": "util_2383_workflow_2383_automate_httprequest_spotify.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "spotify",
        "splitOut",
        "switch",
        "mqttTrigger",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "spotify",
        "mqtt"
      ],
      "total_nodes": 26,
      "node_types": [
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.mqttTrigger",
        "n8n-nodes-base.switch"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, spotify, mqtt, triggered via manual",
      "complexity_score": 36
    },
    {
      "original_filename": "2098_workflow_2098.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2098_workflow_2098.json",
      "workflow_name": "2098_workflow_2098",
      "suggested_filename": "ai_2098_workflow_2098_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolCalculator",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.calculator",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "@n8n/n8n-nodes-langchain.chatTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.calculator, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "JMfwq2Xn60pWz2Hy_Send_Telegram_Alerts_for_New_WooCommerce_Orders.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/JMfwq2Xn60pWz2Hy_Send_Telegram_Alerts_for_New_WooCommerce_Orders.json",
      "workflow_name": "Send Telegram Alerts for New WooCommerce Orders",
      "suggested_filename": "comm_send_notify_webhook_telegram_webhook.json",
      "category": "COMM",
      "business_function": "notify",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "webhook",
        "telegram",
        "code"
      ],
      "primary_integrations": [
        "webhook",
        "telegram"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "COMM workflow that notifys data/processes using webhook, telegram, triggered via webhook",
      "complexity_score": 11
    },
    {
      "original_filename": "2446_workflow_2446.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2446_workflow_2446.json",
      "workflow_name": "2446_workflow_2446",
      "suggested_filename": "ai_2446_workflow_2446_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "n8n-nodes-langchain.toolHttpRequest",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.httprequest"
      ],
      "total_nodes": 28,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.httprequest, triggered via webhook",
      "complexity_score": 38
    },
    {
      "original_filename": "3790_workflow_3790.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3790_workflow_3790.json",
      "workflow_name": "3790_workflow_3790",
      "suggested_filename": "ai_3790_workflow_3790_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "emailSend",
        "n8n-nodes-langchain.toolThink",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "code",
        "html",
        "n8n-nodes-langchain.openAi",
        "executeWorkflowTrigger",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.outputparserstructured",
        "emailsend"
      ],
      "total_nodes": 45,
      "node_types": [
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.html",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.toolThink",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.outputparserstructured, emailsend, triggered via cron",
      "complexity_score": 62
    },
    {
      "original_filename": "1blBTEfOEjamDB0N_Email_form.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1blBTEfOEjamDB0N_Email_form.json",
      "workflow_name": "Email form",
      "suggested_filename": "ai_email_ai_process_sendgrid_hunter.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "noOp",
        "sendGrid",
        "stickyNote",
        "hunter",
        "formTrigger"
      ],
      "primary_integrations": [
        "sendgrid",
        "hunter",
        "form"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.hunter",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.sendGrid",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using sendgrid, hunter, form, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "2330_workflow_2330.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2330_workflow_2330.json",
      "workflow_name": "2330_workflow_2330",
      "suggested_filename": "ai_2330_workflow_2330_automate_n8nnodeslangchainoutputparserstructured_httpreque.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "switch",
        "if",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "airtable",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.openAi",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserstructured, httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 42
    },
    {
      "original_filename": "Translate Telegram audio messages with AI (55 supported languages).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Translate Telegram audio messages with AI (55 supported languages).json",
      "workflow_name": "Translate Telegram audio messages with AI (55 supported languages) v1",
      "suggested_filename": "ai_translate_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegramTrigger",
        "telegram",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.lmchatopenai",
        "telegram"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.lmchatopenai, telegram, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "KY0vB3hifSrA24k2_AI-Powered_Short-Form_Video_Generator_with_OpenAI,_Flux,_Kling,_and_ElevenLabs_and_upload_to_all_social_networks.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/KY0vB3hifSrA24k2_AI-Powered_Short-Form_Video_Generator_with_OpenAI,_Flux,_Kling,_and_ElevenLabs_and_upload_to_all_social_networks.json",
      "workflow_name": "AI-Powered Short-Form Video Generator with OpenAI, Flux, Kling, and ElevenLabs and upload to all social networks",
      "suggested_filename": "ai_powered_ai_process_writebinaryfile_httprequest_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "wait",
        "if",
        "stickyNote",
        "set",
        "writeBinaryFile",
        "httpRequest",
        "scheduleTrigger",
        "googleDrive",
        "code",
        "googleSheets",
        "n8n-nodes-langchain.openAi",
        "discord",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "writebinaryfile",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 51,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.writeBinaryFile"
      ],
      "business_description": "AI workflow that ai_processs data/processes using writebinaryfile, httprequest, schedule, triggered via cron",
      "complexity_score": 65
    },
    {
      "original_filename": "3037_workflow_3037.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3037_workflow_3037.json",
      "workflow_name": "3037_workflow_3037",
      "suggested_filename": "data_3037_workflow_3037_automate_notion_executeworkflow.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "if",
        "stickyNote",
        "set",
        "notion",
        "splitOut",
        "aggregate",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "notion",
        "executeworkflow"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that automates data/processes using notion, executeworkflow, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "lC8xkfCSTjIiUhpk_Google_Drive_Automation.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/lC8xkfCSTjIiUhpk_Google_Drive_Automation.json",
      "workflow_name": "Google Drive Automation",
      "suggested_filename": "ai_google_automate_n8nnodeslangchainchat_n8nnodeslangchainembeddingsgooglegemini.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.embeddingsGoogleGemini",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "code",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "extractFromFile",
        "googleDrive",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.vectorStorePinecone",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.embeddingsgooglegemini",
        "n8n-nodes-langchain.textsplitterrecursivecharactertextsplitter"
      ],
      "total_nodes": 14,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, n8n-nodes-langchain.embeddingsgooglegemini, n8n-nodes-langchain.textsplitterrecursivecharactertextsplitter, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "__Contact_Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/__Contact_Agent.json",
      "workflow_name": "🤖Contact Agent",
      "suggested_filename": "ai_contact_automate_airtable_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "airtableTool",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "airtable",
        "n8n-nodes-langchain.lmchatopenai",
        "n8n-nodes-langchain.agent"
      ],
      "total_nodes": 7,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.airtableTool",
        "n8n-nodes-base.airtableTool",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using airtable, n8n-nodes-langchain.lmchatopenai, n8n-nodes-langchain.agent, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "731_workflow_731.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/731_workflow_731.json",
      "workflow_name": "731_workflow_731",
      "suggested_filename": "comm_731_workflow_731_automate_googlesheets_mattermost_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "googleSheets",
        "mattermost",
        "cron"
      ],
      "primary_integrations": [
        "googlesheets",
        "mattermost",
        "cron"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.mattermost"
      ],
      "business_description": "COMM workflow that automates data/processes using googlesheets, mattermost, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "664_workflow_664.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/664_workflow_664.json",
      "workflow_name": "664_workflow_664",
      "suggested_filename": "biz_664_workflow_664_automate_manual_salesforce.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "salesforce"
      ],
      "primary_integrations": [
        "manual",
        "salesforce"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.salesforce",
        "n8n-nodes-base.salesforce",
        "n8n-nodes-base.salesforce"
      ],
      "business_description": "BIZ workflow that automates data/processes using manual, salesforce, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2424_workflow_2424.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2424_workflow_2424.json",
      "workflow_name": "2424_workflow_2424",
      "suggested_filename": "util_2424_workflow_2424_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "switch",
        "dropbox",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "dropbox"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, dropbox, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "CoYwFuZTq5kUuiba_Post_new_Google_Calendar_events_to_Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/CoYwFuZTq5kUuiba_Post_new_Google_Calendar_events_to_Telegram.json",
      "workflow_name": "Post new Google Calendar events to Telegram",
      "suggested_filename": "comm_post_automate_googlecalendar_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "googleCalendarTrigger",
        "telegram"
      ],
      "primary_integrations": [
        "googlecalendar",
        "telegram"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.googleCalendarTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using googlecalendar, telegram, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "1254_workflow_1254.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1254_workflow_1254.json",
      "workflow_name": "1254_workflow_1254",
      "suggested_filename": "util_1254_workflow_1254_automate_webhook_netlify_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "webhook",
        "netlify"
      ],
      "primary_integrations": [
        "webhook",
        "netlify"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.netlify"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, netlify, triggered via webhook",
      "complexity_score": 4
    },
    {
      "original_filename": "537_workflow_537.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/537_workflow_537.json",
      "workflow_name": "537_workflow_537",
      "suggested_filename": "util_537_workflow_537_automate_copper.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "copperTrigger"
      ],
      "primary_integrations": [
        "copper"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.copperTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using copper, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "146_Send_financial_metrics_monthly_to_Mattermost.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/146_Send_financial_metrics_monthly_to_Mattermost.json",
      "workflow_name": "Send financial metrics monthly to Mattermost",
      "suggested_filename": "comm_send_automate_profitwell_mattermost_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "profitWell",
        "mattermost",
        "cron"
      ],
      "primary_integrations": [
        "profitwell",
        "mattermost",
        "cron"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.profitWell",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.mattermost"
      ],
      "business_description": "COMM workflow that automates data/processes using profitwell, mattermost, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "1236_workflow_1236.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1236_workflow_1236.json",
      "workflow_name": "1236_workflow_1236",
      "suggested_filename": "data_1236_workflow_1236_automate_webhook_airtable_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "set",
        "webhook",
        "airtable",
        "function",
        "redis"
      ],
      "primary_integrations": [
        "webhook",
        "airtable",
        "redis"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.function",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if"
      ],
      "business_description": "DATA workflow that automates data/processes using webhook, airtable, redis, triggered via webhook",
      "complexity_score": 17
    },
    {
      "original_filename": "O2R3U22TB968fWUo_Generate_google_meet_links_in_slack.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/O2R3U22TB968fWUo_Generate_google_meet_links_in_slack.json",
      "workflow_name": "Generate google meet links in slack",
      "suggested_filename": "comm_generate_generate_webhook_slack_webhook.json",
      "category": "COMM",
      "business_function": "generate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "slack",
        "googleCalendar"
      ],
      "primary_integrations": [
        "webhook",
        "slack",
        "googlecalendar"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that generates data/processes using webhook, slack, googlecalendar, triggered via webhook",
      "complexity_score": 13
    },
    {
      "original_filename": "2062_workflow_2062.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2062_workflow_2062.json",
      "workflow_name": "2062_workflow_2062",
      "suggested_filename": "util_2062_workflow_2062_automate_splitinbatches_itemlists.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "itemLists",
        "medium",
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "html"
      ],
      "primary_integrations": [
        "splitinbatches",
        "itemlists",
        "medium"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.html",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.medium",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, itemlists, medium, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "177_Telegram_AI-bot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/177_Telegram_AI-bot.json",
      "workflow_name": "Telegram AI-bot",
      "suggested_filename": "ai_telegram_ai_process_telegram_openai.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "telegramTrigger",
        "openAi",
        "telegram",
        "switch"
      ],
      "primary_integrations": [
        "telegram",
        "openai",
        "telegram"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using telegram, openai, telegram, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "xRclXA5QzrT3c6U8_Discord_MCP_Chat_Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/xRclXA5QzrT3c6U8_Discord_MCP_Chat_Agent.json",
      "workflow_name": "Discord MCP Chat Agent",
      "suggested_filename": "ai_discord_automate_n8nnodeslangchainchat_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.mcpClientTool",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.lmchatopenai",
        "n8n-nodes-langchain.mcpclient"
      ],
      "total_nodes": 7,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.mcpClientTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, n8n-nodes-langchain.lmchatopenai, n8n-nodes-langchain.mcpclient, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "1804_workflow_1804.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1804_workflow_1804.json",
      "workflow_name": "1804_workflow_1804",
      "suggested_filename": "data_1804_workflow_1804_automate_github_notion.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "githubTrigger",
        "if",
        "stickyNote",
        "notion",
        "switch",
        "function"
      ],
      "primary_integrations": [
        "github",
        "notion"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.if",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.function",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.githubTrigger"
      ],
      "business_description": "DATA workflow that automates data/processes using github, notion, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "70_Receive_updates_when_an_event_occurs_in_Taiga.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/70_Receive_updates_when_an_event_occurs_in_Taiga.json",
      "workflow_name": "Receive updates when an event occurs in Taiga",
      "suggested_filename": "ai_receive_ai_process_taiga.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "taigaTrigger"
      ],
      "primary_integrations": [
        "taiga"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.taigaTrigger"
      ],
      "business_description": "AI workflow that ai_processs data/processes using taiga, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "54_CFP_Selection_1.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/54_CFP_Selection_1.json",
      "workflow_name": "CFP Selection 1",
      "suggested_filename": "data_selection_automate_typeform_airtable.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "typeformTrigger",
        "airtable"
      ],
      "primary_integrations": [
        "typeform",
        "airtable"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.airtable"
      ],
      "business_description": "DATA workflow that automates data/processes using typeform, airtable, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "3307_workflow_3307.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3307_workflow_3307.json",
      "workflow_name": "3307_workflow_3307",
      "suggested_filename": "comm_3307_workflow_3307_automate_telegram_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "if",
        "stickyNote",
        "telegramTrigger",
        "telegram",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "telegram",
        "telegram",
        "googlesheets"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using telegram, telegram, googlesheets, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "434_workflow_434.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/434_workflow_434.json",
      "workflow_name": "434_workflow_434",
      "suggested_filename": "util_434_workflow_434_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "manualTrigger",
        "htmlExtract"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "htmlextract"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.htmlExtract",
        "n8n-nodes-base.htmlExtract"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, htmlextract, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "1357_workflow_1357.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1357_workflow_1357.json",
      "workflow_name": "1357_workflow_1357",
      "suggested_filename": "util_1357_workflow_1357_automate_editimage_itemlists.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "editImage",
        "itemLists",
        "httpRequest",
        "manualTrigger",
        "function"
      ],
      "primary_integrations": [
        "editimage",
        "itemlists",
        "httprequest"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.function",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using editimage, itemlists, httprequest, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "AI agent for Instagram DM_inbox. Manychat + Open AI integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI agent for Instagram DM_inbox. Manychat + Open AI integration.json",
      "workflow_name": "InstaTest",
      "suggested_filename": "ai_instatest_automate_n8nnodeslangchainmemorybufferwindow_webhook_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "webhook",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, webhook, n8n-nodes-langchain.lmchatopenai, triggered via webhook",
      "complexity_score": 18
    },
    {
      "original_filename": "xe9sXQUc7yW8P8im_Meeting_booked_-_to_newsletter_and_CRM.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/xe9sXQUc7yW8P8im_Meeting_booked_-_to_newsletter_and_CRM.json",
      "workflow_name": "Meeting booked - to newsletter and CRM",
      "suggested_filename": "comm_meeting_automate_httprequest_cal.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "calTrigger",
        "splitOut",
        "telegram",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "cal",
        "telegram"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.calTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, cal, telegram, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "1789_workflow_1789.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1789_workflow_1789.json",
      "workflow_name": "1789_workflow_1789",
      "suggested_filename": "biz_1789_workflow_1789_automate_pipedrive_github.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "pipedrive",
        "githubTrigger",
        "noOp",
        "if",
        "httpRequest"
      ],
      "primary_integrations": [
        "pipedrive",
        "github",
        "httprequest"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.if",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.githubTrigger"
      ],
      "business_description": "BIZ workflow that automates data/processes using pipedrive, github, httprequest, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "Detect toxic language in Telegram messages.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Detect toxic language in Telegram messages.json",
      "workflow_name": "Detect toxic language in Telegram messages",
      "suggested_filename": "comm_detect_automate_generic.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [],
      "primary_integrations": [],
      "total_nodes": 0,
      "node_types": [],
      "business_description": "COMM workflow that automates data/processes using generic components, triggered via manual",
      "complexity_score": 0
    },
    {
      "original_filename": "ly8aZhPk5ZI8uB0Y_Discord_MCP_Server.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ly8aZhPk5ZI8uB0Y_Discord_MCP_Server.json",
      "workflow_name": "Discord MCP Server",
      "suggested_filename": "comm_discord_automate_httprequest_discord.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequestTool",
        "discordTool",
        "n8n-nodes-langchain.mcpTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "discord",
        "n8n-nodes-langchain.mcp"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.discordTool",
        "n8n-nodes-base.discordTool",
        "n8n-nodes-base.discordTool",
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-base.discordTool",
        "n8n-nodes-base.discordTool",
        "n8n-nodes-base.discordTool",
        "n8n-nodes-base.discordTool",
        "n8n-nodes-base.discordTool",
        "n8n-nodes-base.httpRequestTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, discord, n8n-nodes-langchain.mcp, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "keFEBUqHOrsib60G_🦙👁️👁️_Find_the_Best_Local_Ollama_Vision_Models_by_Comparison.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/keFEBUqHOrsib60G_🦙👁️👁️_Find_the_Best_Local_Ollama_Vision_Models_by_Comparison.json",
      "workflow_name": "🦙👁️👁️ Find the Best Local Ollama Vision Models by Comparison",
      "suggested_filename": "util_find_automate_splitinbatches_googledocs.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "stickyNote",
        "set",
        "googleDocs",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "extractFromFile",
        "googleDrive"
      ],
      "primary_integrations": [
        "splitinbatches",
        "googledocs",
        "httprequest"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, googledocs, httprequest, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "AI-Powered Social Media Amplifier.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI-Powered Social Media Amplifier.json",
      "workflow_name": "Social Media AI Agent - Telegram",
      "suggested_filename": "ai_social_ai_process_httprequest_linkedin_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "noOp",
        "wait",
        "stickyNote",
        "httpRequest",
        "linkedIn",
        "markdown",
        "scheduleTrigger",
        "airtable",
        "code",
        "telegram",
        "twitter",
        "n8n-nodes-langchain.openAi",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "linkedin",
        "markdown"
      ],
      "total_nodes": 26,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.linkedIn",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.code",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, linkedin, markdown, triggered via cron",
      "complexity_score": 40
    },
    {
      "original_filename": "pkw1vY5q1p2nNfNC_Forward_Netflix_emails_to_multiple_email_addresses_with_GMail_and_Mailjet.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/pkw1vY5q1p2nNfNC_Forward_Netflix_emails_to_multiple_email_addresses_with_GMail_and_Mailjet.json",
      "workflow_name": "Forward Netflix emails to multiple email addresses with GMail and Mailjet",
      "suggested_filename": "ai_forward_ai_process_mailjet_gmail.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "mailjet",
        "gmailTrigger",
        "stickyNote",
        "set",
        "splitOut"
      ],
      "primary_integrations": [
        "mailjet",
        "gmail"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.mailjet",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using mailjet, gmail, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "t1P14FvfibKYCh3E_HR-focused_automation_pipeline_with_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/t1P14FvfibKYCh3E_HR-focused_automation_pipeline_with_AI.json",
      "workflow_name": "HR-focused automation pipeline with AI",
      "suggested_filename": "ai_focused_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "extractFromFile",
        "googleDrive",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.chainsummarization"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.chainsummarization, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "z0C6H2kYSgML2dib_📦_New_Email_➔_Create_Google_Task.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/z0C6H2kYSgML2dib_📦_New_Email_➔_Create_Google_Task.json",
      "workflow_name": "📦 New Email ➔ Create Google Task",
      "suggested_filename": "ai_email_ai_process_gmail_googletasks.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "gmailTrigger",
        "stickyNote",
        "googleTasks"
      ],
      "primary_integrations": [
        "gmail",
        "googletasks"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.googleTasks",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, googletasks, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "2161_workflow_2161.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2161_workflow_2161.json",
      "workflow_name": "2161_workflow_2161",
      "suggested_filename": "ai_2161_workflow_2161_automate_n8nnodeslangchainmemorybufferwindow_dhl_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "dhl",
        "wooCommerce",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "webhook",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "code",
        "aggregate",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "dhl",
        "woocommerce"
      ],
      "total_nodes": 40,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wooCommerce",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.dhl",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, dhl, woocommerce, triggered via webhook",
      "complexity_score": 58
    },
    {
      "original_filename": "LGpVLWPpNZSt9ISM_Contact_Form_Text_Classifier_for_eCommerce.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/LGpVLWPpNZSt9ISM_Contact_Form_Text_Classifier_for_eCommerce.json",
      "workflow_name": "Contact Form Text Classifier for eCommerce",
      "suggested_filename": "ai_contact_automate_n8nnodeslangchaintextclassifier_emailsend.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "emailSend",
        "n8n-nodes-langchain.lmChatOpenAi",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.textclassifier",
        "emailsend",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.textclassifier, emailsend, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "3836_workflow_3836.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3836_workflow_3836.json",
      "workflow_name": "3836_workflow_3836",
      "suggested_filename": "util_3836_workflow_3836_automate_splitinbatches_n8nnodeslangchainchat.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "wait",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "code",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "9_Coffee_Bot_(Matrix).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/9_Coffee_Bot_(Matrix).json",
      "workflow_name": "Coffee Bot (Matrix)",
      "suggested_filename": "util_coffee_automate_matrix_cron_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "matrix",
        "function",
        "cron"
      ],
      "primary_integrations": [
        "matrix",
        "cron"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.matrix",
        "n8n-nodes-base.matrix",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.function",
        "n8n-nodes-base.matrix"
      ],
      "business_description": "UTIL workflow that automates data/processes using matrix, cron, triggered via cron",
      "complexity_score": 8
    },
    {
      "original_filename": "1758_workflow_1758.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1758_workflow_1758.json",
      "workflow_name": "1758_workflow_1758",
      "suggested_filename": "biz_1758_workflow_1758_automate_pipedrive_typeform.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "pipedrive",
        "stickyNote",
        "set",
        "code",
        "typeformTrigger"
      ],
      "primary_integrations": [
        "pipedrive",
        "typeform"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.code"
      ],
      "business_description": "BIZ workflow that automates data/processes using pipedrive, typeform, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "Generating Image Embeddings via Textual Summarisation.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Generating Image Embeddings via Textual Summarisation.json",
      "workflow_name": "Generating Image Embeddings via Textual Summarisation",
      "suggested_filename": "ai_generating_automate_n8nnodeslangchainvectorstoreinmemory_n8nnodeslangchainemb.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.vectorStoreInMemory",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "manualTrigger",
        "googleDrive",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "editImage",
        "n8n-nodes-langchain.openAi",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.vectorstoreinmemory",
        "n8n-nodes-langchain.embeddingsopenai",
        "manual"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.editImage",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.vectorstoreinmemory, n8n-nodes-langchain.embeddingsopenai, manual, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "v9K61fCQhrG6gt6Z_Search_news_using_Perplexity_AI_and_post_to_X_(Twitter).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/v9K61fCQhrG6gt6Z_Search_news_using_Perplexity_AI_and_post_to_X_(Twitter).json",
      "workflow_name": "Search news using Perplexity AI and post to X (Twitter)",
      "suggested_filename": "ai_search_ai_process_schedule_httprequest_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "scheduleTrigger",
        "set",
        "httpRequest",
        "twitter"
      ],
      "primary_integrations": [
        "schedule",
        "httprequest",
        "twitter"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.twitter"
      ],
      "business_description": "AI workflow that ai_processs data/processes using schedule, httprequest, twitter, triggered via cron",
      "complexity_score": 9
    },
    {
      "original_filename": "3204_workflow_3204.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3204_workflow_3204.json",
      "workflow_name": "3204_workflow_3204",
      "suggested_filename": "comm_3204_workflow_3204_automate_googlesheets_gmail.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "if",
        "stickyNote",
        "set",
        "gmail",
        "telegramTrigger",
        "telegram",
        "code",
        "switch",
        "googleDrive"
      ],
      "primary_integrations": [
        "googlesheets",
        "gmail",
        "telegram"
      ],
      "total_nodes": 37,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.code",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "COMM workflow that automates data/processes using googlesheets, gmail, telegram, triggered via manual",
      "complexity_score": 47
    },
    {
      "original_filename": "fvYgcG9s1pqP5cQ6_Monitor_ProductHunt.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/fvYgcG9s1pqP5cQ6_Monitor_ProductHunt.json",
      "workflow_name": "Monitor ProductHunt",
      "suggested_filename": "comm_monitor_monitor_slack_airtop_cron.json",
      "category": "COMM",
      "business_function": "monitor",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "if",
        "set",
        "airtop",
        "scheduleTrigger"
      ],
      "primary_integrations": [
        "slack",
        "airtop",
        "schedule"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.scheduleTrigger"
      ],
      "business_description": "COMM workflow that monitors data/processes using slack, airtop, schedule, triggered via cron",
      "complexity_score": 10
    },
    {
      "original_filename": "2280_workflow_2280.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2280_workflow_2280.json",
      "workflow_name": "2280_workflow_2280",
      "suggested_filename": "util_2280_workflow_2280_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "extractFromFile"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "extractfromfile"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, extractfromfile, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "23_Zendesk-to-slack.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/23_Zendesk-to-slack.json",
      "workflow_name": "Zendesk-to-slack",
      "suggested_filename": "comm_zendesk_automate_slack_manual_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "manualTrigger",
        "zendesk",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "slack",
        "manual",
        "zendesk"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.function",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.zendesk"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, manual, zendesk, triggered via cron",
      "complexity_score": 10
    },
    {
      "original_filename": "1_My_workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_My_workflow.json",
      "workflow_name": "My workflow",
      "suggested_filename": "util_automate_spreadsheetfile_splitinbatches.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "splitInBatches",
        "emailSend",
        "manualTrigger",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "splitinbatches",
        "emailsend"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.readBinaryFile"
      ],
      "business_description": "UTIL workflow that automates data/processes using spreadsheetfile, splitinbatches, emailsend, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "AI_ Ask questions about any data source (using the n8n workflow retriever).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI_ Ask questions about any data source (using the n8n workflow retriever).json",
      "workflow_name": "LangChain - Example - Workflow Retriever",
      "suggested_filename": "ai_langchain_ai_process_n8nnodeslangchainchainretrievalqa_n8nnodeslangchainlmcha.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.retrieverWorkflow"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "n8n-nodes-langchain.lmchatopenai",
        "manual"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.retrieverWorkflow",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainretrievalqa, n8n-nodes-langchain.lmchatopenai, manual, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "Visual Regression Testing with Apify and AI Vision Model.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Visual Regression Testing with Apify and AI Vision Model.json",
      "workflow_name": "Visual Regression Testing with Apify and AI Vision Model",
      "suggested_filename": "ai_visual_ai_process_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "linear",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "googleDrive",
        "manualTrigger",
        "aggregate",
        "googleSheets",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 34,
      "node_types": [
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.linear",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via cron",
      "complexity_score": 50
    },
    {
      "original_filename": "Extract insights & analyse YouTube comments via AI Agent chat.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Extract insights & analyse YouTube comments via AI Agent chat.json",
      "workflow_name": "Extract insights & analyse YouTube comments via AI Agent chat",
      "suggested_filename": "ai_extract_ai_process_n8nnodeslangchainmemorypostgreschat_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryPostgresChat",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "switch",
        "n8n-nodes-langchain.openAi",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorypostgreschat",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorypostgreschat, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 40
    },
    {
      "original_filename": "3588_workflow_3588.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3588_workflow_3588.json",
      "workflow_name": "3588_workflow_3588",
      "suggested_filename": "data_3588_workflow_3588_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "code",
        "googleSheets",
        "function"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "googlesheets"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.function",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, schedule, googlesheets, triggered via cron",
      "complexity_score": 19
    },
    {
      "original_filename": "2233_workflow_2233.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2233_workflow_2233.json",
      "workflow_name": "2233_workflow_2233",
      "suggested_filename": "ai_2233_workflow_2233_automate_n8nnodeslangchainchainsummarization_schedule_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chainSummarization",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.openAi",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainsummarization",
        "schedule",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 14,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainsummarization, schedule, n8n-nodes-langchain.lmchatopenai, triggered via cron",
      "complexity_score": 22
    },
    {
      "original_filename": "HR & IT Helpdesk Chatbot with Audio Transcription.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/HR & IT Helpdesk Chatbot with Audio Transcription.json",
      "workflow_name": "HR & IT Helpdesk Chatbot with Audio Transcription",
      "suggested_filename": "ai_helpdesk_automate_n8nnodeslangchainvectorstore_n8nnodeslangchainmemorypostgre.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.toolVectorStore",
        "n8n-nodes-langchain.memoryPostgresChat",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "telegramTrigger",
        "manualTrigger",
        "extractFromFile",
        "n8n-nodes-langchain.vectorStorePGVector",
        "switch",
        "telegram",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.openAi",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.vectorstore",
        "n8n-nodes-langchain.memorypostgreschat",
        "httprequest"
      ],
      "total_nodes": 27,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStorePGVector",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStorePGVector",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.vectorstore, n8n-nodes-langchain.memorypostgreschat, httprequest, triggered via manual",
      "complexity_score": 44
    },
    {
      "original_filename": "KhUd3rHKtZAImiXZ_Personal_Assistant_MCP_server.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/KhUd3rHKtZAImiXZ_Personal_Assistant_MCP_server.json",
      "workflow_name": "Personal Assistant MCP server",
      "suggested_filename": "ai_personal_automate_n8nnodeslangchainmemorybufferwindow_googlesheets.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "googleSheetsTool",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "googleCalendarTool",
        "n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-langchain.mcpClientTool",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "gmailTool"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "googlesheets",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 20,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "@n8n/n8n-nodes-langchain.mcpClientTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.gmailTool",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheetsTool",
        "n8n-nodes-base.googleSheetsTool",
        "n8n-nodes-base.googleSheetsTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, googlesheets, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "84KL1bsi9OvbAapn_Receive_and_analyze_emails_with_rules_in_Sublime_Security.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/84KL1bsi9OvbAapn_Receive_and_analyze_emails_with_rules_in_Sublime_Security.json",
      "workflow_name": "Receive_and_analyze_emails_with_rules_in_Sublime_Security",
      "suggested_filename": "ai_receive_and_analyze_emails_with_rules_in_sublime_security_analyze_slack_httpr.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "code",
        "moveBinaryData",
        "emailReadImap"
      ],
      "primary_integrations": [
        "slack",
        "httprequest",
        "manual"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.set",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that analyzes data/processes using slack, httprequest, manual, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "Z5OgwYfK4reCTv9y_LINE_Assistant_with_Google_Calendar_and_Gmail_Integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Z5OgwYfK4reCTv9y_LINE_Assistant_with_Google_Calendar_and_Gmail_Integration.json",
      "workflow_name": "LINE Assistant with Google Calendar and Gmail Integration",
      "suggested_filename": "ai_line_ai_process_n8nnodeslangchainmemorybufferwindow_httprequest_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "set",
        "httpRequest",
        "googleCalendarTool",
        "n8n-nodes-langchain.toolWikipedia",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "switch",
        "gmailTool",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "httprequest",
        "googlecalendar"
      ],
      "total_nodes": 14,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.gmailTool"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, httprequest, googlecalendar, triggered via webhook",
      "complexity_score": 25
    },
    {
      "original_filename": "AI-Powered RAG Workflow For Stock Earnings Report Analysis.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI-Powered RAG Workflow For Stock Earnings Report Analysis.json",
      "workflow_name": "RAG Workflow For Stock Earnings Report Analysis",
      "suggested_filename": "ai_stock_report_splitinbatches_n8nnodeslangchainvectorstore.json",
      "category": "AI",
      "business_function": "report",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.toolVectorStore",
        "googleDocs",
        "stickyNote",
        "n8n-nodes-langchain.embeddingsGoogleGemini",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "googleDrive",
        "googleSheets",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.vectorStorePinecone",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.vectorstore",
        "googledocs"
      ],
      "total_nodes": 18,
      "node_types": [
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "n8n-nodes-base.googleDocs",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that reports data/processes using splitinbatches, n8n-nodes-langchain.vectorstore, googledocs, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "ALL_unique_nodes.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ALL_unique_nodes.json",
      "workflow_name": "ALL_unique_nodes",
      "suggested_filename": "util_all_unique_nodes_automate_generic.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [],
      "primary_integrations": [],
      "total_nodes": 0,
      "node_types": [],
      "business_description": "UTIL workflow that automates data/processes using generic components, triggered via manual",
      "complexity_score": 0
    },
    {
      "original_filename": "179_Create,_update,_and_get_a_document_in_Google_Cloud_Firestore.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/179_Create,_update,_and_get_a_document_in_Google_Cloud_Firestore.json",
      "workflow_name": "Create, update, and get a document in Google Cloud Firestore",
      "suggested_filename": "ecommerce_create_create_manual_googlefirebasecloudfirestore.json",
      "category": "ECOMMERCE",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "manualTrigger",
        "googleFirebaseCloudFirestore"
      ],
      "primary_integrations": [
        "manual",
        "googlefirebasecloudfirestore"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleFirebaseCloudFirestore",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleFirebaseCloudFirestore",
        "n8n-nodes-base.googleFirebaseCloudFirestore"
      ],
      "business_description": "ECOMMERCE workflow that creates data/processes using manual, googlefirebasecloudfirestore, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "6LeAm5UyENgTdwkv_agente.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/6LeAm5UyENgTdwkv_agente.json",
      "workflow_name": "agente",
      "suggested_filename": "ai_agente_automate_googletasks_telegram_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "googleTasksTool",
        "telegramTool",
        "switch",
        "n8n-nodes-langchain.memoryPostgresChat",
        "stickyNote",
        "set",
        "scheduleTrigger",
        "webhook",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.mcpClientTool",
        "n8n-nodes-langchain.agent",
        "telegram",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-langchain.toolWorkflow",
        "convertToFile",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "googletasks",
        "telegram",
        "n8n-nodes-langchain.memorypostgreschat"
      ],
      "total_nodes": 38,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.googleTasksTool",
        "@n8n/n8n-nodes-langchain.mcpClientTool",
        "n8n-nodes-base.telegramTrigger",
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.telegramTool",
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "@n8n/n8n-nodes-langchain.mcpClientTool",
        "@n8n/n8n-nodes-langchain.mcpClientTool",
        "@n8n/n8n-nodes-langchain.mcpClientTool",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-evolution-api.evolutionApi",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-evolution-api.evolutionApi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-evolution-api.evolutionApi"
      ],
      "business_description": "AI workflow that automates data/processes using googletasks, telegram, n8n-nodes-langchain.memorypostgreschat, triggered via cron",
      "complexity_score": 55
    },
    {
      "original_filename": "2251_workflow_2251.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2251_workflow_2251.json",
      "workflow_name": "2251_workflow_2251",
      "suggested_filename": "util_2251_workflow_2251_automate_keap_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "keap",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "switch"
      ],
      "primary_integrations": [
        "keap",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.keap",
        "n8n-nodes-base.keap",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.switch"
      ],
      "business_description": "UTIL workflow that automates data/processes using keap, httprequest, webhook, triggered via webhook",
      "complexity_score": 16
    },
    {
      "original_filename": "2527_workflow_2527.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2527_workflow_2527.json",
      "workflow_name": "2527_workflow_2527",
      "suggested_filename": "util_2527_workflow_2527_automate_schedule_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "scheduleTrigger",
        "stickyNote",
        "set",
        "httpRequest"
      ],
      "primary_integrations": [
        "schedule",
        "httprequest"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using schedule, httprequest, triggered via cron",
      "complexity_score": 9
    },
    {
      "original_filename": "1005_workflow_1005.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1005_workflow_1005.json",
      "workflow_name": "1005_workflow_1005",
      "suggested_filename": "util_1005_workflow_1005_automate_plivo_openweathermap_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "plivo",
        "openWeatherMap",
        "cron"
      ],
      "primary_integrations": [
        "plivo",
        "openweathermap",
        "cron"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.plivo",
        "n8n-nodes-base.openWeatherMap",
        "n8n-nodes-base.cron"
      ],
      "business_description": "UTIL workflow that automates data/processes using plivo, openweathermap, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "1216_workflow_1216.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1216_workflow_1216.json",
      "workflow_name": "1216_workflow_1216",
      "suggested_filename": "comm_1216_workflow_1216_automate_googleperspective_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "noOp",
        "googlePerspective",
        "telegramTrigger",
        "telegram"
      ],
      "primary_integrations": [
        "googleperspective",
        "telegram",
        "telegram"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.googlePerspective",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "COMM workflow that automates data/processes using googleperspective, telegram, telegram, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "2042_workflow_2042.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2042_workflow_2042.json",
      "workflow_name": "2042_workflow_2042",
      "suggested_filename": "util_2042_workflow_2042_automate_splitinbatches_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "merge",
        "noOp",
        "stickyNote",
        "set",
        "manualTrigger",
        "googleDrive",
        "code"
      ],
      "primary_integrations": [
        "splitinbatches",
        "manual",
        "googledrive"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, manual, googledrive, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "2359_workflow_2359.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2359_workflow_2359.json",
      "workflow_name": "2359_workflow_2359",
      "suggested_filename": "util_2359_workflow_2359_automate_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "splitOut",
        "filter"
      ],
      "primary_integrations": [
        "httprequest"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.splitOut"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "1897_workflow_1897.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1897_workflow_1897.json",
      "workflow_name": "1897_workflow_1897",
      "suggested_filename": "ai_1897_workflow_1897_automate_gmail_openai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "noOp",
        "if",
        "stickyNote",
        "set",
        "gmailTrigger",
        "code",
        "openAi",
        "googleDrive",
        "readPDF"
      ],
      "primary_integrations": [
        "gmail",
        "openai",
        "googledrive"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.readPDF",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.code",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, openai, googledrive, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "Integrating AI with Open-Meteo API for Enhanced Weather Forecasting.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Integrating AI with Open-Meteo API for Enhanced Weather Forecasting.json",
      "workflow_name": "Integrating AI with Open-Meteo API for Enhanced Weather Forecasting",
      "suggested_filename": "ai_integrating_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainc.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.httprequest"
      ],
      "total_nodes": 12,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.httprequest, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "IMVycpyABaGuD1hq_Analyze_Crowdstrike_Detections__search_for_IOCs_in_VirusTotal__create_a_ticket_in_Jira_and_post_a_message_in_Slack.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/IMVycpyABaGuD1hq_Analyze_Crowdstrike_Detections__search_for_IOCs_in_VirusTotal__create_a_ticket_in_Jira_and_post_a_message_in_Slack.json",
      "workflow_name": "Analyze_Crowdstrike_Detections__search_for_IOCs_in_VirusTotal__create_a_ticket_in_Jira_and_post_a_message_in_Slack",
      "suggested_filename": "comm_analyze_crowdstrike_detections_search_for_iocs_in_virustotal_create_a_ticke.json",
      "category": "COMM",
      "business_function": "analyze",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "itemLists",
        "slack",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "jira"
      ],
      "primary_integrations": [
        "splitinbatches",
        "itemlists",
        "slack"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.set",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that analyzes data/processes using splitinbatches, itemlists, slack, triggered via cron",
      "complexity_score": 27
    },
    {
      "original_filename": "MmfWpcIegNgBjBpL_TEMPLATES.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/MmfWpcIegNgBjBpL_TEMPLATES.json",
      "workflow_name": "TEMPLATES",
      "suggested_filename": "util_templates_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "code",
        "mondayCom",
        "convertToFile"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "mondaycom"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.mondayCom",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.mondayCom",
        "n8n-nodes-base.mondayCom",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, mondaycom, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "3327_workflow_3327.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3327_workflow_3327.json",
      "workflow_name": "3327_workflow_3327",
      "suggested_filename": "util_3327_workflow_3327_automate_splitinbatches_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "manualTrigger",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, httprequest, schedule, triggered via cron",
      "complexity_score": 20
    },
    {
      "original_filename": "1274_workflow_1274.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1274_workflow_1274.json",
      "workflow_name": "1274_workflow_1274",
      "suggested_filename": "ops_1274_workflow_1274_automate_github_github.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "githubTrigger",
        "noOp",
        "if",
        "github",
        "switch"
      ],
      "primary_integrations": [
        "github",
        "github"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.githubTrigger",
        "n8n-nodes-base.githubTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.github",
        "n8n-nodes-base.github",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.github"
      ],
      "business_description": "OPS workflow that automates data/processes using github, github, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "OVSyGmI6YFviPu8Q_Generate_audio_from_text_using_OpenAI_-_text-to-speech_Workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/OVSyGmI6YFviPu8Q_Generate_audio_from_text_using_OpenAI_-_text-to-speech_Workflow.json",
      "workflow_name": "Generate audio from text using OpenAI - text-to-speech Workflow",
      "suggested_filename": "ai_generate_generate_webhook_n8nnodeslangchainopenai_webhook.json",
      "category": "AI",
      "business_function": "generate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "n8n-nodes-langchain.openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "n8n-nodes-langchain.openai",
        "respondtowebhook"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that generates data/processes using webhook, n8n-nodes-langchain.openai, respondtowebhook, triggered via webhook",
      "complexity_score": 9
    },
    {
      "original_filename": "G8jRDBvwsMkkMiLN_[3_3]_Anomaly_detection_tool_(crops_dataset).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/G8jRDBvwsMkkMiLN_[3_3]_Anomaly_detection_tool_(crops_dataset).json",
      "workflow_name": "[3/3] Anomaly detection tool (crops dataset)",
      "suggested_filename": "data_anomaly_automate_httprequest_executeworkflow.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "code",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "executeworkflow"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, executeworkflow, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "cMccNWyyvptrhRt6_Baserow_markdown_to_html.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/cMccNWyyvptrhRt6_Baserow_markdown_to_html.json",
      "workflow_name": "Baserow markdown to html",
      "suggested_filename": "ai_baserow_automate_markdown_baserow_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "markdown",
        "baserow",
        "webhook"
      ],
      "primary_integrations": [
        "markdown",
        "baserow",
        "webhook"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.baserow",
        "n8n-nodes-base.baserow",
        "n8n-nodes-base.baserow",
        "n8n-nodes-base.if",
        "n8n-nodes-base.baserow",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using markdown, baserow, webhook, triggered via webhook",
      "complexity_score": 14
    },
    {
      "original_filename": "8_workflow_8.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/8_workflow_8.json",
      "workflow_name": "8_workflow_8",
      "suggested_filename": "util_8_workflow_8_automate_error_mailgun.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "errorTrigger",
        "mailgun"
      ],
      "primary_integrations": [
        "error",
        "mailgun"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.errorTrigger",
        "n8n-nodes-base.mailgun"
      ],
      "business_description": "UTIL workflow that automates data/processes using error, mailgun, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "DnHvQ3KL8v8r5L5Z_Telegram_Chat_with_Buffering.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/DnHvQ3KL8v8r5L5Z_Telegram_Chat_with_Buffering.json",
      "workflow_name": "Telegram Chat with Buffering",
      "suggested_filename": "ai_telegram_automate_supabase_n8nnodeslangchainmemorypostgreschat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "supabase",
        "n8n-nodes-langchain.memoryPostgresChat",
        "wait",
        "noOp",
        "stickyNote",
        "if",
        "sort",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.agent",
        "aggregate"
      ],
      "primary_integrations": [
        "supabase",
        "n8n-nodes-langchain.memorypostgreschat",
        "sort"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using supabase, n8n-nodes-langchain.memorypostgreschat, sort, triggered via manual",
      "complexity_score": 34
    },
    {
      "original_filename": "160_Write_a_file_to_the_host_machine.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/160_Write_a_file_to_the_host_machine.json",
      "workflow_name": "Write a file to the host machine",
      "suggested_filename": "util_write_automate_writebinaryfile_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "writeBinaryFile",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "writebinaryfile",
        "httprequest",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.writeBinaryFile"
      ],
      "business_description": "UTIL workflow that automates data/processes using writebinaryfile, httprequest, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "1_ImapEmail,_XmlToJson,_POST-HTTP-Request.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_ImapEmail,_XmlToJson,_POST-HTTP-Request.json",
      "workflow_name": "ImapEmail, XmlToJson, POST-HTTP-Request",
      "suggested_filename": "ai_imapemail_ai_process_httprequest_xml.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "httpRequest",
        "xml",
        "moveBinaryData",
        "emailReadImap"
      ],
      "primary_integrations": [
        "httprequest",
        "xml",
        "movebinarydata"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, xml, movebinarydata, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "105_Create_a_new_member,_update_the_information_of_the_member,_create_a_note_and_a_post_for_the_member_in_Orbit.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/105_Create_a_new_member,_update_the_information_of_the_member,_create_a_note_and_a_post_for_the_member_in_Orbit.json",
      "workflow_name": "Create a new member, update the information of the member, create a note and a post for the member in Orbit",
      "suggested_filename": "content_create_create_orbit_manual.json",
      "category": "CONTENT",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "orbit",
        "manualTrigger"
      ],
      "primary_integrations": [
        "orbit",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.orbit",
        "n8n-nodes-base.orbit",
        "n8n-nodes-base.orbit",
        "n8n-nodes-base.orbit"
      ],
      "business_description": "CONTENT workflow that creates data/processes using orbit, manual, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "990_workflow_990.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/990_workflow_990.json",
      "workflow_name": "990_workflow_990",
      "suggested_filename": "util_990_workflow_990_automate_autopilot.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "autopilot"
      ],
      "primary_integrations": [
        "autopilot"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.autopilot",
        "n8n-nodes-base.autopilot",
        "n8n-nodes-base.autopilot",
        "n8n-nodes-base.autopilot"
      ],
      "business_description": "UTIL workflow that automates data/processes using autopilot, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "2372_workflow_2372.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2372_workflow_2372.json",
      "workflow_name": "2372_workflow_2372",
      "suggested_filename": "ai_2372_workflow_2372_automate_splitinbatches_executeworkflow.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "if",
        "executeWorkflowTrigger",
        "set",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "code",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "googleSheets",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.informationExtractor",
        "executeWorkflow",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "executeworkflow",
        "httprequest"
      ],
      "total_nodes": 42,
      "node_types": [
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.informationExtractor"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, executeworkflow, httprequest, triggered via manual",
      "complexity_score": 60
    },
    {
      "original_filename": "2310_workflow_2310.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2310_workflow_2310.json",
      "workflow_name": "2310_workflow_2310",
      "suggested_filename": "util_2310_workflow_2310_automate_readwritefile_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "readWriteFile",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "readwritefile",
        "httprequest",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using readwritefile, httprequest, manual, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "2466_workflow_2466.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2466_workflow_2466.json",
      "workflow_name": "2466_workflow_2466",
      "suggested_filename": "ai_2466_workflow_2466_automate_n8nnodeslangchainmemorybufferwindow_whatsapp.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "whatsApp",
        "n8n-nodes-langchain.chainLlm",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.toolWikipedia",
        "splitOut",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "switch",
        "whatsAppTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "whatsapp",
        "n8n-nodes-langchain.chainllm"
      ],
      "total_nodes": 35,
      "node_types": [
        "n8n-nodes-base.whatsAppTrigger",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, whatsapp, n8n-nodes-langchain.chainllm, triggered via manual",
      "complexity_score": 48
    },
    {
      "original_filename": "134_Receive_updates_for_the_position_of_the_ISS_every_minute_and_push_it_to_a_database.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/134_Receive_updates_for_the_position_of_the_ISS_every_minute_and_push_it_to_a_database.json",
      "workflow_name": "Receive updates for the position of the ISS every minute and push it to a database",
      "suggested_filename": "data_receive_update_googlefirebaserealtimedatabase_httprequest_cron.json",
      "category": "DATA",
      "business_function": "update",
      "trigger_type": "cron",
      "integrations": [
        "set",
        "googleFirebaseRealtimeDatabase",
        "httpRequest",
        "cron"
      ],
      "primary_integrations": [
        "googlefirebaserealtimedatabase",
        "httprequest",
        "cron"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleFirebaseRealtimeDatabase"
      ],
      "business_description": "DATA workflow that updates data/processes using googlefirebaserealtimedatabase, httprequest, cron, triggered via cron",
      "complexity_score": 8
    },
    {
      "original_filename": "hzwyrm761fxBLiG8_Personal_Portfolio_Resume_CV_Chatbot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/hzwyrm761fxBLiG8_Personal_Portfolio_Resume_CV_Chatbot.json",
      "workflow_name": "Personal Portfolio Resume CV Chatbot",
      "suggested_filename": "ai_personal_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvector.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolVectorStore",
        "respondToWebhook",
        "nocoDb",
        "stickyNote",
        "gmail",
        "n8n-nodes-langchain.embeddingsGoogleGemini",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "scheduleTrigger",
        "webhook",
        "code",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "googleDrive",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "html",
        "n8n-nodes-langchain.vectorStorePinecone",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.vectorstore",
        "respondtowebhook"
      ],
      "total_nodes": 35,
      "node_types": [
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.code",
        "n8n-nodes-base.html",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.vectorstore, respondtowebhook, triggered via cron",
      "complexity_score": 53
    },
    {
      "original_filename": "509_workflow_509.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/509_workflow_509.json",
      "workflow_name": "509_workflow_509",
      "suggested_filename": "util_509_workflow_509_automate_awssns.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "awsSnsTrigger"
      ],
      "primary_integrations": [
        "awssns"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.awsSnsTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using awssns, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "2922_workflow_2922.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2922_workflow_2922.json",
      "workflow_name": "2922_workflow_2922",
      "suggested_filename": "ai_2922_workflow_2922_automate_n8nnodeslangchainlmollama_n8nnodeslangchainchainl.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.lmOllama",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "splitOut",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatOllama",
        "code",
        "aggregate",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmollama",
        "n8n-nodes-langchain.chainllm",
        "manual"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmOllama",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.lmollama, n8n-nodes-langchain.chainllm, manual, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "2_Add_task_to_tasklist.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2_Add_task_to_tasklist.json",
      "workflow_name": "Add task to tasklist",
      "suggested_filename": "util_task_create_task_googletasks_manual.json",
      "category": "UTIL",
      "business_function": "create_task",
      "trigger_type": "manual",
      "integrations": [
        "googleTasks",
        "manualTrigger"
      ],
      "primary_integrations": [
        "googletasks",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleTasks"
      ],
      "business_description": "UTIL workflow that create_tasks data/processes using googletasks, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "1753_workflow_1753.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1753_workflow_1753.json",
      "workflow_name": "1753_workflow_1753",
      "suggested_filename": "data_1753_workflow_1753_automate_googlesheets_mysql_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "googleSheets",
        "mySql",
        "cron"
      ],
      "primary_integrations": [
        "googlesheets",
        "mysql",
        "cron"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, mysql, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "8v4dynjkHSLVGJSG_Crypto_News_&_Sentiment.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/8v4dynjkHSLVGJSG_Crypto_News_&_Sentiment.json",
      "workflow_name": "Crypto News & Sentiment",
      "suggested_filename": "ai_crypto_analyze_rssfeedread_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "rssFeedRead",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegramTrigger",
        "n8n-nodes-langchain.agent",
        "code",
        "telegram",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "rssfeedread",
        "n8n-nodes-langchain.lmchatopenai",
        "telegram"
      ],
      "total_nodes": 30,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that analyzes data/processes using rssfeedread, n8n-nodes-langchain.lmchatopenai, telegram, triggered via manual",
      "complexity_score": 40
    },
    {
      "original_filename": "Mbuax8L8jEmBBYkz_The_Ultimate_Guide_to_Optimize_WordPress_Blog_Posts_with_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Mbuax8L8jEmBBYkz_The_Ultimate_Guide_to_Optimize_WordPress_Blog_Posts_with_AI.json",
      "workflow_name": "The Ultimate Guide to Optimize WordPress Blog Posts with AI",
      "suggested_filename": "ai_ultimate_ai_process_wordpress_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "wordpress",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "manualTrigger",
        "googleSheets",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "wordpress",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.wordpress",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using wordpress, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via manual",
      "complexity_score": 31
    },
    {
      "original_filename": "161_Receive_updates_when_an_event_occurs_in_TheHive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/161_Receive_updates_when_an_event_occurs_in_TheHive.json",
      "workflow_name": "Receive updates when an event occurs in TheHive",
      "suggested_filename": "util_receive_update_thehive.json",
      "category": "UTIL",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "theHiveTrigger"
      ],
      "primary_integrations": [
        "thehive"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.theHiveTrigger"
      ],
      "business_description": "UTIL workflow that updates data/processes using thehive, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "2108_workflow_2108.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2108_workflow_2108.json",
      "workflow_name": "2108_workflow_2108",
      "suggested_filename": "util_2108_workflow_2108_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "code",
        "switch",
        "intercom"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "intercom"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.intercom",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, intercom, triggered via webhook",
      "complexity_score": 21
    },
    {
      "original_filename": "1782_workflow_1782.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1782_workflow_1782.json",
      "workflow_name": "1782_workflow_1782",
      "suggested_filename": "biz_1782_workflow_1782_automate_pipedrive_pipedrive.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "pipedrive",
        "merge",
        "pipedriveTrigger",
        "itemLists",
        "if",
        "stickyNote",
        "set",
        "httpRequest"
      ],
      "primary_integrations": [
        "pipedrive",
        "pipedrive",
        "itemlists"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.pipedriveTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "BIZ workflow that automates data/processes using pipedrive, pipedrive, itemlists, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "IyhH1KHtXidKNSIA_🐋DeepSeek_V3_Chat_&_R1_Reasoning_Quick_Start.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/IyhH1KHtXidKNSIA_🐋DeepSeek_V3_Chat_&_R1_Reasoning_Quick_Start.json",
      "workflow_name": "🐋DeepSeek V3 Chat & R1 Reasoning Quick Start",
      "suggested_filename": "ai_deepseek_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchainl.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 15,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "640_.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/640_.json",
      "workflow_name": "",
      "suggested_filename": "content_automate_contentful_manual.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "contentful",
        "manualTrigger"
      ],
      "primary_integrations": [
        "contentful",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.contentful"
      ],
      "business_description": "CONTENT workflow that automates data/processes using contentful, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "772_workflow_772.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/772_workflow_772.json",
      "workflow_name": "772_workflow_772",
      "suggested_filename": "comm_772_workflow_772_automate_splitinbatches_manual.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "wait",
        "manualTrigger",
        "telegram",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "manual",
        "telegram"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, manual, telegram, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "4Tq5HZBdETVe7jEb_⚡AI-Powered_YouTube_Playlist_&_Video_Summarization_and_Analysis_v2.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/4Tq5HZBdETVe7jEb_⚡AI-Powered_YouTube_Playlist_&_Video_Summarization_and_Analysis_v2.json",
      "workflow_name": "⚡AI-Powered YouTube Playlist & Video Summarization and Analysis v2",
      "suggested_filename": "ai_powered_ai_process_n8nnodeslangchainoutputparserstructured_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserStructured",
        "httpRequest",
        "redis",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.agent",
        "limit",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "merge",
        "n8n-nodes-langchain.toolVectorStore",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "summarize",
        "n8n-nodes-langchain.memoryBufferWindow",
        "set",
        "n8n-nodes-langchain.embeddingsGoogleGemini",
        "splitOut",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest",
        "redis"
      ],
      "total_nodes": 72,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.limit",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-youtube-transcription-dmr.youtubeTranscripter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.code",
        "n8n-nodes-base.redis",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-youtube-transcription-dmr.youtubeTranscripter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "n8n-nodes-base.if",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.outputparserstructured, httprequest, redis, triggered via manual",
      "complexity_score": 94
    },
    {
      "original_filename": "1731_workflow_1731.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1731_workflow_1731.json",
      "workflow_name": "1731_workflow_1731",
      "suggested_filename": "util_1731_workflow_1731_automate_spreadsheetfile_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "manualTrigger",
        "writeBinaryFile",
        "moveBinaryData",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "manual",
        "writebinaryfile"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.writeBinaryFile"
      ],
      "business_description": "UTIL workflow that automates data/processes using spreadsheetfile, manual, writebinaryfile, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "1047_workflow_1047.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1047_workflow_1047.json",
      "workflow_name": "1047_workflow_1047",
      "suggested_filename": "util_1047_workflow_1047_automate_httprequest_awssqs_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "httpRequest",
        "set",
        "awsSqs",
        "cron"
      ],
      "primary_integrations": [
        "httprequest",
        "awssqs",
        "cron"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.awsSqs",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.cron"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, awssqs, cron, triggered via cron",
      "complexity_score": 8
    },
    {
      "original_filename": "2141_workflow_2141.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2141_workflow_2141.json",
      "workflow_name": "2141_workflow_2141",
      "suggested_filename": "data_2141_workflow_2141_automate_httprequest_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "switch",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "googlesheets"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, webhook, googlesheets, triggered via webhook",
      "complexity_score": 14
    },
    {
      "original_filename": "3297_workflow_3297.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3297_workflow_3297.json",
      "workflow_name": "3297_workflow_3297",
      "suggested_filename": "util_3297_workflow_3297_automate_nocodb_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "nocoDb",
        "stickyNote",
        "set",
        "webhook",
        "switch",
        "dropbox",
        "executeWorkflow",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "nocodb",
        "webhook",
        "dropbox"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using nocodb, webhook, dropbox, triggered via webhook",
      "complexity_score": 29
    },
    {
      "original_filename": "156_workflow_156.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/156_workflow_156.json",
      "workflow_name": "156_workflow_156",
      "suggested_filename": "util_156_workflow_156_automate_functionitem_executecommand.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "functionItem",
        "if",
        "executeCommand"
      ],
      "primary_integrations": [
        "functionitem",
        "executecommand"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.if",
        "n8n-nodes-base.functionItem"
      ],
      "business_description": "UTIL workflow that automates data/processes using functionitem, executecommand, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "Extract personal data with self-hosted LLM Mistral NeMo.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Extract personal data with self-hosted LLM Mistral NeMo.json",
      "workflow_name": "Extract personal data with a self-hosted LLM Mistral NeMo",
      "suggested_filename": "ai_extract_extract_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainchai.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "noOp",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "n8n-nodes-langchain.lmChatOllama"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 13,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOllama",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that extracts data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "1463_workflow_1463.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1463_workflow_1463.json",
      "workflow_name": "1463_workflow_1463",
      "suggested_filename": "comm_1463_workflow_1463_automate_hubspot_slack.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "hubspot",
        "slack",
        "if",
        "httpRequest",
        "hubspotTrigger"
      ],
      "primary_integrations": [
        "hubspot",
        "slack",
        "httprequest"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.hubspotTrigger",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "COMM workflow that automates data/processes using hubspot, slack, httprequest, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "Telegram AI Chatbot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Telegram AI Chatbot.json",
      "workflow_name": "Telegram AI-bot",
      "suggested_filename": "ai_telegram_ai_process_telegram_openai.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "telegramTrigger",
        "openAi",
        "telegram",
        "switch"
      ],
      "primary_integrations": [
        "telegram",
        "openai",
        "telegram"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using telegram, openai, telegram, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "574_workflow_574.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/574_workflow_574.json",
      "workflow_name": "574_workflow_574",
      "suggested_filename": "util_574_workflow_574_automate_crypto_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "crypto",
        "manualTrigger"
      ],
      "primary_integrations": [
        "crypto",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.crypto"
      ],
      "business_description": "UTIL workflow that automates data/processes using crypto, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "27_Create_a_release_and_get_all_releases.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/27_Create_a_release_and_get_all_releases.json",
      "workflow_name": "Create a release and get all releases",
      "suggested_filename": "util_create_create_manual_sentryio.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "sentryIo"
      ],
      "primary_integrations": [
        "manual",
        "sentryio"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.sentryIo",
        "n8n-nodes-base.sentryIo"
      ],
      "business_description": "UTIL workflow that creates data/processes using manual, sentryio, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "2684_workflow_2684.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2684_workflow_2684.json",
      "workflow_name": "2684_workflow_2684",
      "suggested_filename": "util_2684_workflow_2684_automate_graphql_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "graphql",
        "manualTrigger"
      ],
      "primary_integrations": [
        "graphql",
        "manual"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.if",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using graphql, manual, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "RAG Chatbot for Company Documents using Google Drive and Gemini.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/RAG Chatbot for Company Documents using Google Drive and Gemini.json",
      "workflow_name": "RAG Workflow For Company Documents stored in Google Drive",
      "suggested_filename": "ai_company_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvectors.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolVectorStore",
        "stickyNote",
        "googleDriveTrigger",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.embeddingsGoogleGemini",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "googleDrive",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.vectorStorePinecone",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.vectorstore",
        "googledrive"
      ],
      "total_nodes": 18,
      "node_types": [
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.googleDriveTrigger",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.vectorstore, googledrive, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "2868_workflow_2868.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2868_workflow_2868.json",
      "workflow_name": "2868_workflow_2868",
      "suggested_filename": "ops_2868_workflow_2868_automate_splitinbatches_httprequest_cron.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "if",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "manualTrigger",
        "github",
        "code",
        "switch",
        "n8n",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 25,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.github",
        "n8n-nodes-base.github",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.github",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch"
      ],
      "business_description": "OPS workflow that automates data/processes using splitinbatches, httprequest, schedule, triggered via cron",
      "complexity_score": 40
    },
    {
      "original_filename": "hiCTcf6srJl3Xsxh_Auto-create_and_publish_AI_social_videos_with_Telegram,_GPT-4_and_Blotato.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/hiCTcf6srJl3Xsxh_Auto-create_and_publish_AI_social_videos_with_Telegram,_GPT-4_and_Blotato.json",
      "workflow_name": "Auto-create and publish AI social videos with Telegram, GPT-4 and Blotato",
      "suggested_filename": "ai_auto_ai_process_httprequest_telegram.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "telegramTrigger",
        "telegram",
        "code",
        "googleSheets",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "httprequest",
        "telegram",
        "telegram"
      ],
      "total_nodes": 42,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, telegram, telegram, triggered via manual",
      "complexity_score": 52
    },
    {
      "original_filename": "1994_workflow_1994.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1994_workflow_1994.json",
      "workflow_name": "1994_workflow_1994",
      "suggested_filename": "util_1994_workflow_1994_automate_splitinbatches_stopanderror_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "splitInBatches",
        "if",
        "noOp",
        "stickyNote",
        "set",
        "stopAndError",
        "webhook",
        "nextCloud",
        "manualTrigger",
        "code",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "stopanderror",
        "webhook"
      ],
      "total_nodes": 32,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.nextCloud",
        "n8n-nodes-base.nextCloud",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.nextCloud",
        "n8n-nodes-base.nextCloud",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.nextCloud",
        "n8n-nodes-base.nextCloud",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, stopanderror, webhook, triggered via webhook",
      "complexity_score": 43
    },
    {
      "original_filename": "HpjjgJm3Ulnl1cJQ_Notion_to_Clockify_Sync_Template.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/HpjjgJm3Ulnl1cJQ_Notion_to_Clockify_Sync_Template.json",
      "workflow_name": "Notion to Clockify Sync Template",
      "suggested_filename": "data_notion_sync_httprequest_comparedatasets_webhook.json",
      "category": "DATA",
      "business_function": "sync",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "noOp",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "compareDatasets",
        "stopAndError",
        "notion",
        "scheduleTrigger",
        "webhook",
        "limit",
        "clockify"
      ],
      "primary_integrations": [
        "httprequest",
        "comparedatasets",
        "stopanderror"
      ],
      "total_nodes": 68,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that syncs data/processes using httprequest, comparedatasets, stopanderror, triggered via webhook",
      "complexity_score": 81
    },
    {
      "original_filename": "1945_workflow_1945.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1945_workflow_1945.json",
      "workflow_name": "1945_workflow_1945",
      "suggested_filename": "data_1945_workflow_1945_automate_itemlists_datetime_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "itemLists",
        "if",
        "dateTime",
        "httpRequest",
        "notion",
        "scheduleTrigger"
      ],
      "primary_integrations": [
        "itemlists",
        "datetime",
        "httprequest"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "DATA workflow that automates data/processes using itemlists, datetime, httprequest, triggered via cron",
      "complexity_score": 16
    },
    {
      "original_filename": "2123_workflow_2123.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2123_workflow_2123.json",
      "workflow_name": "2123_workflow_2123",
      "suggested_filename": "util_2123_workflow_2123_automate_splitinbatches_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "if",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "stopAndError",
        "scheduleTrigger",
        "splitOut",
        "xml",
        "manualTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "stopanderror"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, httprequest, stopanderror, triggered via cron",
      "complexity_score": 23
    },
    {
      "original_filename": "1377_workflow_1377.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1377_workflow_1377.json",
      "workflow_name": "1377_workflow_1377",
      "suggested_filename": "util_1377_workflow_1377_automate_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "function",
        "manualTrigger"
      ],
      "primary_integrations": [
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.function",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "54_Create_a_coupon_on_Paddle.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/54_Create_a_coupon_on_Paddle.json",
      "workflow_name": "Create a coupon on Paddle",
      "suggested_filename": "util_create_create_paddle_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "paddle",
        "manualTrigger"
      ],
      "primary_integrations": [
        "paddle",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.paddle"
      ],
      "business_description": "UTIL workflow that creates data/processes using paddle, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "1401_workflow_1401.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1401_workflow_1401.json",
      "workflow_name": "1401_workflow_1401",
      "suggested_filename": "data_1401_workflow_1401_automate_googlesheets_httprequest.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "set",
        "httpRequest",
        "awsRekognition"
      ],
      "primary_integrations": [
        "googlesheets",
        "httprequest",
        "awsrekognition"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.awsRekognition",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, httprequest, awsrekognition, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "522_workflow_522.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/522_workflow_522.json",
      "workflow_name": "522_workflow_522",
      "suggested_filename": "util_522_workflow_522_automate_manual_mailgun.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "mailgun"
      ],
      "primary_integrations": [
        "manual",
        "mailgun"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.mailgun"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, mailgun, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2190_workflow_2190.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2190_workflow_2190.json",
      "workflow_name": "2190_workflow_2190",
      "suggested_filename": "util_2190_workflow_2190_automate_clickup_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "clickUp",
        "stickyNote",
        "set",
        "webhook",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "clickup",
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.clickUp",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using clickup, webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 11
    },
    {
      "original_filename": "2738_Transform_Image_to_Lego_Style_Using_Line_and_Dall-E.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2738_Transform_Image_to_Lego_Style_Using_Line_and_Dall-E.json",
      "workflow_name": "Transform Image to Lego Style Using Line and Dall-E",
      "suggested_filename": "ai_transform_process_webhook_httprequest_webhook.json",
      "category": "AI",
      "business_function": "process",
      "trigger_type": "webhook",
      "integrations": [
        "webhook",
        "httpRequest",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "webhook",
        "httprequest",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that processs data/processes using webhook, httprequest, n8n-nodes-langchain.openai, triggered via webhook",
      "complexity_score": 8
    },
    {
      "original_filename": "100_workflow_100.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/100_workflow_100.json",
      "workflow_name": "100_workflow_100",
      "suggested_filename": "util_100_workflow_100_automate_generic.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "function"
      ],
      "primary_integrations": [],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.merge"
      ],
      "business_description": "UTIL workflow that automates data/processes using generic components, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "_Generate_AI-Ready_llms.txt_Files_from_Screaming_Frog_Website_Crawls.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/_Generate_AI-Ready_llms.txt_Files_from_Screaming_Frog_Website_Crawls.json",
      "workflow_name": "Generate AI-Ready llms.txt Files from Screaming Frog Website Crawls",
      "suggested_filename": "ai_generate_generate_n8nnodeslangchaintextclassifier_converttofile.json",
      "category": "AI",
      "business_function": "generate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "set",
        "convertToFile",
        "n8n-nodes-langchain.lmChatOpenAi",
        "extractFromFile",
        "formTrigger",
        "summarize",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.textclassifier",
        "converttofile",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.set",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.convertToFile"
      ],
      "business_description": "AI workflow that generates data/processes using n8n-nodes-langchain.textclassifier, converttofile, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "101_workflow_101.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/101_workflow_101.json",
      "workflow_name": "101_workflow_101",
      "suggested_filename": "util_101_workflow_101_automate_writebinaryfile.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "writeBinaryFile",
        "function"
      ],
      "primary_integrations": [
        "writebinaryfile"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.writeBinaryFile",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function"
      ],
      "business_description": "UTIL workflow that automates data/processes using writebinaryfile, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "1751_workflow_1751.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1751_workflow_1751.json",
      "workflow_name": "1751_workflow_1751",
      "suggested_filename": "data_1751_workflow_1751_automate_n8ntrainingcustomerdatastore_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8nTrainingCustomerDatastore",
        "stickyNote",
        "set",
        "manualTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8ntrainingcustomerdatastore",
        "manual",
        "googlesheets"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.n8nTrainingCustomerDatastore"
      ],
      "business_description": "DATA workflow that automates data/processes using n8ntrainingcustomerdatastore, manual, googlesheets, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "7eyNPahKcCuqK39V_DeepSeek_v3.1.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/7eyNPahKcCuqK39V_DeepSeek_v3.1.json",
      "workflow_name": "DeepSeek v3.1",
      "suggested_filename": "comm_deepseek_automate_n8nnodeslangchainlmchatdeepseek_notion.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.lmChatDeepSeek",
        "stickyNote",
        "set",
        "notionTrigger",
        "n8n-nodes-langchain.agent",
        "gmailTool",
        "wordpressTool"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmchatdeepseek",
        "notion",
        "n8n-nodes-langchain.agent"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.notionTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.wordpressTool",
        "n8n-nodes-mcp.mcpClientTool",
        "n8n-nodes-mcp.mcpClientTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatDeepSeek"
      ],
      "business_description": "COMM workflow that automates data/processes using n8n-nodes-langchain.lmchatdeepseek, notion, n8n-nodes-langchain.agent, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "Auto-label incoming Gmail messages with AI nodes.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Auto-label incoming Gmail messages with AI nodes.json",
      "workflow_name": "Auto-label incoming Gmail messages with AI nodes",
      "suggested_filename": "ai_auto_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruct.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "gmailTrigger",
        "gmail",
        "set",
        "stickyNote",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "aggregate"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.set",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, gmail, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "913_workflow_913.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/913_workflow_913.json",
      "workflow_name": "913_workflow_913",
      "suggested_filename": "util_913_workflow_913_automate_movebinarydata_executecommand.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "moveBinaryData",
        "if",
        "noOp",
        "executeCommand",
        "manualTrigger",
        "function",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "movebinarydata",
        "executecommand",
        "manual"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.function",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "UTIL workflow that automates data/processes using movebinarydata, executecommand, manual, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "2823_workflow_2823.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2823_workflow_2823.json",
      "workflow_name": "2823_workflow_2823",
      "suggested_filename": "ai_2823_workflow_2823_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "set",
        "emailSend",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "code",
        "googleSheets",
        "googleSheetsTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "emailsend"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, emailsend, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "Jy1RMuri0WJO5aO4_Summarize_Google_Drive_Documents_with_Mistral_AI_and_Send_via_Gmail.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Jy1RMuri0WJO5aO4_Summarize_Google_Drive_Documents_with_Mistral_AI_and_Send_via_Gmail.json",
      "workflow_name": "Summarize Google Drive Documents with Mistral AI and Send via Gmail",
      "suggested_filename": "ai_summarize_ai_process_gmail_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "gmail",
        "n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-langchain.lmChatMistralCloud",
        "manualTrigger",
        "googleDrive"
      ],
      "primary_integrations": [
        "gmail",
        "n8n-nodes-langchain.chainsummarization",
        "n8n-nodes-langchain.lmchatmistralcloud"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, n8n-nodes-langchain.chainsummarization, n8n-nodes-langchain.lmchatmistralcloud, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "2211_workflow_2211.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2211_workflow_2211.json",
      "workflow_name": "2211_workflow_2211",
      "suggested_filename": "content_2211_workflow_2211_automate_manual_youtube.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "manualTrigger",
        "youTube"
      ],
      "primary_integrations": [
        "manual",
        "youtube"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "CONTENT workflow that automates data/processes using manual, youtube, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "575_workflow_575.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/575_workflow_575.json",
      "workflow_name": "575_workflow_575",
      "suggested_filename": "util_575_workflow_575_automate_datetime_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "dateTime",
        "manualTrigger"
      ],
      "primary_integrations": [
        "datetime",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.dateTime"
      ],
      "business_description": "UTIL workflow that automates data/processes using datetime, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "174_Send_the_Astronomy_Picture_of_the_day_daily_to_a_Telegram_channel.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/174_Send_the_Astronomy_Picture_of_the_day_daily_to_a_Telegram_channel.json",
      "workflow_name": "Send the Astronomy Picture of the day daily to a Telegram channel",
      "suggested_filename": "ai_send_ai_process_nasa_telegram_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "nasa",
        "telegram",
        "cron"
      ],
      "primary_integrations": [
        "nasa",
        "telegram",
        "cron"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.nasa",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "AI workflow that ai_processs data/processes using nasa, telegram, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "51_Receive_messages_for_a_MQTT_queue.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/51_Receive_messages_for_a_MQTT_queue.json",
      "workflow_name": "Receive messages for a MQTT queue",
      "suggested_filename": "comm_receive_automate_mqtt.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "mqttTrigger"
      ],
      "primary_integrations": [
        "mqtt"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.mqttTrigger"
      ],
      "business_description": "COMM workflow that automates data/processes using mqtt, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "Narrating over a Video using Multimodal AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Narrating over a Video using Multimodal AI.json",
      "workflow_name": "Narrating over a Video using Multimodal AI",
      "suggested_filename": "ai_narrating_ai_process_splitinbatches_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.chainLlm",
        "wait",
        "stickyNote",
        "httpRequest",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "code",
        "aggregate",
        "googleDrive",
        "convertToFile",
        "editImage",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chainllm",
        "httprequest"
      ],
      "total_nodes": 21,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, n8n-nodes-langchain.chainllm, httprequest, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "1996_workflow_1996.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1996_workflow_1996.json",
      "workflow_name": "1996_workflow_1996",
      "suggested_filename": "ai_1996_workflow_1996_automate_openai_googlesheets.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "openAi",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "openai",
        "googlesheets",
        "form"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.formTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using openai, googlesheets, form, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "Parse PDF with LlamaParse and save to Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Parse PDF with LlamaParse and save to Airtable.json",
      "workflow_name": "Parse PDF with LlamaParse and save to Airtable",
      "suggested_filename": "ai_parse_ai_process_generic.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [],
      "primary_integrations": [],
      "total_nodes": 0,
      "node_types": [],
      "business_description": "AI workflow that ai_processs data/processes using generic components, triggered via manual",
      "complexity_score": 0
    },
    {
      "original_filename": "3295_workflow_3295.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3295_workflow_3295.json",
      "workflow_name": "3295_workflow_3295",
      "suggested_filename": "ai_3295_workflow_3295_automate_n8nnodeslangchainmemorybufferwindow_telegram.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "telegram",
        "aggregate",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "telegram",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, telegram, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "vnhhf9aNsw0kzdBV_CV_Evaluation_-_Error_Handling.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/vnhhf9aNsw0kzdBV_CV_Evaluation_-_Error_Handling.json",
      "workflow_name": "CV Evaluation - Error Handling",
      "suggested_filename": "comm_evaluation_automate_error_gmail.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "errorTrigger",
        "merge",
        "if",
        "gmail",
        "set",
        "stickyNote",
        "code",
        "html"
      ],
      "primary_integrations": [
        "error",
        "gmail",
        "html"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.errorTrigger",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.html",
        "n8n-nodes-base.html",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using error, gmail, html, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "Q63cSgFlcqz291ec_✨📊Multi-AI_Agent_Chatbot_for_Postgres_Supabase_DB_and_QuickCharts_+_Tool_Router.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Q63cSgFlcqz291ec_✨📊Multi-AI_Agent_Chatbot_for_Postgres_Supabase_DB_and_QuickCharts_+_Tool_Router.json",
      "workflow_name": "✨📊Multi-AI Agent Chatbot for Postgres/Supabase DB and QuickCharts + Tool Router",
      "suggested_filename": "ai_multi_ai_process_n8nnodeslangchainmemorypostgreschat_n8nnodeslangchainoutputp.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryPostgresChat",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "postgresTool",
        "httpRequest",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "switch",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorypostgreschat",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 40,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.postgresTool",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.postgresTool",
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.postgresTool",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorypostgreschat, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 52
    },
    {
      "original_filename": "2808_workflow_2808.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2808_workflow_2808.json",
      "workflow_name": "2808_workflow_2808",
      "suggested_filename": "data_2808_workflow_2808_automate_httprequest_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "code",
        "googleSheets",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "googlesheets"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, manual, googlesheets, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "0pVPSW4PzJZLLqSf_Notion_to_Linkedin.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/0pVPSW4PzJZLLqSf_Notion_to_Linkedin.json",
      "workflow_name": "Notion to Linkedin",
      "suggested_filename": "data_notion_automate_httprequest_linkedin_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "stickyNote",
        "httpRequest",
        "linkedIn",
        "notion",
        "scheduleTrigger",
        "code",
        "aggregate"
      ],
      "primary_integrations": [
        "httprequest",
        "linkedin",
        "notion"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.linkedIn",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, linkedin, notion, triggered via cron",
      "complexity_score": 21
    },
    {
      "original_filename": "yPIST7l13huQEjY5_Use_XMLRPC_via_HttpRequest-node_to_post_on_Wordpress.com.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/yPIST7l13huQEjY5_Use_XMLRPC_via_HttpRequest-node_to_post_on_Wordpress.com.json",
      "workflow_name": "Use XMLRPC via HttpRequest-node to post on Wordpress.com",
      "suggested_filename": "ai_xmlrpc_automate_httprequest_manual.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "xml",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "xml"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.xml"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, manual, xml, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "103_Create_a_new_customer_in_Chargebee.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/103_Create_a_new_customer_in_Chargebee.json",
      "workflow_name": "Create a new customer in Chargebee",
      "suggested_filename": "biz_create_create_contact_chargebee_manual.json",
      "category": "BIZ",
      "business_function": "create_contact",
      "trigger_type": "manual",
      "integrations": [
        "chargebee",
        "manualTrigger"
      ],
      "primary_integrations": [
        "chargebee",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.chargebee"
      ],
      "business_description": "BIZ workflow that create_contacts data/processes using chargebee, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "QJZLBn9L6NbmjmLK_🤖🧠_AI_Agent_Chatbot_+_LONG_TERM_Memory_+_Note_Storage_+_Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/QJZLBn9L6NbmjmLK_🤖🧠_AI_Agent_Chatbot_+_LONG_TERM_Memory_+_Note_Storage_+_Telegram.json",
      "workflow_name": "🤖🧠 AI Agent Chatbot + LONG TERM Memory + Note Storage + Telegram",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "googleDocs",
        "googleDocsTool",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.agent",
        "aggregate"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "googledocs"
      ],
      "total_nodes": 21,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.googleDocsTool",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDocsTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, googledocs, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "Share YouTube Videos with AI Summaries on Discord.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Share YouTube Videos with AI Summaries on Discord.json",
      "workflow_name": "YouTube Videos with AI Summaries on Discord",
      "suggested_filename": "ai_youtube_ai_process_rssfeedread_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "rssFeedReadTrigger",
        "stickyNote",
        "set",
        "httpRequest",
        "extractFromFile",
        "n8n-nodes-langchain.openAi",
        "discord"
      ],
      "primary_integrations": [
        "rssfeedread",
        "httprequest",
        "extractfromfile"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.rssFeedReadTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using rssfeedread, httprequest, extractfromfile, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "1375_workflow_1375.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1375_workflow_1375.json",
      "workflow_name": "1375_workflow_1375",
      "suggested_filename": "ops_1375_workflow_1375_automate_httprequest_gitlab.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "httpRequest",
        "gitlabTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "gitlab"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.gitlabTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if"
      ],
      "business_description": "OPS workflow that automates data/processes using httprequest, gitlab, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "Supabase Insertion & Upsertion & Retrieval.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Supabase Insertion & Upsertion & Retrieval.json",
      "workflow_name": "Supabase Insertion & Upsertion & Retrieval",
      "suggested_filename": "ai_supabase_create_n8nnodeslangchainchainretrievalqa_supabase.json",
      "category": "AI",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "supabase",
        "n8n-nodes-langchain.vectorStoreSupabase",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "googleDrive",
        "n8n-nodes-langchain.retrieverVectorStore",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "supabase",
        "n8n-nodes-langchain.vectorstoresupabase"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase"
      ],
      "business_description": "AI workflow that creates data/processes using n8n-nodes-langchain.chainretrievalqa, supabase, n8n-nodes-langchain.vectorstoresupabase, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "2121_workflow_2121.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2121_workflow_2121.json",
      "workflow_name": "2121_workflow_2121",
      "suggested_filename": "comm_2121_workflow_2121_automate_httprequest_hunter.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "noOp",
        "stickyNote",
        "httpRequest",
        "hunter",
        "telegram",
        "formTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "hunter",
        "telegram"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.hunter",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, hunter, telegram, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "HMoUOg8J7RzEcslH_Extract_personal_data_with_a_self-hosted_LLM_Mistral_NeMo.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/HMoUOg8J7RzEcslH_Extract_personal_data_with_a_self-hosted_LLM_Mistral_NeMo.json",
      "workflow_name": "Extract personal data with a self-hosted LLM Mistral NeMo",
      "suggested_filename": "ai_extract_extract_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainchai.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "noOp",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "n8n-nodes-langchain.lmChatOllama"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 13,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOllama",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that extracts data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "Vector Database as a Big Data Analysis Tool for AI Agents [1_3 anomaly][1_2 KNN].json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Vector Database as a Big Data Analysis Tool for AI Agents [1_3 anomaly][1_2 KNN].json",
      "workflow_name": "[1/3 - anomaly detection] [1/2 - KNN classification] Batch upload dataset to Qdrant (crops dataset)",
      "suggested_filename": "data_anomaly_automate_httprequest_googlecloudstorage.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "googleCloudStorage",
        "manualTrigger",
        "code",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "googlecloudstorage",
        "manual"
      ],
      "total_nodes": 25,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleCloudStorage",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, googlecloudstorage, manual, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "1895_workflow_1895.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1895_workflow_1895.json",
      "workflow_name": "1895_workflow_1895",
      "suggested_filename": "ai_1895_workflow_1895_automate_reddit_manual.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "reddit",
        "if",
        "stickyNote",
        "set",
        "manualTrigger",
        "openAi"
      ],
      "primary_integrations": [
        "reddit",
        "manual",
        "openai"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.reddit",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using reddit, manual, openai, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "Post New YouTube Videos to X.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Post New YouTube Videos to X.json",
      "workflow_name": "Post New YouTube Videos to X",
      "suggested_filename": "ai_post_automate_schedule_twitter_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "scheduleTrigger",
        "twitter",
        "n8n-nodes-langchain.openAi",
        "youTube"
      ],
      "primary_integrations": [
        "schedule",
        "twitter",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.scheduleTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using schedule, twitter, n8n-nodes-langchain.openai, triggered via cron",
      "complexity_score": 11
    },
    {
      "original_filename": "3453_workflow_3453.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3453_workflow_3453.json",
      "workflow_name": "3453_workflow_3453",
      "suggested_filename": "comm_3453_workflow_3453_automate_schedule_microsoftoutlook_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "scheduleTrigger",
        "switch",
        "microsoftOutlook",
        "mySql"
      ],
      "primary_integrations": [
        "schedule",
        "microsoftoutlook",
        "mysql"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook"
      ],
      "business_description": "COMM workflow that automates data/processes using schedule, microsoftoutlook, mysql, triggered via cron",
      "complexity_score": 10
    },
    {
      "original_filename": "141_Send_daily_weather_updates_via_a_push_notification_using_Spontit.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/141_Send_daily_weather_updates_via_a_push_notification_using_Spontit.json",
      "workflow_name": "Send daily weather updates via a push notification using Spontit",
      "suggested_filename": "ai_send_ai_process_openweathermap_spontit_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "openWeatherMap",
        "spontit",
        "cron"
      ],
      "primary_integrations": [
        "openweathermap",
        "spontit",
        "cron"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.openWeatherMap",
        "n8n-nodes-base.spontit"
      ],
      "business_description": "AI workflow that ai_processs data/processes using openweathermap, spontit, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "55_Expense_Tracker_App.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/55_Expense_Tracker_App.json",
      "workflow_name": "Expense Tracker App",
      "suggested_filename": "data_expense_monitor_httprequest_mindee.json",
      "category": "DATA",
      "business_function": "monitor",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "httpRequest",
        "mindee",
        "airtable",
        "typeformTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "mindee",
        "airtable"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.mindee",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable"
      ],
      "business_description": "DATA workflow that monitors data/processes using httprequest, mindee, airtable, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "Using External Workflows as Tools in n8n.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Using External Workflows as Tools in n8n.json",
      "workflow_name": "get_a_web_page",
      "suggested_filename": "util_get_a_web_page_read_httprequest_executeworkflow.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "executeworkflow"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that reads data/processes using httprequest, executeworkflow, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "1826_workflow_1826.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1826_workflow_1826.json",
      "workflow_name": "1826_workflow_1826",
      "suggested_filename": "util_1826_workflow_1826_automate_spreadsheetfile_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "stickyNote",
        "set",
        "httpRequest",
        "ftp",
        "manualTrigger",
        "googleDrive",
        "microsoftOneDrive",
        "writeBinaryFile",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "httprequest",
        "ftp"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.writeBinaryFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.microsoftOneDrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.ftp",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.microsoftOneDrive",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.spreadsheetFile"
      ],
      "business_description": "UTIL workflow that automates data/processes using spreadsheetfile, httprequest, ftp, triggered via manual",
      "complexity_score": 34
    },
    {
      "original_filename": "3396_workflow_3396.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3396_workflow_3396.json",
      "workflow_name": "3396_workflow_3396",
      "suggested_filename": "ai_3396_workflow_3396_automate_splitinbatches_n8nnodeslangchaintextclassifier_cr.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "noOp",
        "wait",
        "if",
        "set",
        "n8n-nodes-langchain.textClassifier",
        "stickyNote",
        "microsoftOutlook",
        "markdown",
        "httpRequest",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "extractFromFile",
        "code",
        "microsoftExcel",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.textclassifier",
        "microsoftoutlook"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.microsoftOutlook",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.microsoftExcel",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.textclassifier, microsoftoutlook, triggered via cron",
      "complexity_score": 40
    },
    {
      "original_filename": "2736_workflow_2736.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2736_workflow_2736.json",
      "workflow_name": "2736_workflow_2736",
      "suggested_filename": "ai_2736_workflow_2736_automate_n8nnodeslangchainchainsummarization_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "stickyNote",
        "n8n-nodes-langchain.chainSummarization",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainsummarization",
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainsummarization, httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "991_workflow_991.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/991_workflow_991.json",
      "workflow_name": "991_workflow_991",
      "suggested_filename": "data_991_workflow_991_automate_autopilot_airtable.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "autopilotTrigger",
        "airtable"
      ],
      "primary_integrations": [
        "autopilot",
        "airtable"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.autopilotTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable"
      ],
      "business_description": "DATA workflow that automates data/processes using autopilot, airtable, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "JiSesGjDIXIPYtbt_Shopify_+_Mautic.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/JiSesGjDIXIPYtbt_Shopify_+_Mautic.json",
      "workflow_name": "Shopify + Mautic",
      "suggested_filename": "ecommerce_shopify_automate_crypto_mautic_webhook.json",
      "category": "ECOMMERCE",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "crypto",
        "noOp",
        "mautic",
        "if",
        "stickyNote",
        "set",
        "graphql",
        "webhook",
        "shopifyTrigger"
      ],
      "primary_integrations": [
        "crypto",
        "mautic",
        "graphql"
      ],
      "total_nodes": 26,
      "node_types": [
        "n8n-nodes-base.shopifyTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.if",
        "n8n-nodes-base.mautic",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "ECOMMERCE workflow that automates data/processes using crypto, mautic, graphql, triggered via webhook",
      "complexity_score": 35
    },
    {
      "original_filename": "2339_workflow_2339.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2339_workflow_2339.json",
      "workflow_name": "2339_workflow_2339",
      "suggested_filename": "util_2339_workflow_2339_automate_n8nnodeslangchainchainretrievalqa_extractfromfi.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "wait",
        "extractFromFile",
        "aggregate",
        "convertToFile",
        "n8n-nodes-langchain.embeddingsMistralCloud",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "splitInBatches",
        "n8n-nodes-langchain.outputParserItemList",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.retrieverVectorStore",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "n8n-nodes-langchain.chainSummarization",
        "localFileTrigger",
        "readWriteFile",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "set",
        "n8n-nodes-langchain.lmChatMistralCloud",
        "splitOut",
        "switch"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "extractfromfile",
        "converttofile"
      ],
      "total_nodes": 42,
      "node_types": [
        "n8n-nodes-base.localFileTrigger",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud",
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.outputParserItemList",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using n8n-nodes-langchain.chainretrievalqa, extractfromfile, converttofile, triggered via manual",
      "complexity_score": 64
    },
    {
      "original_filename": "92_Translate_text_from_English_to_German.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/92_Translate_text_from_English_to_German.json",
      "workflow_name": "Translate text from English to German",
      "suggested_filename": "util_translate_automate_manual_googletranslate.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "googleTranslate"
      ],
      "primary_integrations": [
        "manual",
        "googletranslate"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleTranslate"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, googletranslate, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "1500_workflow_1500.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1500_workflow_1500.json",
      "workflow_name": "1500_workflow_1500",
      "suggested_filename": "util_1500_workflow_1500_automate_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "function",
        "manualTrigger"
      ],
      "primary_integrations": [
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "rYuhIChQyjpGNvuR_Luma_AI_-_Webhook_Response_v1_-_AK.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/rYuhIChQyjpGNvuR_Luma_AI_-_Webhook_Response_v1_-_AK.json",
      "workflow_name": "Luma AI - Webhook Response v1 - AK",
      "suggested_filename": "ai_luma_ai_process_executiondata_webhook_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "executionData",
        "if",
        "stickyNote",
        "set",
        "webhook",
        "airtable"
      ],
      "primary_integrations": [
        "executiondata",
        "webhook",
        "airtable"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executionData",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtable"
      ],
      "business_description": "AI workflow that ai_processs data/processes using executiondata, webhook, airtable, triggered via webhook",
      "complexity_score": 14
    },
    {
      "original_filename": "3478_workflow_3478.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3478_workflow_3478.json",
      "workflow_name": "3478_workflow_3478",
      "suggested_filename": "ai_3478_workflow_3478_automate_googledrive_facebookgraphapi.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "googleDrive",
        "facebookGraphApi",
        "googleSheets",
        "n8n-nodes-langchain.openAi",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "googledrive",
        "facebookgraphapi",
        "googlesheets"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.facebookGraphApi"
      ],
      "business_description": "AI workflow that automates data/processes using googledrive, facebookgraphapi, googlesheets, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "1dnr1k4MAVbDiBmO_Get_event_triggered_notifications___updates_on_preferred_messaging_channels_with_TwentyCRM.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1dnr1k4MAVbDiBmO_Get_event_triggered_notifications___updates_on_preferred_messaging_channels_with_TwentyCRM.json",
      "workflow_name": "Get event triggered notifications / updates on preferred messaging channels with TwentyCRM",
      "suggested_filename": "comm_event_update_slack_gmail_webhook.json",
      "category": "COMM",
      "business_function": "update",
      "trigger_type": "webhook",
      "integrations": [
        "slack",
        "if",
        "stickyNote",
        "set",
        "gmail",
        "webhook",
        "googleSheets"
      ],
      "primary_integrations": [
        "slack",
        "gmail",
        "webhook"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that updates data/processes using slack, gmail, webhook, triggered via webhook",
      "complexity_score": 18
    },
    {
      "original_filename": "2370_workflow_2370.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2370_workflow_2370.json",
      "workflow_name": "2370_workflow_2370",
      "suggested_filename": "ai_2370_workflow_2370_automate_n8nnodeslangchainmemorybufferwindow_slack_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "slack",
        "stickyNote",
        "webhook",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "slack",
        "webhook"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, slack, webhook, triggered via webhook",
      "complexity_score": 16
    },
    {
      "original_filename": "21_Upload_video,_create_playlist_and_add_video_to_playlist.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/21_Upload_video,_create_playlist_and_add_video_to_playlist.json",
      "workflow_name": "Upload video, create playlist and add video to playlist",
      "suggested_filename": "content_upload_create_manual_readbinaryfile.json",
      "category": "CONTENT",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "readBinaryFile",
        "youTube"
      ],
      "primary_integrations": [
        "manual",
        "readbinaryfile",
        "youtube"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.youTube"
      ],
      "business_description": "CONTENT workflow that creates data/processes using manual, readbinaryfile, youtube, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "PpFVCrTiYoa35q1m_Vision-Based_AI_Agent_Scraper_-_with_Google_Sheets,_ScrapingBee,_and_Gemini.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/PpFVCrTiYoa35q1m_Vision-Based_AI_Agent_Scraper_-_with_Google_Sheets,_ScrapingBee,_and_Gemini.json",
      "workflow_name": "Vision-Based AI Agent Scraper - with Google Sheets, ScrapingBee, and Gemini",
      "suggested_filename": "ai_vision_ai_process_n8nnodeslangchainoutputparserstructured_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "markdown",
        "splitOut",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "manualTrigger",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "googleSheets",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest",
        "markdown"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.outputparserstructured, httprequest, markdown, triggered via manual",
      "complexity_score": 41
    },
    {
      "original_filename": "Easy Image Captioning with Gemini 1.5 Pro.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Easy Image Captioning with Gemini 1.5 Pro.json",
      "workflow_name": "Easy Image Captioning with Gemini 1.5 Pro",
      "suggested_filename": "ai_easy_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstructur.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "manualTrigger",
        "code",
        "editImage"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.code",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "vAssistant for Hubspot Chat using OpenAi and Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/vAssistant for Hubspot Chat using OpenAi and Airtable.json",
      "workflow_name": "OpenAI Assistant for Hubspot Chat",
      "suggested_filename": "ai_openai_ai_process_httprequest_webhook_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "wait",
        "stickyNote",
        "httpRequest",
        "webhook",
        "airtable",
        "code",
        "switch",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "airtable"
      ],
      "total_nodes": 34,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.code",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.if",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, webhook, airtable, triggered via webhook",
      "complexity_score": 43
    },
    {
      "original_filename": "gUx6hY0bOoReluxE_Supabase_Setup_Postgres.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/gUx6hY0bOoReluxE_Supabase_Setup_Postgres.json",
      "workflow_name": "Supabase Setup Postgres",
      "suggested_filename": "ai_supabase_automate_supabase_n8nnodeslangchainmemorypostgreschat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "supabase",
        "n8n-nodes-langchain.memoryPostgresChat",
        "set",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "manualTrigger",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "supabase",
        "n8n-nodes-langchain.memorypostgreschat",
        "n8n-nodes-langchain.lmchatgooglegemini"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "n8n-nodes-base.supabase",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using supabase, n8n-nodes-langchain.memorypostgreschat, n8n-nodes-langchain.lmchatgooglegemini, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "2464_workflow_2464.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2464_workflow_2464.json",
      "workflow_name": "2464_workflow_2464",
      "suggested_filename": "ai_2464_workflow_2464_automate_httprequest_sort.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "sort",
        "n8n-nodes-langchain.informationExtractor",
        "extractFromFile",
        "aggregate",
        "convertToFile",
        "airtableTrigger",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "noOp",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "airtable",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "editImage",
        "executeWorkflow",
        "merge",
        "n8n-nodes-langchain.toolVectorStore",
        "airtableTool",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "stickyNote",
        "compression",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "executeWorkflowTrigger",
        "n8n-nodes-langchain.memoryBufferWindow",
        "set",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "sort",
        "n8n-nodes-langchain.informationextractor"
      ],
      "total_nodes": 50,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.compression",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtableTrigger",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtableTool",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, sort, n8n-nodes-langchain.informationextractor, triggered via manual",
      "complexity_score": 80
    },
    {
      "original_filename": "2312_workflow_2312.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2312_workflow_2312.json",
      "workflow_name": "2312_workflow_2312",
      "suggested_filename": "comm_2312_workflow_2312_automate_error_gmail_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "errorTrigger",
        "if",
        "stickyNote",
        "gmail",
        "scheduleTrigger",
        "code",
        "n8n"
      ],
      "primary_integrations": [
        "error",
        "gmail",
        "schedule"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.errorTrigger",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if"
      ],
      "business_description": "COMM workflow that automates data/processes using error, gmail, schedule, triggered via cron",
      "complexity_score": 18
    },
    {
      "original_filename": "IXumIzS9WtPAhKFX_Export_Zammad_Objects_Users,_Roles,_Groups_and_Organizations_to_Excel.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/IXumIzS9WtPAhKFX_Export_Zammad_Objects_Users,_Roles,_Groups_and_Organizations_to_Excel.json",
      "workflow_name": "Export Zammad Objects Users, Roles, Groups and Organizations to Excel",
      "suggested_filename": "util_export_transfer_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "transfer",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "set",
        "httpRequest",
        "manualTrigger",
        "zammad",
        "convertToFile"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "zammad"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.zammad",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.zammad",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if"
      ],
      "business_description": "UTIL workflow that transfers data/processes using httprequest, manual, zammad, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "84_Send_daily_weather_updates_to_a_phone_number_using_the_Vonage_node.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/84_Send_daily_weather_updates_to_a_phone_number_using_the_Vonage_node.json",
      "workflow_name": "Send daily weather updates to a phone number using the Vonage node",
      "suggested_filename": "ai_send_ai_process_openweathermap_vonage_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "openWeatherMap",
        "vonage",
        "cron"
      ],
      "primary_integrations": [
        "openweathermap",
        "vonage",
        "cron"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.vonage",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.openWeatherMap"
      ],
      "business_description": "AI workflow that ai_processs data/processes using openweathermap, vonage, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "3512_workflow_3512.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3512_workflow_3512.json",
      "workflow_name": "3512_workflow_3512",
      "suggested_filename": "util_3512_workflow_3512_automate_googledrive_googledrive.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "if",
        "stickyNote",
        "set",
        "googleDriveTrigger",
        "googleDrive",
        "code",
        "switch",
        "filter"
      ],
      "primary_integrations": [
        "googledrive",
        "googledrive"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.switch"
      ],
      "business_description": "UTIL workflow that automates data/processes using googledrive, googledrive, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "RAG_Context-Aware Chunking _ Google Drive to Pinecone via OpenRouter & Gemini.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/RAG_Context-Aware Chunking _ Google Drive to Pinecone via OpenRouter & Gemini.json",
      "workflow_name": "RAG:Context-Aware Chunking | Google Drive to Pinecone via OpenRouter & Gemini",
      "suggested_filename": "ai_context_automate_splitinbatches_n8nnodeslangchainembeddingsgooglegemini.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.embeddingsGoogleGemini",
        "code",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "manualTrigger",
        "googleDrive",
        "extractFromFile",
        "splitOut",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.vectorStorePinecone",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.embeddingsgooglegemini",
        "n8n-nodes-langchain.lmchatopenrouter"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.embeddingsgooglegemini, n8n-nodes-langchain.lmchatopenrouter, triggered via manual",
      "complexity_score": 31
    },
    {
      "original_filename": "27_N8N_Español_-_BOT.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/27_N8N_Español_-_BOT.json",
      "workflow_name": "N8N Español - BOT",
      "suggested_filename": "comm_español_automate_telegram_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "telegramTrigger",
        "telegram",
        "if"
      ],
      "primary_integrations": [
        "telegram",
        "telegram"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "COMM workflow that automates data/processes using telegram, telegram, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "2677_workflow_2677.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2677_workflow_2677.json",
      "workflow_name": "2677_workflow_2677",
      "suggested_filename": "comm_2677_workflow_2677_automate_gmail_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "if",
        "gmailTrigger",
        "stickyNote",
        "set",
        "noOp",
        "httpRequest",
        "webhook",
        "limit",
        "code",
        "aggregate",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 40,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, httprequest, webhook, triggered via webhook",
      "complexity_score": 52
    },
    {
      "original_filename": "168_Smart_Factory_Use_Case.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/168_Smart_Factory_Use_Case.json",
      "workflow_name": "Smart Factory Use Case",
      "suggested_filename": "util_smart_automate_pagerduty_amqp.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "noOp",
        "set",
        "pagerDuty",
        "amqpTrigger",
        "function",
        "crateDb"
      ],
      "primary_integrations": [
        "pagerduty",
        "amqp",
        "cratedb"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.amqpTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.crateDb",
        "n8n-nodes-base.crateDb",
        "n8n-nodes-base.set",
        "n8n-nodes-base.pagerDuty",
        "n8n-nodes-base.function",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "UTIL workflow that automates data/processes using pagerduty, amqp, cratedb, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "130_Get_all_the_tasks_in_Flow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/130_Get_all_the_tasks_in_Flow.json",
      "workflow_name": "Get all the tasks in Flow",
      "suggested_filename": "util_tasks_read_flow_manual.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "flow",
        "manualTrigger"
      ],
      "primary_integrations": [
        "flow",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.flow"
      ],
      "business_description": "UTIL workflow that reads data/processes using flow, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "984_workflow_984.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/984_workflow_984.json",
      "workflow_name": "984_workflow_984",
      "suggested_filename": "comm_984_workflow_984_automate_lemlist_mattermost.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "lemlistTrigger",
        "mattermost"
      ],
      "primary_integrations": [
        "lemlist",
        "mattermost"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.lemlistTrigger",
        "n8n-nodes-base.mattermost"
      ],
      "business_description": "COMM workflow that automates data/processes using lemlist, mattermost, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2278_workflow_2278.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2278_workflow_2278.json",
      "workflow_name": "2278_workflow_2278",
      "suggested_filename": "comm_2278_workflow_2278_automate_gmail_httprequest_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "gmail",
        "stickyNote",
        "httpRequest",
        "markdown",
        "scheduleTrigger",
        "splitOut"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "markdown"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, httprequest, markdown, triggered via cron",
      "complexity_score": 13
    },
    {
      "original_filename": "oowUGM7ey6gWxzEG_MCP_SUPABASE_AGENT.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/oowUGM7ey6gWxzEG_MCP_SUPABASE_AGENT.json",
      "workflow_name": "MCP_SUPABASE_AGENT",
      "suggested_filename": "ai_mcp_supabase_agent_automate_n8nnodeslangchainvectorstoresupabase_n8nnodeslang.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.vectorStoreSupabase",
        "stickyNote",
        "n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "supabaseTool"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.vectorstoresupabase",
        "n8n-nodes-langchain.mcp",
        "n8n-nodes-langchain.embeddingsopenai"
      ],
      "total_nodes": 27,
      "node_types": [
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool",
        "n8n-nodes-base.supabaseTool"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.vectorstoresupabase, n8n-nodes-langchain.mcp, n8n-nodes-langchain.embeddingsopenai, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "12_Find_a_New_Book.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/12_Find_a_New_Book.json",
      "workflow_name": "Find a New Book",
      "suggested_filename": "util_find_automate_emailsend_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "set",
        "emailSend",
        "httpRequest",
        "manualTrigger",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "emailsend",
        "httprequest",
        "manual"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.function",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.function",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.emailSend"
      ],
      "business_description": "UTIL workflow that automates data/processes using emailsend, httprequest, manual, triggered via cron",
      "complexity_score": 20
    },
    {
      "original_filename": "448_workflow_448.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/448_workflow_448.json",
      "workflow_name": "448_workflow_448",
      "suggested_filename": "util_448_workflow_448_automate_freshdesk_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "freshdesk",
        "manualTrigger"
      ],
      "primary_integrations": [
        "freshdesk",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.freshdesk"
      ],
      "business_description": "UTIL workflow that automates data/processes using freshdesk, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Invoice data extraction with LlamaParse and OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Invoice data extraction with LlamaParse and OpenAI.json",
      "workflow_name": "Invoice data extraction with LlamaParse and OpenAI",
      "suggested_filename": "ai_invoice_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstr.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "gmailTrigger",
        "stickyNote",
        "wait",
        "n8n-nodes-langchain.lmOpenAi",
        "httpRequest",
        "gmail",
        "set",
        "if",
        "aggregate",
        "splitOut",
        "switch",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 26,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.if",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, gmail, triggered via manual",
      "complexity_score": 41
    },
    {
      "original_filename": "FU3MrLkaTHmfdG4n_Hugging_Face__to_Notion.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/FU3MrLkaTHmfdG4n_Hugging_Face__to_Notion.json",
      "workflow_name": "Hugging Face  to Notion",
      "suggested_filename": "ai_hugging_automate_splitinbatches_httprequest_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "if",
        "httpRequest",
        "notion",
        "scheduleTrigger",
        "splitOut",
        "html",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "notion"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.html"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, httprequest, notion, triggered via cron",
      "complexity_score": 19
    },
    {
      "original_filename": "Agn9dzf5YTqcmQGN_Amazon_Ads_AI_Optimization.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Agn9dzf5YTqcmQGN_Amazon_Ads_AI_Optimization.json",
      "workflow_name": "Amazon Ads AI Optimization",
      "suggested_filename": "ai_amazon_ai_process_n8nnodeslangchainchainllm_gmail.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "stickyNote",
        "set",
        "gmail",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "googleDrive",
        "code",
        "extractFromFile"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "gmail",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, gmail, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "MMDt8lGtac2oU8nI_Build_a_Chatbot,_Voice_Agent_and_Phone_Agent_with_Voiceflow,_Google_Calendar_and_RAG.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/MMDt8lGtac2oU8nI_Build_a_Chatbot,_Voice_Agent_and_Phone_Agent_with_Voiceflow,_Google_Calendar_and_RAG.json",
      "workflow_name": "Build a Chatbot, Voice Agent and Phone Agent with Voiceflow, Google Calendar and RAG",
      "suggested_filename": "ai_build_automate_n8nnodeslangchainvectorstore_n8nnodeslangchainchainllm_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.toolVectorStore",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "googleCalendar",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "manualTrigger",
        "googleDrive",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.vectorstore",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 34,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.googleCalendar",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.vectorstore, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via webhook",
      "complexity_score": 51
    },
    {
      "original_filename": "2547_workflow_2547.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2547_workflow_2547.json",
      "workflow_name": "2547_workflow_2547",
      "suggested_filename": "util_2547_workflow_2547_automate_supabase_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "supabase",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "manualTrigger"
      ],
      "primary_integrations": [
        "supabase",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using supabase, httprequest, webhook, triggered via webhook",
      "complexity_score": 28
    },
    {
      "original_filename": "LF8gz3iz74u45a5i_YouTube_Videos_with_AI_Summaries_on_Discord.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/LF8gz3iz74u45a5i_YouTube_Videos_with_AI_Summaries_on_Discord.json",
      "workflow_name": "YouTube Videos with AI Summaries on Discord",
      "suggested_filename": "ai_youtube_ai_process_rssfeedread_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "rssFeedReadTrigger",
        "stickyNote",
        "set",
        "httpRequest",
        "extractFromFile",
        "n8n-nodes-langchain.openAi",
        "discord"
      ],
      "primary_integrations": [
        "rssfeedread",
        "httprequest",
        "extractfromfile"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.rssFeedReadTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using rssfeedread, httprequest, extractfromfile, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "2199_workflow_2199.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2199_workflow_2199.json",
      "workflow_name": "2199_workflow_2199",
      "suggested_filename": "data_2199_workflow_2199_automate_schedule_googlesheets_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "scheduleTrigger",
        "googleSheets",
        "stickyNote",
        "twitter"
      ],
      "primary_integrations": [
        "schedule",
        "googlesheets",
        "twitter"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using schedule, googlesheets, twitter, triggered via cron",
      "complexity_score": 10
    },
    {
      "original_filename": "YCQFaJdmJc6Rx4o7_Sync_Jira_issues_with_subsequent_comments_to_Notion_database.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/YCQFaJdmJc6Rx4o7_Sync_Jira_issues_with_subsequent_comments_to_Notion_database.json",
      "workflow_name": "Sync Jira issues with subsequent comments to Notion database",
      "suggested_filename": "data_sync_sync_jira_notion.json",
      "category": "DATA",
      "business_function": "sync",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "jiraTrigger",
        "notion",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "jira",
        "notion"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.if",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.jiraTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.notion"
      ],
      "business_description": "DATA workflow that syncs data/processes using jira, notion, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "JH0OhDnJCwPxBJZX_Template_-_SSL_Expiry_Alert_System.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/JH0OhDnJCwPxBJZX_Template_-_SSL_Expiry_Alert_System.json",
      "workflow_name": "Template - SSL Expiry Alert System",
      "suggested_filename": "comm_template_notify_gmail_httprequest_cron.json",
      "category": "COMM",
      "business_function": "notify",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "gmail",
        "httpRequest",
        "scheduleTrigger",
        "telegram",
        "switch",
        "googleSheets"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-ntfy.Ntfy",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that notifys data/processes using gmail, httprequest, schedule, triggered via cron",
      "complexity_score": 28
    },
    {
      "original_filename": "XbawQw3cvClu2wsx_Automated_Image_Metadata_Tagging.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/XbawQw3cvClu2wsx_Automated_Image_Metadata_Tagging.json",
      "workflow_name": "Automated Image Metadata Tagging",
      "suggested_filename": "ai_automated_automate_extractfromfile_googledrive.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "code",
        "extractFromFile",
        "googleDrive",
        "convertToFile",
        "n8n-nodes-langchain.openAi",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "extractfromfile",
        "googledrive",
        "converttofile"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.convertToFile",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge"
      ],
      "business_description": "AI workflow that automates data/processes using extractfromfile, googledrive, converttofile, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "1771_workflow_1771.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1771_workflow_1771.json",
      "workflow_name": "1771_workflow_1771",
      "suggested_filename": "comm_1771_workflow_1771_automate_functionitem_hubspot_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "functionItem",
        "hubspot",
        "mailchimp",
        "cron"
      ],
      "primary_integrations": [
        "functionitem",
        "hubspot",
        "mailchimp"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.mailchimp"
      ],
      "business_description": "COMM workflow that automates data/processes using functionitem, hubspot, mailchimp, triggered via cron",
      "complexity_score": 9
    },
    {
      "original_filename": "g25bM3Hj71T3ZVVe_Streamline_data_from_an_n8n_form_into_Google_Sheet_and_Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/g25bM3Hj71T3ZVVe_Streamline_data_from_an_n8n_form_into_Google_Sheet_and_Airtable.json",
      "workflow_name": "Streamline data from an n8n form into Google Sheet and Airtable",
      "suggested_filename": "ai_streamline_ai_process_gmail_airtable.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "gmail",
        "airtable",
        "code",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "airtable",
        "googlesheets"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, airtable, googlesheets, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "SvZQB2gsI57KlfvO_💥AI_Social_Video_Generator_with_GPT-4,_Kling_&_Blotato_—Auto-Post_to_Instagram,_Facebook,,_TikTok,_Twitter_&_Pinterest_-_vide.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/SvZQB2gsI57KlfvO_💥AI_Social_Video_Generator_with_GPT-4,_Kling_&_Blotato_—Auto-Post_to_Instagram,_Facebook,,_TikTok,_Twitter_&_Pinterest_-_vide.json",
      "workflow_name": "💥AI Social Video Generator with GPT-4, Kling & Blotato —Auto-Post to Instagram, Facebook,, TikTok, Twitter & Pinterest - vide",
      "suggested_filename": "ai_social_ai_process_httprequest_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegramTrigger",
        "n8n-nodes-langchain.agent",
        "code",
        "telegram",
        "googleSheets",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai",
        "telegram"
      ],
      "total_nodes": 38,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, n8n-nodes-langchain.lmchatopenai, telegram, triggered via manual",
      "complexity_score": 49
    },
    {
      "original_filename": "2525_workflow_2525.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2525_workflow_2525.json",
      "workflow_name": "2525_workflow_2525",
      "suggested_filename": "ai_2525_workflow_2525_automate_sort_googledrive.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "set",
        "sort",
        "splitOut",
        "googleDrive",
        "code",
        "aggregate",
        "googleSheets",
        "convertToFile",
        "n8n-nodes-langchain.openAi",
        "formTrigger"
      ],
      "primary_integrations": [
        "sort",
        "googledrive",
        "googlesheets"
      ],
      "total_nodes": 39,
      "node_types": [
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using sort, googledrive, googlesheets, triggered via manual",
      "complexity_score": 52
    },
    {
      "original_filename": "Um37boya1U0mnCjS_Workflow_dashboard_with_mermaid.js.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Um37boya1U0mnCjS_Workflow_dashboard_with_mermaid.js.json",
      "workflow_name": "Workflow dashboard with mermaid.js",
      "suggested_filename": "ai_dashboard_ai_process_webhook_manual_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "switch",
        "stickyNote",
        "set",
        "webhook",
        "manualTrigger",
        "code",
        "aggregate",
        "n8n",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "manual",
        "n8n"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "AI workflow that ai_processs data/processes using webhook, manual, n8n, triggered via webhook",
      "complexity_score": 21
    },
    {
      "original_filename": "2148_workflow_2148.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2148_workflow_2148.json",
      "workflow_name": "2148_workflow_2148",
      "suggested_filename": "data_2148_workflow_2148_automate_graphql_schedule_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "graphql",
        "scheduleTrigger",
        "splitOut",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "graphql",
        "schedule",
        "googlesheets"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code"
      ],
      "business_description": "DATA workflow that automates data/processes using graphql, schedule, googlesheets, triggered via cron",
      "complexity_score": 22
    },
    {
      "original_filename": "5_Syncro_Status_Update_Clockify.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/5_Syncro_Status_Update_Clockify.json",
      "workflow_name": "Syncro Status Update Clockify",
      "suggested_filename": "data_syncro_sync_webhook_httprequest_webhook.json",
      "category": "DATA",
      "business_function": "sync",
      "trigger_type": "webhook",
      "integrations": [
        "webhook",
        "httpRequest",
        "clockify",
        "if"
      ],
      "primary_integrations": [
        "webhook",
        "httprequest",
        "clockify"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "DATA workflow that syncs data/processes using webhook, httprequest, clockify, triggered via webhook",
      "complexity_score": 10
    },
    {
      "original_filename": "5opbTWPZRN05bYdz_Build_an_MCP_Server_with_Google_Calendar.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/5opbTWPZRN05bYdz_Build_an_MCP_Server_with_Google_Calendar.json",
      "workflow_name": "Build an MCP Server with Google Calendar",
      "suggested_filename": "ai_build_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "googleCalendarTool",
        "n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.mcpClientTool",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "googlecalendar"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.mcpClientTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, googlecalendar, triggered via manual",
      "complexity_score": 31
    },
    {
      "original_filename": "3640_workflow_3640.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3640_workflow_3640.json",
      "workflow_name": "3640_workflow_3640",
      "suggested_filename": "ai_3640_workflow_3640_automate_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "limit",
        "code",
        "googleSheets",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "manual"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.limit",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, httprequest, manual, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "TqnC0nyAa0LRfYBX_Amazon_Product_Price_Tracker.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/TqnC0nyAa0LRfYBX_Amazon_Product_Price_Tracker.json",
      "workflow_name": "Amazon Product Price Tracker",
      "suggested_filename": "data_amazon_monitor_splitinbatches_emailsend_cron.json",
      "category": "DATA",
      "business_function": "monitor",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "if",
        "stickyNote",
        "set",
        "emailSend",
        "httpRequest",
        "scheduleTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "emailsend",
        "httprequest"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.scheduleTrigger"
      ],
      "business_description": "DATA workflow that monitors data/processes using splitinbatches, emailsend, httprequest, triggered via cron",
      "complexity_score": 24
    },
    {
      "original_filename": "435_workflow_435.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/435_workflow_435.json",
      "workflow_name": "435_workflow_435",
      "suggested_filename": "util_435_workflow_435_automate_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest"
      ],
      "primary_integrations": [
        "httprequest"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "560_workflow_560.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/560_workflow_560.json",
      "workflow_name": "560_workflow_560",
      "suggested_filename": "util_560_workflow_560_automate_box.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "boxTrigger"
      ],
      "primary_integrations": [
        "box"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.boxTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using box, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "2444_workflow_2444.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2444_workflow_2444.json",
      "workflow_name": "2444_workflow_2444",
      "suggested_filename": "util_2444_workflow_2444_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "ziJG3tgG91Gkbina_n8n-農產品.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ziJG3tgG91Gkbina_n8n-農產品.json",
      "workflow_name": "n8n-農產品",
      "suggested_filename": "data_automate_googlesheets_httprequest.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "splitOut",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "googlesheets",
        "httprequest",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, httprequest, manual, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "XGFs5jZNCeURd4OT_Publish_Image_Post_to_Bluesky.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/XGFs5jZNCeURd4OT_Publish_Image_Post_to_Bluesky.json",
      "workflow_name": "Publish Image Post to Bluesky",
      "suggested_filename": "content_publish_automate_httprequest_manual.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "code",
        "aggregate"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "CONTENT workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "3057_workflow_3057.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3057_workflow_3057.json",
      "workflow_name": "3057_workflow_3057",
      "suggested_filename": "ai_3057_workflow_3057_automate_n8nnodeslangchainserpapi_n8nnodeslangchainoutputp.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.toolSerpApi",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.agent",
        "switch",
        "extractFromFile",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.serpapi",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolSerpApi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.serpapi, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "yRMCUm6oJEMknhbw_OpenSea_Analytics_Agent_Tool.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/yRMCUm6oJEMknhbw_OpenSea_Analytics_Agent_Tool.json",
      "workflow_name": "OpenSea Analytics Agent Tool",
      "suggested_filename": "ai_opensea_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainhttpreq.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 12,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "do4h6jnTGWDjCXV7_Merge.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/do4h6jnTGWDjCXV7_Merge.json",
      "workflow_name": "Merge",
      "suggested_filename": "util_merge_automate_readwritefile_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "readWriteFile",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "readwritefile",
        "httprequest",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using readwritefile, httprequest, manual, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "3035_workflow_3035.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3035_workflow_3035.json",
      "workflow_name": "3035_workflow_3035",
      "suggested_filename": "ai_3035_workflow_3035_automate_n8nnodeslangchainlmchatazureopenai_n8nnodeslangch.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.lmChatAzureOpenAi",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.agent",
        "aggregate",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmchatazureopenai",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.agent"
      ],
      "total_nodes": 27,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflow",
        "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.lmchatazureopenai, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.agent, triggered via manual",
      "complexity_score": 36
    },
    {
      "original_filename": "Enhance Security Operations with the Qualys Slack Shortcut Bot! (1).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Enhance Security Operations with the Qualys Slack Shortcut Bot! (1).json",
      "workflow_name": "Enhance Security Operations with the Qualys Slack Shortcut Bot! (1)",
      "suggested_filename": "util_enhance_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "switch",
        "executeWorkflow",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "executeworkflow"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, executeworkflow, triggered via webhook",
      "complexity_score": 30
    },
    {
      "original_filename": "536_workflow_536.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/536_workflow_536.json",
      "workflow_name": "536_workflow_536",
      "suggested_filename": "util_536_workflow_536_automate_clockify.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "clockifyTrigger"
      ],
      "primary_integrations": [
        "clockify"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.clockifyTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using clockify, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "Mub5RZI4PAs6TsSP_🔐🦙🤖_Private_&_Local_Ollama_Self-Hosted_LLM_Router.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Mub5RZI4PAs6TsSP_🔐🦙🤖_Private_&_Local_Ollama_Self-Hosted_LLM_Router.json",
      "workflow_name": "🔐🦙🤖 Private & Local Ollama Self-Hosted LLM Router",
      "suggested_filename": "ai_private_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.lmchatollama"
      ],
      "total_nodes": 16,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOllama",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOllama",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.lmchatollama, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "2_RSS_to_Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2_RSS_to_Telegram.json",
      "workflow_name": "RSS to Telegram",
      "suggested_filename": "comm_telegram_automate_rssfeedread_telegram_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "noOp",
        "if",
        "rssFeedRead",
        "telegram",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "rssfeedread",
        "telegram",
        "cron"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.function",
        "n8n-nodes-base.if",
        "n8n-nodes-base.function",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.cron"
      ],
      "business_description": "COMM workflow that automates data/processes using rssfeedread, telegram, cron, triggered via cron",
      "complexity_score": 13
    },
    {
      "original_filename": "39KuujB1fbOvx8Al_OpenAI_e-mail_classification_-_application.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/39KuujB1fbOvx8Al_OpenAI_e-mail_classification_-_application.json",
      "workflow_name": "OpenAI e-mail classification - application",
      "suggested_filename": "ai_openai_ai_process_n8nnodeslangchaintextclassifier_n8nnodeslangchainlmchatopen.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "extractFromFile",
        "emailReadImap"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.textclassifier",
        "n8n-nodes-langchain.lmchatopenai",
        "n8n-nodes-langchain.informationextractor"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.textclassifier, n8n-nodes-langchain.lmchatopenai, n8n-nodes-langchain.informationextractor, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "120_Create_a_client_in_Harvest.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/120_Create_a_client_in_Harvest.json",
      "workflow_name": "Create a client in Harvest",
      "suggested_filename": "util_create_create_manual_harvest.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "harvest"
      ],
      "primary_integrations": [
        "manual",
        "harvest"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.harvest"
      ],
      "business_description": "UTIL workflow that creates data/processes using manual, harvest, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Proxmox AI Agent with n8n and Generative AI Integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Proxmox AI Agent with n8n and Generative AI Integration.json",
      "workflow_name": "Proxmox AI Agent with n8n and Generative AI Integration",
      "suggested_filename": "ai_proxmox_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchaino.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "merge",
        "n8n-nodes-langchain.outputParserStructured",
        "gmailTrigger",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "if",
        "httpRequest",
        "n8n-nodes-langchain.toolHttpRequest",
        "webhook",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 35,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.outputparserstructured, gmail, triggered via webhook",
      "complexity_score": 50
    },
    {
      "original_filename": "NOycL25YOISt8OLU_Search_LinkedIn_companies_and_add_them_to_Airtable_CRM.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/NOycL25YOISt8OLU_Search_LinkedIn_companies_and_add_them_to_Airtable_CRM.json",
      "workflow_name": "Search LinkedIn companies and add them to Airtable CRM",
      "suggested_filename": "ai_search_ai_process_splitinbatches_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "airtable"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "manual"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.if",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, httprequest, manual, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "730_workflow_730.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/730_workflow_730.json",
      "workflow_name": "730_workflow_730",
      "suggested_filename": "comm_730_workflow_730_automate_gmail_googlecalendar.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "gmail",
        "googleCalendar",
        "typeformTrigger",
        "mattermost",
        "googleSheets",
        "function"
      ],
      "primary_integrations": [
        "gmail",
        "googlecalendar",
        "typeform"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.function",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, googlecalendar, typeform, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "Analyse papers from Hugging Face with AI and store them in Notion.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Analyse papers from Hugging Face with AI and store them in Notion.json",
      "workflow_name": "Hugging Face to Notion",
      "suggested_filename": "ai_hugging_automate_splitinbatches_httprequest_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "if",
        "httpRequest",
        "notion",
        "scheduleTrigger",
        "splitOut",
        "html",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "notion"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.html"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, httprequest, notion, triggered via cron",
      "complexity_score": 19
    },
    {
      "original_filename": "2774_workflow_2774.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2774_workflow_2774.json",
      "workflow_name": "2774_workflow_2774",
      "suggested_filename": "util_2774_workflow_2774_automate_typeform.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "set",
        "splitOut",
        "aggregate",
        "typeformTrigger"
      ],
      "primary_integrations": [
        "typeform"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.if",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-klicktipp.klicktipp"
      ],
      "business_description": "UTIL workflow that automates data/processes using typeform, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "1520_workflow_1520.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1520_workflow_1520.json",
      "workflow_name": "1520_workflow_1520",
      "suggested_filename": "data_1520_workflow_1520_automate_httprequest_functionitem.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "httpRequest",
        "functionItem",
        "manualTrigger",
        "airtable"
      ],
      "primary_integrations": [
        "httprequest",
        "functionitem",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, functionitem, manual, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "3305_workflow_3305.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3305_workflow_3305.json",
      "workflow_name": "3305_workflow_3305",
      "suggested_filename": "ai_3305_workflow_3305_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "googleBigQuery",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "code",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "googlebigquery"
      ],
      "total_nodes": 12,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleBigQuery",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, googlebigquery, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "3937_workflow_3937.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3937_workflow_3937.json",
      "workflow_name": "3937_workflow_3937",
      "suggested_filename": "comm_3937_workflow_3937_automate_whatsapp_whatsapp.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "whatsApp",
        "stickyNote",
        "switch",
        "whatsAppTrigger",
        "filter"
      ],
      "primary_integrations": [
        "whatsapp",
        "whatsapp"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.whatsAppTrigger",
        "n8n-nodes-base.switch",
        "CUSTOM.klicktippTrigger",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.whatsApp",
        "CUSTOM.klicktipp",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using whatsapp, whatsapp, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "401_A_workflow_with_the_Twilio_node.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/401_A_workflow_with_the_Twilio_node.json",
      "workflow_name": "A workflow with the Twilio node",
      "suggested_filename": "util_twilio_automate_manual_twilio.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "twilio"
      ],
      "primary_integrations": [
        "manual",
        "twilio"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.twilio"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, twilio, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "D0I76cew5KOnlem0_Workflow_stats.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/D0I76cew5KOnlem0_Workflow_stats.json",
      "workflow_name": "Workflow stats",
      "suggested_filename": "util_stats_automate_movebinarydata_sort_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "moveBinaryData",
        "stickyNote",
        "set",
        "sort",
        "webhook",
        "manualTrigger",
        "xml",
        "code",
        "aggregate",
        "n8n",
        "html",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "movebinarydata",
        "sort",
        "webhook"
      ],
      "total_nodes": 33,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.html",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using movebinarydata, sort, webhook, triggered via webhook",
      "complexity_score": 48
    },
    {
      "original_filename": "766_workflow_766.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/766_workflow_766.json",
      "workflow_name": "766_workflow_766",
      "suggested_filename": "util_766_workflow_766_automate_generic.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "function"
      ],
      "primary_integrations": [],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.function",
        "n8n-nodes-base.function"
      ],
      "business_description": "UTIL workflow that automates data/processes using generic components, triggered via manual",
      "complexity_score": 3
    },
    {
      "original_filename": "CCcz1G4G2yPwk1me_💥workflow_n8n_d'Auto-Post_sur_les_réseaux_sociaux_-_vide.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/CCcz1G4G2yPwk1me_💥workflow_n8n_d'Auto-Post_sur_les_réseaux_sociaux_-_vide.json",
      "workflow_name": "💥workflow n8n d'Auto-Post sur les réseaux sociaux - vide",
      "suggested_filename": "data_auto_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "googlesheets"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, schedule, googlesheets, triggered via cron",
      "complexity_score": 20
    },
    {
      "original_filename": "1806_workflow_1806.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1806_workflow_1806.json",
      "workflow_name": "1806_workflow_1806",
      "suggested_filename": "biz_1806_workflow_1806_automate_pipedrive_httprequest_cron.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "pipedrive",
        "merge",
        "if",
        "set",
        "httpRequest",
        "functionItem",
        "zendesk",
        "cron"
      ],
      "primary_integrations": [
        "pipedrive",
        "httprequest",
        "functionitem"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.zendesk"
      ],
      "business_description": "BIZ workflow that automates data/processes using pipedrive, httprequest, functionitem, triggered via cron",
      "complexity_score": 25
    },
    {
      "original_filename": "1435_workflow_1435.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1435_workflow_1435.json",
      "workflow_name": "1435_workflow_1435",
      "suggested_filename": "util_1435_workflow_1435_automate_spreadsheetfile_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "spreadsheetFile",
        "respondToWebhook",
        "webhook",
        "itemLists"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "respondtowebhook",
        "webhook"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.respondToWebhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using spreadsheetfile, respondtowebhook, webhook, triggered via webhook",
      "complexity_score": 8
    },
    {
      "original_filename": "2117_workflow_2117.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2117_workflow_2117.json",
      "workflow_name": "2117_workflow_2117",
      "suggested_filename": "biz_2117_workflow_2117_automate_hubspot_httprequest_cron.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "hubspot",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "switch",
        "filter"
      ],
      "primary_integrations": [
        "hubspot",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.switch"
      ],
      "business_description": "BIZ workflow that automates data/processes using hubspot, httprequest, schedule, triggered via cron",
      "complexity_score": 29
    },
    {
      "original_filename": "2661_workflow_2661.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2661_workflow_2661.json",
      "workflow_name": "2661_workflow_2661",
      "suggested_filename": "data_2661_workflow_2661_automate_httprequest_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "code",
        "webhook",
        "airtable",
        "googleDrive",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "airtable"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, webhook, airtable, triggered via webhook",
      "complexity_score": 26
    },
    {
      "original_filename": "1971_workflow_1971.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1971_workflow_1971.json",
      "workflow_name": "1971_workflow_1971",
      "suggested_filename": "comm_1971_workflow_1971_automate_itemlists_slack_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "itemLists",
        "slack",
        "if",
        "wait",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "webhook",
        "code",
        "formTrigger",
        "filter"
      ],
      "primary_integrations": [
        "itemlists",
        "slack",
        "gmail"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.formTrigger"
      ],
      "business_description": "COMM workflow that automates data/processes using itemlists, slack, gmail, triggered via webhook",
      "complexity_score": 42
    },
    {
      "original_filename": "3504_workflow_3504.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3504_workflow_3504.json",
      "workflow_name": "3504_workflow_3504",
      "suggested_filename": "data_3504_workflow_3504_automate_notion_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "notion",
        "webhook",
        "airtable",
        "googleSheets",
        "filter"
      ],
      "primary_integrations": [
        "notion",
        "webhook",
        "airtable"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using notion, webhook, airtable, triggered via webhook",
      "complexity_score": 21
    },
    {
      "original_filename": "545_workflow_545.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/545_workflow_545.json",
      "workflow_name": "545_workflow_545",
      "suggested_filename": "util_545_workflow_545_automate_bannerbear_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "bannerbear",
        "manualTrigger"
      ],
      "primary_integrations": [
        "bannerbear",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.bannerbear"
      ],
      "business_description": "UTIL workflow that automates data/processes using bannerbear, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "3840_workflow_3840.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3840_workflow_3840.json",
      "workflow_name": "3840_workflow_3840",
      "suggested_filename": "ai_3840_workflow_3840_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "googleSheets",
        "facebookGraphApi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 26,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.facebookGraphApi",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via cron",
      "complexity_score": 36
    },
    {
      "original_filename": "1058_workflow_1058.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1058_workflow_1058.json",
      "workflow_name": "1058_workflow_1058",
      "suggested_filename": "comm_1058_workflow_1058_automate_n8n_mattermost.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8nTrigger",
        "mattermost"
      ],
      "primary_integrations": [
        "n8n",
        "mattermost"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.n8nTrigger",
        "n8n-nodes-base.mattermost"
      ],
      "business_description": "COMM workflow that automates data/processes using n8n, mattermost, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "110_Receive_updates_for_events_in_ClickUp.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/110_Receive_updates_for_events_in_ClickUp.json",
      "workflow_name": "Receive updates for events in ClickUp",
      "suggested_filename": "util_receive_update_clickup.json",
      "category": "UTIL",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "clickUpTrigger"
      ],
      "primary_integrations": [
        "clickup"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.clickUpTrigger"
      ],
      "business_description": "UTIL workflow that updates data/processes using clickup, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "1913_workflow_1913.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1913_workflow_1913.json",
      "workflow_name": "1913_workflow_1913",
      "suggested_filename": "util_1913_workflow_1913_automate_manual_n8ntrainingcustomerdatastore.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "manualTrigger",
        "n8nTrainingCustomerDatastore"
      ],
      "primary_integrations": [
        "manual",
        "n8ntrainingcustomerdatastore"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.n8nTrainingCustomerDatastore",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, n8ntrainingcustomerdatastore, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "1089_workflow_1089.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1089_workflow_1089.json",
      "workflow_name": "1089_workflow_1089",
      "suggested_filename": "comm_1089_workflow_1089_automate_notion_mattermost.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "notionTrigger",
        "mattermost",
        "noOp",
        "if"
      ],
      "primary_integrations": [
        "notion",
        "mattermost"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.notionTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "COMM workflow that automates data/processes using notion, mattermost, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "3891_workflow_3891.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3891_workflow_3891.json",
      "workflow_name": "3891_workflow_3891",
      "suggested_filename": "ai_3891_workflow_3891_automate_reddit_n8nnodeslangchainoutputparserstructured_cr.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "reddit",
        "n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-langchain.lmChatAnthropic",
        "extractFromFile",
        "emailReadImap",
        "noOp",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-langchain.agent",
        "limit",
        "html",
        "n8n-nodes-langchain.toolVectorStore",
        "gmail",
        "googleCalendarTool",
        "googleSheets",
        "executeWorkflowTrigger",
        "n8n-nodes-langchain.memoryBufferWindow",
        "executionData",
        "markdown",
        "n8n-nodes-langchain.toolSerpApi",
        "gmailTool",
        "n8n-nodes-langchain.sentimentAnalysis",
        "n8n-nodes-langchain.chainRetrievalQa",
        "n8n-nodes-langchain.vectorStoreInMemory",
        "wait",
        "pushbullet",
        "httpRequest",
        "aggregate",
        "gumroadTrigger",
        "filter",
        "splitInBatches",
        "n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-langchain.outputParserItemList",
        "gmailTrigger",
        "scheduleTrigger",
        "googleDocsTool",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.mcpClientTool",
        "removeDuplicates",
        "youTube",
        "if",
        "n8n-nodes-langchain.textClassifier",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.toolCode",
        "summarize",
        "respondToWebhook",
        "googleDocs",
        "set",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "localFileTrigger",
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.memoryPostgresChat",
        "sort",
        "n8n-nodes-langchain.informationExtractor",
        "convertToFile",
        "n8n-nodes-langchain.vectorStoreSupabase",
        "rssFeedRead",
        "dropbox",
        "n8n-nodes-langchain.openAi",
        "googleSheetsTrigger",
        "emailSendTool",
        "merge",
        "googleSheetsTool",
        "stickyNote",
        "postgresTool",
        "n8n-nodes-langchain.memoryRedisChat",
        "ftp",
        "renameKeys",
        "n8n-nodes-langchain.vectorStorePGVector",
        "redisTool",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "dateTime",
        "n8n-nodes-langchain.embeddingsGoogleGemini",
        "manualTrigger",
        "aiTransform",
        "executeCommand",
        "bitly",
        "n8n-nodes-langchain.lmChatOpenAi",
        "executeWorkflow",
        "twitter",
        "googleDriveTrigger",
        "calendlyTrigger",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.chainSummarization",
        "googleCalendar",
        "n8n-nodes-langchain.toolWolframAlpha",
        "n8n-nodes-langchain.vectorStorePinecone",
        "n8n-nodes-langchain.memoryManager",
        "webhook",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "splitOut",
        "code",
        "formTrigger"
      ],
      "primary_integrations": [
        "reddit",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.lmchatanthropic"
      ],
      "total_nodes": 113,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "@n8n/n8n-nodes-langchain.sentimentAnalysis",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "@n8n/n8n-nodes-langchain.memoryManager",
        "n8n-nodes-base.bitly",
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.googleDocs",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.pushbullet",
        "n8n-nodes-base.youTube",
        "@muench-dev/n8n-nodes-bluesky.bluesky",
        "@watzon/n8n-nodes-perplexity.perplexity",
        "n8n-nodes-elevenlabs.elevenLabs",
        "n8n-nodes-base.reddit",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolCode",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-base.postgresTool",
        "n8n-nodes-base.redisTool",
        "n8n-nodes-base.emailSendTool",
        "@n8n/n8n-nodes-langchain.toolSerpApi",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "@n8n/n8n-nodes-langchain.toolWolframAlpha",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleDocsTool",
        "n8n-nodes-base.googleSheetsTool",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.vectorStorePGVector",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "@n8n/n8n-nodes-langchain.memoryRedisChat",
        "@n8n/n8n-nodes-langchain.outputParserItemList",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.calendlyTrigger",
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.gumroadTrigger",
        "n8n-nodes-base.localFileTrigger",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.html",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.renameKeys",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.executionData",
        "n8n-nodes-base.ftp",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.aiTransform",
        "@n8n/n8n-nodes-langchain.mcpClientTool",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using reddit, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.lmchatanthropic, triggered via cron",
      "complexity_score": 206
    },
    {
      "original_filename": "2603_workflow_2603.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2603_workflow_2603.json",
      "workflow_name": "2603_workflow_2603",
      "suggested_filename": "data_2603_workflow_2603_automate_httprequest_form.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "form",
        "splitOut",
        "airtable",
        "code",
        "aggregate",
        "formTrigger",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "form",
        "airtable"
      ],
      "total_nodes": 34,
      "node_types": [
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.form",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.code",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.form",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, form, airtable, triggered via manual",
      "complexity_score": 43
    },
    {
      "original_filename": "AI agent chat.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI agent chat.json",
      "workflow_name": "AI agent chat",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.toolSerpApi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 5,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolSerpApi",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "wwvUsosYUyMfpGbB_ProspectLens_company_research.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/wwvUsosYUyMfpGbB_ProspectLens_company_research.json",
      "workflow_name": "ProspectLens company research",
      "suggested_filename": "data_prospectlens_automate_splitinbatches_httprequest.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "googleSheets",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "manual"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using splitinbatches, httprequest, manual, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "2518_workflow_2518.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2518_workflow_2518.json",
      "workflow_name": "2518_workflow_2518",
      "suggested_filename": "content_2518_workflow_2518_automate_splitinbatches_comparedatasets.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "stickyNote",
        "set",
        "compareDatasets",
        "spotify",
        "manualTrigger",
        "youTube"
      ],
      "primary_integrations": [
        "splitinbatches",
        "comparedatasets",
        "spotify"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.spotify"
      ],
      "business_description": "CONTENT workflow that automates data/processes using splitinbatches, comparedatasets, spotify, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "18_Gender_Inclusive_Language.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/18_Gender_Inclusive_Language.json",
      "workflow_name": "Gender Inclusive Language",
      "suggested_filename": "comm_gender_automate_webhook_mattermost_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "webhook",
        "noOp",
        "mattermost"
      ],
      "primary_integrations": [
        "webhook",
        "mattermost"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "COMM workflow that automates data/processes using webhook, mattermost, triggered via webhook",
      "complexity_score": 8
    },
    {
      "original_filename": "3634_workflow_3634.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3634_workflow_3634.json",
      "workflow_name": "3634_workflow_3634",
      "suggested_filename": "ai_3634_workflow_3634_automate_n8nnodeslangchainmcp_n8nnodeslangchainworkflow.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-langchain.toolWorkflow",
        "googleDrive",
        "extractFromFile",
        "switch",
        "n8n-nodes-langchain.openAi",
        "googleDriveTool",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.mcp",
        "n8n-nodes-langchain.workflow",
        "googledrive"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.googleDriveTool",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.mcp, n8n-nodes-langchain.workflow, googledrive, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "2294_workflow_2294.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2294_workflow_2294.json",
      "workflow_name": "2294_workflow_2294",
      "suggested_filename": "util_2294_workflow_2294_automate_readwritefile_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "readWriteFile",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "readwritefile",
        "httprequest",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using readwritefile, httprequest, manual, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "VtiRiIGkdeUhyh0N_GoogleSheets_MySQL_Integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/VtiRiIGkdeUhyh0N_GoogleSheets_MySQL_Integration.json",
      "workflow_name": "GoogleSheets MySQL Integration",
      "suggested_filename": "data_googlesheets_automate_comparedatasets_schedule_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "noOp",
        "if",
        "stickyNote",
        "set",
        "compareDatasets",
        "scheduleTrigger",
        "manualTrigger",
        "googleSheets",
        "mySql"
      ],
      "primary_integrations": [
        "comparedatasets",
        "schedule",
        "manual"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using comparedatasets, schedule, manual, triggered via cron",
      "complexity_score": 24
    },
    {
      "original_filename": "mNbQmMNEvpiZqASG_Format_US_Phone_Number.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/mNbQmMNEvpiZqASG_Format_US_Phone_Number.json",
      "workflow_name": "Format US Phone Number",
      "suggested_filename": "util_format_automate_executeworkflow.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "switch",
        "set",
        "executeWorkflowTrigger",
        "if"
      ],
      "primary_integrations": [
        "executeworkflow"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using executeworkflow, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "205_Get_analytics_of_a_website_and_store_it_Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/205_Get_analytics_of_a_website_and_store_it_Airtable.json",
      "workflow_name": "Get analytics of a website and store it Airtable",
      "suggested_filename": "ai_analytics_ai_process_googleanalytics_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "googleAnalytics",
        "manualTrigger",
        "airtable"
      ],
      "primary_integrations": [
        "googleanalytics",
        "manual",
        "airtable"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable"
      ],
      "business_description": "AI workflow that ai_processs data/processes using googleanalytics, manual, airtable, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "6sBxOuYYcJjIBmVJ_Automating_Betting_Data_Retrieval_with_TheOddsAPI_and_Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/6sBxOuYYcJjIBmVJ_Automating_Betting_Data_Retrieval_with_TheOddsAPI_and_Airtable.json",
      "workflow_name": "Automating Betting Data Retrieval with TheOddsAPI and Airtable",
      "suggested_filename": "ai_automating_ai_process_httprequest_schedule_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "airtable"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "airtable"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.airtable"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, schedule, airtable, triggered via cron",
      "complexity_score": 15
    },
    {
      "original_filename": "Send Google analytics data to A.I. to analyze then save results in Baserow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Send Google analytics data to A.I. to analyze then save results in Baserow.json",
      "workflow_name": "Google analytics template",
      "suggested_filename": "analytics_google_automate_googleanalytics_httprequest_cron.json",
      "category": "ANALYTICS",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "googleAnalytics",
        "httpRequest",
        "scheduleTrigger",
        "baserow",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "googleanalytics",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.baserow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "ANALYTICS workflow that automates data/processes using googleanalytics, httprequest, schedule, triggered via cron",
      "complexity_score": 29
    },
    {
      "original_filename": "Automated AI image analysis and response via Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Automated AI image analysis and response via Telegram.json",
      "workflow_name": "Automated AI image analysis and response via Telegram",
      "suggested_filename": "ai_automated_ai_process_telegram_telegram.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "stickyNote",
        "telegramTrigger",
        "telegram",
        "switch",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "telegram",
        "telegram",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.switch"
      ],
      "business_description": "AI workflow that ai_processs data/processes using telegram, telegram, n8n-nodes-langchain.openai, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "2580_workflow_2580.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2580_workflow_2580.json",
      "workflow_name": "2580_workflow_2580",
      "suggested_filename": "ai_2580_workflow_2580_automate_n8nnodeslangchainchainllm_gmail.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "if",
        "gmail",
        "set",
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "form",
        "googleCalendar",
        "n8n-nodes-langchain.lmChatOpenAi",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "gmail",
        "n8n-nodes-langchain.textclassifier"
      ],
      "total_nodes": 25,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.set",
        "n8n-nodes-base.form",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.if",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.textClassifier"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, gmail, n8n-nodes-langchain.textclassifier, triggered via manual",
      "complexity_score": 37
    },
    {
      "original_filename": "3656_workflow_3656.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3656_workflow_3656.json",
      "workflow_name": "3656_workflow_3656",
      "suggested_filename": "ai_3656_workflow_3656_automate_n8nnodeslangchainmemorybufferwindow_googletasks.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "googleTasksTool",
        "switch",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegramTrigger",
        "n8n-nodes-langchain.mcpClientTool",
        "n8n-nodes-langchain.agent",
        "telegram",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "googletasks",
        "n8n-nodes-langchain.mcp"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.mcpClientTool",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleTasksTool",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.googleTasksTool",
        "n8n-nodes-base.googleTasksTool",
        "n8n-nodes-base.googleTasksTool",
        "n8n-nodes-base.googleTasksTool",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, googletasks, n8n-nodes-langchain.mcp, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "XnGZZfT5u0Cw1X3p_Attachments_Gmail_to_drive_and_google_sheets.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/XnGZZfT5u0Cw1X3p_Attachments_Gmail_to_drive_and_google_sheets.json",
      "workflow_name": "Attachments Gmail to drive and google sheets",
      "suggested_filename": "ai_attachments_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparse.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "gmailTrigger",
        "stickyNote",
        "set",
        "gmail",
        "httpRequest",
        "n8n-nodes-langchain.lmOpenAi",
        "if",
        "googleDrive",
        "extractFromFile",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.lmOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, gmail, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "158_Create,_update,_and_get_an_incident_on_PagerDuty.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/158_Create,_update,_and_get_an_incident_on_PagerDuty.json",
      "workflow_name": "Create, update, and get an incident on PagerDuty",
      "suggested_filename": "util_create_create_pagerduty_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "pagerDuty",
        "manualTrigger"
      ],
      "primary_integrations": [
        "pagerduty",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.pagerDuty",
        "n8n-nodes-base.pagerDuty",
        "n8n-nodes-base.pagerDuty"
      ],
      "business_description": "UTIL workflow that creates data/processes using pagerduty, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "ES4TSw9HacxoNhLZ_AI_CV_Screening_Workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ES4TSw9HacxoNhLZ_AI_CV_Screening_Workflow.json",
      "workflow_name": "AI CV Screening Workflow",
      "suggested_filename": "ai_screening_ai_process_n8nnodeslangchainchainllm_gmail.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "gmail",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "extractFromFile",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "gmail",
        "n8n-nodes-langchain.lmchatgooglegemini"
      ],
      "total_nodes": 7,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, gmail, n8n-nodes-langchain.lmchatgooglegemini, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "Get Airtable data via AI and Obsidian Notes.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Get Airtable data via AI and Obsidian Notes.json",
      "workflow_name": "Get Airtable data in Obsidian Notes",
      "suggested_filename": "ai_airtable_ai_process_airtable_webhook_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "airtableTool",
        "stickyNote",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "airtable",
        "webhook",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.airtableTool",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "AI workflow that ai_processs data/processes using airtable, webhook, n8n-nodes-langchain.lmchatopenai, triggered via webhook",
      "complexity_score": 13
    },
    {
      "original_filename": "Use AI to organize your Todoist Inbox.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Use AI to organize your Todoist Inbox.json",
      "workflow_name": "Use AI to organize your Todoist Inbox",
      "suggested_filename": "ai_organize_ai_process_schedule_todoist_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "scheduleTrigger",
        "todoist",
        "n8n-nodes-langchain.openAi",
        "filter"
      ],
      "primary_integrations": [
        "schedule",
        "todoist",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.filter"
      ],
      "business_description": "AI workflow that ai_processs data/processes using schedule, todoist, n8n-nodes-langchain.openai, triggered via cron",
      "complexity_score": 18
    },
    {
      "original_filename": "2245_workflow_2245.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2245_workflow_2245.json",
      "workflow_name": "2245_workflow_2245",
      "suggested_filename": "util_2245_workflow_2245_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "httpRequest",
        "webhook",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 11
    },
    {
      "original_filename": "30_Receive_updates_when_a_subscriber_is_added_to_a_group_and_strore_the_information_in_Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/30_Receive_updates_when_a_subscriber_is_added_to_a_group_and_strore_the_information_in_Airtable.json",
      "workflow_name": "Receive updates when a subscriber is added to a group and strore the information in Airtable",
      "suggested_filename": "ai_receive_ai_process_mailerlite_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "mailerLiteTrigger",
        "manualTrigger",
        "airtable"
      ],
      "primary_integrations": [
        "mailerlite",
        "manual",
        "airtable"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.mailerLiteTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable"
      ],
      "business_description": "AI workflow that ai_processs data/processes using mailerlite, manual, airtable, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "2749_workflow_2749.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2749_workflow_2749.json",
      "workflow_name": "2749_workflow_2749",
      "suggested_filename": "ai_2749_workflow_2749_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "merge",
        "n8n-nodes-langchain.outputParserStructured",
        "gmailTrigger",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "if",
        "httpRequest",
        "n8n-nodes-langchain.toolHttpRequest",
        "webhook",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 35,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.outputparserstructured, gmail, triggered via webhook",
      "complexity_score": 50
    },
    {
      "original_filename": "908_workflow_908.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/908_workflow_908.json",
      "workflow_name": "908_workflow_908",
      "suggested_filename": "util_908_workflow_908_automate_httprequest_compression.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "compression",
        "dropbox",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "compression",
        "dropbox"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.dropbox",
        "n8n-nodes-base.compression",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.manualTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, compression, dropbox, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "1GOrjyc9mtZCMvCr_Structured_Data_Extract,_Data_Mining_with_Bright_Data_&_Google_Gemini.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1GOrjyc9mtZCMvCr_Structured_Data_Extract,_Data_Mining_with_Bright_Data_&_Google_Gemini.json",
      "workflow_name": "Structured Data Extract, Data Mining with Bright Data & Google Gemini",
      "suggested_filename": "ai_structured_extract_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "httpRequest",
        "readWriteFile",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.informationExtractor",
        "function"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "readwritefile"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.function",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.function"
      ],
      "business_description": "AI workflow that extracts data/processes using n8n-nodes-langchain.chainllm, httprequest, readwritefile, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "2397_workflow_2397.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2397_workflow_2397.json",
      "workflow_name": "2397_workflow_2397",
      "suggested_filename": "ai_2397_workflow_2397_automate_n8nnodeslangchainmemorybufferwindow_slack_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "slack",
        "if",
        "noOp",
        "stickyNote",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "slack",
        "webhook"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, slack, webhook, triggered via webhook",
      "complexity_score": 30
    },
    {
      "original_filename": "7fdJOvYNILCr24fH_Read_sitemap_and_filter_URLs.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/7fdJOvYNILCr24fH_Read_sitemap_and_filter_URLs.json",
      "workflow_name": "Read sitemap and filter URLs",
      "suggested_filename": "util_read_read_httprequest_xml.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "xml",
        "manualTrigger",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "xml",
        "manual"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that reads data/processes using httprequest, xml, manual, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "2324_workflow_2324.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2324_workflow_2324.json",
      "workflow_name": "2324_workflow_2324",
      "suggested_filename": "ai_2324_workflow_2324_automate_splitinbatches_n8nnodeslangchainoutputparserstruc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.toolSerpApi",
        "n8n-nodes-langchain.agent",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.outputparserstructured",
        "schedule"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolSerpApi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.outputparserstructured, schedule, triggered via cron",
      "complexity_score": 34
    },
    {
      "original_filename": "29_Receive_updates_when_a_subscriber_unsubscribes_in_Customer.io.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/29_Receive_updates_when_a_subscriber_unsubscribes_in_Customer.io.json",
      "workflow_name": "Receive updates when a subscriber unsubscribes in Customer.io",
      "suggested_filename": "biz_receive_update_customerio.json",
      "category": "BIZ",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "customerIoTrigger"
      ],
      "primary_integrations": [
        "customerio"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.customerIoTrigger"
      ],
      "business_description": "BIZ workflow that updates data/processes using customerio, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "cQAILffOajE9n2cf_Generate_Leads_with_Google_Maps_-_AlexK1919.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/cQAILffOajE9n2cf_Generate_Leads_with_Google_Maps_-_AlexK1919.json",
      "workflow_name": "Generate Leads with Google Maps - AlexK1919",
      "suggested_filename": "biz_generate_generate_splitinbatches_httprequest_cron.json",
      "category": "BIZ",
      "business_function": "generate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "if",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "stopAndError",
        "scheduleTrigger",
        "splitOut",
        "manualTrigger",
        "limit",
        "code",
        "googleSheets",
        "removeDuplicates",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "stopanderror"
      ],
      "total_nodes": 42,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.code",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.code",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "BIZ workflow that generates data/processes using splitinbatches, httprequest, stopanderror, triggered via cron",
      "complexity_score": 58
    },
    {
      "original_filename": "Zrd98BnbmN1Px9an_Youtube_Searcher.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Zrd98BnbmN1Px9an_Youtube_Searcher.json",
      "workflow_name": "Youtube Searcher",
      "suggested_filename": "data_youtube_automate_splitinbatches_postgres.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "postgres",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "code",
        "executeWorkflowTrigger",
        "youTube"
      ],
      "primary_integrations": [
        "splitinbatches",
        "postgres",
        "httprequest"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.if",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgres"
      ],
      "business_description": "DATA workflow that automates data/processes using splitinbatches, postgres, httprequest, triggered via manual",
      "complexity_score": 31
    },
    {
      "original_filename": "Dsp_agent (1).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Dsp_agent (1).json",
      "workflow_name": "Dsp agent",
      "suggested_filename": "ai_agent_automate_n8nnodeslangchainmemorybufferwindow_airtable.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "airtableTool",
        "n8n-nodes-langchain.toolCalculator",
        "set",
        "aggregate",
        "n8n-nodes-langchain.toolWikipedia",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "telegram",
        "n8n-nodes-langchain.agent",
        "switch",
        "airtable",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "airtable",
        "n8n-nodes-langchain.calculator"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.airtableTool",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, airtable, n8n-nodes-langchain.calculator, triggered via manual",
      "complexity_score": 34
    },
    {
      "original_filename": "5kYHogzDGeo21MxE_Automate_Figma_Versioning_and_Jira_Updates_with_n8n_Webhook_Integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/5kYHogzDGeo21MxE_Automate_Figma_Versioning_and_Jira_Updates_with_n8n_Webhook_Integration.json",
      "workflow_name": "Automate Figma Versioning and Jira Updates with n8n Webhook Integration",
      "suggested_filename": "util_automate_update_jira_figma.json",
      "category": "UTIL",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "jira",
        "figmaTrigger"
      ],
      "primary_integrations": [
        "jira",
        "figma"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.figmaTrigger"
      ],
      "business_description": "UTIL workflow that updates data/processes using jira, figma, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "WwEFqNK4YP6UJcg2_Auto_Knowledge_Base_Article_Generator.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/WwEFqNK4YP6UJcg2_Auto_Knowledge_Base_Article_Generator.json",
      "workflow_name": "Auto Knowledge Base Article Generator",
      "suggested_filename": "ai_auto_automate_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "if",
        "noOp",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "code",
        "function",
        "executeWorkflow"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.function",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 36
    },
    {
      "original_filename": "Send daily translated Calvin and Hobbes Comics to Discord.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Send daily translated Calvin and Hobbes Comics to Discord.json",
      "workflow_name": "Send daily translated Calvin and Hobbes Comics to Discord",
      "suggested_filename": "ai_send_ai_process_httprequest_schedule_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-langchain.openAi",
        "discord"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.discord",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, schedule, n8n-nodes-langchain.lmchatopenai, triggered via cron",
      "complexity_score": 16
    },
    {
      "original_filename": "H95uJY2gjSOsxRps_Extract_Amazon_Best_Seller_Electronic_Information_with_Bright_Data_and_Google_Gemini.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/H95uJY2gjSOsxRps_Extract_Amazon_Best_Seller_Electronic_Information_with_Bright_Data_and_Google_Gemini.json",
      "workflow_name": "Extract Amazon Best Seller Electronic Information with Bright Data and Google Gemini",
      "suggested_filename": "ai_extract_extract_httprequest_n8nnodeslangchaininformationextractor.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.informationExtractor",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.informationextractor",
        "manual"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that extracts data/processes using httprequest, n8n-nodes-langchain.informationextractor, manual, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "Send Google analytics data to A.I. to analyze then save results in BaserowSend Google analytics data to A.I. to analyze then save results in Baserow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Send Google analytics data to A.I. to analyze then save results in BaserowSend Google analytics data to A.I. to analyze then save results in Baserow.json",
      "workflow_name": "Google analytics template",
      "suggested_filename": "analytics_google_automate_googleanalytics_httprequest_cron.json",
      "category": "ANALYTICS",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "googleAnalytics",
        "httpRequest",
        "scheduleTrigger",
        "baserow",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "googleanalytics",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.baserow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "ANALYTICS workflow that automates data/processes using googleanalytics, httprequest, schedule, triggered via cron",
      "complexity_score": 29
    },
    {
      "original_filename": "538_workflow_538.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/538_workflow_538.json",
      "workflow_name": "538_workflow_538",
      "suggested_filename": "util_538_workflow_538_automate_eventbrite.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "eventbriteTrigger"
      ],
      "primary_integrations": [
        "eventbrite"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.eventbriteTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using eventbrite, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "2346_workflow_2346.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2346_workflow_2346.json",
      "workflow_name": "2346_workflow_2346",
      "suggested_filename": "ai_2346_workflow_2346_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "if",
        "noOp",
        "stickyNote",
        "wait",
        "set",
        "n8n-nodes-langchain.memoryManager",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "twilioTrigger",
        "twilio",
        "redis"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.memorymanager",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 18,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.twilioTrigger",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.twilio",
        "n8n-nodes-base.wait",
        "@n8n/n8n-nodes-langchain.memoryManager",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.memorymanager, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "1112_workflow_1112.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1112_workflow_1112.json",
      "workflow_name": "1112_workflow_1112",
      "suggested_filename": "util_1112_workflow_1112_automate_uptimerobot.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "uptimeRobot"
      ],
      "primary_integrations": [
        "uptimerobot"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.uptimeRobot",
        "n8n-nodes-base.uptimeRobot",
        "n8n-nodes-base.uptimeRobot"
      ],
      "business_description": "UTIL workflow that automates data/processes using uptimerobot, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "BXfxO6faULfsy2JN_Scrape_Today's_Github_Trend_13_Top_Repositories.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/BXfxO6faULfsy2JN_Scrape_Today's_Github_Trend_13_Top_Repositories.json",
      "workflow_name": "Scrape Today's Github Trend 13 Top Repositories",
      "suggested_filename": "util_scrape_extract_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "html"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "html"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.html",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.html",
        "n8n-nodes-base.html"
      ],
      "business_description": "UTIL workflow that extracts data/processes using httprequest, manual, html, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "Microsoft Outlook AI Email Assistant with contact support from Monday and Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Microsoft Outlook AI Email Assistant with contact support from Monday and Airtable.json",
      "workflow_name": "Microsoft Outlook AI Email Assistant",
      "suggested_filename": "ai_microsoft_ai_process_splitinbatches_n8nnodeslangchainoutputparserstructured_c.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "set",
        "microsoftOutlook",
        "markdown",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "airtable",
        "mondayCom"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.outputparserstructured",
        "microsoftoutlook"
      ],
      "total_nodes": 28,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.microsoftOutlook",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.if",
        "n8n-nodes-base.microsoftOutlook",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.mondayCom",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, n8n-nodes-langchain.outputparserstructured, microsoftoutlook, triggered via cron",
      "complexity_score": 42
    },
    {
      "original_filename": "kZarev2IMUaKHhCI_Auto_-_Resume_Disabled_Workflows.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/kZarev2IMUaKHhCI_Auto_-_Resume_Disabled_Workflows.json",
      "workflow_name": "Auto - Resume Disabled Workflows",
      "suggested_filename": "util_auto_automate_schedule_n8n_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "scheduleTrigger",
        "n8n",
        "manualTrigger",
        "filter"
      ],
      "primary_integrations": [
        "schedule",
        "n8n",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.n8n"
      ],
      "business_description": "UTIL workflow that automates data/processes using schedule, n8n, manual, triggered via cron",
      "complexity_score": 9
    },
    {
      "original_filename": "Notion to Pinecone Vector Store Integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Notion to Pinecone Vector Store Integration.json",
      "workflow_name": "Prod: Notion to Vector Store - Dimension 768",
      "suggested_filename": "ai_prod_automate_n8nnodeslangchaintextsplittertokensplitter_n8nnodeslangchainemb.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-langchain.embeddingsGoogleGemini",
        "notion",
        "notionTrigger",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "summarize",
        "n8n-nodes-langchain.vectorStorePinecone",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.textsplittertokensplitter",
        "n8n-nodes-langchain.embeddingsgooglegemini",
        "notion"
      ],
      "total_nodes": 8,
      "node_types": [
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.notionTrigger",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.summarize",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.textsplittertokensplitter, n8n-nodes-langchain.embeddingsgooglegemini, notion, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "1872_workflow_1872.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1872_workflow_1872.json",
      "workflow_name": "1872_workflow_1872",
      "suggested_filename": "data_1872_workflow_1872_automate_spreadsheetfile_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "stickyNote",
        "set",
        "manualTrigger",
        "mySql"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "manual",
        "mysql"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using spreadsheetfile, manual, mysql, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "2064_[n8n]_Advanced_URL_Parsing_and_Shortening_Workflow_-_Switchy.io_Integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2064_[n8n]_Advanced_URL_Parsing_and_Shortening_Workflow_-_Switchy.io_Integration.json",
      "workflow_name": "[n8n] Advanced URL Parsing and Shortening Workflow - Switchy.io Integration",
      "suggested_filename": "ops_advanced_automate_splitinbatches_respondtowebhook.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "respondToWebhook",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "stopAndError",
        "github",
        "aggregate",
        "convertToFile",
        "html",
        "formTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "respondtowebhook",
        "httprequest"
      ],
      "total_nodes": 56,
      "node_types": [
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.html",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.github",
        "n8n-nodes-base.github",
        "n8n-nodes-base.github",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.set",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.html",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "OPS workflow that automates data/processes using splitinbatches, respondtowebhook, httprequest, triggered via manual",
      "complexity_score": 68
    },
    {
      "original_filename": "Handling Job Application Submissions with AI and n8n Forms.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Handling Job Application Submissions with AI and n8n Forms.json",
      "workflow_name": "Handling Job Application Submissions with AI and n8n Forms",
      "suggested_filename": "ai_handling_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserst.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "httpRequest",
        "form",
        "n8n-nodes-langchain.lmChatOpenAi",
        "airtable",
        "extractFromFile",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.textclassifier"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.airtable",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.form",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.form"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.textclassifier, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "2014_workflow_2014.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2014_workflow_2014.json",
      "workflow_name": "2014_workflow_2014",
      "suggested_filename": "data_2014_workflow_2014_automate_httprequest_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "googlesheets"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, manual, googlesheets, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "Configure your own Image Creation API Using OpenAI DALLE-3.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Configure your own Image Creation API Using OpenAI DALLE-3.json",
      "workflow_name": "Image Generation API",
      "suggested_filename": "ai_image_automate_webhook_n8nnodeslangchainopenai_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "n8n-nodes-langchain.openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "n8n-nodes-langchain.openai",
        "respondtowebhook"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using webhook, n8n-nodes-langchain.openai, respondtowebhook, triggered via webhook",
      "complexity_score": 11
    },
    {
      "original_filename": "2700_workflow_2700.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2700_workflow_2700.json",
      "workflow_name": "2700_workflow_2700",
      "suggested_filename": "ai_2700_workflow_2700_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "httpRequest",
        "aggregate",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.toolCode",
        "switch",
        "airtable",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 41,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolCode",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 56
    },
    {
      "original_filename": "2076_workflow_2076.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2076_workflow_2076.json",
      "workflow_name": "2076_workflow_2076",
      "suggested_filename": "data_2076_workflow_2076_automate_itemlists_httprequest_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "itemLists",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "itemlists",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using itemlists, httprequest, schedule, triggered via cron",
      "complexity_score": 21
    },
    {
      "original_filename": "CV Screening with OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/CV Screening with OpenAI.json",
      "workflow_name": "CV Screening with OpenAI",
      "suggested_filename": "ai_screening_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "extractFromFile"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "extractfromfile"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, manual, extractfromfile, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "1554_workflow_1554.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1554_workflow_1554.json",
      "workflow_name": "1554_workflow_1554",
      "suggested_filename": "comm_1554_workflow_1554_automate_splitinbatches_rssfeedread_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "if",
        "rssFeedRead",
        "telegram",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "splitinbatches",
        "rssfeedread",
        "telegram"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.function",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.function",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.function"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, rssfeedread, telegram, triggered via cron",
      "complexity_score": 17
    },
    {
      "original_filename": "1222_workflow_1222.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1222_workflow_1222.json",
      "workflow_name": "1222_workflow_1222",
      "suggested_filename": "ops_1222_workflow_1222_automate_httprequest_github_cron.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "httpRequest",
        "github",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "httprequest",
        "github",
        "cron"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.github",
        "n8n-nodes-base.github",
        "n8n-nodes-base.function",
        "n8n-nodes-base.github",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.function",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.merge"
      ],
      "business_description": "OPS workflow that automates data/processes using httprequest, github, cron, triggered via cron",
      "complexity_score": 16
    },
    {
      "original_filename": "1810_workflow_1810.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1810_workflow_1810.json",
      "workflow_name": "1810_workflow_1810",
      "suggested_filename": "data_1810_workflow_1810_automate_itemlists_httprequest.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "itemLists",
        "stickyNote",
        "set",
        "httpRequest",
        "xml",
        "manualTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "itemlists",
        "httprequest",
        "xml"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using itemlists, httprequest, xml, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "fSG22q8TeUtsGUGD_📄✨_Easy_Wordpress_Content_Creation_from_PDF_Document_+_Human_In_The_Loop_with_Gmail_Approval.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/fSG22q8TeUtsGUGD_📄✨_Easy_Wordpress_Content_Creation_from_PDF_Document_+_Human_In_The_Loop_with_Gmail_Approval.json",
      "workflow_name": "📄✨ Easy Wordpress Content Creation from PDF Document + Human In The Loop with Gmail Approval",
      "suggested_filename": "ai_easy_ai_process_wordpress_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "wordpress",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "stickyNote",
        "gmail",
        "httpRequest",
        "markdown",
        "code",
        "n8n-nodes-langchain.lmChatOpenAi",
        "extractFromFile",
        "telegram",
        "formTrigger"
      ],
      "primary_integrations": [
        "wordpress",
        "n8n-nodes-langchain.chainllm",
        "gmail"
      ],
      "total_nodes": 27,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using wordpress, n8n-nodes-langchain.chainllm, gmail, triggered via manual",
      "complexity_score": 40
    },
    {
      "original_filename": "2221_[n8n]_YouTube_Channel_Advanced_RSS_Feeds_Generator.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2221_[n8n]_YouTube_Channel_Advanced_RSS_Feeds_Generator.json",
      "workflow_name": "[n8n] YouTube Channel Advanced RSS Feeds Generator",
      "suggested_filename": "util_youtube_automate_httprequest_form.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "switch",
        "stickyNote",
        "set",
        "httpRequest",
        "code",
        "aggregate",
        "formTrigger",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "form",
        "respondtowebhook"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, form, respondtowebhook, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "1747_workflow_1747.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1747_workflow_1747.json",
      "workflow_name": "1747_workflow_1747",
      "suggested_filename": "util_1747_workflow_1747_automate_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "manual"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "2513_workflow_2513.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2513_workflow_2513.json",
      "workflow_name": "2513_workflow_2513",
      "suggested_filename": "ai_2513_workflow_2513_automate_httprequest_n8nnodeslangchainopenai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, n8n-nodes-langchain.openai, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "584_workflow_584.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/584_workflow_584.json",
      "workflow_name": "584_workflow_584",
      "suggested_filename": "util_584_workflow_584_automate_emailsend_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "emailSend",
        "manualTrigger"
      ],
      "primary_integrations": [
        "emailsend",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.emailSend"
      ],
      "business_description": "UTIL workflow that automates data/processes using emailsend, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2857_workflow_2857.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2857_workflow_2857.json",
      "workflow_name": "2857_workflow_2857",
      "suggested_filename": "util_2857_workflow_2857_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "manualTrigger",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "manual"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, manual, triggered via webhook",
      "complexity_score": 30
    },
    {
      "original_filename": "H9uAqvTaO7nTFdsH_Linkedin_Chrome_Extensions.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/H9uAqvTaO7nTFdsH_Linkedin_Chrome_Extensions.json",
      "workflow_name": "Linkedin Chrome Extensions",
      "suggested_filename": "data_linkedin_automate_splitinbatches_httprequest.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "merge",
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "limit",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "manual"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using splitinbatches, httprequest, manual, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "6yNJxDjV9rSiOkj9_AI_Agent_with_charts_capabilities_using_OpenAI_Structured_Output.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/6yNJxDjV9rSiOkj9_AI_Agent_with_charts_capabilities_using_OpenAI_Structured_Output.json",
      "workflow_name": "AI Agent with charts capabilities using OpenAI Structured Output",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 11,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chatTrigger"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "bpq5aoogWibWq94t_puq-docker-influxdb-deploy.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/bpq5aoogWibWq94t_puq-docker-influxdb-deploy.json",
      "workflow_name": "puq-docker-influxdb-deploy",
      "suggested_filename": "ops_docker_automate_ssh_webhook_webhook.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "ssh",
        "stickyNote",
        "set",
        "webhook",
        "code",
        "switch",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "ssh",
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 33,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.ssh",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set"
      ],
      "business_description": "OPS workflow that automates data/processes using ssh, webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 41
    },
    {
      "original_filename": "2886_workflow_2886.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2886_workflow_2886.json",
      "workflow_name": "2886_workflow_2886",
      "suggested_filename": "util_2886_workflow_2886_automate_splitinbatches_schedule_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "scheduleTrigger",
        "manualTrigger",
        "googleDrive",
        "n8n",
        "convertToFile",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "schedule",
        "manual"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, schedule, manual, triggered via cron",
      "complexity_score": 17
    },
    {
      "original_filename": "LINE Assistant with Google Calendar and Gmail Integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/LINE Assistant with Google Calendar and Gmail Integration.json",
      "workflow_name": "LINE Assistant with Google Calendar and Gmail Integration",
      "suggested_filename": "ai_line_ai_process_n8nnodeslangchainmemorybufferwindow_httprequest_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "set",
        "httpRequest",
        "googleCalendarTool",
        "n8n-nodes-langchain.toolWikipedia",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "switch",
        "gmailTool",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "httprequest",
        "googlecalendar"
      ],
      "total_nodes": 14,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.gmailTool"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, httprequest, googlecalendar, triggered via webhook",
      "complexity_score": 25
    },
    {
      "original_filename": "2835_workflow_2835.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2835_workflow_2835.json",
      "workflow_name": "2835_workflow_2835",
      "suggested_filename": "util_2835_workflow_2835_automate_ssh_emailsend_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "ssh",
        "emailSend",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "sort",
        "splitOut",
        "code",
        "filter"
      ],
      "primary_integrations": [
        "ssh",
        "emailsend",
        "httprequest"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.ssh"
      ],
      "business_description": "UTIL workflow that automates data/processes using ssh, emailsend, httprequest, triggered via cron",
      "complexity_score": 25
    },
    {
      "original_filename": "2571_workflow_2571.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2571_workflow_2571.json",
      "workflow_name": "2571_workflow_2571",
      "suggested_filename": "util_2571_workflow_2571_automate_datetime_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "dateTime",
        "stickyNote",
        "httpRequest",
        "rssFeedReadTrigger"
      ],
      "primary_integrations": [
        "datetime",
        "httprequest",
        "rssfeedread"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.rssFeedReadTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using datetime, httprequest, rssfeedread, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "AI-Powered Children_s Arabic Storytelling on Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI-Powered Children_s Arabic Storytelling on Telegram.json",
      "workflow_name": "AI-Powered Children_s Arabic Storytelling on Telegram",
      "suggested_filename": "ai_powered_ai_process_n8nnodeslangchainchainsummarization_schedule_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chainSummarization",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.openAi",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainsummarization",
        "schedule",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 15,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.chainSummarization"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainsummarization, schedule, n8n-nodes-langchain.lmchatopenai, triggered via cron",
      "complexity_score": 22
    },
    {
      "original_filename": "2155_workflow_2155.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2155_workflow_2155.json",
      "workflow_name": "2155_workflow_2155",
      "suggested_filename": "util_2155_workflow_2155_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "splitOut",
        "xml",
        "aggregate",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "xml"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.set",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, xml, triggered via webhook",
      "complexity_score": 17
    },
    {
      "original_filename": "1933_workflow_1933.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1933_workflow_1933.json",
      "workflow_name": "1933_workflow_1933",
      "suggested_filename": "data_1933_workflow_1933_automate_spreadsheetfile_httprequest.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "httprequest",
        "manual"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that automates data/processes using spreadsheetfile, httprequest, manual, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "628_workflow_628.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/628_workflow_628.json",
      "workflow_name": "628_workflow_628",
      "suggested_filename": "biz_628_workflow_628_automate_hubspot.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "hubspotTrigger"
      ],
      "primary_integrations": [
        "hubspot"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.hubspotTrigger"
      ],
      "business_description": "BIZ workflow that automates data/processes using hubspot, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "3546_workflow_3546.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3546_workflow_3546.json",
      "workflow_name": "3546_workflow_3546",
      "suggested_filename": "ai_3546_workflow_3546_automate_n8nnodeslangchainoutputparserstructured_gmail.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserStructured",
        "gmailTrigger",
        "stickyNote",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "extractFromFile",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "gmail",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 7,
      "node_types": [
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.gmailTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserstructured, gmail, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "1980_workflow_1980.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1980_workflow_1980.json",
      "workflow_name": "1980_workflow_1980",
      "suggested_filename": "ai_1980_workflow_1980_automate_n8nnodeslangchainchat_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.lmOpenHuggingFaceInference"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.lmopenhuggingfaceinference"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmOpenHuggingFaceInference"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.lmopenhuggingfaceinference, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "681_workflow_681.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/681_workflow_681.json",
      "workflow_name": "681_workflow_681",
      "suggested_filename": "content_681_workflow_681_automate_httprequest_manual.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "manualTrigger",
        "linkedIn"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "linkedin"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.linkedIn"
      ],
      "business_description": "CONTENT workflow that automates data/processes using httprequest, manual, linkedin, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2538_workflow_2538.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2538_workflow_2538.json",
      "workflow_name": "2538_workflow_2538",
      "suggested_filename": "util_2538_workflow_2538_automate_httprequest_schedule_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "noOp",
        "if",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "webhook",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "webhook"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, schedule, webhook, triggered via webhook",
      "complexity_score": 16
    },
    {
      "original_filename": "1951_workflow_1951.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1951_workflow_1951.json",
      "workflow_name": "1951_workflow_1951",
      "suggested_filename": "ai_1951_workflow_1951_automate_httprequest_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "splitOut",
        "limit",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "html",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.chainsummarization",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.html",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.html"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, n8n-nodes-langchain.chainsummarization, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "1_Google_Sheet_to_Mailchimp.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_Google_Sheet_to_Mailchimp.json",
      "workflow_name": "Google Sheet to Mailchimp",
      "suggested_filename": "ai_google_ai_process_googlesheets_mailchimp.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "mailchimp",
        "interval",
        "manualTrigger"
      ],
      "primary_integrations": [
        "googlesheets",
        "mailchimp",
        "interval"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.mailchimp",
        "n8n-nodes-base.interval"
      ],
      "business_description": "AI workflow that ai_processs data/processes using googlesheets, mailchimp, interval, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "1363_workflow_1363.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1363_workflow_1363.json",
      "workflow_name": "1363_workflow_1363",
      "suggested_filename": "data_1363_workflow_1363_automate_postgres_httprequest_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "postgres",
        "merge",
        "httpRequest",
        "webhook",
        "function",
        "mySql"
      ],
      "primary_integrations": [
        "postgres",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.function",
        "n8n-nodes-base.merge"
      ],
      "business_description": "DATA workflow that automates data/processes using postgres, httprequest, webhook, triggered via webhook",
      "complexity_score": 12
    },
    {
      "original_filename": "2137_workflow_2137.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2137_workflow_2137.json",
      "workflow_name": "2137_workflow_2137",
      "suggested_filename": "comm_2137_workflow_2137_automate_gmail_schedule_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "gmail",
        "set",
        "stickyNote",
        "scheduleTrigger",
        "code",
        "googleSheets",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "gmail",
        "schedule",
        "googlesheets"
      ],
      "total_nodes": 32,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.code",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, schedule, googlesheets, triggered via cron",
      "complexity_score": 42
    },
    {
      "original_filename": "1078_workflow_1078.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1078_workflow_1078.json",
      "workflow_name": "1078_workflow_1078",
      "suggested_filename": "comm_1078_workflow_1078_automate_gmail_googledrive.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "gmail",
        "set",
        "googleDrive"
      ],
      "primary_integrations": [
        "gmail",
        "googledrive"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.set"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, googledrive, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "CvXjXG4SFnN0ioJQ_AutoQoutesV2_template.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/CvXjXG4SFnN0ioJQ_AutoQoutesV2_template.json",
      "workflow_name": "AutoQoutesV2_template",
      "suggested_filename": "data_autoqoutesv2_template_automate_httprequest_executecommand.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "stickyNote",
        "httpRequest",
        "executeCommand",
        "readWriteFile",
        "manualTrigger",
        "googleDrive",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "executecommand",
        "readwritefile"
      ],
      "total_nodes": 28,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.code",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, executecommand, readwritefile, triggered via manual",
      "complexity_score": 37
    },
    {
      "original_filename": "6_ETL_pipeline.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/6_ETL_pipeline.json",
      "workflow_name": "ETL pipeline",
      "suggested_filename": "comm_pipeline_automate_postgres_slack_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "postgres",
        "slack",
        "googleCloudNaturalLanguage",
        "if",
        "noOp",
        "set",
        "mongoDb",
        "cron",
        "twitter"
      ],
      "primary_integrations": [
        "postgres",
        "slack",
        "googlecloudnaturallanguage"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.mongoDb",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.googleCloudNaturalLanguage",
        "n8n-nodes-base.set",
        "n8n-nodes-base.cron"
      ],
      "business_description": "COMM workflow that automates data/processes using postgres, slack, googlecloudnaturallanguage, triggered via cron",
      "complexity_score": 18
    },
    {
      "original_filename": "2488_workflow_2488.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2488_workflow_2488.json",
      "workflow_name": "2488_workflow_2488",
      "suggested_filename": "comm_2488_workflow_2488_automate_slack_notion_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "stickyNote",
        "set",
        "notion",
        "cron",
        "switch",
        "filter"
      ],
      "primary_integrations": [
        "slack",
        "notion",
        "cron"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.filter",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, notion, cron, triggered via cron",
      "complexity_score": 31
    },
    {
      "original_filename": "3028_workflow_3028.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3028_workflow_3028.json",
      "workflow_name": "3028_workflow_3028",
      "suggested_filename": "ai_3028_workflow_3028_automate_wordpress_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wordpress",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger"
      ],
      "primary_integrations": [
        "wordpress",
        "n8n-nodes-langchain.chainllm",
        "httprequest"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.wordpress",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that automates data/processes using wordpress, n8n-nodes-langchain.chainllm, httprequest, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "960_workflow_960.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/960_workflow_960.json",
      "workflow_name": "960_workflow_960",
      "suggested_filename": "util_960_workflow_960_automate_gotowebinar.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "goToWebinar"
      ],
      "primary_integrations": [
        "gotowebinar"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.goToWebinar",
        "n8n-nodes-base.goToWebinar",
        "n8n-nodes-base.goToWebinar"
      ],
      "business_description": "UTIL workflow that automates data/processes using gotowebinar, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "OuHrYOR3uWGmrhWQ_AI_Email_processing_autoresponder_with_approval_(Yes_No).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/OuHrYOR3uWGmrhWQ_AI_Email_processing_autoresponder_with_approval_(Yes_No).json",
      "workflow_name": "AI Email processing autoresponder with approval (Yes/No)",
      "suggested_filename": "ai_email_ai_process_emailsend_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "emailSend",
        "set",
        "n8n-nodes-langchain.chainSummarization",
        "gmail",
        "markdown",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "emailReadImap"
      ],
      "primary_integrations": [
        "emailsend",
        "n8n-nodes-langchain.chainsummarization",
        "gmail"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.markdown",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.emailSend",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using emailsend, n8n-nodes-langchain.chainsummarization, gmail, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "3901_workflow_3901.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3901_workflow_3901.json",
      "workflow_name": "3901_workflow_3901",
      "suggested_filename": "data_3901_workflow_3901_automate_splitinbatches_n8nnodeslangchainchainllm.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "manualTrigger",
        "splitOut",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 11,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitOut"
      ],
      "business_description": "DATA workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "WceMkVib0VLlF1BZ_Vector_DB_Loader_from_Google_Drive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/WceMkVib0VLlF1BZ_Vector_DB_Loader_from_Google_Drive.json",
      "workflow_name": "Vector DB Loader from Google Drive",
      "suggested_filename": "ai_vector_automate_splitinbatches_schedule_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "stickyNote",
        "scheduleTrigger",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "manualTrigger",
        "googleDrive",
        "n8n-nodes-langchain.vectorStorePGVector",
        "switch",
        "extractFromFile",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "schedule",
        "n8n-nodes-langchain.embeddingsopenai"
      ],
      "total_nodes": 15,
      "node_types": [
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.vectorStorePGVector",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.extractFromFile"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, schedule, n8n-nodes-langchain.embeddingsopenai, triggered via cron",
      "complexity_score": 26
    },
    {
      "original_filename": "dDAqkobn2pqgdl2N_AI_Logo_Sheet_Extractor_to_Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/dDAqkobn2pqgdl2N_AI_Logo_Sheet_Extractor_to_Airtable.json",
      "workflow_name": "AI Logo Sheet Extractor to Airtable",
      "suggested_filename": "ai_logo_ai_process_splitinbatches_crypto.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "merge",
        "crypto",
        "n8n-nodes-langchain.outputParserStructured",
        "noOp",
        "stickyNote",
        "set",
        "code",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "airtable",
        "n8n-nodes-langchain.agent",
        "html",
        "formTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "crypto",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 44,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.html",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, crypto, n8n-nodes-langchain.outputparserstructured, triggered via manual",
      "complexity_score": 58
    },
    {
      "original_filename": "3333_workflow_3333.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3333_workflow_3333.json",
      "workflow_name": "3333_workflow_3333",
      "suggested_filename": "util_3333_workflow_3333_automate_webhook_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "set",
        "webhook",
        "respondToWebhook",
        "code"
      ],
      "primary_integrations": [
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 5,
      "node_types": [
        "@custom-js/n8n-nodes-pdf-toolkit.html2Pdf",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 9
    },
    {
      "original_filename": "3445_workflow_3445.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3445_workflow_3445.json",
      "workflow_name": "3445_workflow_3445",
      "suggested_filename": "util_3445_workflow_3445_automate_splitinbatches_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "form",
        "splitOut",
        "limit",
        "code",
        "n8n",
        "formTrigger",
        "removeDuplicates",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "form"
      ],
      "total_nodes": 40,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.form",
        "n8n-nodes-base.set",
        "n8n-nodes-base.form",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, httprequest, form, triggered via manual",
      "complexity_score": 53
    },
    {
      "original_filename": "okMME97B70fXzK5U_send_file_to_kindle_through_telegram_bot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/okMME97B70fXzK5U_send_file_to_kindle_through_telegram_bot.json",
      "workflow_name": "send file to kindle through telegram bot",
      "suggested_filename": "comm_send_automate_microsoftoutlook_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "microsoftOutlook",
        "telegramTrigger",
        "telegram",
        "code"
      ],
      "primary_integrations": [
        "microsoftoutlook",
        "telegram",
        "telegram"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.code",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using microsoftoutlook, telegram, telegram, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "186_Receive_messages_from_a_queue_via_RabbitMQ_and_send_an_SMS.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/186_Receive_messages_from_a_queue_via_RabbitMQ_and_send_an_SMS.json",
      "workflow_name": "Receive messages from a queue via RabbitMQ and send an SMS",
      "suggested_filename": "comm_receive_automate_rabbitmq_vonage.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "rabbitmqTrigger",
        "vonage",
        "noOp",
        "if"
      ],
      "primary_integrations": [
        "rabbitmq",
        "vonage"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.rabbitmqTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.vonage",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "COMM workflow that automates data/processes using rabbitmq, vonage, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "2034_workflow_2034.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2034_workflow_2034.json",
      "workflow_name": "2034_workflow_2034",
      "suggested_filename": "data_2034_workflow_2034_automate_httprequest_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "webhook",
        "code",
        "mySql"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "mysql"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, webhook, mysql, triggered via webhook",
      "complexity_score": 10
    },
    {
      "original_filename": "936_workflow_936.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/936_workflow_936.json",
      "workflow_name": "936_workflow_936",
      "suggested_filename": "util_936_workflow_936_automate_tapfiliate_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "tapfiliate",
        "manualTrigger"
      ],
      "primary_integrations": [
        "tapfiliate",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.tapfiliate",
        "n8n-nodes-base.tapfiliate",
        "n8n-nodes-base.tapfiliate",
        "n8n-nodes-base.manualTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using tapfiliate, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "3351_workflow_3351.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3351_workflow_3351.json",
      "workflow_name": "3351_workflow_3351",
      "suggested_filename": "ai_3351_workflow_3351_automate_splitinbatches_n8nnodeslangchaintextclassifier_cr.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "if",
        "noOp",
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "set",
        "executeWorkflowTrigger",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "code",
        "switch",
        "removeDuplicates",
        "executeWorkflow",
        "discord",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.textclassifier",
        "executeworkflow"
      ],
      "total_nodes": 30,
      "node_types": [
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.removeDuplicates",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.code",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.scheduleTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.textclassifier, executeworkflow, triggered via cron",
      "complexity_score": 47
    },
    {
      "original_filename": "95_Create_an_organization_in_Affinity.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/95_Create_an_organization_in_Affinity.json",
      "workflow_name": "Create an organization in Affinity",
      "suggested_filename": "util_create_create_affinity_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "affinity",
        "manualTrigger"
      ],
      "primary_integrations": [
        "affinity",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.affinity"
      ],
      "business_description": "UTIL workflow that creates data/processes using affinity, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "3427_workflow_3427.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3427_workflow_3427.json",
      "workflow_name": "3427_workflow_3427",
      "suggested_filename": "data_3427_workflow_3427_automate_itemlists_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "itemLists",
        "if",
        "stickyNote",
        "set",
        "webhook",
        "googleCalendar",
        "airtable",
        "code",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "itemlists",
        "webhook",
        "googlecalendar"
      ],
      "total_nodes": 92,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using itemlists, webhook, googlecalendar, triggered via webhook",
      "complexity_score": 101
    },
    {
      "original_filename": "ETL pipeline for text processing.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ETL pipeline for text processing.json",
      "workflow_name": "ETL pipeline",
      "suggested_filename": "comm_pipeline_automate_postgres_slack_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "postgres",
        "slack",
        "googleCloudNaturalLanguage",
        "if",
        "noOp",
        "set",
        "mongoDb",
        "cron",
        "twitter"
      ],
      "primary_integrations": [
        "postgres",
        "slack",
        "googlecloudnaturallanguage"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.mongoDb",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.googleCloudNaturalLanguage",
        "n8n-nodes-base.set",
        "n8n-nodes-base.cron"
      ],
      "business_description": "COMM workflow that automates data/processes using postgres, slack, googlecloudnaturallanguage, triggered via cron",
      "complexity_score": 18
    },
    {
      "original_filename": "2459_workflow_2459.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2459_workflow_2459.json",
      "workflow_name": "2459_workflow_2459",
      "suggested_filename": "util_2459_workflow_2459_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "code",
        "editImage"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "editimage"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, editimage, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "1_Create_entry_in_Mailchimp_from_Airtable.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_Create_entry_in_Mailchimp_from_Airtable.json",
      "workflow_name": "Create entry in Mailchimp from Airtable",
      "suggested_filename": "ai_create_ai_process_mailchimp_airtable_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "mailchimp",
        "airtable",
        "cron"
      ],
      "primary_integrations": [
        "mailchimp",
        "airtable",
        "cron"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.mailchimp"
      ],
      "business_description": "AI workflow that ai_processs data/processes using mailchimp, airtable, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "Extract text from PDF and image using Vertex AI (Gemini) into CSV.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Extract text from PDF and image using Vertex AI (Gemini) into CSV.json",
      "workflow_name": "Extract text from PDF and image using Vertex AI (Gemini) into CSV",
      "suggested_filename": "ai_extract_ai_process_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "extractFromFile",
        "googleDrive",
        "switch",
        "convertToFile",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "n8n-nodes-langchain.lmchatgooglegemini"
      ],
      "total_nodes": 16,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, httprequest, n8n-nodes-langchain.lmchatgooglegemini, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "A0xnegTHL43LL3eP_Convert_YouTube_Videos_into_SEO_Blog_Posts.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/A0xnegTHL43LL3eP_Convert_YouTube_Videos_into_SEO_Blog_Posts.json",
      "workflow_name": "Convert YouTube Videos into SEO Blog Posts",
      "suggested_filename": "ai_convert_process_gmail_httprequest.json",
      "category": "AI",
      "business_function": "process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "gmail",
        "httpRequest",
        "markdown",
        "manualTrigger",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "markdown"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that processs data/processes using gmail, httprequest, markdown, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "Convert text to speech with OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Convert text to speech with OpenAI.json",
      "workflow_name": "Text to Speech (OpenAI)",
      "suggested_filename": "ai_text_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "mvgpK03LMiYSiyxH_SearchApi_AI_Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/mvgpK03LMiYSiyxH_SearchApi_AI_Agent.json",
      "workflow_name": "SearchApi AI Agent",
      "suggested_filename": "ai_searchapi_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincha.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 7,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@searchapi/n8n-nodes-searchapi.searchApiTool",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "93_Create,_update,_and_get_activity_in_Strava.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/93_Create,_update,_and_get_activity_in_Strava.json",
      "workflow_name": "Create, update, and get activity in Strava",
      "suggested_filename": "util_create_create_strava_manual.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "strava",
        "manualTrigger"
      ],
      "primary_integrations": [
        "strava",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.strava",
        "n8n-nodes-base.strava",
        "n8n-nodes-base.strava"
      ],
      "business_description": "UTIL workflow that creates data/processes using strava, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "104_location_by_ip.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/104_location_by_ip.json",
      "workflow_name": "location_by_ip",
      "suggested_filename": "util_location_by_ip_automate_awsses_uproc.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "awsSes",
        "if",
        "uproc",
        "functionItem",
        "manualTrigger"
      ],
      "primary_integrations": [
        "awsses",
        "uproc",
        "functionitem"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.uproc",
        "n8n-nodes-base.if",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.awsSes",
        "n8n-nodes-base.awsSes"
      ],
      "business_description": "UTIL workflow that automates data/processes using awsses, uproc, functionitem, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "Create a Google Analytics Data Report with AI and sent it to E-Mail and Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Create a Google Analytics Data Report with AI and sent it to E-Mail and Telegram.json",
      "workflow_name": "Google Analytics: Weekly Report",
      "suggested_filename": "ai_google_report_n8nnodeslangchaincalculator_emailsend_cron.json",
      "category": "AI",
      "business_function": "report",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.toolCalculator",
        "stickyNote",
        "emailSend",
        "set",
        "googleAnalytics",
        "scheduleTrigger",
        "telegram",
        "code",
        "summarize",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.calculator",
        "emailsend",
        "googleanalytics"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "n8n-nodes-base.googleAnalytics",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that reports data/processes using n8n-nodes-langchain.calculator, emailsend, googleanalytics, triggered via cron",
      "complexity_score": 24
    },
    {
      "original_filename": "1_Send_a_message_on_Twake.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_Send_a_message_on_Twake.json",
      "workflow_name": "Send a message on Twake",
      "suggested_filename": "comm_send_automate_twake_manual.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "twake",
        "manualTrigger"
      ],
      "primary_integrations": [
        "twake",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.twake"
      ],
      "business_description": "COMM workflow that automates data/processes using twake, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "1132_workflow_1132.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1132_workflow_1132.json",
      "workflow_name": "1132_workflow_1132",
      "suggested_filename": "ops_1132_workflow_1132_automate_github_travisci.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "githubTrigger",
        "noOp",
        "travisCi",
        "if"
      ],
      "primary_integrations": [
        "github",
        "travisci"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.githubTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.travisCi",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "OPS workflow that automates data/processes using github, travisci, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "655_workflow_655.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/655_workflow_655.json",
      "workflow_name": "655_workflow_655",
      "suggested_filename": "util_655_workflow_655_automate_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "q1DorytEoEw1QLGj_Generate_Company_Stories_from_LinkedIn_with_Bright_Data_&_Google_Gemini.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/q1DorytEoEw1QLGj_Generate_Company_Stories_from_LinkedIn_with_Bright_Data_&_Google_Gemini.json",
      "workflow_name": "Generate Company Stories from LinkedIn with Bright Data & Google Gemini",
      "suggested_filename": "ai_generate_generate_httprequest_n8nnodeslangchainchainsummarization.json",
      "category": "AI",
      "business_function": "generate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "manualTrigger",
        "n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.chainsummarization",
        "n8n-nodes-langchain.lmchatgooglegemini"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait"
      ],
      "business_description": "AI workflow that generates data/processes using httprequest, n8n-nodes-langchain.chainsummarization, n8n-nodes-langchain.lmchatgooglegemini, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "Text automations using Apple Shortcuts.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Text automations using Apple Shortcuts.json",
      "workflow_name": "Text automations using Apple Shortcuts",
      "suggested_filename": "ai_text_automate_webhook_n8nnodeslangchainopenai_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "switch",
        "n8n-nodes-langchain.openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "n8n-nodes-langchain.openai",
        "respondtowebhook"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using webhook, n8n-nodes-langchain.openai, respondtowebhook, triggered via webhook",
      "complexity_score": 15
    },
    {
      "original_filename": "438_.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/438_.json",
      "workflow_name": "",
      "suggested_filename": "biz_automate_paypal_manual.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "payPal",
        "manualTrigger"
      ],
      "primary_integrations": [
        "paypal",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.payPal"
      ],
      "business_description": "BIZ workflow that automates data/processes using paypal, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2769_workflow_2769.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2769_workflow_2769.json",
      "workflow_name": "2769_workflow_2769",
      "suggested_filename": "util_2769_workflow_2769_automate_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "set",
        "webhook",
        "splitOut",
        "aggregate"
      ],
      "primary_integrations": [
        "webhook"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, triggered via webhook",
      "complexity_score": 21
    },
    {
      "original_filename": "2304_workflow_2304.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2304_workflow_2304.json",
      "workflow_name": "2304_workflow_2304",
      "suggested_filename": "util_2304_workflow_2304_automate_readwritefile_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "readWriteFile",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "readwritefile",
        "httprequest",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using readwritefile, httprequest, manual, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "YkATyvsBXigxnMgo_AI-Driven_WooCommerce_Product_Importer_with_SEO.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/YkATyvsBXigxnMgo_AI-Driven_WooCommerce_Product_Importer_with_SEO.json",
      "workflow_name": "AI-Driven WooCommerce Product Importer with SEO",
      "suggested_filename": "ai_driven_ai_process_splitinbatches_woocommerce.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "wooCommerce",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "manualTrigger",
        "telegram",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "woocommerce",
        "n8n-nodes-langchain.chainllm"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.wooCommerce",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.wooCommerce",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, woocommerce, n8n-nodes-langchain.chainllm, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "1150_workflow_1150.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1150_workflow_1150.json",
      "workflow_name": "1150_workflow_1150",
      "suggested_filename": "util_1150_workflow_1150_automate_movebinarydata_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "moveBinaryData",
        "httpRequest",
        "functionItem",
        "manualTrigger",
        "googleDrive",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "movebinarydata",
        "httprequest",
        "functionitem"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.function",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.cron"
      ],
      "business_description": "UTIL workflow that automates data/processes using movebinarydata, httprequest, functionitem, triggered via cron",
      "complexity_score": 17
    },
    {
      "original_filename": "YZpFvpXOTYkBpiUU_Extract_Business_Leads_from_Google_Maps_with_Dumpling_AI_to_Google_Sheets.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/YZpFvpXOTYkBpiUU_Extract_Business_Leads_from_Google_Maps_with_Dumpling_AI_to_Google_Sheets.json",
      "workflow_name": "Extract Business Leads from Google Maps with Dumpling AI to Google Sheets",
      "suggested_filename": "ai_extract_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "googlesheets"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, manual, googlesheets, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "eHuvG2I1vOYj0U6k_My_workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/eHuvG2I1vOYj0U6k_My_workflow.json",
      "workflow_name": "My workflow",
      "suggested_filename": "util_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstructured.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "code",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.lmchatopenrouter"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.lmchatopenrouter, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "Vector Database as a Big Data Analysis Tool for AI Agents [3_3 - anomaly].json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Vector Database as a Big Data Analysis Tool for AI Agents [3_3 - anomaly].json",
      "workflow_name": "[3/3] Anomaly detection tool (crops dataset)",
      "suggested_filename": "data_anomaly_automate_httprequest_executeworkflow.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "code",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "executeworkflow"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, executeworkflow, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "grxwlyzZb3z4WLAa_MCP_CALENDAR.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/grxwlyzZb3z4WLAa_MCP_CALENDAR.json",
      "workflow_name": "MCP_CALENDAR",
      "suggested_filename": "util_mcp_calendar_automate_n8nnodeslangchainmcp_googlecalendar.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.mcpTrigger",
        "googleCalendarTool"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.mcp",
        "googlecalendar"
      ],
      "total_nodes": 7,
      "node_types": [
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.googleCalendarTool"
      ],
      "business_description": "UTIL workflow that automates data/processes using n8n-nodes-langchain.mcp, googlecalendar, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "141_Assign_values_to_variables_using_the_Set_node.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/141_Assign_values_to_variables_using_the_Set_node.json",
      "workflow_name": "Assign values to variables using the Set node",
      "suggested_filename": "util_assign_automate_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "manualTrigger"
      ],
      "primary_integrations": [
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "3331_workflow_3331.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3331_workflow_3331.json",
      "workflow_name": "3331_workflow_3331",
      "suggested_filename": "util_3331_workflow_3331_automate_webhook_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "webhook",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "@custom-js/n8n-nodes-pdf-toolkit.html2Pdf"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 5
    },
    {
      "original_filename": "1832_workflow_1832.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1832_workflow_1832.json",
      "workflow_name": "1832_workflow_1832",
      "suggested_filename": "ops_1832_workflow_1832_automate_webhook_github_webhook.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "webhook",
        "github",
        "zendesk",
        "function"
      ],
      "primary_integrations": [
        "webhook",
        "github",
        "zendesk"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.if",
        "n8n-nodes-base.zendesk",
        "n8n-nodes-base.function",
        "n8n-nodes-base.github",
        "n8n-nodes-base.github",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "OPS workflow that automates data/processes using webhook, github, zendesk, triggered via webhook",
      "complexity_score": 12
    },
    {
      "original_filename": "Email Summary Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Email Summary Agent.json",
      "workflow_name": "Email Summary Agent",
      "suggested_filename": "ai_email_ai_process_gmail_schedule_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "gmail",
        "scheduleTrigger",
        "aggregate",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "gmail",
        "schedule",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, schedule, n8n-nodes-langchain.openai, triggered via cron",
      "complexity_score": 14
    },
    {
      "original_filename": "2054_workflow_2054.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2054_workflow_2054.json",
      "workflow_name": "2054_workflow_2054",
      "suggested_filename": "comm_2054_workflow_2054_automate_httprequest_schedule_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "manualTrigger",
        "microsoftTeams",
        "code",
        "redis"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "manual"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.code",
        "n8n-nodes-base.microsoftTeams",
        "n8n-nodes-base.redis",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, schedule, manual, triggered via cron",
      "complexity_score": 32
    },
    {
      "original_filename": "2NhqmUqW3KruEkaE_Exponential_Backoff_for_Google_APIs.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2NhqmUqW3KruEkaE_Exponential_Backoff_for_Google_APIs.json",
      "workflow_name": "Exponential Backoff for Google APIs",
      "suggested_filename": "data_exponential_automate_splitinbatches_stopanderror.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "wait",
        "if",
        "stickyNote",
        "stopAndError",
        "manualTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "stopanderror",
        "manual"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using splitinbatches, stopanderror, manual, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "602_workflow_602.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/602_workflow_602.json",
      "workflow_name": "602_workflow_602",
      "suggested_filename": "util_602_workflow_602_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2085_workflow_2085.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2085_workflow_2085.json",
      "workflow_name": "2085_workflow_2085",
      "suggested_filename": "ai_2085_workflow_2085_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "code",
        "switch",
        "googleSheets",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.code"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "ZiIoKEClTk83g1Jt_Gmail_to_Vector_Embeddings_with_PGVector_and_Ollama.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ZiIoKEClTk83g1Jt_Gmail_to_Vector_Embeddings_with_PGVector_and_Ollama.json",
      "workflow_name": "Gmail to Vector Embeddings with PGVector and Ollama",
      "suggested_filename": "ai_gmail_ai_process_splitinbatches_postgres.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "postgres",
        "if",
        "gmailTrigger",
        "noOp",
        "stickyNote",
        "set",
        "gmail",
        "code",
        "splitOut",
        "manualTrigger",
        "n8n-nodes-langchain.vectorStorePGVector",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.embeddingsOllama",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "postgres",
        "gmail"
      ],
      "total_nodes": 20,
      "node_types": [
        "@n8n/n8n-nodes-langchain.embeddingsOllama",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.if",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.postgres",
        "@n8n/n8n-nodes-langchain.vectorStorePGVector",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.code",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, postgres, gmail, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "52pBJt8swWgtdY54_MCP_Client_with_Brave_and_Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/52pBJt8swWgtdY54_MCP_Client_with_Brave_and_Telegram.json",
      "workflow_name": "MCP Client with Brave and Telegram",
      "suggested_filename": "comm_client_automate_telegram_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "telegramTrigger",
        "telegram",
        "code"
      ],
      "primary_integrations": [
        "telegram",
        "telegram"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-mcp.mcpClient",
        "n8n-nodes-mcp.mcpClient",
        "n8n-nodes-base.code",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "COMM workflow that automates data/processes using telegram, telegram, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "133_Receive_updates_for_specified_tasks_in_Flow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/133_Receive_updates_for_specified_tasks_in_Flow.json",
      "workflow_name": "Receive updates for specified tasks in Flow",
      "suggested_filename": "util_receive_update_flow.json",
      "category": "UTIL",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "flowTrigger"
      ],
      "primary_integrations": [
        "flow"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.flowTrigger"
      ],
      "business_description": "UTIL workflow that updates data/processes using flow, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "2740_workflow_2740.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2740_workflow_2740.json",
      "workflow_name": "2740_workflow_2740",
      "suggested_filename": "ai_2740_workflow_2740_automate_n8nnodeslangchainmemorybufferwindow_gmail.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "wait",
        "gmailTrigger",
        "stickyNote",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "gmailTool"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "gmail",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, gmail, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "ZBH1ExE58wsoodkZ_OpenSea_NFT_Agent_Tool.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ZBH1ExE58wsoodkZ_OpenSea_NFT_Agent_Tool.json",
      "workflow_name": "OpenSea NFT Agent Tool",
      "suggested_filename": "ai_opensea_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainhttpreq.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 17,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "7DPLpEkww5Uctcml_get_a_web_page.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/7DPLpEkww5Uctcml_get_a_web_page.json",
      "workflow_name": "get_a_web_page",
      "suggested_filename": "util_get_a_web_page_read_httprequest_executeworkflow.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "executeworkflow"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that reads data/processes using httprequest, executeworkflow, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "127_Create,_update,_and_get_a_profile_in_Humantic_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/127_Create,_update,_and_get_a_profile_in_Humantic_AI.json",
      "workflow_name": "Create, update, and get a profile in Humantic AI",
      "suggested_filename": "ai_create_ai_process_humanticai_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "humanticAi",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "humanticai",
        "httprequest",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.humanticAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.humanticAi",
        "n8n-nodes-base.humanticAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using humanticai, httprequest, manual, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "1298_workflow_1298.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1298_workflow_1298.json",
      "workflow_name": "1298_workflow_1298",
      "suggested_filename": "comm_1298_workflow_1298_automate_itemlists_graphql_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "itemLists",
        "set",
        "graphql",
        "cron",
        "discord"
      ],
      "primary_integrations": [
        "itemlists",
        "graphql",
        "cron"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.set",
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.discord"
      ],
      "business_description": "COMM workflow that automates data/processes using itemlists, graphql, cron, triggered via cron",
      "complexity_score": 10
    },
    {
      "original_filename": "1130_workflow_1130.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1130_workflow_1130.json",
      "workflow_name": "1130_workflow_1130",
      "suggested_filename": "content_1130_workflow_1130_automate_twitter_manual.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "twitter",
        "noOp",
        "manualTrigger",
        "if"
      ],
      "primary_integrations": [
        "twitter",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.twitter"
      ],
      "business_description": "CONTENT workflow that automates data/processes using twitter, manual, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "404_workflow_404.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/404_workflow_404.json",
      "workflow_name": "404_workflow_404",
      "suggested_filename": "comm_404_workflow_404_automate_slack_emailsend.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "if",
        "emailSend",
        "typeformTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "slack",
        "emailsend",
        "typeform"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, emailsend, typeform, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "551_workflow_551.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/551_workflow_551.json",
      "workflow_name": "551_workflow_551",
      "suggested_filename": "util_551_workflow_551_automate_surveymonkey.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "surveyMonkeyTrigger"
      ],
      "primary_integrations": [
        "surveymonkey"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.surveyMonkeyTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using surveymonkey, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "1819_workflow_1819.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1819_workflow_1819.json",
      "workflow_name": "1819_workflow_1819",
      "suggested_filename": "data_1819_workflow_1819_automate_notion_googledrive.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "notion",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "notion",
        "googledrive"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.notion"
      ],
      "business_description": "DATA workflow that automates data/processes using notion, googledrive, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2306_workflow_2306.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2306_workflow_2306.json",
      "workflow_name": "2306_workflow_2306",
      "suggested_filename": "util_2306_workflow_2306_automate_httprequest_readwritefile.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "readWriteFile",
        "manualTrigger",
        "googleDrive"
      ],
      "primary_integrations": [
        "httprequest",
        "readwritefile",
        "manual"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, readwritefile, manual, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "507_workflow_507.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/507_workflow_507.json",
      "workflow_name": "507_workflow_507",
      "suggested_filename": "util_507_workflow_507_automate_awsses_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "awsSes",
        "manualTrigger"
      ],
      "primary_integrations": [
        "awsses",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.awsSes"
      ],
      "business_description": "UTIL workflow that automates data/processes using awsses, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "114_Standup_Bot_-_Worker.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/114_Standup_Bot_-_Worker.json",
      "workflow_name": "Standup Bot - Worker",
      "suggested_filename": "comm_standup_automate_cron_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "cron",
        "if",
        "noOp",
        "httpRequest",
        "webhook",
        "mattermost",
        "switch",
        "function",
        "executeWorkflow"
      ],
      "primary_integrations": [
        "cron",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.function",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.function",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.function",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.cron"
      ],
      "business_description": "COMM workflow that automates data/processes using cron, httprequest, webhook, triggered via webhook",
      "complexity_score": 38
    },
    {
      "original_filename": "cmGsNvW9bEORABdo_Bitrix24_Chatbot_Application_Workflow_example_with_Webhook_Integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/cmGsNvW9bEORABdo_Bitrix24_Chatbot_Application_Workflow_example_with_Webhook_Integration.json",
      "workflow_name": "Bitrix24 Chatbot Application Workflow example with Webhook Integration",
      "suggested_filename": "comm_bitrix24_automate_httprequest_webhook_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "noOp",
        "set",
        "httpRequest",
        "webhook",
        "switch",
        "function",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 21
    },
    {
      "original_filename": "Deduplicate Scraping AI Grants for Eligibility using AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Deduplicate Scraping AI Grants for Eligibility using AI.json",
      "workflow_name": "Deduplicate Scraping AI Grants for Eligibility using AI",
      "suggested_filename": "ai_deduplicate_ai_process_gmail_httprequest_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "stickyNote",
        "gmail",
        "httpRequest",
        "html",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "n8n-nodes-langchain.informationExtractor",
        "airtable",
        "removeDuplicates"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "html"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.html",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, httprequest, html, triggered via cron",
      "complexity_score": 35
    },
    {
      "original_filename": "961_workflow_961.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/961_workflow_961.json",
      "workflow_name": "961_workflow_961",
      "suggested_filename": "util_961_workflow_961_automate_emelia.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "emelia"
      ],
      "primary_integrations": [
        "emelia"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.emelia",
        "n8n-nodes-base.emelia",
        "n8n-nodes-base.emelia"
      ],
      "business_description": "UTIL workflow that automates data/processes using emelia, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2511_workflow_2511.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2511_workflow_2511.json",
      "workflow_name": "2511_workflow_2511",
      "suggested_filename": "comm_2511_workflow_2511_automate_splitinbatches_slack.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "merge",
        "slack",
        "wait",
        "if",
        "stickyNote",
        "set",
        "noOp",
        "httpRequest",
        "xml",
        "manualTrigger",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "slack",
        "httprequest"
      ],
      "total_nodes": 28,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.if",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, slack, httprequest, triggered via manual",
      "complexity_score": 40
    },
    {
      "original_filename": "2267_workflow_2267.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2267_workflow_2267.json",
      "workflow_name": "2267_workflow_2267",
      "suggested_filename": "data_2267_workflow_2267_automate_httprequest_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "airtable",
        "html"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "airtable"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, manual, airtable, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "Iz8TMdlc6JhaKkd9_YouTube_Video_Transcriber.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Iz8TMdlc6JhaKkd9_YouTube_Video_Transcriber.json",
      "workflow_name": "YouTube Video Transcriber",
      "suggested_filename": "ai_youtube_automate_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "httpRequest",
        "code",
        "n8n-nodes-langchain.openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "httprequest",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 14,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, httprequest, n8n-nodes-langchain.openai, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "QCbb7Bm12gDIH0mI_Keep_discord_clean.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/QCbb7Bm12gDIH0mI_Keep_discord_clean.json",
      "workflow_name": "Keep discord clean",
      "suggested_filename": "comm_keep_automate_splitinbatches_schedule_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "wait",
        "stickyNote",
        "scheduleTrigger",
        "discord",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "schedule",
        "discord"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, schedule, discord, triggered via cron",
      "complexity_score": 20
    },
    {
      "original_filename": "3102_workflow_3102.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3102_workflow_3102.json",
      "workflow_name": "3102_workflow_3102",
      "suggested_filename": "util_3102_workflow_3102_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "googleDrive"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "googledrive"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, googledrive, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "TBiW9x7O4ijo4yOX_Bitrix24_Open_Chanel_RAG_Chatbot_Application_Workflow_example_with_Webhook_Integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/TBiW9x7O4ijo4yOX_Bitrix24_Open_Chanel_RAG_Chatbot_Application_Workflow_example_with_Webhook_Integration.json",
      "workflow_name": "Bitrix24 Open Chanel RAG Chatbot Application Workflow example with Webhook Integration",
      "suggested_filename": "ai_bitrix24_automate_n8nnodeslangchainchainretrievalqa_httprequest_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "httpRequest",
        "function",
        "n8n-nodes-langchain.embeddingsOllama",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "filter",
        "noOp",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.retrieverVectorStore",
        "executeWorkflow",
        "merge",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "executeWorkflowTrigger",
        "respondToWebhook",
        "set",
        "webhook",
        "splitOut",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "switch"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "httprequest",
        "n8n-nodes-langchain.embeddingsollama"
      ],
      "total_nodes": 34,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.function",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOllama",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.embeddingsOllama",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.executeWorkflow"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainretrievalqa, httprequest, n8n-nodes-langchain.embeddingsollama, triggered via webhook",
      "complexity_score": 55
    },
    {
      "original_filename": "0HVA2TOmkdNpH5DP_Google_calendar_to_Outlook.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/0HVA2TOmkdNpH5DP_Google_calendar_to_Outlook.json",
      "workflow_name": "Google calendar to Outlook",
      "suggested_filename": "comm_google_automate_googlecalendar_microsoftoutlook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "googleCalendarTrigger",
        "microsoftOutlook"
      ],
      "primary_integrations": [
        "googlecalendar",
        "microsoftoutlook"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleCalendarTrigger",
        "n8n-nodes-base.googleCalendarTrigger",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook"
      ],
      "business_description": "COMM workflow that automates data/processes using googlecalendar, microsoftoutlook, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "1328_workflow_1328.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1328_workflow_1328.json",
      "workflow_name": "1328_workflow_1328",
      "suggested_filename": "util_1328_workflow_1328_automate_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "noOp",
        "manualTrigger",
        "if"
      ],
      "primary_integrations": [
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "680_workflow_680.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/680_workflow_680.json",
      "workflow_name": "680_workflow_680",
      "suggested_filename": "comm_680_workflow_680_automate_manual_microsoftteams.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "microsoftTeams"
      ],
      "primary_integrations": [
        "manual",
        "microsoftteams"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.microsoftTeams",
        "n8n-nodes-base.microsoftTeams",
        "n8n-nodes-base.microsoftTeams"
      ],
      "business_description": "COMM workflow that automates data/processes using manual, microsoftteams, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "189_Create,_update,_and_get_a_subscriber_using_the_e-goi_node.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/189_Create,_update,_and_get_a_subscriber_using_the_e-goi_node.json",
      "workflow_name": "Create, update, and get a subscriber using the e-goi node",
      "suggested_filename": "util_create_create_manual_egoi.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "egoi"
      ],
      "primary_integrations": [
        "manual",
        "egoi"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.egoi",
        "n8n-nodes-base.egoi",
        "n8n-nodes-base.egoi"
      ],
      "business_description": "UTIL workflow that creates data/processes using manual, egoi, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "3849_workflow_3849.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3849_workflow_3849.json",
      "workflow_name": "3849_workflow_3849",
      "suggested_filename": "data_3849_workflow_3849_automate_n8nnodeslangchainchainllm_reddit.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "reddit",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "manualTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "reddit",
        "n8n-nodes-langchain.chainsummarization"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.reddit",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that automates data/processes using n8n-nodes-langchain.chainllm, reddit, n8n-nodes-langchain.chainsummarization, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "1978_workflow_1978.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1978_workflow_1978.json",
      "workflow_name": "1978_workflow_1978",
      "suggested_filename": "ai_1978_workflow_1978_automate_emailsend_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "set",
        "emailSend",
        "httpRequest",
        "stopAndError",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "manualTrigger",
        "extractFromFile",
        "html"
      ],
      "primary_integrations": [
        "emailsend",
        "httprequest",
        "stopanderror"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.html",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.html",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.emailSend"
      ],
      "business_description": "AI workflow that automates data/processes using emailsend, httprequest, stopanderror, triggered via manual",
      "complexity_score": 36
    },
    {
      "original_filename": "1794_workflow_1794.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1794_workflow_1794.json",
      "workflow_name": "1794_workflow_1794",
      "suggested_filename": "biz_1794_workflow_1794_automate_spreadsheetfile_itemlists.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "merge",
        "itemLists",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "renameKeys",
        "manualTrigger",
        "salesforce"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "itemlists",
        "httprequest"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.salesforce",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.renameKeys",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.salesforce",
        "n8n-nodes-base.salesforce",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.spreadsheetFile"
      ],
      "business_description": "BIZ workflow that automates data/processes using spreadsheetfile, itemlists, httprequest, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "42_Receive_updates_when_a_form_submission_occurs_in_your_Webflow_website.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/42_Receive_updates_when_a_form_submission_occurs_in_your_Webflow_website.json",
      "workflow_name": "Receive updates when a form submission occurs in your Webflow website",
      "suggested_filename": "util_receive_update_webflow.json",
      "category": "UTIL",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "webflowTrigger"
      ],
      "primary_integrations": [
        "webflow"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.webflowTrigger"
      ],
      "business_description": "UTIL workflow that updates data/processes using webflow, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "3281_workflow_3281.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3281_workflow_3281.json",
      "workflow_name": "3281_workflow_3281",
      "suggested_filename": "util_3281_workflow_3281_automate_httprequest_readwritefile.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "readWriteFile",
        "splitOut",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "readwritefile",
        "manual"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.code",
        "@custom-js/n8n-nodes-pdf-toolkit.mergePdfs"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, readwritefile, manual, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "Survey Insights with Qdrant, Python and Information Extractor.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Survey Insights with Qdrant, Python and Information Extractor.json",
      "workflow_name": "Survey Insights with Qdrant, Python and Information Extractor",
      "suggested_filename": "ai_survey_extract_splitinbatches_executeworkflow.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "if",
        "executeWorkflowTrigger",
        "set",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "code",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "googleSheets",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.informationExtractor",
        "executeWorkflow",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "executeworkflow",
        "httprequest"
      ],
      "total_nodes": 42,
      "node_types": [
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.informationExtractor"
      ],
      "business_description": "AI workflow that extracts data/processes using splitinbatches, executeworkflow, httprequest, triggered via manual",
      "complexity_score": 60
    },
    {
      "original_filename": "2157_workflow_2157.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2157_workflow_2157.json",
      "workflow_name": "2157_workflow_2157",
      "suggested_filename": "comm_2157_workflow_2157_automate_postgres_slack_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "postgres",
        "merge",
        "slack",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "code",
        "switch",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "postgres",
        "slack",
        "httprequest"
      ],
      "total_nodes": 34,
      "node_types": [
        "n8n-nodes-base.slack",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code"
      ],
      "business_description": "COMM workflow that automates data/processes using postgres, slack, httprequest, triggered via webhook",
      "complexity_score": 46
    },
    {
      "original_filename": "2621_workflow_2621.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2621_workflow_2621.json",
      "workflow_name": "2621_workflow_2621",
      "suggested_filename": "util_2621_workflow_2621_automate_calendly.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "calendlyTrigger",
        "noOp",
        "if",
        "stickyNote",
        "set",
        "splitOut"
      ],
      "primary_integrations": [
        "calendly"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.if",
        "n8n-nodes-klicktipp.klicktipp",
        "n8n-nodes-base.calendlyTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using calendly, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "652_Store_the_data_received_from_the_CocktailDB_API_in_JSON.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/652_Store_the_data_received_from_the_CocktailDB_API_in_JSON.json",
      "workflow_name": "Store the data received from the CocktailDB API in JSON",
      "suggested_filename": "ai_store_ai_process_writebinaryfile_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "writeBinaryFile",
        "httpRequest",
        "manualTrigger",
        "moveBinaryData"
      ],
      "primary_integrations": [
        "writebinaryfile",
        "httprequest",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.writeBinaryFile"
      ],
      "business_description": "AI workflow that ai_processs data/processes using writebinaryfile, httprequest, manual, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "20_Create,_update_and_get_a_contact_in_Google_Contacts.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/20_Create,_update_and_get_a_contact_in_Google_Contacts.json",
      "workflow_name": "Create, update and get a contact in Google Contacts",
      "suggested_filename": "util_create_create_contact_googlecontacts_manual.json",
      "category": "UTIL",
      "business_function": "create_contact",
      "trigger_type": "manual",
      "integrations": [
        "googleContacts",
        "manualTrigger"
      ],
      "primary_integrations": [
        "googlecontacts",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleContacts",
        "n8n-nodes-base.googleContacts",
        "n8n-nodes-base.googleContacts"
      ],
      "business_description": "UTIL workflow that create_contacts data/processes using googlecontacts, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "1931_workflow_1931.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1931_workflow_1931.json",
      "workflow_name": "1931_workflow_1931",
      "suggested_filename": "comm_1931_workflow_1931_automate_slack_itemlists_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "itemLists",
        "stickyNote",
        "notion",
        "scheduleTrigger",
        "code",
        "filter"
      ],
      "primary_integrations": [
        "slack",
        "itemlists",
        "notion"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.code"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, itemlists, notion, triggered via cron",
      "complexity_score": 18
    },
    {
      "original_filename": "585_workflow_585.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/585_workflow_585.json",
      "workflow_name": "585_workflow_585",
      "suggested_filename": "util_585_workflow_585_automate_manual_readpdf.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "readPDF",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "manual",
        "readpdf",
        "readbinaryfile"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.readPDF"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, readpdf, readbinaryfile, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2DT5BW5tOdy87AUl_Streamline_Your_Zoom_Meetings_with_Secure,_Automated_Stripe_Payments.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2DT5BW5tOdy87AUl_Streamline_Your_Zoom_Meetings_with_Secure,_Automated_Stripe_Payments.json",
      "workflow_name": "Streamline Your Zoom Meetings with Secure, Automated Stripe Payments",
      "suggested_filename": "ai_streamline_automate_gmail_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "noOp",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "stripeTrigger",
        "googleSheets",
        "zoom",
        "formTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "stripe"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.zoom",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.stripeTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, httprequest, stripe, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "4rXRDurF4mQKrHyB_comentarios_automaticos.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/4rXRDurF4mQKrHyB_comentarios_automaticos.json",
      "workflow_name": "comentarios automaticos",
      "suggested_filename": "util_comentarios_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "filter",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-langchain.agent",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "n8n-nodes-langchain.lmchatopenrouter"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, n8n-nodes-langchain.lmchatopenrouter, triggered via webhook",
      "complexity_score": 22
    },
    {
      "original_filename": "zic2ZEHvxHR4UAYI_Import_multiple_CSV_to_GoogleSheet.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/zic2ZEHvxHR4UAYI_Import_multiple_CSV_to_GoogleSheet.json",
      "workflow_name": "Import multiple CSV to GoogleSheet",
      "suggested_filename": "data_import_transfer_spreadsheetfile_splitinbatches.json",
      "category": "DATA",
      "business_function": "transfer",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "splitInBatches",
        "itemLists",
        "set",
        "readBinaryFiles",
        "manualTrigger",
        "googleSheets",
        "filter"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "splitinbatches",
        "itemlists"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readBinaryFiles",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that transfers data/processes using spreadsheetfile, splitinbatches, itemlists, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "1953_workflow_1953.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1953_workflow_1953.json",
      "workflow_name": "1953_workflow_1953",
      "suggested_filename": "ai_1953_workflow_1953_automate_gmail_gmail.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "gmailTrigger",
        "gmail",
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "googleCalendarTool",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "gmail",
        "gmail",
        "n8n-nodes-langchain.textclassifier"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmailTrigger",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, gmail, n8n-nodes-langchain.textclassifier, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "2135_workflow_2135.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2135_workflow_2135.json",
      "workflow_name": "2135_workflow_2135",
      "suggested_filename": "comm_2135_workflow_2135_automate_pipedrive_slack_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "pipedrive",
        "merge",
        "slack",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "clearbit",
        "filter"
      ],
      "primary_integrations": [
        "pipedrive",
        "slack",
        "httprequest"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.clearbit",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "COMM workflow that automates data/processes using pipedrive, slack, httprequest, triggered via cron",
      "complexity_score": 30
    },
    {
      "original_filename": "Glb4VNoQI44GT0p9_My_workflow_4.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Glb4VNoQI44GT0p9_My_workflow_4.json",
      "workflow_name": "My workflow 4",
      "suggested_filename": "comm_automate_gmail_rssfeedread_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "gmail",
        "rssFeedRead",
        "scheduleTrigger",
        "code",
        "todoist"
      ],
      "primary_integrations": [
        "gmail",
        "rssfeedread",
        "schedule"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.code",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.merge"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, rssfeedread, schedule, triggered via cron",
      "complexity_score": 13
    },
    {
      "original_filename": "AvXlqUiuc1qJSwxf_Forward_Filtered_Gmail_Notifications_to_Telegram_Chat.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AvXlqUiuc1qJSwxf_Forward_Filtered_Gmail_Notifications_to_Telegram_Chat.json",
      "workflow_name": "Forward Filtered Gmail Notifications to Telegram Chat",
      "suggested_filename": "ai_forward_ai_process_gmail_telegram.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "gmailTrigger",
        "stickyNote",
        "telegram",
        "if"
      ],
      "primary_integrations": [
        "gmail",
        "telegram"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, telegram, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "3786_workflow_3786.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3786_workflow_3786.json",
      "workflow_name": "3786_workflow_3786",
      "suggested_filename": "content_3786_workflow_3786_automate_facebookleadads.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "facebookLeadAdsTrigger"
      ],
      "primary_integrations": [
        "facebookleadads"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.facebookLeadAdsTrigger",
        "n8n-nodes-klicktipp.klicktipp"
      ],
      "business_description": "CONTENT workflow that automates data/processes using facebookleadads, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "2450_workflow_2450.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2450_workflow_2450.json",
      "workflow_name": "2450_workflow_2450",
      "suggested_filename": "util_2450_workflow_2450_automate_httprequest_stopanderror_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "stopAndError",
        "scheduleTrigger",
        "splitOut",
        "manualTrigger",
        "awsS3"
      ],
      "primary_integrations": [
        "httprequest",
        "stopanderror",
        "schedule"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.awsS3",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, stopanderror, schedule, triggered via cron",
      "complexity_score": 26
    },
    {
      "original_filename": "2326_workflow_2326.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2326_workflow_2326.json",
      "workflow_name": "2326_workflow_2326",
      "suggested_filename": "ai_2326_workflow_2326_automate_slack_n8nnodeslangchainoutputparserstructured_cro.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "if",
        "n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-langchain.toolSerpApi",
        "set",
        "stickyNote",
        "n8n-nodes-langchain.toolWikipedia",
        "scheduleTrigger",
        "googleCalendar",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "code",
        "filter"
      ],
      "primary_integrations": [
        "slack",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.serpapi"
      ],
      "total_nodes": 33,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.toolSerpApi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using slack, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.serpapi, triggered via cron",
      "complexity_score": 47
    },
    {
      "original_filename": "jbTm6O9bLBMm6RWy_My_workflow_3.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/jbTm6O9bLBMm6RWy_My_workflow_3.json",
      "workflow_name": "My workflow 3",
      "suggested_filename": "comm_automate_gmail_httprequest_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "gmail",
        "httpRequest",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "cron"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.function",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, httprequest, cron, triggered via cron",
      "complexity_score": 12
    },
    {
      "original_filename": "AjD7Xo4vjbBvBb93_workflow_AjD7Xo4vjbBvBb93.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AjD7Xo4vjbBvBb93_workflow_AjD7Xo4vjbBvBb93.json",
      "workflow_name": "AjD7Xo4vjbBvBb93_workflow_AjD7Xo4vjbBvBb93",
      "suggested_filename": "comm_ajd7xo4vjbbvbb93_workflow_ajd7xo4vjbbvbb93_automate_trello_gmail_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "trello",
        "gmail",
        "set",
        "stickyNote",
        "rssFeedRead",
        "scheduleTrigger",
        "sort",
        "limit",
        "code",
        "filter"
      ],
      "primary_integrations": [
        "trello",
        "gmail",
        "rssfeedread"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.code",
        "n8n-nodes-base.trello",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using trello, gmail, rssfeedread, triggered via cron",
      "complexity_score": 26
    },
    {
      "original_filename": "nGpVbW7RTylKujyT_AI_powered_SEO_Keyword_Research_Automation_-_The_vibe_Marketer.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/nGpVbW7RTylKujyT_AI_powered_SEO_Keyword_Research_Automation_-_The_vibe_Marketer.json",
      "workflow_name": "AI powered SEO Keyword Research Automation - The vibe Marketer",
      "suggested_filename": "ai_powered_ai_process_nocodb_slack_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "nocoDb",
        "slack",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "webhook",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "code",
        "aggregate"
      ],
      "primary_integrations": [
        "nocodb",
        "slack",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 34,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-dataforseo.dataForSeo",
        "n8n-nodes-dataforseo.dataForSeo",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-dataforseo.dataForSeo",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using nocodb, slack, n8n-nodes-langchain.outputparserstructured, triggered via webhook",
      "complexity_score": 46
    },
    {
      "original_filename": "695_workflow_695.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/695_workflow_695.json",
      "workflow_name": "695_workflow_695",
      "suggested_filename": "util_695_workflow_695_automate_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "function",
        "manualTrigger"
      ],
      "primary_integrations": [
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.function"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Create, update, and get a profile in Humantic AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Create, update, and get a profile in Humantic AI.json",
      "workflow_name": "Create, update, and get a profile in Humantic AI",
      "suggested_filename": "ai_create_ai_process_humanticai_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "humanticAi",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "humanticai",
        "httprequest",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.humanticAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.humanticAi",
        "n8n-nodes-base.humanticAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using humanticai, httprequest, manual, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "2395_workflow_2395.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2395_workflow_2395.json",
      "workflow_name": "2395_workflow_2395",
      "suggested_filename": "ai_2395_workflow_2395_automate_n8nnodeslangchainchainretrievalqa_supabase.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "supabase",
        "n8n-nodes-langchain.vectorStoreSupabase",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "googleDrive",
        "n8n-nodes-langchain.retrieverVectorStore",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "supabase",
        "n8n-nodes-langchain.vectorstoresupabase"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainretrievalqa, supabase, n8n-nodes-langchain.vectorstoresupabase, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "1110_workflow_1110.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1110_workflow_1110.json",
      "workflow_name": "1110_workflow_1110",
      "suggested_filename": "data_1110_workflow_1110_automate_htmlextract_httprequest_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "htmlExtract",
        "if",
        "set",
        "httpRequest",
        "notion",
        "webhook"
      ],
      "primary_integrations": [
        "htmlextract",
        "httprequest",
        "notion"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.htmlExtract",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that automates data/processes using htmlextract, httprequest, notion, triggered via webhook",
      "complexity_score": 13
    },
    {
      "original_filename": "2344_workflow_2344.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2344_workflow_2344.json",
      "workflow_name": "2344_workflow_2344",
      "suggested_filename": "ai_2344_workflow_2344_automate_n8nnodeslangchainvectorstoreinmemory_n8nnodeslang.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.vectorStoreInMemory",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "manualTrigger",
        "googleDrive",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "editImage",
        "n8n-nodes-langchain.openAi",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.vectorstoreinmemory",
        "n8n-nodes-langchain.embeddingsopenai",
        "manual"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.editImage",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.vectorstoreinmemory, n8n-nodes-langchain.embeddingsopenai, manual, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "fGq0vUaD6JoqAbDa_Query_List_of_Sign-in_IPs.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/fGq0vUaD6JoqAbDa_Query_List_of_Sign-in_IPs.json",
      "workflow_name": "Query List of Sign-in IPs",
      "suggested_filename": "util_query_automate_movebinarydata_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "moveBinaryData",
        "stickyNote",
        "set",
        "httpRequest",
        "convertToFile",
        "removeDuplicates",
        "formTrigger"
      ],
      "primary_integrations": [
        "movebinarydata",
        "httprequest",
        "converttofile"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.formTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using movebinarydata, httprequest, converttofile, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "Prepare CSV files with GPT-4Prepare CSV files with GPT-4.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Prepare CSV files with GPT-4Prepare CSV files with GPT-4.json",
      "workflow_name": "Prepare CSV files with GPT-4",
      "suggested_filename": "ai_prepare_automate_splitinbatches_spreadsheetfile.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "spreadsheetFile",
        "itemLists",
        "stickyNote",
        "set",
        "openAi",
        "manualTrigger",
        "writeBinaryFile",
        "moveBinaryData"
      ],
      "primary_integrations": [
        "splitinbatches",
        "spreadsheetfile",
        "itemlists"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.writeBinaryFile",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, spreadsheetfile, itemlists, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "2976_workflow_2976.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2976_workflow_2976.json",
      "workflow_name": "2976_workflow_2976",
      "suggested_filename": "ai_2976_workflow_2976_automate_n8nnodeslangchainoutputparserstructured_youtube.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "youTube",
        "googleDocsTool",
        "form",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "youtube",
        "googledocs"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.googleDocsTool",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.form",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserstructured, youtube, googledocs, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "1839_workflow_1839.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1839_workflow_1839.json",
      "workflow_name": "1839_workflow_1839",
      "suggested_filename": "data_1839_workflow_1839_automate_spreadsheetfile_mysql.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "mySql",
        "manualTrigger",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "mysql",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.mySql"
      ],
      "business_description": "DATA workflow that automates data/processes using spreadsheetfile, mysql, manual, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "FDl4Ho3KYiA7MIxR_NetSuite_Rest_API_workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/FDl4Ho3KYiA7MIxR_NetSuite_Rest_API_workflow.json",
      "workflow_name": "NetSuite Rest API workflow",
      "suggested_filename": "util_netsuite_automate_webhook_manual_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "webhook",
        "manualTrigger"
      ],
      "primary_integrations": [
        "webhook",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-netsuite.netsuite",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, manual, triggered via webhook",
      "complexity_score": 5
    },
    {
      "original_filename": "112_Receive_updates_when_a_new_account_is_added_by_an_admin_in_ActiveCampaign.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/112_Receive_updates_when_a_new_account_is_added_by_an_admin_in_ActiveCampaign.json",
      "workflow_name": "Receive updates when a new account is added by an admin in ActiveCampaign",
      "suggested_filename": "ai_receive_ai_process_activecampaign.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "activeCampaignTrigger"
      ],
      "primary_integrations": [
        "activecampaign"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.activeCampaignTrigger"
      ],
      "business_description": "AI workflow that ai_processs data/processes using activecampaign, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "Ask questions about a PDF using AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Ask questions about a PDF using AI.json",
      "workflow_name": "Ask questions about a PDF using AI",
      "suggested_filename": "ai_questions_ai_process_n8nnodeslangchainchainretrievalqa_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.vectorStorePinecone",
        "googleDrive",
        "manualTrigger",
        "n8n-nodes-langchain.retrieverVectorStore",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.embeddingsopenai"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainretrievalqa, n8n-nodes-langchain.chat, n8n-nodes-langchain.embeddingsopenai, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "113_Get_DNS_entries.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/113_Get_DNS_entries.json",
      "workflow_name": "Get DNS entries",
      "suggested_filename": "util_entries_read_functionitem_uproc.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "functionItem",
        "uproc",
        "manualTrigger"
      ],
      "primary_integrations": [
        "functionitem",
        "uproc",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.uproc"
      ],
      "business_description": "UTIL workflow that reads data/processes using functionitem, uproc, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "P9Jr9s9yfcDXTe9R_n8n_Subworkflow_Dependency_Graph_&_Auto-Tagging.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/P9Jr9s9yfcDXTe9R_n8n_Subworkflow_Dependency_Graph_&_Auto-Tagging.json",
      "workflow_name": "n8n Subworkflow Dependency Graph & Auto-Tagging",
      "suggested_filename": "util_subworkflow_automate_splitinbatches_respondtowebhook_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "respondToWebhook",
        "if",
        "quickChart",
        "set",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "n8nTrigger",
        "webhook",
        "splitOut",
        "code",
        "aggregate",
        "n8n",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "respondtowebhook",
        "quickchart"
      ],
      "total_nodes": 40,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.code",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.n8nTrigger",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.quickChart",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, respondtowebhook, quickchart, triggered via cron",
      "complexity_score": 56
    },
    {
      "original_filename": "6bMVzmrbPexvBe6q_YouTube_to_Airtable_Anonym.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/6bMVzmrbPexvBe6q_YouTube_to_Airtable_Anonym.json",
      "workflow_name": "YouTube to Airtable Anonym",
      "suggested_filename": "ai_youtube_ai_process_httprequest_schedule_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "n8n-nodes-langchain.informationExtractor",
        "airtable",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "n8n-nodes-langchain.informationextractor"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, schedule, n8n-nodes-langchain.informationextractor, triggered via cron",
      "complexity_score": 20
    },
    {
      "original_filename": "539_workflow_539.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/539_workflow_539.json",
      "workflow_name": "539_workflow_539",
      "suggested_filename": "util_539_workflow_539_automate_rundeck_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "rundeck",
        "manualTrigger"
      ],
      "primary_integrations": [
        "rundeck",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.rundeck"
      ],
      "business_description": "UTIL workflow that automates data/processes using rundeck, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "PHp3gKoyYfSztbTB_Automated_Daily_Weather_Data_Fetcher_and_Storage.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/PHp3gKoyYfSztbTB_Automated_Daily_Weather_Data_Fetcher_and_Storage.json",
      "workflow_name": "Automated Daily Weather Data Fetcher and Storage",
      "suggested_filename": "ai_automated_ai_process_schedule_httprequest_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "scheduleTrigger",
        "stickyNote",
        "httpRequest",
        "airtable"
      ],
      "primary_integrations": [
        "schedule",
        "httprequest",
        "airtable"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using schedule, httprequest, airtable, triggered via cron",
      "complexity_score": 9
    },
    {
      "original_filename": "RMxcTgpFGpE3RdLZ_Telegram_Tron_Wallet_Blacklist_Checker.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/RMxcTgpFGpE3RdLZ_Telegram_Tron_Wallet_Blacklist_Checker.json",
      "workflow_name": "Telegram Tron Wallet Blacklist Checker",
      "suggested_filename": "comm_telegram_validate_httprequest_telegram.json",
      "category": "COMM",
      "business_function": "validate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "httpRequest",
        "telegramTrigger",
        "telegram",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "telegram",
        "telegram"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that validates data/processes using httprequest, telegram, telegram, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "lifB7iUXlDzr5dmI_LinkedIn_Profile_Discovery.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/lifB7iUXlDzr5dmI_LinkedIn_Profile_Discovery.json",
      "workflow_name": "LinkedIn Profile Discovery",
      "suggested_filename": "data_linkedin_automate_googlesheets_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "code",
        "manualTrigger",
        "airtop"
      ],
      "primary_integrations": [
        "googlesheets",
        "manual",
        "airtop"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.airtop",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, manual, airtop, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "1534_workflow_1534.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1534_workflow_1534.json",
      "workflow_name": "1534_workflow_1534",
      "suggested_filename": "comm_1534_workflow_1534_automate_splitinbatches_slack_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "slack",
        "if",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "manualTrigger",
        "github",
        "code",
        "switch",
        "n8n",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "slack",
        "httprequest"
      ],
      "total_nodes": 26,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.github",
        "n8n-nodes-base.github",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.github",
        "n8n-nodes-base.set"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, slack, httprequest, triggered via cron",
      "complexity_score": 42
    },
    {
      "original_filename": "2016_workflow_2016.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2016_workflow_2016.json",
      "workflow_name": "2016_workflow_2016",
      "suggested_filename": "data_2016_workflow_2016_automate_httprequest_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "googlesheets"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, manual, googlesheets, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "27_workflow_27.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/27_workflow_27.json",
      "workflow_name": "27_workflow_27",
      "suggested_filename": "comm_27_workflow_27_automate_telegram_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "telegramTrigger",
        "telegram",
        "if"
      ],
      "primary_integrations": [
        "telegram",
        "telegram"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if"
      ],
      "business_description": "COMM workflow that automates data/processes using telegram, telegram, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "mW6b4dMHkIDfnaIj_My_workflow_4.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/mW6b4dMHkIDfnaIj_My_workflow_4.json",
      "workflow_name": "My workflow 4",
      "suggested_filename": "comm_automate_emailsend_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "emailSend",
        "httpRequest",
        "webhook",
        "telegram",
        "function"
      ],
      "primary_integrations": [
        "emailsend",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.function",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.function",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "COMM workflow that automates data/processes using emailsend, httprequest, webhook, triggered via webhook",
      "complexity_score": 11
    },
    {
      "original_filename": "2419_workflow_2419.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2419_workflow_2419.json",
      "workflow_name": "2419_workflow_2419",
      "suggested_filename": "ai_2419_workflow_2419_automate_splitinbatches_n8nnodeslangchainchainllm_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "linear",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "googleDrive",
        "manualTrigger",
        "aggregate",
        "googleSheets",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 34,
      "node_types": [
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.linear",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via cron",
      "complexity_score": 50
    },
    {
      "original_filename": "Host Your Own AI Deep Research Agent with n8n, Apify and OpenAI o3.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Host Your Own AI Deep Research Agent with n8n, Apify and OpenAI o3.json",
      "workflow_name": "Host Your Own AI Deep Research Agent with n8n, Apify and OpenAI o3",
      "suggested_filename": "ai_host_ai_process_generic.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [],
      "primary_integrations": [],
      "total_nodes": 0,
      "node_types": [],
      "business_description": "AI workflow that ai_processs data/processes using generic components, triggered via manual",
      "complexity_score": 0
    },
    {
      "original_filename": "3923_workflow_3923.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3923_workflow_3923.json",
      "workflow_name": "3923_workflow_3923",
      "suggested_filename": "comm_3923_workflow_3923_automate_gmail_httprequest.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "if",
        "noOp",
        "stickyNote",
        "set",
        "gmail",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "code",
        "googleSheets",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "manual"
      ],
      "total_nodes": 46,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, httprequest, manual, triggered via manual",
      "complexity_score": 60
    },
    {
      "original_filename": "Write a WordPress post with AI (starting from a few keywords).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Write a WordPress post with AI (starting from a few keywords).json",
      "workflow_name": "Write a WordPress post with AI (starting from a few keywords)",
      "suggested_filename": "ai_write_ai_process_wordpress_respondtowebhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "wordpress",
        "respondToWebhook",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.toolWikipedia",
        "splitOut",
        "code",
        "n8n-nodes-langchain.openAi",
        "formTrigger"
      ],
      "primary_integrations": [
        "wordpress",
        "respondtowebhook",
        "httprequest"
      ],
      "total_nodes": 37,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using wordpress, respondtowebhook, httprequest, triggered via manual",
      "complexity_score": 49
    },
    {
      "original_filename": "2074_workflow_2074.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2074_workflow_2074.json",
      "workflow_name": "2074_workflow_2074",
      "suggested_filename": "util_2074_workflow_2074_automate_datetime_mondaycom.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "dateTime",
        "mondayCom",
        "errorTrigger",
        "code"
      ],
      "primary_integrations": [
        "datetime",
        "mondaycom",
        "error"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.mondayCom",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.errorTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.mondayCom"
      ],
      "business_description": "UTIL workflow that automates data/processes using datetime, mondaycom, error, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "Automatic Background Removal for Images in Google Drive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Automatic Background Removal for Images in Google Drive.json",
      "workflow_name": "Remove Advanced Background from Google Drive Images",
      "suggested_filename": "util_remove_delete_splitinbatches_httprequest.json",
      "category": "UTIL",
      "business_function": "delete",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "merge",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "googleDrive",
        "editImage",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "googledrive"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.splitInBatches"
      ],
      "business_description": "UTIL workflow that deletes data/processes using splitinbatches, httprequest, googledrive, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "eOUewYsEzJmQixI6_Chat_with_Postgresql_Database.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/eOUewYsEzJmQixI6_Chat_with_Postgresql_Database.json",
      "workflow_name": "Chat with Postgresql Database",
      "suggested_filename": "ai_chat_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "postgresTool",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "postgres"
      ],
      "total_nodes": 11,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.postgresTool",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.postgresTool",
        "n8n-nodes-base.postgresTool"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, postgres, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "2_Discord_Intro.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2_Discord_Intro.json",
      "workflow_name": "Discord Intro",
      "suggested_filename": "comm_discord_automate_manual_discord.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "discord"
      ],
      "primary_integrations": [
        "manual",
        "discord"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.discord"
      ],
      "business_description": "COMM workflow that automates data/processes using manual, discord, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2223_Dynamic_credentials_using_expressions.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2223_Dynamic_credentials_using_expressions.json",
      "workflow_name": "Dynamic credentials using expressions",
      "suggested_filename": "util_dynamic_automate_respondtowebhook_nasa.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "respondToWebhook",
        "nasa",
        "formTrigger"
      ],
      "primary_integrations": [
        "respondtowebhook",
        "nasa",
        "form"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.nasa",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using respondtowebhook, nasa, form, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "Xfz2YRxH6qFfpqHw_SEO_Blog_Generator_with_GPT-4o,_Perplexity,_and_Telegram_Integration.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Xfz2YRxH6qFfpqHw_SEO_Blog_Generator_with_GPT-4o,_Perplexity,_and_Telegram_Integration.json",
      "workflow_name": "SEO Blog Generator with GPT-4o, Perplexity, and Telegram Integration",
      "suggested_filename": "ai_blog_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainoutputpars.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "telegramTrigger",
        "aggregate",
        "telegram",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.telegramTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "PoiRk5w0xd1ysq4U_AI_Agent_to_chat_with_you_Search_Console_Data,_using_OpenAI_and_Postgres.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/PoiRk5w0xd1ysq4U_AI_Agent_to_chat_with_you_Search_Console_Data,_using_OpenAI_and_Postgres.json",
      "workflow_name": "AI Agent to chat with you Search Console Data, using OpenAI and Postgres",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorypostgreschat_httprequest_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryPostgresChat",
        "stickyNote",
        "set",
        "httpRequest",
        "aggregate",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "switch",
        "executeWorkflowTrigger",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorypostgreschat",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 30,
      "node_types": [
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorypostgreschat, httprequest, webhook, triggered via webhook",
      "complexity_score": 42
    },
    {
      "original_filename": "61_Receive_updates_when_a_customer_is_created_in_HelpScout.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/61_Receive_updates_when_a_customer_is_created_in_HelpScout.json",
      "workflow_name": "Receive updates when a customer is created in HelpScout",
      "suggested_filename": "biz_receive_create_contact_helpscout.json",
      "category": "BIZ",
      "business_function": "create_contact",
      "trigger_type": "manual",
      "integrations": [
        "helpScoutTrigger"
      ],
      "primary_integrations": [
        "helpscout"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.helpScoutTrigger"
      ],
      "business_description": "BIZ workflow that create_contacts data/processes using helpscout, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "06v55r6E13Wfvo66_Gumroad_sale_trigger.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/06v55r6E13Wfvo66_Gumroad_sale_trigger.json",
      "workflow_name": "Gumroad sale trigger",
      "suggested_filename": "comm_gumroad_automate_mailerlite_httprequest.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "mailerLite",
        "httpRequest",
        "googleSheets",
        "gumroadTrigger"
      ],
      "primary_integrations": [
        "mailerlite",
        "httprequest",
        "googlesheets"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.gumroadTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.mailerLite",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using mailerlite, httprequest, googlesheets, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "3564_workflow_3564.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3564_workflow_3564.json",
      "workflow_name": "3564_workflow_3564",
      "suggested_filename": "ai_3564_workflow_3564_automate_emailsend_httprequest_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "stickyNote",
        "emailSend",
        "set",
        "httpRequest",
        "rssFeedRead",
        "html",
        "scheduleTrigger",
        "sort",
        "splitOut",
        "code",
        "aggregate",
        "function",
        "n8n-nodes-langchain.openAi",
        "filter"
      ],
      "primary_integrations": [
        "emailsend",
        "httprequest",
        "rssfeedread"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.function",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.html",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.html",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.scheduleTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using emailsend, httprequest, rssfeedread, triggered via cron",
      "complexity_score": 38
    },
    {
      "original_filename": "3893_workflow_3893.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3893_workflow_3893.json",
      "workflow_name": "3893_workflow_3893",
      "suggested_filename": "ai_3893_workflow_3893_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "microsoftOutlook",
        "markdown",
        "scheduleTrigger",
        "jira",
        "n8n-nodes-langchain.lmChatOpenAi",
        "removeDuplicates"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "microsoftoutlook"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.microsoftOutlook",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, microsoftoutlook, triggered via cron",
      "complexity_score": 21
    },
    {
      "original_filename": "0JsHmmyeHw5Ffz5m_HN_Who_is_Hiring_Scrape.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/0JsHmmyeHw5Ffz5m_HN_Who_is_Hiring_Scrape.json",
      "workflow_name": "HN Who is Hiring Scrape",
      "suggested_filename": "ai_hiring_extract_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstructu.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "manualTrigger",
        "code",
        "limit",
        "airtable",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that extracts data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "2177_workflow_2177.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2177_workflow_2177.json",
      "workflow_name": "2177_workflow_2177",
      "suggested_filename": "comm_2177_workflow_2177_automate_schedule_telegram_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "scheduleTrigger",
        "telegram",
        "aggregate",
        "n8n",
        "filter"
      ],
      "primary_integrations": [
        "schedule",
        "telegram",
        "n8n"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using schedule, telegram, n8n, triggered via cron",
      "complexity_score": 17
    },
    {
      "original_filename": "1455_workflow_1455.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1455_workflow_1455.json",
      "workflow_name": "1455_workflow_1455",
      "suggested_filename": "data_1455_workflow_1455_automate_crypto_httprequest_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "crypto",
        "if",
        "set",
        "httpRequest",
        "webhook",
        "airtable",
        "switch",
        "function",
        "executeWorkflow",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "crypto",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.function",
        "n8n-nodes-base.crypto",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "DATA workflow that automates data/processes using crypto, httprequest, webhook, triggered via webhook",
      "complexity_score": 26
    },
    {
      "original_filename": "9Or3kzIEI2tskRyR_Google_Trend_Data_Extract,_Summarization_with_Bright_Data_&_Google_Gemini.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/9Or3kzIEI2tskRyR_Google_Trend_Data_Extract,_Summarization_with_Bright_Data_&_Google_Gemini.json",
      "workflow_name": "Google Trend Data Extract, Summarization with Bright Data & Google Gemini",
      "suggested_filename": "ai_google_extract_n8nnodeslangchainchainllm_gmail.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "gmail",
        "httpRequest",
        "n8n-nodes-langchain.chainSummarization",
        "readWriteFile",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.informationExtractor",
        "function"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "gmail",
        "httprequest"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.function",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.readWriteFile",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "AI workflow that extracts data/processes using n8n-nodes-langchain.chainllm, gmail, httprequest, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "2225_workflow_2225.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2225_workflow_2225.json",
      "workflow_name": "2225_workflow_2225",
      "suggested_filename": "util_2225_workflow_2225_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "switch"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, triggered via webhook",
      "complexity_score": 15
    },
    {
      "original_filename": "3869_workflow_3869.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3869_workflow_3869.json",
      "workflow_name": "3869_workflow_3869",
      "suggested_filename": "util_3869_workflow_3869_automate_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "manual"
      ],
      "total_nodes": 9,
      "node_types": [
        "@custom-js/n8n-nodes-pdf-toolkit.html2Pdf",
        "@custom-js/n8n-nodes-pdf-toolkit.CompressPDF",
        "n8n-nodes-base.manualTrigger",
        "@custom-js/n8n-nodes-pdf-toolkit.CompressPDF",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "160_Analyze_a_URL_and_get_the_job_details_using_the_Cortex_node.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/160_Analyze_a_URL_and_get_the_job_details_using_the_Cortex_node.json",
      "workflow_name": "Analyze a URL and get the job details using the Cortex node",
      "suggested_filename": "ai_analyze_analyze_cortex_manual.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [
        "cortex",
        "manualTrigger"
      ],
      "primary_integrations": [
        "cortex",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.cortex",
        "n8n-nodes-base.cortex"
      ],
      "business_description": "AI workflow that analyzes data/processes using cortex, manual, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "1958_workflow_1958.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1958_workflow_1958.json",
      "workflow_name": "1958_workflow_1958",
      "suggested_filename": "ai_1958_workflow_1958_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangcha.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.retrieverWorkflow"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "n8n-nodes-langchain.lmchatopenai",
        "manual"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.retrieverWorkflow"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainretrievalqa, n8n-nodes-langchain.lmchatopenai, manual, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "Notion knowledge base AI assistant.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Notion knowledge base AI assistant.json",
      "workflow_name": "Notion knowledge base AI assistant",
      "suggested_filename": "ai_notion_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "notion",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "notion"
      ],
      "total_nodes": 12,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.notion",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, notion, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "3636_workflow_3636.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3636_workflow_3636.json",
      "workflow_name": "3636_workflow_3636",
      "suggested_filename": "ai_3636_workflow_3636_automate_httprequest_n8nnodeslangchainmcp.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "filter",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "aggregate",
        "n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "splitOut",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "code",
        "switch",
        "manualTrigger",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "executeWorkflowTrigger",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.mcp",
        "n8n-nodes-langchain.embeddingsopenai"
      ],
      "total_nodes": 44,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, n8n-nodes-langchain.mcp, n8n-nodes-langchain.embeddingsopenai, triggered via manual",
      "complexity_score": 61
    },
    {
      "original_filename": "2648_workflow_2648.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2648_workflow_2648.json",
      "workflow_name": "2648_workflow_2648",
      "suggested_filename": "ai_2648_workflow_2648_automate_wordpress_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "wordpress",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "httpRequest",
        "aggregate",
        "markdown",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "manualTrigger",
        "splitOut",
        "limit",
        "html"
      ],
      "primary_integrations": [
        "wordpress",
        "n8n-nodes-langchain.chainllm",
        "httprequest"
      ],
      "total_nodes": 27,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.html",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that automates data/processes using wordpress, n8n-nodes-langchain.chainllm, httprequest, triggered via manual",
      "complexity_score": 41
    },
    {
      "original_filename": "a4GTp998ENMMfuqK_Save_new_Files_received_on_Telegram_to_Google_Drive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/a4GTp998ENMMfuqK_Save_new_Files_received_on_Telegram_to_Google_Drive.json",
      "workflow_name": "Save new Files received on Telegram to Google Drive",
      "suggested_filename": "comm_save_automate_telegram_googledrive.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "telegramTrigger",
        "googleDrive",
        "if"
      ],
      "primary_integrations": [
        "telegram",
        "googledrive"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleDrive"
      ],
      "business_description": "COMM workflow that automates data/processes using telegram, googledrive, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "91_Send_daily_weather_updates_via_a_push_notification.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/91_Send_daily_weather_updates_via_a_push_notification.json",
      "workflow_name": "Send daily weather updates via a push notification",
      "suggested_filename": "ai_send_ai_process_openweathermap_pushover_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "openWeatherMap",
        "pushover",
        "cron"
      ],
      "primary_integrations": [
        "openweathermap",
        "pushover",
        "cron"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.pushover",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.openWeatherMap"
      ],
      "business_description": "AI workflow that ai_processs data/processes using openweathermap, pushover, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "544_workflow_544.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/544_workflow_544.json",
      "workflow_name": "544_workflow_544",
      "suggested_filename": "util_544_workflow_544_automate_bannerbear_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "bannerbear",
        "manualTrigger"
      ],
      "primary_integrations": [
        "bannerbear",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.bannerbear"
      ],
      "business_description": "UTIL workflow that automates data/processes using bannerbear, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "lWfWe93aNGuNPLBz_Automate_Your_Customer_Service_With_WhatsApp_Business_Cloud_&_Asana.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/lWfWe93aNGuNPLBz_Automate_Your_Customer_Service_With_WhatsApp_Business_Cloud_&_Asana.json",
      "workflow_name": "Automate Your Customer Service With WhatsApp Business Cloud & Asana",
      "suggested_filename": "comm_automate_automate_whatsapp_asana.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "whatsApp",
        "asana",
        "formTrigger"
      ],
      "primary_integrations": [
        "whatsapp",
        "asana",
        "form"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.asana",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using whatsapp, asana, form, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "2531_workflow_2531.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2531_workflow_2531.json",
      "workflow_name": "2531_workflow_2531",
      "suggested_filename": "util_2531_workflow_2531_automate_splitinbatches_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "if",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "manualTrigger",
        "xml",
        "n8n",
        "theHiveProject",
        "executeWorkflow",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.theHiveProject",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.theHiveProject",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, httprequest, schedule, triggered via cron",
      "complexity_score": 37
    },
    {
      "original_filename": "AI Powered Web Scraping with Jina, Google Sheets and OpenAI _ the EASY way.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Powered Web Scraping with Jina, Google Sheets and OpenAI _ the EASY way.json",
      "workflow_name": "AI Powered Web Scraping with Jina, Google Sheets and OpenAI _ the EASY way",
      "suggested_filename": "ai_powered_ai_process_httprequest_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "splitOut",
        "manualTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai",
        "n8n-nodes-langchain.informationextractor"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleSheets",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, n8n-nodes-langchain.lmchatopenai, n8n-nodes-langchain.informationextractor, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "2582_workflow_2582.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2582_workflow_2582.json",
      "workflow_name": "2582_workflow_2582",
      "suggested_filename": "ai_2582_workflow_2582_automate_n8nnodeslangchainchainllm_gmail_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "aggregate",
        "scheduleTrigger",
        "googleCalendar",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "splitOut",
        "switch",
        "whatsApp",
        "html",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "gmail",
        "httprequest"
      ],
      "total_nodes": 61,
      "node_types": [
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleCalendar",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.whatsApp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.html",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.html",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.html",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, gmail, httprequest, triggered via cron",
      "complexity_score": 79
    },
    {
      "original_filename": "UTM Link Creator & QR Code Generator with Scheduled Google Analytics Reports.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/UTM Link Creator & QR Code Generator with Scheduled Google Analytics Reports.json",
      "workflow_name": "UTM Link Creator & QR Code Generator with Scheduled Google Analytics Reports",
      "suggested_filename": "ai_link_report_n8nnodeslangchainmemorybufferwindow_gmail_cron.json",
      "category": "AI",
      "business_function": "report",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "gmail",
        "set",
        "googleAnalyticsTool",
        "httpRequest",
        "stickyNote",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "airtable",
        "code",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "gmail",
        "googleanalytics"
      ],
      "total_nodes": 14,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.googleAnalyticsTool",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that reports data/processes using n8n-nodes-langchain.memorybufferwindow, gmail, googleanalytics, triggered via cron",
      "complexity_score": 26
    },
    {
      "original_filename": "2972_workflow_2972.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2972_workflow_2972.json",
      "workflow_name": "2972_workflow_2972",
      "suggested_filename": "ai_2972_workflow_2972_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "if",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "n8n-nodes-langchain.textClassifier",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "limit",
        "aggregate",
        "html",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.textclassifier"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.html",
        "n8n-nodes-base.html",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.textclassifier, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "ALg2eFzN4AsHIf3R_✍️🌄_Your_First_Wordpress_Content_Creator_-_Quick_Start.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ALg2eFzN4AsHIf3R_✍️🌄_Your_First_Wordpress_Content_Creator_-_Quick_Start.json",
      "workflow_name": "✍️🌄 Your First Wordpress Content Creator - Quick Start",
      "suggested_filename": "ai_your_automate_wordpress_n8nnodeslangchainoutputparserstructured.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wordpress",
        "if",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "markdown",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "code",
        "googleDrive",
        "telegram"
      ],
      "primary_integrations": [
        "wordpress",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 39,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using wordpress, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via manual",
      "complexity_score": 52
    },
    {
      "original_filename": "pcLi17oUJK9pSaee_Web_Server_Monitor..json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/pcLi17oUJK9pSaee_Web_Server_Monitor..json",
      "workflow_name": "Web Server Monitor.",
      "suggested_filename": "comm_server_monitor_gmail_httprequest_cron.json",
      "category": "COMM",
      "business_function": "monitor",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "gmail",
        "httpRequest",
        "scheduleTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "COMM workflow that monitors data/processes using gmail, httprequest, schedule, triggered via cron",
      "complexity_score": 12
    },
    {
      "original_filename": "cGqPi5Uy2u1ShmoO_💻_Schedule_workflow_activity_time.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/cGqPi5Uy2u1ShmoO_💻_Schedule_workflow_activity_time.json",
      "workflow_name": "💻 Schedule workflow activity time",
      "suggested_filename": "util_schedule_automate_schedule_n8n_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "scheduleTrigger",
        "n8n"
      ],
      "primary_integrations": [
        "schedule",
        "n8n"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using schedule, n8n, triggered via cron",
      "complexity_score": 18
    },
    {
      "original_filename": "2436_workflow_2436.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2436_workflow_2436.json",
      "workflow_name": "2436_workflow_2436",
      "suggested_filename": "ai_2436_workflow_2436_automate_webhook_n8nnodeslangchainlmchatopenai_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "n8n-nodes-langchain.lmchatopenai",
        "n8n-nodes-langchain.agent"
      ],
      "total_nodes": 7,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "AI workflow that automates data/processes using webhook, n8n-nodes-langchain.lmchatopenai, n8n-nodes-langchain.agent, triggered via webhook",
      "complexity_score": 12
    },
    {
      "original_filename": "WUX0BsRA1dbzTKnl_Email_mailbox_as_Todoist_tasks.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/WUX0BsRA1dbzTKnl_Email_mailbox_as_Todoist_tasks.json",
      "workflow_name": "Email mailbox as Todoist tasks",
      "suggested_filename": "ai_email_ai_process_n8nnodeslangchainoutputparserstructured_gmail_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "gmail",
        "noOp",
        "stickyNote",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "todoist",
        "emailReadImap"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "gmail",
        "schedule"
      ],
      "total_nodes": 25,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.if",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.todoist",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.outputparserstructured, gmail, schedule, triggered via cron",
      "complexity_score": 37
    },
    {
      "original_filename": "1114_workflow_1114.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1114_workflow_1114.json",
      "workflow_name": "1114_workflow_1114",
      "suggested_filename": "util_1114_workflow_1114_automate_microsofttodo_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "microsoftToDo",
        "manualTrigger"
      ],
      "primary_integrations": [
        "microsofttodo",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.microsoftToDo",
        "n8n-nodes-base.microsoftToDo",
        "n8n-nodes-base.microsoftToDo"
      ],
      "business_description": "UTIL workflow that automates data/processes using microsofttodo, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2485_workflow_2485.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2485_workflow_2485.json",
      "workflow_name": "2485_workflow_2485",
      "suggested_filename": "util_2485_workflow_2485_automate_cron_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "cron",
        "httpRequest",
        "filter"
      ],
      "primary_integrations": [
        "cron",
        "httprequest"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.filter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using cron, httprequest, triggered via cron",
      "complexity_score": 21
    },
    {
      "original_filename": "2322_workflow_2322.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2322_workflow_2322.json",
      "workflow_name": "2322_workflow_2322",
      "suggested_filename": "ai_2322_workflow_2322_automate_httprequest_bannerbear.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "bannerbear",
        "n8n-nodes-langchain.openAi",
        "discord",
        "formTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "bannerbear",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.bannerbear",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.discord",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, bannerbear, n8n-nodes-langchain.openai, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "OvuZIXwt9mdU2JGK_FLUX-fill_standalone.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/OvuZIXwt9mdU2JGK_FLUX-fill_standalone.json",
      "workflow_name": "FLUX-fill standalone",
      "suggested_filename": "util_flux_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "wait",
        "if",
        "stickyNote",
        "set",
        "noOp",
        "httpRequest",
        "webhook",
        "html",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "html"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.merge",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, html, triggered via webhook",
      "complexity_score": 28
    },
    {
      "original_filename": "2454_workflow_2454.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2454_workflow_2454.json",
      "workflow_name": "2454_workflow_2454",
      "suggested_filename": "ai_2454_workflow_2454_automate_splitinbatches_microsoftoutlook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "merge",
        "if",
        "stickyNote",
        "set",
        "microsoftOutlook",
        "markdown",
        "n8n-nodes-langchain.lmChatOllama",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "switch",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "microsoftoutlook",
        "markdown"
      ],
      "total_nodes": 36,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.set",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.microsoftOutlook",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.switch"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, microsoftoutlook, markdown, triggered via manual",
      "complexity_score": 48
    },
    {
      "original_filename": "17j2efAe10uXRc4p_Auto_WordPress_Blog_Generator_(GPT_+_Postgres_+_WP_Media).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/17j2efAe10uXRc4p_Auto_WordPress_Blog_Generator_(GPT_+_Postgres_+_WP_Media).json",
      "workflow_name": "Auto WordPress Blog Generator (GPT + Postgres + WP Media)",
      "suggested_filename": "ai_auto_automate_postgres_httprequest_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "postgres",
        "merge",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "code"
      ],
      "primary_integrations": [
        "postgres",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 46,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.code",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.postgres",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that automates data/processes using postgres, httprequest, schedule, triggered via cron",
      "complexity_score": 56
    },
    {
      "original_filename": "398_workflow_398.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/398_workflow_398.json",
      "workflow_name": "398_workflow_398",
      "suggested_filename": "comm_398_workflow_398_automate_slack_emailsend.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "if",
        "emailSend",
        "typeformTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "slack",
        "emailsend",
        "typeform"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.typeformTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, emailsend, typeform, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "3499_workflow_3499.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3499_workflow_3499.json",
      "workflow_name": "3499_workflow_3499",
      "suggested_filename": "ai_3499_workflow_3499_automate_n8nnodeslangchainmemorybufferwindow_airtable.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "airtableTool",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "airtable",
        "n8n-nodes-langchain.agent",
        "twilioTrigger",
        "twilio"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "airtable",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.twilioTrigger",
        "n8n-nodes-base.airtableTool",
        "n8n-nodes-base.airtableTool",
        "n8n-nodes-base.set",
        "n8n-nodes-base.twilio",
        "n8n-nodes-base.airtable",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.airtableTool",
        "n8n-nodes-base.airtableTool",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, airtable, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "Enrich Property Inventory Survey with Image Recognition and AI Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Enrich Property Inventory Survey with Image Recognition and AI Agent.json",
      "workflow_name": "Enrich Property Inventory Survey with Image Recognition and AI Agent",
      "suggested_filename": "ai_enrich_ai_process_n8nnodeslangchainoutputparserstructured_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "switch",
        "if",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "airtable",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.openAi",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.outputparserstructured, httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 42
    },
    {
      "original_filename": "2039_workflow_2039.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2039_workflow_2039.json",
      "workflow_name": "2039_workflow_2039",
      "suggested_filename": "ai_2039_workflow_2039_automate_pipedrive_gmail.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "pipedrive",
        "if",
        "gmailTrigger",
        "stickyNote",
        "set",
        "openAi",
        "code"
      ],
      "primary_integrations": [
        "pipedrive",
        "gmail",
        "openai"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.if",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmailTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using pipedrive, gmail, openai, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "Twitter Virtual AI Influencer.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Twitter Virtual AI Influencer.json",
      "workflow_name": "Twitter Virtual AI Influencer",
      "suggested_filename": "ai_twitter_ai_process_schedule_manual_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "scheduleTrigger",
        "manualTrigger",
        "n8n-nodes-langchain.openAi",
        "twitter"
      ],
      "primary_integrations": [
        "schedule",
        "manual",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using schedule, manual, n8n-nodes-langchain.openai, triggered via cron",
      "complexity_score": 19
    },
    {
      "original_filename": "1V1gcK6vyczRqdZC_Printify_Automation_-_Update_Title_and_Description_-_AlexK1919.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1V1gcK6vyczRqdZC_Printify_Automation_-_Update_Title_and_Description_-_AlexK1919.json",
      "workflow_name": "Printify Automation - Update Title and Description - AlexK1919",
      "suggested_filename": "ai_printify_update_splitinbatches_n8nnodeslangchaincalculator.json",
      "category": "AI",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.toolCalculator",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.toolWikipedia",
        "splitOut",
        "manualTrigger",
        "code",
        "googleSheets",
        "n8n-nodes-langchain.openAi",
        "googleSheetsTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.calculator",
        "httprequest"
      ],
      "total_nodes": 26,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.toolCalculator",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.if"
      ],
      "business_description": "AI workflow that updates data/processes using splitinbatches, n8n-nodes-langchain.calculator, httprequest, triggered via manual",
      "complexity_score": 39
    },
    {
      "original_filename": "rJNvM4vU6SLUeC1d_Sync_Youtube_Video_Urls_with_Google_Sheets.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/rJNvM4vU6SLUeC1d_Sync_Youtube_Video_Urls_with_Google_Sheets.json",
      "workflow_name": "Sync Youtube Video Urls with Google Sheets",
      "suggested_filename": "data_sync_sync_httprequest_manual.json",
      "category": "DATA",
      "business_function": "sync",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "googlesheets"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that syncs data/processes using httprequest, manual, googlesheets, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "3463_workflow_3463.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3463_workflow_3463.json",
      "workflow_name": "3463_workflow_3463",
      "suggested_filename": "data_3463_workflow_3463_automate_splitinbatches_rssfeedread_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "wait",
        "stickyNote",
        "set",
        "rssFeedRead",
        "markdown",
        "scheduleTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "rssfeedread",
        "markdown"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using splitinbatches, rssfeedread, markdown, triggered via cron",
      "complexity_score": 32
    },
    {
      "original_filename": "515_workflow_515.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/515_workflow_515.json",
      "workflow_name": "515_workflow_515",
      "suggested_filename": "util_515_workflow_515_automate_writebinaryfile_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "writeBinaryFile",
        "manualTrigger",
        "googleDrive"
      ],
      "primary_integrations": [
        "writebinaryfile",
        "manual",
        "googledrive"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.writeBinaryFile"
      ],
      "business_description": "UTIL workflow that automates data/processes using writebinaryfile, manual, googledrive, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "eF84e2NyJWTCVClW_Create_Custom_Presentations_per_Lead.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/eF84e2NyJWTCVClW_Create_Custom_Presentations_per_Lead.json",
      "workflow_name": "Create Custom Presentations per Lead",
      "suggested_filename": "biz_create_create_googleslides_googledrive.json",
      "category": "BIZ",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "googleSlides",
        "stickyNote",
        "googleDrive",
        "extractFromFile",
        "switch",
        "googleSheets",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "googleslides",
        "googledrive",
        "extractfromfile"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleSlides",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.googleDrive"
      ],
      "business_description": "BIZ workflow that creates data/processes using googleslides, googledrive, extractfromfile, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "2070_workflow_2070.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2070_workflow_2070.json",
      "workflow_name": "2070_workflow_2070",
      "suggested_filename": "comm_2070_workflow_2070_automate_slack_httprequest.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "stickyNote",
        "set",
        "httpRequest",
        "airtable",
        "code",
        "airtableTrigger"
      ],
      "primary_integrations": [
        "slack",
        "httprequest",
        "airtable"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtableTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, httprequest, airtable, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "znRwva47HzXesOYk_Travel_AssistantAgent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/znRwva47HzXesOYk_Travel_AssistantAgent.json",
      "workflow_name": "Travel AssistantAgent",
      "suggested_filename": "ai_travel_automate_n8nnodeslangchainmemorymongodbchat_n8nnodeslangchainchat_webh.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.memoryMongoDbChat",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "webhook",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.vectorStoreMongoDBAtlas",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorymongodbchat",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.embeddingsopenai"
      ],
      "total_nodes": 14,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.memoryMongoDbChat",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.vectorStoreMongoDBAtlas",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.vectorStoreMongoDBAtlas",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorymongodbchat, n8n-nodes-langchain.chat, n8n-nodes-langchain.embeddingsopenai, triggered via webhook",
      "complexity_score": 24
    },
    {
      "original_filename": "1583_workflow_1583.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1583_workflow_1583.json",
      "workflow_name": "1583_workflow_1583",
      "suggested_filename": "comm_1583_workflow_1583_automate_nocodb_httprequest.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "nocoDb",
        "if",
        "stickyNote",
        "httpRequest",
        "telegramTrigger",
        "telegram",
        "switch",
        "function"
      ],
      "primary_integrations": [
        "nocodb",
        "httprequest",
        "telegram"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.function",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.function",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.function",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using nocodb, httprequest, telegram, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "lemlist __ GPT-3_ Supercharge your sales workflows.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/lemlist __ GPT-3_ Supercharge your sales workflows.json",
      "workflow_name": "lemlist __ GPT-3_ Supercharge your sales workflows",
      "suggested_filename": "ai_lemlist_automate_generic.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [],
      "primary_integrations": [],
      "total_nodes": 0,
      "node_types": [],
      "business_description": "AI workflow that automates data/processes using generic components, triggered via manual",
      "complexity_score": 0
    },
    {
      "original_filename": "543_workflow_543.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/543_workflow_543.json",
      "workflow_name": "543_workflow_543",
      "suggested_filename": "util_543_workflow_543_automate_xero_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "xero",
        "manualTrigger"
      ],
      "primary_integrations": [
        "xero",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.xero"
      ],
      "business_description": "UTIL workflow that automates data/processes using xero, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2764_workflow_2764.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2764_workflow_2764.json",
      "workflow_name": "2764_workflow_2764",
      "suggested_filename": "util_2764_workflow_2764_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "extractFromFile",
        "googleDrive"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "extractfromfile"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, extractfromfile, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "xaC6zL4bWBo14xyJ_YouTube_Comment_Sentiment_Analyzer.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/xaC6zL4bWBo14xyJ_YouTube_Comment_Sentiment_Analyzer.json",
      "workflow_name": "YouTube Comment Sentiment Analyzer",
      "suggested_filename": "ai_youtube_analyze_httprequest_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "manualTrigger",
        "googleSheets",
        "n8n-nodes-langchain.sentimentAnalysis"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai",
        "manual"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.sentimentAnalysis",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that analyzes data/processes using httprequest, n8n-nodes-langchain.lmchatopenai, manual, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "Chat with PDF docs using AI (quoting sources).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Chat with PDF docs using AI (quoting sources).json",
      "workflow_name": "Chat with PDF docs using AI (quoting sources)",
      "suggested_filename": "ai_chat_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruct.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "googleDrive",
        "code",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.vectorStorePinecone",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "1394_workflow_1394.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1394_workflow_1394.json",
      "workflow_name": "1394_workflow_1394",
      "suggested_filename": "data_1394_workflow_1394_automate_awstranscribe_googlesheets.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "set",
        "awsTranscribe",
        "googleSheets",
        "awsS3",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "awstranscribe",
        "googlesheets",
        "awss3"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.awsTranscribe",
        "n8n-nodes-base.awsTranscribe",
        "n8n-nodes-base.awsS3",
        "n8n-nodes-base.awsS3",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.wait"
      ],
      "business_description": "DATA workflow that automates data/processes using awstranscribe, googlesheets, awss3, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "3216_workflow_3216.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3216_workflow_3216.json",
      "workflow_name": "3216_workflow_3216",
      "suggested_filename": "content_3216_workflow_3216_automate_emailsend_httprequest_cron.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "filter",
        "if",
        "stickyNote",
        "emailSend",
        "httpRequest",
        "rssFeedRead",
        "stopAndError",
        "scheduleTrigger",
        "splitOut",
        "youTube"
      ],
      "primary_integrations": [
        "emailsend",
        "httprequest",
        "rssfeedread"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter"
      ],
      "business_description": "CONTENT workflow that automates data/processes using emailsend, httprequest, rssfeedread, triggered via cron",
      "complexity_score": 28
    },
    {
      "original_filename": "Force AI to use a specific output format.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Force AI to use a specific output format.json",
      "workflow_name": "[AI/LangChain] Output Parser 4",
      "suggested_filename": "ai_langchain_ai_process_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchai.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "1547_Create_an_Onfleet_task_when_a_file_in_Google_Drive_is_updated.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1547_Create_an_Onfleet_task_when_a_file_in_Google_Drive_is_updated.json",
      "workflow_name": "Create an Onfleet task when a file in Google Drive is updated",
      "suggested_filename": "util_create_create_task_onfleet_googledrive.json",
      "category": "UTIL",
      "business_function": "create_task",
      "trigger_type": "manual",
      "integrations": [
        "onfleet",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "onfleet",
        "googledrive"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.onfleet"
      ],
      "business_description": "UTIL workflow that create_tasks data/processes using onfleet, googledrive, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2173_workflow_2173.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2173_workflow_2173.json",
      "workflow_name": "2173_workflow_2173",
      "suggested_filename": "ai_2173_workflow_2173_automate_form_openai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "formTrigger",
        "openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "form",
        "openai",
        "respondtowebhook"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that automates data/processes using form, openai, respondtowebhook, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "ax8PJlp1UDb6EGFt_Telegram_AI_Langchain_bot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ax8PJlp1UDb6EGFt_Telegram_AI_Langchain_bot.json",
      "workflow_name": "Telegram AI Langchain bot",
      "suggested_filename": "ai_telegram_ai_process_n8nnodeslangchainmemorybufferwindow_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "httpRequest",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "httprequest",
        "telegram"
      ],
      "total_nodes": 12,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, httprequest, telegram, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "738_workflow_738.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/738_workflow_738.json",
      "workflow_name": "738_workflow_738",
      "suggested_filename": "data_738_workflow_738_automate_openweathermap_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "set",
        "openWeatherMap",
        "webhook",
        "airtable",
        "twilio"
      ],
      "primary_integrations": [
        "openweathermap",
        "webhook",
        "airtable"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.openWeatherMap",
        "n8n-nodes-base.twilio"
      ],
      "business_description": "DATA workflow that automates data/processes using openweathermap, webhook, airtable, triggered via webhook",
      "complexity_score": 10
    },
    {
      "original_filename": "ZpgJpdtmq6MM1jr2_AI_T-Shirt_Redesign_Workflow_from_any_Mockup_Image.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ZpgJpdtmq6MM1jr2_AI_T-Shirt_Redesign_Workflow_from_any_Mockup_Image.json",
      "workflow_name": "AI T-Shirt Redesign Workflow from any Mockup Image",
      "suggested_filename": "ai_shirt_ai_process_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "code",
        "convertToFile",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chat, httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "2_SIGNL4_Alert.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2_SIGNL4_Alert.json",
      "workflow_name": "SIGNL4 Alert",
      "suggested_filename": "comm_signl4_notify_movebinarydata_cron_cron.json",
      "category": "COMM",
      "business_function": "notify",
      "trigger_type": "cron",
      "integrations": [
        "moveBinaryData",
        "if",
        "cron",
        "signl4",
        "writeBinaryFile",
        "function",
        "readBinaryFile"
      ],
      "primary_integrations": [
        "movebinarydata",
        "cron",
        "signl4"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.writeBinaryFile",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.function",
        "n8n-nodes-base.if",
        "n8n-nodes-base.signl4",
        "n8n-nodes-base.signl4"
      ],
      "business_description": "COMM workflow that notifys data/processes using movebinarydata, cron, signl4, triggered via cron",
      "complexity_score": 16
    },
    {
      "original_filename": "2111_workflow_2111.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2111_workflow_2111.json",
      "workflow_name": "2111_workflow_2111",
      "suggested_filename": "biz_2111_workflow_2111_automate_hubspot_httprequest.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "hubspot",
        "if",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "hubspotTrigger"
      ],
      "primary_integrations": [
        "hubspot",
        "httprequest",
        "hubspot"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspotTrigger",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "BIZ workflow that automates data/processes using hubspot, httprequest, hubspot, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "1_Send_SMS_to_numbers_stored_in_Airtable_with_Twilio.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_Send_SMS_to_numbers_stored_in_Airtable_with_Twilio.json",
      "workflow_name": "Send SMS to numbers stored in Airtable with Twilio",
      "suggested_filename": "ai_send_ai_process_twilio_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "twilio",
        "manualTrigger",
        "airtable"
      ],
      "primary_integrations": [
        "twilio",
        "manual",
        "airtable"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.twilio"
      ],
      "business_description": "AI workflow that ai_processs data/processes using twilio, manual, airtable, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2667_workflow_2667.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2667_workflow_2667.json",
      "workflow_name": "2667_workflow_2667",
      "suggested_filename": "ai_2667_workflow_2667_automate_n8nnodeslangchainchainretrievalqa_n8nnodeslangcha.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "n8n-nodes-langchain.vectorStoreInMemory",
        "httpRequest",
        "splitInBatches",
        "noOp",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.retrieverVectorStore",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n",
        "respondToWebhook",
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "webhook",
        "manualTrigger",
        "switch"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "n8n-nodes-langchain.vectorstoreinmemory",
        "httprequest"
      ],
      "total_nodes": 34,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainretrievalqa, n8n-nodes-langchain.vectorstoreinmemory, httprequest, triggered via webhook",
      "complexity_score": 53
    },
    {
      "original_filename": "hKkZYhJqBNir8amQ_🎥_Gemini_AI_Video_Analysis.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/hKkZYhJqBNir8amQ_🎥_Gemini_AI_Video_Analysis.json",
      "workflow_name": "🎥 Gemini AI Video Analysis",
      "suggested_filename": "ai_gemini_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "3195_workflow_3195.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3195_workflow_3195.json",
      "workflow_name": "3195_workflow_3195",
      "suggested_filename": "ai_3195_workflow_3195_automate_n8nnodeslangchainoutputparserstructured_httpreque.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.outputParserStructured",
        "noOp",
        "stickyNote",
        "set",
        "if",
        "httpRequest",
        "googleSheetsTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "googleDrive",
        "googleSheets",
        "googleTranslate"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest",
        "googlesheets"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleTranslate",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleSheetsTrigger",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserstructured, httprequest, googlesheets, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "2586_workflow_2586.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2586_workflow_2586.json",
      "workflow_name": "2586_workflow_2586",
      "suggested_filename": "util_2586_workflow_2586_automate_httprequest_schedule_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "manual"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, schedule, manual, triggered via cron",
      "complexity_score": 16
    },
    {
      "original_filename": "597_workflow_597.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/597_workflow_597.json",
      "workflow_name": "597_workflow_597",
      "suggested_filename": "util_597_workflow_597_automate_manual_cratedb.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "manualTrigger",
        "crateDb"
      ],
      "primary_integrations": [
        "manual",
        "cratedb"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.crateDb",
        "n8n-nodes-base.crateDb",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, cratedb, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "2532_Backup_workflows_to_git_repository.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2532_Backup_workflows_to_git_repository.json",
      "workflow_name": "Backup workflows to git repository",
      "suggested_filename": "ops_backup_backup_splitinbatches_schedule_cron.json",
      "category": "OPS",
      "business_function": "backup",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "if",
        "stickyNote",
        "set",
        "scheduleTrigger",
        "github",
        "code",
        "n8n"
      ],
      "primary_integrations": [
        "splitinbatches",
        "schedule",
        "github"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.github",
        "n8n-nodes-base.set",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.github",
        "n8n-nodes-base.github",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "OPS workflow that backups data/processes using splitinbatches, schedule, github, triggered via cron",
      "complexity_score": 25
    },
    {
      "original_filename": "M8oLW9Qd59zNJzg2_Email_Summary_Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/M8oLW9Qd59zNJzg2_Email_Summary_Agent.json",
      "workflow_name": "Email Summary Agent",
      "suggested_filename": "ai_email_ai_process_gmail_schedule_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "gmail",
        "scheduleTrigger",
        "aggregate",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "gmail",
        "schedule",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, schedule, n8n-nodes-langchain.openai, triggered via cron",
      "complexity_score": 14
    },
    {
      "original_filename": "5_bash-dash_telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/5_bash-dash_telegram.json",
      "workflow_name": "bash-dash telegram",
      "suggested_filename": "comm_bash_automate_webhook_telegram_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "set",
        "webhook",
        "telegram"
      ],
      "primary_integrations": [
        "webhook",
        "telegram"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "COMM workflow that automates data/processes using webhook, telegram, triggered via webhook",
      "complexity_score": 6
    },
    {
      "original_filename": "1g8EAij2RwhNN70t_xSend_and_check_TTS_(Text-to-speech)_voice_calls_end_email_verification.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1g8EAij2RwhNN70t_xSend_and_check_TTS_(Text-to-speech)_voice_calls_end_email_verification.json",
      "workflow_name": "xSend and check TTS (Text-to-speech) voice calls end email verification",
      "suggested_filename": "ai_xsend_ai_process_emailsend_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "emailSend",
        "set",
        "httpRequest",
        "form",
        "code",
        "formTrigger"
      ],
      "primary_integrations": [
        "emailsend",
        "httprequest",
        "form"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.set",
        "n8n-nodes-base.form",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using emailsend, httprequest, form, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "1418_workflow_1418.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1418_workflow_1418.json",
      "workflow_name": "1418_workflow_1418",
      "suggested_filename": "util_1418_workflow_1418_automate_itemlists_htmlextract_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "itemLists",
        "htmlExtract",
        "dateTime",
        "set",
        "httpRequest",
        "functionItem",
        "webhook",
        "manualTrigger",
        "function",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "itemlists",
        "htmlextract",
        "datetime"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.htmlExtract",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.function",
        "n8n-nodes-base.htmlExtract"
      ],
      "business_description": "UTIL workflow that automates data/processes using itemlists, htmlextract, datetime, triggered via webhook",
      "complexity_score": 22
    },
    {
      "original_filename": "Tqa8dikBDLYEytx5_Automated_Content_SEO_Audit_Report.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Tqa8dikBDLYEytx5_Automated_Content_SEO_Audit_Report.json",
      "workflow_name": "Automated Content SEO Audit Report",
      "suggested_filename": "content_automated_report_splitinbatches_httprequest.json",
      "category": "CONTENT",
      "business_function": "report",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "wait",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "code",
        "convertToFile"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "manual"
      ],
      "total_nodes": 21,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.convertToFile"
      ],
      "business_description": "CONTENT workflow that reports data/processes using splitinbatches, httprequest, manual, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "3632_workflow_3632.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3632_workflow_3632.json",
      "workflow_name": "3632_workflow_3632",
      "suggested_filename": "util_3632_workflow_3632_automate_n8nnodeslangchainmcp_n8nnodeslangchaincode.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-langchain.toolCode",
        "n8n-nodes-langchain.toolWorkflow",
        "code",
        "switch",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.mcp",
        "n8n-nodes-langchain.code",
        "n8n-nodes-langchain.workflow"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.toolCode",
        "@n8n/n8n-nodes-langchain.toolCode",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using n8n-nodes-langchain.mcp, n8n-nodes-langchain.code, n8n-nodes-langchain.workflow, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "AI Fitness Coach Strava Data Analysis and Personalized Training Insights.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Fitness Coach Strava Data Analysis and Personalized Training Insights.json",
      "workflow_name": "AI Fitness Coach Strava Data Analysis and Personalized Training Insights",
      "suggested_filename": "ai_fitness_ai_process_gmail_emailsend.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "gmail",
        "emailSend",
        "stickyNote",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "code",
        "whatsApp",
        "stravaTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "emailsend",
        "n8n-nodes-langchain.lmchatgooglegemini"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.stravaTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.whatsApp"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, emailsend, n8n-nodes-langchain.lmchatgooglegemini, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "sUIPemKdKqmUQFt6_Extract_text_from_PDF_and_image_using_Vertex_AI_(Gemini)_into_CSV.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/sUIPemKdKqmUQFt6_Extract_text_from_PDF_and_image_using_Vertex_AI_(Gemini)_into_CSV.json",
      "workflow_name": "Extract text from PDF and image using Vertex AI (Gemini) into CSV",
      "suggested_filename": "ai_extract_ai_process_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "extractFromFile",
        "googleDrive",
        "switch",
        "convertToFile",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "n8n-nodes-langchain.lmchatgooglegemini"
      ],
      "total_nodes": 16,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, httprequest, n8n-nodes-langchain.lmchatgooglegemini, triggered via manual",
      "complexity_score": 25
    },
    {
      "original_filename": "brRSLvIkYp3mLq0K_OpenSea_Marketplace_Agent_Tool.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/brRSLvIkYp3mLq0K_OpenSea_Marketplace_Agent_Tool.json",
      "workflow_name": "OpenSea Marketplace Agent Tool",
      "suggested_filename": "ai_opensea_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainhttpreq.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 17,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "Hjyv9FkH5Oh6Yxw4_Insert_and_retrieve_documents.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Hjyv9FkH5Oh6Yxw4_Insert_and_retrieve_documents.json",
      "workflow_name": "Insert and retrieve documents",
      "suggested_filename": "ai_insert_create_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "code",
        "splitOut",
        "manualTrigger",
        "limit",
        "n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-langchain.vectorStoreMilvus",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "html",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "httprequest",
        "n8n-nodes-langchain.embeddingsopenai"
      ],
      "total_nodes": 25,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.html",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreMilvus",
        "@n8n/n8n-nodes-langchain.vectorStoreMilvus",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi"
      ],
      "business_description": "AI workflow that creates data/processes using n8n-nodes-langchain.chat, httprequest, n8n-nodes-langchain.embeddingsopenai, triggered via manual",
      "complexity_score": 40
    },
    {
      "original_filename": "QyMyf3zraY0wxXDf_Load_Prompts_from_Github_Repo_and_auto_populate_n8n_expressions.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/QyMyf3zraY0wxXDf_Load_Prompts_from_Github_Repo_and_auto_populate_n8n_expressions.json",
      "workflow_name": "Load Prompts from Github Repo and auto populate n8n expressions",
      "suggested_filename": "ai_load_automate_stopanderror_manual.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "stopAndError",
        "manualTrigger",
        "github",
        "code",
        "extractFromFile",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.lmChatOllama"
      ],
      "primary_integrations": [
        "stopanderror",
        "manual",
        "github"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.github",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOllama"
      ],
      "business_description": "AI workflow that automates data/processes using stopanderror, manual, github, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "aZSJ2BZQhNduZZ8w_Get_Airtable_data_in_Obsidian_Notes.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/aZSJ2BZQhNduZZ8w_Get_Airtable_data_in_Obsidian_Notes.json",
      "workflow_name": "Get Airtable data in Obsidian Notes",
      "suggested_filename": "ai_airtable_ai_process_airtable_webhook_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "airtableTool",
        "stickyNote",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "airtable",
        "webhook",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.airtableTool",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "AI workflow that ai_processs data/processes using airtable, webhook, n8n-nodes-langchain.lmchatopenai, triggered via webhook",
      "complexity_score": 13
    },
    {
      "original_filename": "2032_workflow_2032.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2032_workflow_2032.json",
      "workflow_name": "2032_workflow_2032",
      "suggested_filename": "util_2032_workflow_2032_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "Screen Applicants With AI, notify HR and save them in a Google Sheet.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Screen Applicants With AI, notify HR and save them in a Google Sheet.json",
      "workflow_name": "AI CV Screening Workflow",
      "suggested_filename": "ai_screening_ai_process_n8nnodeslangchainchainllm_gmail.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "gmail",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "extractFromFile",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "gmail",
        "n8n-nodes-langchain.lmchatgooglegemini"
      ],
      "total_nodes": 7,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, gmail, n8n-nodes-langchain.lmchatgooglegemini, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "8_Sample_Spotify.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/8_Sample_Spotify.json",
      "workflow_name": "Sample Spotify",
      "suggested_filename": "util_sample_automate_manual_spotify.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "spotify"
      ],
      "primary_integrations": [
        "manual",
        "spotify"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.spotify"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, spotify, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "1003_New_tweets.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1003_New_tweets.json",
      "workflow_name": "New tweets",
      "suggested_filename": "data_tweets_automate_manual_airtable.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "set",
        "manualTrigger",
        "airtable",
        "twitter"
      ],
      "primary_integrations": [
        "manual",
        "airtable",
        "twitter"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.airtable"
      ],
      "business_description": "DATA workflow that automates data/processes using manual, airtable, twitter, triggered via manual",
      "complexity_score": 12
    },
    {
      "original_filename": "aDPpPIaeM7zfUCdJ_GROQ_LLAVA_V1.5_7B.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/aDPpPIaeM7zfUCdJ_GROQ_LLAVA_V1.5_7B.json",
      "workflow_name": "GROQ LLAVA V1.5 7B",
      "suggested_filename": "comm_groq_automate_httprequest_telegram.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "telegramTrigger",
        "telegram",
        "extractFromFile"
      ],
      "primary_integrations": [
        "httprequest",
        "telegram",
        "telegram"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, telegram, telegram, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "2979_workflow_2979.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2979_workflow_2979.json",
      "workflow_name": "2979_workflow_2979",
      "suggested_filename": "util_2979_workflow_2979_automate_googledrive_form.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "googleDrive",
        "code",
        "formTrigger"
      ],
      "primary_integrations": [
        "googledrive",
        "form"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using googledrive, form, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "359_workflow_359.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/359_workflow_359.json",
      "workflow_name": "359_workflow_359",
      "suggested_filename": "comm_359_workflow_359_automate_error_twilio.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "errorTrigger",
        "twilio",
        "mattermost"
      ],
      "primary_integrations": [
        "error",
        "twilio",
        "mattermost"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.twilio",
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.errorTrigger"
      ],
      "business_description": "COMM workflow that automates data/processes using error, twilio, mattermost, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "Auto-Categorize blog posts in wordpress using A.I..json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Auto-Categorize blog posts in wordpress using A.I..json",
      "workflow_name": "Auto categorize wordpress template",
      "suggested_filename": "ai_auto_automate_wordpress_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wordpress",
        "stickyNote",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "wordpress",
        "n8n-nodes-langchain.lmchatopenai",
        "manual"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wordpress",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using wordpress, n8n-nodes-langchain.lmchatopenai, manual, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "NLVfecejH0cTtcdd_Import_CSV_from_URL_to_GoogleSheet.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/NLVfecejH0cTtcdd_Import_CSV_from_URL_to_GoogleSheet.json",
      "workflow_name": "Import CSV from URL to GoogleSheet",
      "suggested_filename": "data_import_transfer_spreadsheetfile_httprequest.json",
      "category": "DATA",
      "business_function": "transfer",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "googleSheets",
        "filter"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "httprequest",
        "manual"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that transfers data/processes using spreadsheetfile, httprequest, manual, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "2050_workflow_2050.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2050_workflow_2050.json",
      "workflow_name": "2050_workflow_2050",
      "suggested_filename": "comm_2050_workflow_2050_automate_itemlists_htmlextract_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "itemLists",
        "htmlExtract",
        "wait",
        "if",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "code"
      ],
      "primary_integrations": [
        "itemlists",
        "htmlextract",
        "gmail"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.htmlExtract",
        "n8n-nodes-base.htmlExtract",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.code",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using itemlists, htmlextract, gmail, triggered via cron",
      "complexity_score": 25
    },
    {
      "original_filename": "AI-Powered Candidate Shortlisting Automation for ERPNext.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI-Powered Candidate Shortlisting Automation for ERPNext.json",
      "workflow_name": "AI-Powered Candidate Shortlisting Automation for ERPNext",
      "suggested_filename": "ai_powered_ai_process_httprequest_microsoftoutlook_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "microsoftOutlook",
        "erpNext",
        "webhook",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "extractFromFile",
        "code",
        "switch",
        "n8n-nodes-langchain.agent",
        "whatsApp"
      ],
      "primary_integrations": [
        "httprequest",
        "microsoftoutlook",
        "erpnext"
      ],
      "total_nodes": 39,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.erpNext",
        "n8n-nodes-base.if",
        "n8n-nodes-base.erpNext",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.erpNext",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.merge",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.whatsApp"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, microsoftoutlook, erpnext, triggered via webhook",
      "complexity_score": 53
    },
    {
      "original_filename": "1588_workflow_1588.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1588_workflow_1588.json",
      "workflow_name": "1588_workflow_1588",
      "suggested_filename": "util_1588_workflow_1588_automate_webhook_respondtowebhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "set",
        "webhook",
        "function",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.function",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 9
    },
    {
      "original_filename": "58_Turn_on_a_light_and_set_its_brightness.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/58_Turn_on_a_light_and_set_its_brightness.json",
      "workflow_name": "Turn on a light and set its brightness",
      "suggested_filename": "util_turn_automate_manual_philipshue.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "philipsHue"
      ],
      "primary_integrations": [
        "manual",
        "philipshue"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.philipsHue"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, philipshue, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Breakdown Documents into Study Notes using Templating MistralAI and Qdrant.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Breakdown Documents into Study Notes using Templating MistralAI and Qdrant.json",
      "workflow_name": "Breakdown Documents into Study Notes using Templating MistralAI and Qdrant",
      "suggested_filename": "ai_breakdown_ai_process_n8nnodeslangchainchainretrievalqa_extractfromfile.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "wait",
        "extractFromFile",
        "aggregate",
        "convertToFile",
        "n8n-nodes-langchain.embeddingsMistralCloud",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "splitInBatches",
        "n8n-nodes-langchain.outputParserItemList",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.retrieverVectorStore",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "n8n-nodes-langchain.chainSummarization",
        "localFileTrigger",
        "readWriteFile",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "set",
        "n8n-nodes-langchain.lmChatMistralCloud",
        "splitOut",
        "switch"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "extractfromfile",
        "converttofile"
      ],
      "total_nodes": 42,
      "node_types": [
        "n8n-nodes-base.localFileTrigger",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud",
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.outputParserItemList",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "@n8n/n8n-nodes-langchain.embeddingsMistralCloud",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainretrievalqa, extractfromfile, converttofile, triggered via manual",
      "complexity_score": 64
    },
    {
      "original_filename": "Flux Dev Image Generation (Fal.ai) to Google Drive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Flux Dev Image Generation (Fal.ai) to Google Drive.json",
      "workflow_name": "Flux Dev Image Generation Fal.ai",
      "suggested_filename": "ai_flux_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "googleDrive"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "googledrive"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, manual, googledrive, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "8jDt77Y4FaV6ARYG_🤖_Telegram_Messaging_Agent_for_Text_Audio_Images.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/8jDt77Y4FaV6ARYG_🤖_Telegram_Messaging_Agent_for_Text_Audio_Images.json",
      "workflow_name": "🤖 Telegram Messaging Agent for Text/Audio/Images",
      "suggested_filename": "ai_telegram_automate_n8nnodeslangchaintextclassifier_httprequest_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.textClassifier",
        "httpRequest",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "extractFromFile",
        "switch",
        "convertToFile",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.textclassifier",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 39,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.textclassifier, httprequest, webhook, triggered via webhook",
      "complexity_score": 51
    },
    {
      "original_filename": "TEA7K9MSVQGCWKe6_A_B_Split_Testing.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/TEA7K9MSVQGCWKe6_A_B_Split_Testing.json",
      "workflow_name": "A/B Split Testing",
      "suggested_filename": "ai_split_automate_supabase_n8nnodeslangchainmemorypostgreschat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "supabase",
        "n8n-nodes-langchain.memoryPostgresChat",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "supabase",
        "n8n-nodes-langchain.memorypostgreschat",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 16,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.if",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using supabase, n8n-nodes-langchain.memorypostgreschat, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "76_Create_a_project,_tag,_and_time_entry,_and_update_the_time_entry_in_Clockify.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/76_Create_a_project,_tag,_and_time_entry,_and_update_the_time_entry_in_Clockify.json",
      "workflow_name": "Create a project, tag, and time entry, and update the time entry in Clockify",
      "suggested_filename": "util_create_create_manual_clockify.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "clockify"
      ],
      "primary_integrations": [
        "manual",
        "clockify"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.clockify",
        "n8n-nodes-base.clockify"
      ],
      "business_description": "UTIL workflow that creates data/processes using manual, clockify, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "Eyh4jc7RK7rCTh4z_My_workflow_2.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Eyh4jc7RK7rCTh4z_My_workflow_2.json",
      "workflow_name": "My workflow 2",
      "suggested_filename": "data_automate_splitinbatches_httprequest_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "if",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "xml",
        "manualTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 26,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using splitinbatches, httprequest, schedule, triggered via cron",
      "complexity_score": 37
    },
    {
      "original_filename": "2416_workflow_2416.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2416_workflow_2416.json",
      "workflow_name": "2416_workflow_2416",
      "suggested_filename": "ai_2416_workflow_2416_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "if",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "googleDrive",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "editImage"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.editImage",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "PVBUCGQUOiOrIfli_n8n_update.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/PVBUCGQUOiOrIfli_n8n_update.json",
      "workflow_name": "n8n update",
      "suggested_filename": "comm_update_update_ssh_httprequest_cron.json",
      "category": "COMM",
      "business_function": "update",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "ssh",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "manualTrigger",
        "telegram"
      ],
      "primary_integrations": [
        "ssh",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 27,
      "node_types": [
        "n8n-nodes-base.ssh",
        "n8n-nodes-base.ssh",
        "n8n-nodes-base.ssh",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.ssh",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "COMM workflow that updates data/processes using ssh, httprequest, schedule, triggered via cron",
      "complexity_score": 36
    },
    {
      "original_filename": "2890_Automate_Drive-To-Store_Lead_Generation_System_(with_coupon)_on_SuiteCRM.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2890_Automate_Drive-To-Store_Lead_Generation_System_(with_coupon)_on_SuiteCRM.json",
      "workflow_name": "Automate Drive-To-Store Lead Generation System (with coupon) on SuiteCRM",
      "suggested_filename": "biz_automate_automate_respondtowebhook_httprequest_webhook.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "respondToWebhook",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "respondtowebhook",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "BIZ workflow that automates data/processes using respondtowebhook, httprequest, webhook, triggered via webhook",
      "complexity_score": 24
    },
    {
      "original_filename": "Sentiment Analysis Tracking on Support Issues with Linear and Slack.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Sentiment Analysis Tracking on Support Issues with Linear and Slack.json",
      "workflow_name": "Sentiment Analysis Tracking on Support Issues with Linear and Slack",
      "suggested_filename": "ai_sentiment_analyze_splitinbatches_removeduplicates_cron.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "removeDuplicates",
        "slack",
        "stickyNote",
        "set",
        "graphql",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "splitOut",
        "airtable",
        "switch",
        "airtableTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "removeduplicates",
        "slack"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtableTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that analyzes data/processes using splitinbatches, removeduplicates, slack, triggered via cron",
      "complexity_score": 32
    },
    {
      "original_filename": "1134_workflow_1134.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1134_workflow_1134.json",
      "workflow_name": "1134_workflow_1134",
      "suggested_filename": "comm_1134_workflow_1134_automate_telegram_github.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "if",
        "set",
        "telegramTrigger",
        "github"
      ],
      "primary_integrations": [
        "telegram",
        "github"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.github",
        "n8n-nodes-base.set",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "COMM workflow that automates data/processes using telegram, github, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "83_Creating_a_meeting_with_the_Zoom_node.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/83_Creating_a_meeting_with_the_Zoom_node.json",
      "workflow_name": "Creating a meeting with the Zoom node",
      "suggested_filename": "util_creating_automate_zoom_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "zoom",
        "manualTrigger"
      ],
      "primary_integrations": [
        "zoom",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.zoom"
      ],
      "business_description": "UTIL workflow that automates data/processes using zoom, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "582_workflow_582.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/582_workflow_582.json",
      "workflow_name": "582_workflow_582",
      "suggested_filename": "util_582_workflow_582_automate_renamekeys_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "renameKeys",
        "manualTrigger"
      ],
      "primary_integrations": [
        "renamekeys",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.renameKeys"
      ],
      "business_description": "UTIL workflow that automates data/processes using renamekeys, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "Upload to Instagram and Tiktok from Google Drive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Upload to Instagram and Tiktok from Google Drive.json",
      "workflow_name": "template in store",
      "suggested_filename": "ai_template_automate_error_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "errorTrigger",
        "if",
        "stickyNote",
        "httpRequest",
        "readBinaryFile",
        "telegram",
        "googleDrive",
        "writeBinaryFile",
        "n8n-nodes-langchain.openAi",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "error",
        "httprequest",
        "readbinaryfile"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.errorTrigger",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.writeBinaryFile",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.readBinaryFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that automates data/processes using error, httprequest, readbinaryfile, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "4wPgPbxtojrUO7Dx_Google_Page_Entity_Extraction_Template.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/4wPgPbxtojrUO7Dx_Google_Page_Entity_Extraction_Template.json",
      "workflow_name": "Google Page Entity Extraction Template",
      "suggested_filename": "util_google_extract_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "extract",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "webhook",
        "code",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "respondtowebhook"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code"
      ],
      "business_description": "UTIL workflow that extracts data/processes using httprequest, webhook, respondtowebhook, triggered via webhook",
      "complexity_score": 11
    },
    {
      "original_filename": "1055_workflow_1055.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1055_workflow_1055.json",
      "workflow_name": "1055_workflow_1055",
      "suggested_filename": "data_1055_workflow_1055_automate_mailcheck_airtable.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "mailcheck",
        "airtable"
      ],
      "primary_integrations": [
        "mailcheck",
        "airtable"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.mailcheck",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable"
      ],
      "business_description": "DATA workflow that automates data/processes using mailcheck, airtable, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "GToc9QTzJY1h1w3y_AI-Powered_Research_with_Jina_AI_Deep_Search.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/GToc9QTzJY1h1w3y_AI-Powered_Research_with_Jina_AI_Deep_Search.json",
      "workflow_name": "AI-Powered Research with Jina AI Deep Search",
      "suggested_filename": "ai_powered_ai_process_n8nnodeslangchainchat_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "code"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.code"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "5Ycrm1MuK8htwd96_Telegram_RAG_pdf.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/5Ycrm1MuK8htwd96_Telegram_RAG_pdf.json",
      "workflow_name": "Telegram RAG pdf",
      "suggested_filename": "ai_telegram_automate_n8nnodeslangchainchainretrievalqa_stopanderror.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "if",
        "stickyNote",
        "stopAndError",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "telegramTrigger",
        "n8n-nodes-langchain.vectorStorePinecone",
        "telegram",
        "code",
        "n8n-nodes-langchain.retrieverVectorStore",
        "limit",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.lmChatGroq",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "stopanderror",
        "n8n-nodes-langchain.embeddingsopenai"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.stopAndError",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.lmChatGroq",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stopAndError",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "n8n-nodes-base.limit"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainretrievalqa, stopanderror, n8n-nodes-langchain.embeddingsopenai, triggered via manual",
      "complexity_score": 34
    },
    {
      "original_filename": "121_Create_Email_Campaign_From_LinkedIn_Post_Interactions.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/121_Create_Email_Campaign_From_LinkedIn_Post_Interactions.json",
      "workflow_name": "Create Email Campaign From LinkedIn Post Interactions",
      "suggested_filename": "ai_create_ai_process_hubspot_lemlist_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "hubspot",
        "lemlist",
        "if",
        "wait",
        "set",
        "airtable",
        "cron",
        "dropcontact",
        "phantombuster"
      ],
      "primary_integrations": [
        "hubspot",
        "lemlist",
        "airtable"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.if",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.lemlist",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.phantombuster",
        "n8n-nodes-base.phantombuster",
        "n8n-nodes-base.dropcontact",
        "n8n-nodes-base.phantombuster",
        "n8n-nodes-base.phantombuster",
        "n8n-nodes-base.phantombuster",
        "n8n-nodes-base.wait"
      ],
      "business_description": "AI workflow that ai_processs data/processes using hubspot, lemlist, airtable, triggered via cron",
      "complexity_score": 25
    },
    {
      "original_filename": "QnVdtKiTf3nbrNkh_Summarize_emails_with_A.I._then_send_to_messenger.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/QnVdtKiTf3nbrNkh_Summarize_emails_with_A.I._then_send_to_messenger.json",
      "workflow_name": "Summarize emails with A.I. then send to messenger",
      "suggested_filename": "ai_summarize_ai_process_httprequest_emailreadimap.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "emailReadImap"
      ],
      "primary_integrations": [
        "httprequest",
        "emailreadimap"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, emailreadimap, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "2577_workflow_2577.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2577_workflow_2577.json",
      "workflow_name": "2577_workflow_2577",
      "suggested_filename": "comm_2577_workflow_2577_automate_slack_httprequest_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "slack",
        "switch",
        "if",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "theHiveProjectTrigger",
        "theHiveProject",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "slack",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 63,
      "node_types": [
        "n8n-nodes-base.theHiveProjectTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.theHiveProject",
        "n8n-nodes-base.theHiveProject",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.theHiveProject",
        "n8n-nodes-base.theHiveProject",
        "n8n-nodes-base.theHiveProject",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.theHiveProject",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.theHiveProject",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, httprequest, webhook, triggered via webhook",
      "complexity_score": 74
    },
    {
      "original_filename": "3509_workflow_3509.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3509_workflow_3509.json",
      "workflow_name": "3509_workflow_3509",
      "suggested_filename": "ai_3509_workflow_3509_automate_gmail_linkedin.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "gmail",
        "stickyNote",
        "linkedIn",
        "splitOut",
        "manualTrigger",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "gmail",
        "linkedin",
        "manual"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.linkedIn",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, linkedin, manual, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "1790_workflow_1790.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1790_workflow_1790.json",
      "workflow_name": "1790_workflow_1790",
      "suggested_filename": "util_1790_workflow_1790_automate_itemlists_n8ntrainingcustomerdatastore.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "itemLists",
        "n8nTrainingCustomerDatastore",
        "emailSend",
        "functionItem",
        "manualTrigger"
      ],
      "primary_integrations": [
        "itemlists",
        "n8ntrainingcustomerdatastore",
        "emailsend"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.n8nTrainingCustomerDatastore",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-document-generator.DocumentGenerator",
        "n8n-nodes-document-generator.DocumentGenerator",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.emailSend",
        "n8n-nodes-base.emailSend"
      ],
      "business_description": "UTIL workflow that automates data/processes using itemlists, n8ntrainingcustomerdatastore, emailsend, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "Visualize your SQL Agent queries with OpenAI and Quickchart.io.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Visualize your SQL Agent queries with OpenAI and Quickchart.io.json",
      "workflow_name": "Visualize your SQL Agent queries with OpenAI and Quickchart.io",
      "suggested_filename": "ai_visualize_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchaincha.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.textClassifier",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-langchain.agent",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 19,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.informationExtractor"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "ghfbOYrOSiQVAbl5_Chatbot_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ghfbOYrOSiQVAbl5_Chatbot_AI.json",
      "workflow_name": "Chatbot AI",
      "suggested_filename": "ai_chatbot_ai_process_n8nnodeslangchainlmchatazureopenai_httprequest_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.lmChatAzureOpenAi",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmchatazureopenai",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.lmchatazureopenai, httprequest, webhook, triggered via webhook",
      "complexity_score": 21
    },
    {
      "original_filename": "Automate Content Generator for WordPress with DeepSeek R1.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Automate Content Generator for WordPress with DeepSeek R1.json",
      "workflow_name": "Automate Content Generator for WordPress with DeepSeek R1",
      "suggested_filename": "ai_automate_automate_wordpress_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wordpress",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "googleSheets",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "wordpress",
        "httprequest",
        "manual"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using wordpress, httprequest, manual, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "VY4TXYGmqth57Een_Docsify_example.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/VY4TXYGmqth57Een_Docsify_example.json",
      "workflow_name": "Docsify example",
      "suggested_filename": "ai_docsify_automate_n8nnodeslangchainoutputparserautofixing_n8nnodeslangchainout.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.outputParserStructured",
        "executeCommand",
        "sort",
        "extractFromFile",
        "convertToFile",
        "noOp",
        "n8n-nodes-langchain.lmChatOpenAi",
        "html",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "stickyNote",
        "readWriteFile",
        "n8n",
        "respondToWebhook",
        "set",
        "webhook",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.outputparserstructured",
        "executecommand"
      ],
      "total_nodes": 60,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.if",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.html",
        "n8n-nodes-base.html",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.html",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.html",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.html",
        "n8n-nodes-base.html",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.outputparserstructured, executecommand, triggered via webhook",
      "complexity_score": 80
    },
    {
      "original_filename": "115_Send_daily_weather_updates_via_a_message_using_the_Gotify_node.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/115_Send_daily_weather_updates_via_a_message_using_the_Gotify_node.json",
      "workflow_name": "Send daily weather updates via a message using the Gotify node",
      "suggested_filename": "ai_send_ai_process_openweathermap_gotify_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "openWeatherMap",
        "gotify",
        "cron"
      ],
      "primary_integrations": [
        "openweathermap",
        "gotify",
        "cron"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.cron",
        "n8n-nodes-base.openWeatherMap",
        "n8n-nodes-base.gotify"
      ],
      "business_description": "AI workflow that ai_processs data/processes using openweathermap, gotify, cron, triggered via cron",
      "complexity_score": 6
    },
    {
      "original_filename": "930_workflow_930.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/930_workflow_930.json",
      "workflow_name": "930_workflow_930",
      "suggested_filename": "util_930_workflow_930_automate_manual_discourse.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "discourse"
      ],
      "primary_integrations": [
        "manual",
        "discourse"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.discourse",
        "n8n-nodes-base.discourse",
        "n8n-nodes-base.discourse"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, discourse, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "Automate Image Validation Tasks using AI Vision.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Automate Image Validation Tasks using AI Vision.json",
      "workflow_name": "Automate Image Validation Tasks using AI Vision",
      "suggested_filename": "ai_automate_ai_process_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserst.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "splitOut",
        "manualTrigger",
        "googleDrive",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "editImage"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "manual"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.editImage",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, manual, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "145_Translate_cocktail_instructions_using_LingvaNex.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/145_Translate_cocktail_instructions_using_LingvaNex.json",
      "workflow_name": "Translate cocktail instructions using LingvaNex",
      "suggested_filename": "ai_translate_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "httpRequest",
        "manualTrigger",
        "lingvaNex"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "lingvanex"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.lingvaNex",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, manual, lingvanex, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2647_workflow_2647.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2647_workflow_2647.json",
      "workflow_name": "2647_workflow_2647",
      "suggested_filename": "ai_2647_workflow_2647_automate_splitinbatches_removeduplicates_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "removeDuplicates",
        "slack",
        "stickyNote",
        "set",
        "graphql",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.informationExtractor",
        "splitOut",
        "airtable",
        "switch",
        "airtableTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "removeduplicates",
        "slack"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.informationExtractor",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtableTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, removeduplicates, slack, triggered via cron",
      "complexity_score": 32
    },
    {
      "original_filename": "556_workflow_556.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/556_workflow_556.json",
      "workflow_name": "556_workflow_556",
      "suggested_filename": "util_556_workflow_556_automate_mondaycom_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "mondayCom",
        "manualTrigger"
      ],
      "primary_integrations": [
        "mondaycom",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.mondayCom"
      ],
      "business_description": "UTIL workflow that automates data/processes using mondaycom, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2131_workflow_2131.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2131_workflow_2131.json",
      "workflow_name": "2131_workflow_2131",
      "suggested_filename": "comm_2131_workflow_2131_automate_hubspot_slack_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "hubspot",
        "slack",
        "stickyNote",
        "scheduleTrigger",
        "filter"
      ],
      "primary_integrations": [
        "hubspot",
        "slack",
        "schedule"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using hubspot, slack, schedule, triggered via cron",
      "complexity_score": 13
    },
    {
      "original_filename": "2299_workflow_2299.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2299_workflow_2299.json",
      "workflow_name": "2299_workflow_2299",
      "suggested_filename": "util_2299_workflow_2299_automate_schedule_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "scheduleTrigger",
        "stickyNote",
        "set",
        "httpRequest"
      ],
      "primary_integrations": [
        "schedule",
        "httprequest"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using schedule, httprequest, triggered via cron",
      "complexity_score": 9
    },
    {
      "original_filename": "🤖🧑_💻 AI Agent for Top n8n Creators Leaderboard Reporting.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/🤖🧑_💻 AI Agent for Top n8n Creators Leaderboard Reporting.json",
      "workflow_name": "🤖🧑‍💻 AI Agent for Top n8n Creators Leaderboard Reporting",
      "suggested_filename": "ai_agent_ai_process_httprequest_sort_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "httpRequest",
        "sort",
        "googleDrive",
        "telegram",
        "aggregate",
        "convertToFile",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "limit",
        "n8n-nodes-langchain.agent",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "gmail",
        "readWriteFile",
        "executeWorkflowTrigger",
        "set",
        "markdown",
        "splitOut",
        "n8n-nodes-langchain.lmChatGoogleGemini"
      ],
      "primary_integrations": [
        "httprequest",
        "sort",
        "googledrive"
      ],
      "total_nodes": 49,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.markdown",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, sort, googledrive, triggered via cron",
      "complexity_score": 70
    },
    {
      "original_filename": "1957_workflow_1957.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1957_workflow_1957.json",
      "workflow_name": "1957_workflow_1957",
      "suggested_filename": "ai_1957_workflow_1957_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "dQC8kExvbCrovWf0_Dynamically_switch_between_LLMs_Template.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/dQC8kExvbCrovWf0_Dynamically_switch_between_LLMs_Template.json",
      "workflow_name": "Dynamically switch between LLMs Template",
      "suggested_filename": "ai_dynamically_automate_n8nnodeslangchainchainllm_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "noOp",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "n8n-nodes-langchain.code",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.sentimentAnalysis"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.code"
      ],
      "total_nodes": 22,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.sentimentAnalysis",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.chat, n8n-nodes-langchain.code, triggered via manual",
      "complexity_score": 31
    },
    {
      "original_filename": "cKFPrgXstN3JgdJs_Extract_&_Summarize_Yelp_Business_Review_with_Bright_Data_and_Google_Gemini.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/cKFPrgXstN3JgdJs_Extract_&_Summarize_Yelp_Business_Review_with_Bright_Data_and_Google_Gemini.json",
      "workflow_name": "Extract & Summarize Yelp Business Review with Bright Data and Google Gemini",
      "suggested_filename": "ai_extract_extract_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruct.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.chainSummarization",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that extracts data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, httprequest, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "LPQsiqt476n7ne7f_e-mail_Chatbot_with_both_semantic_and_structured_RAG,_using_Telegram_and_Pgvector.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/LPQsiqt476n7ne7f_e-mail_Chatbot_with_both_semantic_and_structured_RAG,_using_Telegram_and_Pgvector.json",
      "workflow_name": "e-mail Chatbot with both semantic and structured RAG, using Telegram and Pgvector",
      "suggested_filename": "ai_mail_ai_process_splitinbatches_n8nnodeslangchainmemorybufferwindow.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.memoryBufferWindow",
        "if",
        "noOp",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "code",
        "telegramTrigger",
        "n8n-nodes-langchain.toolWorkflow",
        "telegram",
        "n8n-nodes-langchain.vectorStorePGVector",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.embeddingsOllama"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.if",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.vectorStorePGVector",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.embeddingsOllama",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.code",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "tnRYt0kDGMO9BBFd_n8n_Graphic_Design_Team.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/tnRYt0kDGMO9BBFd_n8n_Graphic_Design_Team.json",
      "workflow_name": "n8n Graphic Design Team",
      "suggested_filename": "ai_graphic_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutputparserstruc.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "gmail",
        "set",
        "stickyNote",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "googleDrive",
        "switch",
        "googleSheets",
        "convertToFile",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 37,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, gmail, triggered via manual",
      "complexity_score": 50
    },
    {
      "original_filename": "1471_workflow_1471.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1471_workflow_1471.json",
      "workflow_name": "1471_workflow_1471",
      "suggested_filename": "comm_1471_workflow_1471_automate_httprequest_telegram_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "wait",
        "noOp",
        "httpRequest",
        "telegram",
        "cron"
      ],
      "primary_integrations": [
        "httprequest",
        "telegram",
        "cron"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "COMM workflow that automates data/processes using httprequest, telegram, cron, triggered via cron",
      "complexity_score": 13
    },
    {
      "original_filename": "Actioning Your Meeting Next Steps using Transcripts and AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Actioning Your Meeting Next Steps using Transcripts and AI.json",
      "workflow_name": "Actioning Your Meeting Next Steps using Transcripts and AI",
      "suggested_filename": "ai_actioning_ai_process_n8nnodeslangchainoutputparserstructured_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "set",
        "httpRequest",
        "googleCalendar",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "googleDrive",
        "extractFromFile",
        "switch",
        "splitOut",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest",
        "googlecalendar"
      ],
      "total_nodes": 28,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.googleCalendar",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleCalendar",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.outputparserstructured, httprequest, googlecalendar, triggered via manual",
      "complexity_score": 42
    },
    {
      "original_filename": "2153_workflow_2153.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2153_workflow_2153.json",
      "workflow_name": "2153_workflow_2153",
      "suggested_filename": "util_2153_workflow_2153_automate_webhook_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "set",
        "webhook",
        "httpRequest"
      ],
      "primary_integrations": [
        "webhook",
        "httprequest"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using webhook, httprequest, triggered via webhook",
      "complexity_score": 14
    },
    {
      "original_filename": "966_workflow_966.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/966_workflow_966.json",
      "workflow_name": "966_workflow_966",
      "suggested_filename": "util_966_workflow_966_automate_schedule_openweathermap_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "scheduleTrigger",
        "openWeatherMap",
        "manualTrigger",
        "signl4"
      ],
      "primary_integrations": [
        "schedule",
        "openweathermap",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.signl4",
        "n8n-nodes-base.openWeatherMap",
        "n8n-nodes-base.if",
        "n8n-nodes-base.scheduleTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using schedule, openweathermap, manual, triggered via cron",
      "complexity_score": 10
    },
    {
      "original_filename": "3610_workflow_3610.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3610_workflow_3610.json",
      "workflow_name": "3610_workflow_3610",
      "suggested_filename": "ai_3610_workflow_3610_automate_n8nnodeslangchainchainllm_gmail.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "filter",
        "n8n-nodes-langchain.chainLlm",
        "wait",
        "if",
        "stickyNote",
        "gmail",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "aggregate",
        "googleSheets",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "gmail",
        "httprequest"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, gmail, httprequest, triggered via manual",
      "complexity_score": 29
    },
    {
      "original_filename": "8FLJK1NsduFL0Y5P_Qualify_new_leads_in_Google_Sheets_via_OpenAI's_GPT-4.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/8FLJK1NsduFL0Y5P_Qualify_new_leads_in_Google_Sheets_via_OpenAI's_GPT-4.json",
      "workflow_name": "Qualify new leads in Google Sheets via OpenAI's GPT-4",
      "suggested_filename": "ai_qualify_ai_process_openai_googlesheets.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "openAi",
        "googleSheets",
        "googleSheetsTrigger"
      ],
      "primary_integrations": [
        "openai",
        "googlesheets",
        "googlesheets"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.googleSheetsTrigger"
      ],
      "business_description": "AI workflow that ai_processs data/processes using openai, googlesheets, googlesheets, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "1792_workflow_1792.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1792_workflow_1792.json",
      "workflow_name": "1792_workflow_1792",
      "suggested_filename": "biz_1792_workflow_1792_automate_itemlists_renamekeys.json",
      "category": "BIZ",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "itemLists",
        "if",
        "set",
        "renameKeys",
        "manualTrigger",
        "salesforce",
        "googleSheets"
      ],
      "primary_integrations": [
        "itemlists",
        "renamekeys",
        "manual"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.salesforce",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.renameKeys",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.salesforce",
        "n8n-nodes-base.salesforce"
      ],
      "business_description": "BIZ workflow that automates data/processes using itemlists, renamekeys, manual, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "siXUnQhJpCJ9rHzu_Auto-Tag_Blog_Posts_in_WordPress_with_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/siXUnQhJpCJ9rHzu_Auto-Tag_Blog_Posts_in_WordPress_with_AI.json",
      "workflow_name": "Auto-Tag Blog Posts in WordPress with AI",
      "suggested_filename": "ai_auto_ai_process_splitinbatches_n8nnodeslangchainoutputparserautofixing.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.outputParserAutofixing",
        "wordpress",
        "rssFeedReadTrigger",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "splitOut",
        "code",
        "aggregate",
        "executeWorkflow",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.outputparserautofixing",
        "wordpress"
      ],
      "total_nodes": 32,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.rssFeedReadTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, n8n-nodes-langchain.outputparserautofixing, wordpress, triggered via manual",
      "complexity_score": 49
    },
    {
      "original_filename": "95_Scrape_Twitter_for_mentions_of_company.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/95_Scrape_Twitter_for_mentions_of_company.json",
      "workflow_name": "Scrape Twitter for mentions of company",
      "suggested_filename": "comm_scrape_extract_slack_datetime_cron.json",
      "category": "COMM",
      "business_function": "extract",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "if",
        "dateTime",
        "set",
        "cron",
        "twitter"
      ],
      "primary_integrations": [
        "slack",
        "datetime",
        "cron"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.twitter",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that extracts data/processes using slack, datetime, cron, triggered via cron",
      "complexity_score": 13
    },
    {
      "original_filename": "5_Slack-GitHub_User_Info.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/5_Slack-GitHub_User_Info.json",
      "workflow_name": "Slack-GitHub User Info",
      "suggested_filename": "comm_slack_automate_webhook_graphql_webhook.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "webhook",
        "function",
        "graphql",
        "slack"
      ],
      "primary_integrations": [
        "webhook",
        "graphql",
        "slack"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.function",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using webhook, graphql, slack, triggered via webhook",
      "complexity_score": 8
    },
    {
      "original_filename": "2118_workflow_2118.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2118_workflow_2118.json",
      "workflow_name": "2118_workflow_2118",
      "suggested_filename": "comm_2118_workflow_2118_automate_hubspot_gmail_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "hubspot",
        "if",
        "stickyNote",
        "gmail",
        "set",
        "httpRequest",
        "scheduleTrigger"
      ],
      "primary_integrations": [
        "hubspot",
        "gmail",
        "httprequest"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.hubspot",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using hubspot, gmail, httprequest, triggered via cron",
      "complexity_score": 19
    },
    {
      "original_filename": "🔍 Perplexity Research to HTML_ AI-Powered Content Creation.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/🔍 Perplexity Research to HTML_ AI-Powered Content Creation.json",
      "workflow_name": "🔍 Perplexity Research to HTML_ AI-Powered Content Creation",
      "suggested_filename": "ai_perplexity_ai_process_generic.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [],
      "primary_integrations": [],
      "total_nodes": 0,
      "node_types": [],
      "business_description": "AI workflow that ai_processs data/processes using generic components, triggered via manual",
      "complexity_score": 0
    },
    {
      "original_filename": "WLSqXECfQF7rOj2A_Open_Deep_Research_-_AI-Powered_Autonomous_Research_Workflow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/WLSqXECfQF7rOj2A_Open_Deep_Research_-_AI-Powered_Autonomous_Research_Workflow.json",
      "workflow_name": "Open Deep Research - AI-Powered Autonomous Research Workflow",
      "suggested_filename": "ai_open_ai_process_splitinbatches_n8nnodeslangchainmemorybufferwindow.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-langchain.agent",
        "code"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chainllm"
      ],
      "total_nodes": 17,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolWikipedia",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chainllm, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "501_workflow_501.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/501_workflow_501.json",
      "workflow_name": "501_workflow_501",
      "suggested_filename": "util_501_workflow_501_automate_awssns_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "awsSns",
        "manualTrigger"
      ],
      "primary_integrations": [
        "awssns",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.awsSns"
      ],
      "business_description": "UTIL workflow that automates data/processes using awssns, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "XSyVFC1tsGSxNwX9_Complete_Youtube.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/XSyVFC1tsGSxNwX9_Complete_Youtube.json",
      "workflow_name": "Complete Youtube",
      "suggested_filename": "ai_complete_automate_n8nnodeslangchainmemorybufferwindow_splitinbatches.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "splitInBatches",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "code",
        "youTube"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "splitinbatches",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 15,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, splitinbatches, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "92_Send_an_SMS_to_a_number_whenever_you_go_out.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/92_Send_an_SMS_to_a_number_whenever_you_go_out.json",
      "workflow_name": "Send an SMS to a number whenever you go out",
      "suggested_filename": "util_send_automate_pushcut_twilio.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "pushcutTrigger",
        "twilio"
      ],
      "primary_integrations": [
        "pushcut",
        "twilio"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.pushcutTrigger",
        "n8n-nodes-base.twilio"
      ],
      "business_description": "UTIL workflow that automates data/processes using pushcut, twilio, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "1489_workflow_1489.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1489_workflow_1489.json",
      "workflow_name": "1489_workflow_1489",
      "suggested_filename": "data_1489_workflow_1489_automate_httprequest_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "noOp",
        "if",
        "set",
        "httpRequest",
        "webhook",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "googlesheets"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, webhook, googlesheets, triggered via webhook",
      "complexity_score": 12
    },
    {
      "original_filename": "Vector Database as a Big Data Analysis Tool for AI Agents [2_3 - anomaly].json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Vector Database as a Big Data Analysis Tool for AI Agents [2_3 - anomaly].json",
      "workflow_name": "[2/3] Set up medoids (2 types) for anomaly detection (crops dataset)",
      "suggested_filename": "data_medoids_automate_httprequest_manual.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 48,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 55
    },
    {
      "original_filename": "112_Get_Company_by_Name.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/112_Get_Company_by_Name.json",
      "workflow_name": "Get Company by Name",
      "suggested_filename": "util_company_read_functionitem_uproc.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "functionItem",
        "uproc",
        "manualTrigger",
        "if"
      ],
      "primary_integrations": [
        "functionitem",
        "uproc",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.functionItem",
        "n8n-nodes-base.uproc",
        "n8n-nodes-base.if"
      ],
      "business_description": "UTIL workflow that reads data/processes using functionitem, uproc, manual, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "52_Trigger_a_build_using_the_TravisCI_node.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/52_Trigger_a_build_using_the_TravisCI_node.json",
      "workflow_name": "Trigger a build using the TravisCI node",
      "suggested_filename": "ops_build_automate_manual_travisci.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "travisCi"
      ],
      "primary_integrations": [
        "manual",
        "travisci"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.travisCi"
      ],
      "business_description": "OPS workflow that automates data/processes using manual, travisci, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "557_workflow_557.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/557_workflow_557.json",
      "workflow_name": "557_workflow_557",
      "suggested_filename": "util_557_workflow_557_automate_manual_redis.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "redis"
      ],
      "primary_integrations": [
        "manual",
        "redis"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.redis"
      ],
      "business_description": "UTIL workflow that automates data/processes using manual, redis, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2853_workflow_2853.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2853_workflow_2853.json",
      "workflow_name": "2853_workflow_2853",
      "suggested_filename": "comm_2853_workflow_2853_automate_splitinbatches_supabase_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "supabase",
        "if",
        "noOp",
        "wait",
        "set",
        "stickyNote",
        "compareDatasets",
        "scheduleTrigger",
        "youTube",
        "aggregate",
        "removeDuplicates",
        "discord",
        "spotify"
      ],
      "primary_integrations": [
        "splitinbatches",
        "supabase",
        "comparedatasets"
      ],
      "total_nodes": 54,
      "node_types": [
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.if",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.spotify",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.set",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.if",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.discord",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.compareDatasets",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.set",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, supabase, comparedatasets, triggered via cron",
      "complexity_score": 68
    },
    {
      "original_filename": "60_Create_a_post_and_update_the_post_in_WordPress.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/60_Create_a_post_and_update_the_post_in_WordPress.json",
      "workflow_name": "Create a post and update the post in WordPress",
      "suggested_filename": "content_create_create_wordpress_manual.json",
      "category": "CONTENT",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "wordpress",
        "manualTrigger"
      ],
      "primary_integrations": [
        "wordpress",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.wordpress"
      ],
      "business_description": "CONTENT workflow that creates data/processes using wordpress, manual, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "998_workflow_998.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/998_workflow_998.json",
      "workflow_name": "998_workflow_998",
      "suggested_filename": "util_998_workflow_998_automate_deepl_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "deepL",
        "httpRequest"
      ],
      "primary_integrations": [
        "deepl",
        "httprequest"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.deepL"
      ],
      "business_description": "UTIL workflow that automates data/processes using deepl, httprequest, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "3_Orlen.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3_Orlen.json",
      "workflow_name": "Orlen",
      "suggested_filename": "comm_orlen_automate_slack_gmail_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "slack",
        "gmail",
        "manualTrigger",
        "googleDrive",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "slack",
        "gmail",
        "manual"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.function",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, gmail, manual, triggered via cron",
      "complexity_score": 17
    },
    {
      "original_filename": "QaMO9ji6T6vTZHQ4_Gmail_MCP_Server.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/QaMO9ji6T6vTZHQ4_Gmail_MCP_Server.json",
      "workflow_name": "Gmail MCP Server",
      "suggested_filename": "ai_gmail_ai_process_gmail_n8nnodeslangchainmcp.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "gmailTool",
        "n8n-nodes-langchain.mcpTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "n8n-nodes-langchain.mcp"
      ],
      "total_nodes": 27,
      "node_types": [
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, n8n-nodes-langchain.mcp, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "Chat with a Google Sheet using AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Chat with a Google Sheet using AI.json",
      "workflow_name": "Chat with Google Sheet",
      "suggested_filename": "ai_chat_automate_n8nnodeslangchainchat_n8nnodeslangchainlmchatopenai.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "code",
        "switch",
        "googleSheets",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.lmchatopenai",
        "n8n-nodes-langchain.workflow"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chat, n8n-nodes-langchain.lmchatopenai, n8n-nodes-langchain.workflow, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "864_workflow_864.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/864_workflow_864.json",
      "workflow_name": "864_workflow_864",
      "suggested_filename": "comm_864_workflow_864_automate_googlesheets_interval.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "interval",
        "function",
        "mattermost"
      ],
      "primary_integrations": [
        "googlesheets",
        "interval",
        "mattermost"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.mattermost",
        "n8n-nodes-base.function",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.interval"
      ],
      "business_description": "COMM workflow that automates data/processes using googlesheets, interval, mattermost, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "1035_workflow_1035.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1035_workflow_1035.json",
      "workflow_name": "1035_workflow_1035",
      "suggested_filename": "util_1035_workflow_1035_automate_googleslides_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSlides",
        "manualTrigger"
      ],
      "primary_integrations": [
        "googleslides",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSlides",
        "n8n-nodes-base.googleSlides"
      ],
      "business_description": "UTIL workflow that automates data/processes using googleslides, manual, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "2133_workflow_2133.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2133_workflow_2133.json",
      "workflow_name": "2133_workflow_2133",
      "suggested_filename": "util_2133_workflow_2133_automate_httprequest_webhook_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "filter",
        "if",
        "stickyNote",
        "httpRequest",
        "webhook",
        "splitOut",
        "xml",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "xml"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.if",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, webhook, xml, triggered via webhook",
      "complexity_score": 17
    },
    {
      "original_filename": "⚡AI-Powered YouTube Video Summarization & Analysis.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/⚡AI-Powered YouTube Video Summarization & Analysis.json",
      "workflow_name": "⚡AI-Powered YouTube Video Summarization & Analysis",
      "suggested_filename": "ai_powered_ai_process_n8nnodeslangchainchainllm_youtube_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "set",
        "youTube",
        "webhook",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegram",
        "code",
        "summarize",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "youtube",
        "webhook"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-youtube-transcription.youtubeTranscripter",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.youTube",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.summarize",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, youtube, webhook, triggered via webhook",
      "complexity_score": 22
    },
    {
      "original_filename": "ZI0PxugfKsyepqeH_Shopify_order_UTM_to_Baserow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ZI0PxugfKsyepqeH_Shopify_order_UTM_to_Baserow.json",
      "workflow_name": "Shopify order UTM to Baserow",
      "suggested_filename": "ecommerce_shopify_automate_graphql_schedule_cron.json",
      "category": "ECOMMERCE",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "noOp",
        "if",
        "stickyNote",
        "set",
        "graphql",
        "scheduleTrigger",
        "baserow",
        "splitOut"
      ],
      "primary_integrations": [
        "graphql",
        "schedule",
        "baserow"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.baserow",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "ECOMMERCE workflow that automates data/processes using graphql, schedule, baserow, triggered via cron",
      "complexity_score": 20
    },
    {
      "original_filename": "1955_workflow_1955.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1955_workflow_1955.json",
      "workflow_name": "1955_workflow_1955",
      "suggested_filename": "ai_1955_workflow_1955_automate_n8nnodeslangchaincode_n8nnodeslangchainlmchatopen.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "n8n-nodes-langchain.code",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.toolCode"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.code",
        "n8n-nodes-langchain.lmchatopenai",
        "manual"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.code",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolCode"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.code, n8n-nodes-langchain.lmchatopenai, manual, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "147_OpenAI-model-examples.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/147_OpenAI-model-examples.json",
      "workflow_name": "OpenAI-model-examples",
      "suggested_filename": "ai_openai_ai_process_httprequest_readbinaryfiles.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "readBinaryFiles",
        "openAi",
        "manualTrigger",
        "code",
        "html"
      ],
      "primary_integrations": [
        "httprequest",
        "readbinaryfiles",
        "openai"
      ],
      "total_nodes": 27,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.html",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.readBinaryFiles",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, readbinaryfiles, openai, triggered via manual",
      "complexity_score": 35
    },
    {
      "original_filename": "DqvkhR9nzoPQKxGh_Scrape_Trustpilot_Reviews_to_Google_Sheets.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/DqvkhR9nzoPQKxGh_Scrape_Trustpilot_Reviews_to_Google_Sheets.json",
      "workflow_name": "Scrape Trustpilot Reviews to Google Sheets",
      "suggested_filename": "data_scrape_extract_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "extract",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "manualTrigger",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "manual"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger"
      ],
      "business_description": "DATA workflow that extracts data/processes using httprequest, schedule, manual, triggered via cron",
      "complexity_score": 21
    },
    {
      "original_filename": "226_workflow_226.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/226_workflow_226.json",
      "workflow_name": "226_workflow_226",
      "suggested_filename": "data_226_workflow_226_automate_googlesheets_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "googleSheets",
        "webhook"
      ],
      "primary_integrations": [
        "googlesheets",
        "webhook"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, webhook, triggered via webhook",
      "complexity_score": 4
    },
    {
      "original_filename": "AI Agent for project management and meetings with Airtable and Fireflies.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Agent for project management and meetings with Airtable and Fireflies.json",
      "workflow_name": "AI Agent for project management and meetings with Airtable and Fireflies",
      "suggested_filename": "ai_agent_ai_process_httprequest_googlecalendar_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "googleCalendarTool",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "splitOut",
        "airtable",
        "gmailTool",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "googlecalendar",
        "webhook"
      ],
      "total_nodes": 18,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.gmailTool",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.googleCalendarTool",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, googlecalendar, webhook, triggered via webhook",
      "complexity_score": 29
    },
    {
      "original_filename": "2151_workflow_2151.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2151_workflow_2151.json",
      "workflow_name": "2151_workflow_2151",
      "suggested_filename": "data_2151_workflow_2151_automate_httprequest_notion_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "notion",
        "scheduleTrigger",
        "n8n"
      ],
      "primary_integrations": [
        "httprequest",
        "notion",
        "schedule"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, notion, schedule, triggered via cron",
      "complexity_score": 17
    },
    {
      "original_filename": "zAkPoRdcG5M5x4KT_Perform_an_email_search_with_Icypeas_(single).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/zAkPoRdcG5M5x4KT_Perform_an_email_search_with_Icypeas_(single).json",
      "workflow_name": "Perform an email search with Icypeas (single)",
      "suggested_filename": "ai_perform_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "Effortless Email Management with AI-Powered Summarization & Review.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Effortless Email Management with AI-Powered Summarization & Review.json",
      "workflow_name": "Effortless Email Management with AI",
      "suggested_filename": "ai_effortless_ai_process_n8nnodeslangchainlmchatdeepseek_n8nnodeslangchaintextsp.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.lmChatDeepSeek",
        "n8n-nodes-langchain.textSplitterTokenSplitter",
        "gmail",
        "emailSend",
        "n8n-nodes-langchain.textClassifier",
        "n8n-nodes-langchain.chainSummarization",
        "set",
        "markdown",
        "httpRequest",
        "stickyNote",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.vectorStoreQdrant",
        "n8n-nodes-langchain.agent",
        "googleDrive",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "emailReadImap"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmchatdeepseek",
        "n8n-nodes-langchain.textsplittertokensplitter",
        "gmail"
      ],
      "total_nodes": 31,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.emailSend",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.chainSummarization",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.textClassifier",
        "n8n-nodes-base.set",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.lmchatdeepseek, n8n-nodes-langchain.textsplittertokensplitter, gmail, triggered via manual",
      "complexity_score": 49
    },
    {
      "original_filename": "Send specific PDF attachments from Gmail to Google Drive using OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Send specific PDF attachments from Gmail to Google Drive using OpenAI.json",
      "workflow_name": "Send specific PDF attachments from Gmail to Google Drive using OpenAI",
      "suggested_filename": "ai_send_ai_process_gmail_openai.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "noOp",
        "if",
        "stickyNote",
        "set",
        "gmailTrigger",
        "code",
        "openAi",
        "googleDrive",
        "readPDF"
      ],
      "primary_integrations": [
        "gmail",
        "openai",
        "googledrive"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.readPDF",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.code",
        "n8n-nodes-base.openAi",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "AI workflow that ai_processs data/processes using gmail, openai, googledrive, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "Vector Database as a Big Data Analysis Tool for AI Agents [2_2 KNN] (1).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Vector Database as a Big Data Analysis Tool for AI Agents [2_2 KNN] (1).json",
      "workflow_name": "[2/2] KNN classifier (lands dataset)",
      "suggested_filename": "data_classifier_automate_httprequest_executeworkflow.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "code",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "executeworkflow"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, executeworkflow, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "2878_workflow_2878.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2878_workflow_2878.json",
      "workflow_name": "2878_workflow_2878",
      "suggested_filename": "ai_2878_workflow_2878_automate_n8nnodeslangchainoutputparserstructured_httpreque.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserStructured",
        "httpRequest",
        "aggregate",
        "filter",
        "splitInBatches",
        "noOp",
        "n8n-nodes-langchain.lmChatOpenAi",
        "executeWorkflow",
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "stickyNote",
        "stopAndError",
        "form",
        "executeWorkflowTrigger",
        "executionData",
        "set",
        "notion",
        "markdown",
        "splitOut",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "code",
        "switch",
        "formTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "httprequest",
        "splitinbatches"
      ],
      "total_nodes": 85,
      "node_types": [
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.formTrigger",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.form",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.form",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executionData",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.notion",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.form",
        "n8n-nodes-base.form",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserstructured, httprequest, splitinbatches, triggered via manual",
      "complexity_score": 109
    },
    {
      "original_filename": "1856_workflow_1856.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1856_workflow_1856.json",
      "workflow_name": "1856_workflow_1856",
      "suggested_filename": "ops_1856_workflow_1856_automate_homeassistant_github.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "homeAssistant",
        "githubTrigger"
      ],
      "primary_integrations": [
        "homeassistant",
        "github"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.githubTrigger",
        "n8n-nodes-base.homeAssistant",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "OPS workflow that automates data/processes using homeassistant, github, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "2398_workflow_2398.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2398_workflow_2398.json",
      "workflow_name": "2398_workflow_2398",
      "suggested_filename": "util_2398_workflow_2398_automate_httprequest_executeworkflow.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "executeworkflow"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, executeworkflow, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "117_Receive_updates_for_changes_in_the_specified_list_in_Trello.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/117_Receive_updates_for_changes_in_the_specified_list_in_Trello.json",
      "workflow_name": "Receive updates for changes in the specified list in Trello",
      "suggested_filename": "util_receive_update_trello.json",
      "category": "UTIL",
      "business_function": "update",
      "trigger_type": "manual",
      "integrations": [
        "trelloTrigger"
      ],
      "primary_integrations": [
        "trello"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.trelloTrigger"
      ],
      "business_description": "UTIL workflow that updates data/processes using trello, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "81_New_WooCommerce_order_to_Slack.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/81_New_WooCommerce_order_to_Slack.json",
      "workflow_name": "New WooCommerce order to Slack",
      "suggested_filename": "comm_woocommerce_automate_slack_woocommerce.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "wooCommerceTrigger",
        "if"
      ],
      "primary_integrations": [
        "slack",
        "woocommerce"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.wooCommerceTrigger",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.if"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, woocommerce, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "_piepdrive-test.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/_piepdrive-test.json",
      "workflow_name": "piepdrive-test",
      "suggested_filename": "ai_piepdrive_automate_pipedrive_pipedrive.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "pipedrive",
        "pipedriveTrigger",
        "slack",
        "stickyNote",
        "httpRequest",
        "markdown",
        "code",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "pipedrive",
        "pipedrive",
        "slack"
      ],
      "total_nodes": 8,
      "node_types": [
        "n8n-nodes-base.pipedriveTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.pipedrive",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.slack",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that automates data/processes using pipedrive, pipedrive, slack, triggered via manual",
      "complexity_score": 16
    },
    {
      "original_filename": "Image Creation with OpenAI and Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Image Creation with OpenAI and Telegram.json",
      "workflow_name": "Image Creation with OpenAI and Telegram",
      "suggested_filename": "ai_image_ai_process_telegram_telegram.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "telegramTrigger",
        "telegram",
        "aggregate",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "telegram",
        "telegram",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using telegram, telegram, n8n-nodes-langchain.openai, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "f3BtfIEQ7lWiXBWQ_Connect_Airtable_Contacts_to_telli_for_Automated_AI_Voice_Call_Scheduling.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/f3BtfIEQ7lWiXBWQ_Connect_Airtable_Contacts_to_telli_for_Automated_AI_Voice_Call_Scheduling.json",
      "workflow_name": "Connect Airtable Contacts to telli for Automated AI Voice Call Scheduling",
      "suggested_filename": "ai_connect_ai_process_httprequest_airtable.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "airtableTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "airtable"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.airtableTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, airtable, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "0QQxgdQABUbbDJ0G_Multi-Agent_Conversation.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/0QQxgdQABUbbDJ0G_Multi-Agent_Conversation.json",
      "workflow_name": "Multi-Agent Conversation",
      "suggested_filename": "util_multi_automate_splitinbatches_n8nnodeslangchainmemorybufferwindow.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.memoryBufferWindow",
        "if",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "n8n-nodes-langchain.lmChatOpenRouter",
        "n8n-nodes-langchain.agent",
        "code"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 18,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.code",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenRouter"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "583_workflow_583.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/583_workflow_583.json",
      "workflow_name": "583_workflow_583",
      "suggested_filename": "util_583_workflow_583_automate_rssfeedread_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "rssFeedRead",
        "manualTrigger"
      ],
      "primary_integrations": [
        "rssfeedread",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.rssFeedRead"
      ],
      "business_description": "UTIL workflow that automates data/processes using rssfeedread, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "xcl8D1sukz9Rak69_Import_CSV_from_URL_to_Excel.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/xcl8D1sukz9Rak69_Import_CSV_from_URL_to_Excel.json",
      "workflow_name": "Import CSV from URL to Excel",
      "suggested_filename": "util_import_transfer_spreadsheetfile_httprequest.json",
      "category": "UTIL",
      "business_function": "transfer",
      "trigger_type": "manual",
      "integrations": [
        "spreadsheetFile",
        "stickyNote",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "spreadsheetfile",
        "httprequest",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.spreadsheetFile",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that transfers data/processes using spreadsheetfile, httprequest, manual, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "2083_workflow_2083.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2083_workflow_2083.json",
      "workflow_name": "2083_workflow_2083",
      "suggested_filename": "ai_2083_workflow_2083_automate_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "1570_workflow_1570.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1570_workflow_1570.json",
      "workflow_name": "1570_workflow_1570",
      "suggested_filename": "comm_1570_workflow_1570_automate_slack_httprequest.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "slack",
        "httprequest",
        "manual"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, httprequest, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "ATxZ5QYhdJq9mZDO_Parse_DMARC_reports.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/ATxZ5QYhdJq9mZDO_Parse_DMARC_reports.json",
      "workflow_name": "Parse DMARC reports",
      "suggested_filename": "comm_parse_report_slack_datetime.json",
      "category": "COMM",
      "business_function": "report",
      "trigger_type": "manual",
      "integrations": [
        "slack",
        "if",
        "dateTime",
        "stickyNote",
        "set",
        "emailSend",
        "renameKeys",
        "splitOut",
        "xml",
        "extractFromFile",
        "compression",
        "emailReadImap",
        "mySql"
      ],
      "primary_integrations": [
        "slack",
        "datetime",
        "emailsend"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.mySql",
        "n8n-nodes-base.if",
        "n8n-nodes-base.renameKeys",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.compression",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.xml",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.emailSend"
      ],
      "business_description": "COMM workflow that reports data/processes using slack, datetime, emailsend, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "1206_workflow_1206.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1206_workflow_1206.json",
      "workflow_name": "1206_workflow_1206",
      "suggested_filename": "comm_1206_workflow_1206_automate_zohocrm_trello.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "zohoCrm",
        "if",
        "trello",
        "gmail",
        "set",
        "harvest",
        "mailchimp",
        "shopifyTrigger"
      ],
      "primary_integrations": [
        "zohocrm",
        "trello",
        "gmail"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.zohoCrm",
        "n8n-nodes-base.trello",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.mailchimp",
        "n8n-nodes-base.shopifyTrigger",
        "n8n-nodes-base.harvest"
      ],
      "business_description": "COMM workflow that automates data/processes using zohocrm, trello, gmail, triggered via manual",
      "complexity_score": 17
    },
    {
      "original_filename": "F2AEknC2Kc3ujuX4_URL_Pinger.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/F2AEknC2Kc3ujuX4_URL_Pinger.json",
      "workflow_name": "URL Pinger",
      "suggested_filename": "util_pinger_automate_schedule_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "scheduleTrigger",
        "httpRequest",
        "set",
        "splitOut"
      ],
      "primary_integrations": [
        "schedule",
        "httprequest"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using schedule, httprequest, triggered via cron",
      "complexity_score": 8
    },
    {
      "original_filename": "99_Execute_an_SQL_query_in_Microsoft_SQL.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/99_Execute_an_SQL_query_in_Microsoft_SQL.json",
      "workflow_name": "Execute an SQL query in Microsoft SQL",
      "suggested_filename": "util_execute_automate_microsoftsql_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "microsoftSql",
        "manualTrigger"
      ],
      "primary_integrations": [
        "microsoftsql",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.microsoftSql"
      ],
      "business_description": "UTIL workflow that automates data/processes using microsoftsql, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "Zoom AI Meeting Assistant creates mail summary, ClickUp tasks and follow-up call.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Zoom AI Meeting Assistant creates mail summary, ClickUp tasks and follow-up call.json",
      "workflow_name": "Zoom AI Meeting Assistant",
      "suggested_filename": "ai_zoom_ai_process_clickup_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "clickUp",
        "httpRequest",
        "extractFromFile",
        "filter",
        "splitInBatches",
        "emailSend",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.openAi",
        "microsoftOutlookTool",
        "stickyNote",
        "stopAndError",
        "zoom",
        "executeWorkflowTrigger",
        "set",
        "splitOut",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "clickup",
        "httprequest",
        "extractfromfile"
      ],
      "total_nodes": 24,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.zoom",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.emailSend",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.microsoftOutlookTool",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.clickUp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that ai_processs data/processes using clickup, httprequest, extractfromfile, triggered via manual",
      "complexity_score": 43
    },
    {
      "original_filename": "1834_workflow_1834.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1834_workflow_1834.json",
      "workflow_name": "1834_workflow_1834",
      "suggested_filename": "data_1834_workflow_1834_automate_webhook_notion_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "notion"
      ],
      "primary_integrations": [
        "webhook",
        "notion"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using webhook, notion, triggered via webhook",
      "complexity_score": 6
    },
    {
      "original_filename": "6MRJ2tfl8c2f3AuE_💥🛠️Build_a_Web_Search_Chatbot_with_GPT-4o_and_MCP_Brave_Search.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/6MRJ2tfl8c2f3AuE_💥🛠️Build_a_Web_Search_Chatbot_with_GPT-4o_and_MCP_Brave_Search.json",
      "workflow_name": "💥🛠️Build a Web Search Chatbot with GPT-4o and MCP Brave Search",
      "suggested_filename": "ai_build_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 15,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-mcp.mcpClientTool",
        "n8n-nodes-mcp.mcpClientTool",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "itzURpN5wbUNOXOw_[2_2]_KNN_classifier_(lands_dataset).json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/itzURpN5wbUNOXOw_[2_2]_KNN_classifier_(lands_dataset).json",
      "workflow_name": "[2/2] KNN classifier (lands dataset)",
      "suggested_filename": "data_classifier_automate_httprequest_executeworkflow.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "code",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "executeworkflow"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, executeworkflow, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "🔐🦙🤖 Private & Local Ollama Self-Hosted AI Assistant.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/🔐🦙🤖 Private & Local Ollama Self-Hosted AI Assistant.json",
      "workflow_name": "🗨️Ollama Chat",
      "suggested_filename": "ai_ollama_automate_n8nnodeslangchainlmollama_n8nnodeslangchainchainllm.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.lmOllama",
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmollama",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 14,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "@n8n/n8n-nodes-langchain.lmOllama",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.lmollama, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 19
    },
    {
      "original_filename": "Generate SEO Seed Keywords Using AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Generate SEO Seed Keywords Using AI.json",
      "workflow_name": "Generate SEO Seed Keywords Using AI",
      "suggested_filename": "ai_generate_generate_n8nnodeslangchainlmchatanthropic_n8nnodeslangchainagent.json",
      "category": "AI",
      "business_function": "generate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.lmChatAnthropic",
        "splitOut",
        "n8n-nodes-langchain.agent",
        "manualTrigger",
        "aggregate"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.lmchatanthropic",
        "n8n-nodes-langchain.agent",
        "manual"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger"
      ],
      "business_description": "AI workflow that generates data/processes using n8n-nodes-langchain.lmchatanthropic, n8n-nodes-langchain.agent, manual, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "Query Perplexity AI from your n8n workflows.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Query Perplexity AI from your n8n workflows.json",
      "workflow_name": "Query Perplexity AI from your n8n workflows",
      "suggested_filename": "ai_query_ai_process_httprequest_manual.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "2349_workflow_2349.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2349_workflow_2349.json",
      "workflow_name": "2349_workflow_2349",
      "suggested_filename": "util_2349_workflow_2349_automate_error_n8n.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "errorTrigger",
        "n8n",
        "code"
      ],
      "primary_integrations": [
        "error",
        "n8n"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.errorTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.n8n"
      ],
      "business_description": "UTIL workflow that automates data/processes using error, n8n, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "Transform Image to Lego Style Using Line and Dall-E.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Transform Image to Lego Style Using Line and Dall-E.json",
      "workflow_name": "Transform Image to Lego Style Using Line and Dall-E",
      "suggested_filename": "ai_transform_process_webhook_httprequest_webhook.json",
      "category": "AI",
      "business_function": "process",
      "trigger_type": "webhook",
      "integrations": [
        "webhook",
        "httpRequest",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "webhook",
        "httprequest",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "AI workflow that processs data/processes using webhook, httprequest, n8n-nodes-langchain.openai, triggered via webhook",
      "complexity_score": 8
    },
    {
      "original_filename": "aVienX696oMCH1DR_Tiktok_Downloader.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/aVienX696oMCH1DR_Tiktok_Downloader.json",
      "workflow_name": "Tiktok Downloader",
      "suggested_filename": "util_tiktok_automate_httprequest_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "manualTrigger",
        "googleDrive",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "googledrive"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, manual, googledrive, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "QqbYH25we4JDZrZD_🔍🛠️_Tavily_Search_&_Extract_-_Template.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/QqbYH25we4JDZrZD_🔍🛠️_Tavily_Search_&_Extract_-_Template.json",
      "workflow_name": "🔍🛠️ Tavily Search & Extract - Template",
      "suggested_filename": "ai_tavily_extract_n8nnodeslangchainchainllm_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that extracts data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "create e-mail responses with fastmail and OpenAI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/create e-mail responses with fastmail and OpenAI.json",
      "workflow_name": "create e-mail responses with fastmail and OpenAI",
      "suggested_filename": "ai_create_ai_process_httprequest_n8nnodeslangchainopenai.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "n8n-nodes-langchain.openAi",
        "emailReadImap",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "n8n-nodes-langchain.openai",
        "emailreadimap"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, n8n-nodes-langchain.openai, emailreadimap, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "2476_workflow_2476.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2476_workflow_2476.json",
      "workflow_name": "2476_workflow_2476",
      "suggested_filename": "util_2476_workflow_2476_automate_splitinbatches_httprequest.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "noOp",
        "wait",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "limit"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "manual"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, httprequest, manual, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "63_Receive_updates_when_a_new_list_is_created_in_Affinity.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/63_Receive_updates_when_a_new_list_is_created_in_Affinity.json",
      "workflow_name": "Receive updates when a new list is created in Affinity",
      "suggested_filename": "util_receive_create_affinity.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "affinityTrigger"
      ],
      "primary_integrations": [
        "affinity"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.affinityTrigger"
      ],
      "business_description": "UTIL workflow that creates data/processes using affinity, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "wLbJ7rE6vQzizCp2_Youtube_Automation.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/wLbJ7rE6vQzizCp2_Youtube_Automation.json",
      "workflow_name": "Youtube_Automation",
      "suggested_filename": "ai_youtube_automation_automate_splitinbatches_httprequest_cron.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "wait",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "code",
        "manualTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "removeDuplicates",
        "n8n-nodes-langchain.openAi",
        "youTube"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 33,
      "node_types": [
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.splitInBatches",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.code",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.set",
        "n8n-nodes-base.removeDuplicates",
        "n8n-nodes-base.if",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.youTube"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, httprequest, schedule, triggered via cron",
      "complexity_score": 47
    },
    {
      "original_filename": "209_Create,_update_and_get_a_contact_using_the_SendGrid_node.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/209_Create,_update_and_get_a_contact_using_the_SendGrid_node.json",
      "workflow_name": "Create, update and get a contact using the SendGrid node",
      "suggested_filename": "comm_create_create_contact_sendgrid_manual.json",
      "category": "COMM",
      "business_function": "create_contact",
      "trigger_type": "manual",
      "integrations": [
        "sendGrid",
        "manualTrigger"
      ],
      "primary_integrations": [
        "sendgrid",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.sendGrid",
        "n8n-nodes-base.sendGrid",
        "n8n-nodes-base.sendGrid"
      ],
      "business_description": "COMM workflow that create_contacts data/processes using sendgrid, manual, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "2171_workflow_2171.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2171_workflow_2171.json",
      "workflow_name": "2171_workflow_2171",
      "suggested_filename": "util_2171_workflow_2171_automate_highlevel_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "highLevel",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "switch"
      ],
      "primary_integrations": [
        "highlevel",
        "httprequest",
        "webhook"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.highLevel",
        "n8n-nodes-base.highLevel",
        "n8n-nodes-base.switch"
      ],
      "business_description": "UTIL workflow that automates data/processes using highlevel, httprequest, webhook, triggered via webhook",
      "complexity_score": 16
    },
    {
      "original_filename": "1325_workflow_1325.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1325_workflow_1325.json",
      "workflow_name": "1325_workflow_1325",
      "suggested_filename": "data_1325_workflow_1325_automate_dropcontact_calendly.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "dropcontact",
        "calendlyTrigger",
        "notion"
      ],
      "primary_integrations": [
        "dropcontact",
        "calendly",
        "notion"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.notion",
        "n8n-nodes-base.dropcontact",
        "n8n-nodes-base.calendlyTrigger"
      ],
      "business_description": "DATA workflow that automates data/processes using dropcontact, calendly, notion, triggered via manual",
      "complexity_score": 6
    },
    {
      "original_filename": "mqdP7Aw1KnkIq2W5_Line_Save_File_to_Google_Drive_and_Log_File's_URL.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/mqdP7Aw1KnkIq2W5_Line_Save_File_to_Google_Drive_and_Log_File's_URL.json",
      "workflow_name": "Line Save File to Google Drive and Log File's URL",
      "suggested_filename": "data_line_automate_httprequest_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "merge",
        "if",
        "stickyNote",
        "httpRequest",
        "webhook",
        "googleDrive",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "googledrive"
      ],
      "total_nodes": 27,
      "node_types": [
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.code",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, webhook, googledrive, triggered via webhook",
      "complexity_score": 35
    },
    {
      "original_filename": "111_Standup_Bot_-_Initialize.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/111_Standup_Bot_-_Initialize.json",
      "workflow_name": "Standup Bot - Initialize",
      "suggested_filename": "util_standup_automate_writebinaryfile_movebinarydata.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "writeBinaryFile",
        "set",
        "moveBinaryData",
        "manualTrigger"
      ],
      "primary_integrations": [
        "writebinaryfile",
        "movebinarydata",
        "manual"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.writeBinaryFile",
        "n8n-nodes-base.moveBinaryData",
        "n8n-nodes-base.set"
      ],
      "business_description": "UTIL workflow that automates data/processes using writebinaryfile, movebinarydata, manual, triggered via manual",
      "complexity_score": 8
    },
    {
      "original_filename": "98_Create_a_new_task_in_Asana.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/98_Create_a_new_task_in_Asana.json",
      "workflow_name": "Create a new task in Asana",
      "suggested_filename": "util_create_create_task_manual_asana.json",
      "category": "UTIL",
      "business_function": "create_task",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "asana"
      ],
      "primary_integrations": [
        "manual",
        "asana"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.asana"
      ],
      "business_description": "UTIL workflow that create_tasks data/processes using manual, asana, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2858_workflow_2858.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2858_workflow_2858.json",
      "workflow_name": "2858_workflow_2858",
      "suggested_filename": "util_2858_workflow_2858_automate_splitinbatches_httprequest_cron.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "wait",
        "if",
        "set",
        "httpRequest",
        "scheduleTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "httprequest",
        "schedule"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.scheduleTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using splitinbatches, httprequest, schedule, triggered via cron",
      "complexity_score": 16
    },
    {
      "original_filename": "1396_workflow_1396.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1396_workflow_1396.json",
      "workflow_name": "1396_workflow_1396",
      "suggested_filename": "util_1396_workflow_1396_automate_awss3_googledrive.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "awsS3",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "awss3",
        "googledrive"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.awsS3",
        "n8n-nodes-base.awsS3"
      ],
      "business_description": "UTIL workflow that automates data/processes using awss3, googledrive, triggered via manual",
      "complexity_score": 7
    },
    {
      "original_filename": "1748_workflow_1748.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1748_workflow_1748.json",
      "workflow_name": "1748_workflow_1748",
      "suggested_filename": "util_1748_workflow_1748_automate_itemlists_htmlextract.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "itemLists",
        "htmlExtract",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger"
      ],
      "primary_integrations": [
        "itemlists",
        "htmlextract",
        "httprequest"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.htmlExtract",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest"
      ],
      "business_description": "UTIL workflow that automates data/processes using itemlists, htmlextract, httprequest, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "569_workflow_569.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/569_workflow_569.json",
      "workflow_name": "569_workflow_569",
      "suggested_filename": "util_569_workflow_569_automate_jira.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "jiraTrigger"
      ],
      "primary_integrations": [
        "jira"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.jiraTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using jira, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "1799_workflow_1799.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1799_workflow_1799.json",
      "workflow_name": "1799_workflow_1799",
      "suggested_filename": "util_1799_workflow_1799_automate_itemlists_htmlextract_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "itemLists",
        "htmlExtract",
        "set",
        "httpRequest",
        "webhook",
        "manualTrigger",
        "function",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "itemlists",
        "htmlextract",
        "httprequest"
      ],
      "total_nodes": 11,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.htmlExtract",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.itemLists",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.htmlExtract",
        "n8n-nodes-base.set",
        "n8n-nodes-base.function",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.respondToWebhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using itemlists, htmlextract, httprequest, triggered via webhook",
      "complexity_score": 19
    },
    {
      "original_filename": "PRQhetYFkuhxntVH_Matomo_Analytics_Report.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/PRQhetYFkuhxntVH_Matomo_Analytics_Report.json",
      "workflow_name": "Matomo Analytics Report",
      "suggested_filename": "analytics_matomo_report_httprequest_schedule_cron.json",
      "category": "ANALYTICS",
      "business_function": "report",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "scheduleTrigger",
        "baserow",
        "manualTrigger",
        "code"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "baserow"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.baserow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "ANALYTICS workflow that reports data/processes using httprequest, schedule, baserow, triggered via cron",
      "complexity_score": 16
    },
    {
      "original_filename": "b8a4IwiwD9SlgF42_🔥📈🤖_AI_Agent__for_n8n_Creators_Leaderboard_-_Find_Popular_Workflows.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/b8a4IwiwD9SlgF42_🔥📈🤖_AI_Agent__for_n8n_Creators_Leaderboard_-_Find_Popular_Workflows.json",
      "workflow_name": "🔥📈🤖 AI Agent  for n8n Creators Leaderboard - Find Popular Workflows",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "readWriteFile",
        "sort",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "limit",
        "n8n-nodes-langchain.agent",
        "aggregate",
        "n8n-nodes-langchain.lmChatOllama",
        "splitOut",
        "convertToFile",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 43,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.filter",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 61
    },
    {
      "original_filename": "2665_workflow_2665.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2665_workflow_2665.json",
      "workflow_name": "2665_workflow_2665",
      "suggested_filename": "ai_2665_workflow_2665_automate_gmail_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "gmailTrigger",
        "stickyNote",
        "set",
        "httpRequest",
        "jira",
        "code",
        "microsoftOutlookTrigger",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "jira"
      ],
      "total_nodes": 18,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.microsoftOutlookTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.code",
        "n8n-nodes-base.jira",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using gmail, httprequest, jira, triggered via manual",
      "complexity_score": 26
    },
    {
      "original_filename": "2113_workflow_2113.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2113_workflow_2113.json",
      "workflow_name": "2113_workflow_2113",
      "suggested_filename": "data_2113_workflow_2113_automate_httprequest_schedule_cron.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "scheduleTrigger",
        "splitOut",
        "googleSheets",
        "clearbit",
        "filter"
      ],
      "primary_integrations": [
        "httprequest",
        "schedule",
        "googlesheets"
      ],
      "total_nodes": 15,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.clearbit",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "DATA workflow that automates data/processes using httprequest, schedule, googlesheets, triggered via cron",
      "complexity_score": 23
    },
    {
      "original_filename": "NDCN2arRu5tLuP61_Automate_PDF_Image_Extraction_&_Analysis_with_GPT-4o_and_Google_Drive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/NDCN2arRu5tLuP61_Automate_PDF_Image_Extraction_&_Analysis_with_GPT-4o_and_Google_Drive.json",
      "workflow_name": "Automate PDF Image Extraction & Analysis with GPT-4o and Google Drive",
      "suggested_filename": "ai_automate_extract_httprequest_manual.json",
      "category": "AI",
      "business_function": "extract",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "googleDrive",
        "code",
        "convertToFile",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "httprequest",
        "manual",
        "googledrive"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.convertToFile"
      ],
      "business_description": "AI workflow that extracts data/processes using httprequest, manual, googledrive, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "2889_workflow_2889.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2889_workflow_2889.json",
      "workflow_name": "2889_workflow_2889",
      "suggested_filename": "content_2889_workflow_2889_automate_wordpress_manual.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "wordpress",
        "stickyNote",
        "set",
        "manualTrigger",
        "googleDrive",
        "convertToFile"
      ],
      "primary_integrations": [
        "wordpress",
        "manual",
        "googledrive"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "CONTENT workflow that automates data/processes using wordpress, manual, googledrive, triggered via manual",
      "complexity_score": 13
    },
    {
      "original_filename": "167_Create_a_short_URL_and_get_the_statistics_of_the_URL.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/167_Create_a_short_URL_and_get_the_statistics_of_the_URL.json",
      "workflow_name": "Create a short URL and get the statistics of the URL",
      "suggested_filename": "util_create_create_manual_yourls.json",
      "category": "UTIL",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "yourls"
      ],
      "primary_integrations": [
        "manual",
        "yourls"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.yourls",
        "n8n-nodes-base.yourls"
      ],
      "business_description": "UTIL workflow that creates data/processes using manual, yourls, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "Translate audio using AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Translate audio using AI.json",
      "workflow_name": "Translate audio using AI",
      "suggested_filename": "ai_translate_ai_process_n8nnodeslangchainchainllm_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainLlm",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "httprequest",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 12,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.chainllm, httprequest, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "959_workflow_959.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/959_workflow_959.json",
      "workflow_name": "959_workflow_959",
      "suggested_filename": "util_959_workflow_959_automate_raindrop.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "raindrop"
      ],
      "primary_integrations": [
        "raindrop"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.raindrop",
        "n8n-nodes-base.raindrop",
        "n8n-nodes-base.raindrop",
        "n8n-nodes-base.raindrop"
      ],
      "business_description": "UTIL workflow that automates data/processes using raindrop, triggered via manual",
      "complexity_score": 5
    },
    {
      "original_filename": "3500_workflow_3500.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3500_workflow_3500.json",
      "workflow_name": "3500_workflow_3500",
      "suggested_filename": "ai_3500_workflow_3500_automate_splitinbatches_ghost.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "merge",
        "stickyNote",
        "set",
        "ghost",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "splitinbatches",
        "ghost",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.code",
        "n8n-nodes-base.ghost",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, ghost, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 24
    },
    {
      "original_filename": "IYgbtNpyB4E6Jbxo_2._Refresh_Pipedrive_tokens.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/IYgbtNpyB4E6Jbxo_2._Refresh_Pipedrive_tokens.json",
      "workflow_name": "2. Refresh Pipedrive tokens",
      "suggested_filename": "util_refresh_automate_supabase_httprequest_webhook.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "supabase",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "stopAndError",
        "webhook",
        "code",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "supabase",
        "httprequest",
        "stopanderror"
      ],
      "total_nodes": 29,
      "node_types": [
        "n8n-nodes-base.stopAndError",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.if",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.supabase",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "UTIL workflow that automates data/processes using supabase, httprequest, stopanderror, triggered via webhook",
      "complexity_score": 38
    },
    {
      "original_filename": "W5cevjhP3xIQdMhT_Simple_LinkedIn_profile_collector.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/W5cevjhP3xIQdMhT_Simple_LinkedIn_profile_collector.json",
      "workflow_name": "Simple LinkedIn profile collector",
      "suggested_filename": "ai_simple_automate_nocodb_httprequest.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "nocoDb",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "manualTrigger",
        "convertToFile",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "nocodb",
        "httprequest",
        "manual"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.nocoDb",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using nocodb, httprequest, manual, triggered via manual",
      "complexity_score": 32
    },
    {
      "original_filename": "zmgSshZ5xESr3ozl_HR_&_IT_Helpdesk_Chatbot_with_Audio_Transcription.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/zmgSshZ5xESr3ozl_HR_&_IT_Helpdesk_Chatbot_with_Audio_Transcription.json",
      "workflow_name": "HR & IT Helpdesk Chatbot with Audio Transcription",
      "suggested_filename": "ai_helpdesk_automate_n8nnodeslangchainvectorstore_n8nnodeslangchainmemorypostgre.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.toolVectorStore",
        "n8n-nodes-langchain.memoryPostgresChat",
        "stickyNote",
        "set",
        "httpRequest",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "telegramTrigger",
        "manualTrigger",
        "extractFromFile",
        "n8n-nodes-langchain.vectorStorePGVector",
        "switch",
        "telegram",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.openAi",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.vectorstore",
        "n8n-nodes-langchain.memorypostgreschat",
        "httprequest"
      ],
      "total_nodes": 27,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.vectorStorePGVector",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStorePGVector",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.vectorstore, n8n-nodes-langchain.memorypostgreschat, httprequest, triggered via manual",
      "complexity_score": 44
    },
    {
      "original_filename": "Speed Up Social Media Banners With BannerBear.com.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Speed Up Social Media Banners With BannerBear.com.json",
      "workflow_name": "Speed Up Social Media Banners With BannerBear.com",
      "suggested_filename": "ai_speed_automate_httprequest_bannerbear.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "set",
        "httpRequest",
        "bannerbear",
        "n8n-nodes-langchain.openAi",
        "discord",
        "formTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "bannerbear",
        "n8n-nodes-langchain.openai"
      ],
      "total_nodes": 16,
      "node_types": [
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.bannerbear",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.discord",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that automates data/processes using httprequest, bannerbear, n8n-nodes-langchain.openai, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "5_new.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/5_new.json",
      "workflow_name": "new",
      "suggested_filename": "ops_automate_manual_github.json",
      "category": "OPS",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "github"
      ],
      "primary_integrations": [
        "manual",
        "github"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.github"
      ],
      "business_description": "OPS workflow that automates data/processes using manual, github, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "739_workflow_739.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/739_workflow_739.json",
      "workflow_name": "739_workflow_739",
      "suggested_filename": "data_739_workflow_739_automate_airtable_webhook_webhook.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "airtable",
        "set",
        "webhook",
        "mindee"
      ],
      "primary_integrations": [
        "airtable",
        "webhook",
        "mindee"
      ],
      "total_nodes": 4,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.mindee",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that automates data/processes using airtable, webhook, mindee, triggered via webhook",
      "complexity_score": 8
    },
    {
      "original_filename": "3549_workflow_3549.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3549_workflow_3549.json",
      "workflow_name": "3549_workflow_3549",
      "suggested_filename": "comm_3549_workflow_3549_automate_splitinbatches_gmail_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "noOp",
        "gmail",
        "set",
        "stickyNote",
        "scheduleTrigger",
        "splitOut",
        "googleDrive",
        "aggregate",
        "googleSheets",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "gmail",
        "schedule"
      ],
      "total_nodes": 19,
      "node_types": [
        "n8n-nodes-base.filter",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using splitinbatches, gmail, schedule, triggered via cron",
      "complexity_score": 30
    },
    {
      "original_filename": "LIAes1kWVZAWZBX2_🎥_Analyze_YouTube_Video_for_Summaries,_Transcripts_&_Content_+_Google_Gemini_AI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/LIAes1kWVZAWZBX2_🎥_Analyze_YouTube_Video_for_Summaries,_Transcripts_&_Content_+_Google_Gemini_AI.json",
      "workflow_name": "🎥 Analyze YouTube Video for Summaries, Transcripts & Content + Google Gemini AI",
      "suggested_filename": "ai_analyze_analyze_gmail_httprequest.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "gmail",
        "httpRequest",
        "markdown",
        "form",
        "googleDrive",
        "code",
        "formTrigger"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "markdown"
      ],
      "total_nodes": 33,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.form",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that analyzes data/processes using gmail, httprequest, markdown, triggered via manual",
      "complexity_score": 43
    },
    {
      "original_filename": "Telegram chat with PDF.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Telegram chat with PDF.json",
      "workflow_name": "Telegram RAG pdf",
      "suggested_filename": "ai_telegram_automate_n8nnodeslangchainchainretrievalqa_stopanderror.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.chainRetrievalQa",
        "if",
        "stickyNote",
        "stopAndError",
        "n8n-nodes-langchain.embeddingsOpenAi",
        "telegramTrigger",
        "n8n-nodes-langchain.vectorStorePinecone",
        "telegram",
        "code",
        "n8n-nodes-langchain.retrieverVectorStore",
        "limit",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.lmChatGroq",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainretrievalqa",
        "stopanderror",
        "n8n-nodes-langchain.embeddingsopenai"
      ],
      "total_nodes": 20,
      "node_types": [
        "n8n-nodes-base.telegramTrigger",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.stopAndError",
        "@n8n/n8n-nodes-langchain.chainRetrievalQa",
        "@n8n/n8n-nodes-langchain.retrieverVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.lmChatGroq",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.if",
        "n8n-nodes-base.code",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.stopAndError",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "n8n-nodes-base.limit"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainretrievalqa, stopanderror, n8n-nodes-langchain.embeddingsopenai, triggered via manual",
      "complexity_score": 34
    },
    {
      "original_filename": "gI3QGKTf52zwyh6O_AutoClip_–_Automatically_Generate_Video_Clips_and_Upload_to_YouTube.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/gI3QGKTf52zwyh6O_AutoClip_–_Automatically_Generate_Video_Clips_and_Upload_to_YouTube.json",
      "workflow_name": "AutoClip – Automatically Generate Video Clips and Upload to YouTube",
      "suggested_filename": "data_autoclip_generate_httprequest_executecommand.json",
      "category": "DATA",
      "business_function": "generate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "httpRequest",
        "executeCommand",
        "readWriteFile",
        "manualTrigger",
        "googleDrive",
        "code",
        "googleSheets"
      ],
      "primary_integrations": [
        "httprequest",
        "executecommand",
        "readwritefile"
      ],
      "total_nodes": 23,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.code",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that generates data/processes using httprequest, executecommand, readwritefile, triggered via manual",
      "complexity_score": 33
    },
    {
      "original_filename": "2138_workflow_2138.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2138_workflow_2138.json",
      "workflow_name": "2138_workflow_2138",
      "suggested_filename": "ai_2138_workflow_2138_automate_splitinbatches_respondtowebhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "respondToWebhook",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "graphql",
        "notion",
        "linear",
        "code",
        "aggregate",
        "formTrigger",
        "n8n-nodes-langchain.openAi",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "respondtowebhook",
        "httprequest"
      ],
      "total_nodes": 24,
      "node_types": [
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.graphql",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.linear",
        "n8n-nodes-base.code",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.graphql",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.notion",
        "n8n-nodes-base.code",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.respondToWebhook"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, respondtowebhook, httprequest, triggered via manual",
      "complexity_score": 38
    },
    {
      "original_filename": "Siri AI Agent_ Apple Shortcuts powered voice template.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Siri AI Agent_ Apple Shortcuts powered voice template.json",
      "workflow_name": "Siri AI Agent_ Apple Shortcuts powered voice template",
      "suggested_filename": "ai_siri_ai_process_webhook_n8nnodeslangchainlmchatopenai_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.agent",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "n8n-nodes-langchain.lmchatopenai",
        "n8n-nodes-langchain.agent"
      ],
      "total_nodes": 7,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.webhook"
      ],
      "business_description": "AI workflow that ai_processs data/processes using webhook, n8n-nodes-langchain.lmchatopenai, n8n-nodes-langchain.agent, triggered via webhook",
      "complexity_score": 12
    },
    {
      "original_filename": "3630_workflow_3630.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3630_workflow_3630.json",
      "workflow_name": "3630_workflow_3630",
      "suggested_filename": "util_3630_workflow_3630_automate_executecommand_executecommand.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "executeCommandTool",
        "stickyNote",
        "executeCommand",
        "n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-langchain.toolWorkflow",
        "switch",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "executecommand",
        "executecommand",
        "n8n-nodes-langchain.mcp"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.mcpTrigger",
        "n8n-nodes-base.executeCommandTool",
        "n8n-nodes-base.executeCommandTool",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.executeCommand",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.executeCommand",
        "n8n-nodes-base.executeCommandTool",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using executecommand, executecommand, n8n-nodes-langchain.mcp, triggered via manual",
      "complexity_score": 21
    },
    {
      "original_filename": "AI Data Extraction with Dynamic Prompts and Baserow.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Data Extraction with Dynamic Prompts and Baserow.json",
      "workflow_name": "AI Data Extraction with Dynamic Prompts and Baserow",
      "suggested_filename": "ai_data_ai_process_splitinbatches_n8nnodeslangchainchainllm_webhook.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "webhook",
      "integrations": [
        "splitInBatches",
        "n8n-nodes-langchain.chainLlm",
        "noOp",
        "stickyNote",
        "set",
        "httpRequest",
        "webhook",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "extractFromFile",
        "code",
        "switch",
        "filter"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.chainllm",
        "httprequest"
      ],
      "total_nodes": 45,
      "node_types": [
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.code",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.code",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.extractFromFile",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, n8n-nodes-langchain.chainllm, httprequest, triggered via webhook",
      "complexity_score": 58
    },
    {
      "original_filename": "641_.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/641_.json",
      "workflow_name": "",
      "suggested_filename": "util_automate_unleashedsoftware_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "unleashedSoftware",
        "manualTrigger"
      ],
      "primary_integrations": [
        "unleashedsoftware",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.unleashedSoftware"
      ],
      "business_description": "UTIL workflow that automates data/processes using unleashedsoftware, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "2555_workflow_2555.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2555_workflow_2555.json",
      "workflow_name": "2555_workflow_2555",
      "suggested_filename": "data_2555_workflow_2555_automate_googlesheets_webflow.json",
      "category": "DATA",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "googleSheets",
        "stickyNote",
        "webflowTrigger",
        "code"
      ],
      "primary_integrations": [
        "googlesheets",
        "webflow"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.webflowTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "DATA workflow that automates data/processes using googlesheets, webflow, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "89_Post_RSS_feed_items_from_yesterday_to_Slack.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/89_Post_RSS_feed_items_from_yesterday_to_Slack.json",
      "workflow_name": "Post RSS feed items from yesterday to Slack",
      "suggested_filename": "comm_post_automate_slack_datetime_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "if",
        "dateTime",
        "rssFeedRead",
        "cron",
        "function"
      ],
      "primary_integrations": [
        "slack",
        "datetime",
        "rssfeedread"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.function",
        "n8n-nodes-base.cron",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.rssFeedRead",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, datetime, rssfeedread, triggered via cron",
      "complexity_score": 12
    },
    {
      "original_filename": "1_Dialpad_to_Syncro.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1_Dialpad_to_Syncro.json",
      "workflow_name": "Dialpad to Syncro",
      "suggested_filename": "data_dialpad_sync_httprequest_webhook_webhook.json",
      "category": "DATA",
      "business_function": "sync",
      "trigger_type": "webhook",
      "integrations": [
        "if",
        "noOp",
        "set",
        "httpRequest",
        "webhook",
        "googleSheets",
        "function"
      ],
      "primary_integrations": [
        "httprequest",
        "webhook",
        "googlesheets"
      ],
      "total_nodes": 22,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.webhook",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.function",
        "n8n-nodes-base.if",
        "n8n-nodes-base.function",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.noOp"
      ],
      "business_description": "DATA workflow that syncs data/processes using httprequest, webhook, googlesheets, triggered via webhook",
      "complexity_score": 29
    },
    {
      "original_filename": "1545_Updating_Shopify_tags_on_Onfleet_events.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/1545_Updating_Shopify_tags_on_Onfleet_events.json",
      "workflow_name": "Updating Shopify tags on Onfleet events",
      "suggested_filename": "ecommerce_updating_automate_onfleet_shopify.json",
      "category": "ECOMMERCE",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "onfleetTrigger",
        "shopify"
      ],
      "primary_integrations": [
        "onfleet",
        "shopify"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.onfleetTrigger",
        "n8n-nodes-base.shopify"
      ],
      "business_description": "ECOMMERCE workflow that automates data/processes using onfleet, shopify, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "3080_Automatically_Update_YouTube_Video_Descriptions_with_Inserted_Text.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3080_Automatically_Update_YouTube_Video_Descriptions_with_Inserted_Text.json",
      "workflow_name": "Automatically Update YouTube Video Descriptions with Inserted Text",
      "suggested_filename": "content_automatically_create_splitinbatches_manual.json",
      "category": "CONTENT",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "stickyNote",
        "set",
        "manualTrigger",
        "code",
        "youTube"
      ],
      "primary_integrations": [
        "splitinbatches",
        "manual",
        "youtube"
      ],
      "total_nodes": 9,
      "node_types": [
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.youTube",
        "n8n-nodes-base.code"
      ],
      "business_description": "CONTENT workflow that creates data/processes using splitinbatches, manual, youtube, triggered via manual",
      "complexity_score": 15
    },
    {
      "original_filename": "FpZJ8jaNQ3j2DO1L_Optimise_images_uploaded_to_GDrive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/FpZJ8jaNQ3j2DO1L_Optimise_images_uploaded_to_GDrive.json",
      "workflow_name": "Optimise images uploaded to GDrive",
      "suggested_filename": "util_optimise_automate_httprequest_googledrive.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "googleDrive",
        "googleDriveTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "googledrive",
        "googledrive"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDrive"
      ],
      "business_description": "UTIL workflow that automates data/processes using httprequest, googledrive, googledrive, triggered via manual",
      "complexity_score": 14
    },
    {
      "original_filename": "3027_workflow_3027.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3027_workflow_3027.json",
      "workflow_name": "3027_workflow_3027",
      "suggested_filename": "ai_3027_workflow_3027_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "airtable"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 11,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via manual",
      "complexity_score": 18
    },
    {
      "original_filename": "LL0TBxEbXoK2zhqp_AI_Document_Assistant_via_Telegram_+_Supabase.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/LL0TBxEbXoK2zhqp_AI_Document_Assistant_via_Telegram_+_Supabase.json",
      "workflow_name": "AI Document Assistant via Telegram + Supabase",
      "suggested_filename": "ai_document_ai_process_telegram_extractfromfile.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "telegram",
        "extractFromFile",
        "aggregate",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.toolVectorStore",
        "stickyNote",
        "n8n-nodes-langchain.toolThink",
        "openWeatherMapTool",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.memoryBufferWindow",
        "set",
        "n8n-nodes-langchain.embeddingsGoogleGemini",
        "telegramTrigger",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "splitOut",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "telegram",
        "extractfromfile",
        "n8n-nodes-langchain.textsplitterrecursivecharactertextsplitter"
      ],
      "total_nodes": 28,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.openWeatherMapTool",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.toolThink",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "n8n-nodes-base.extractFromFile",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.splitOut",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.code",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram"
      ],
      "business_description": "AI workflow that ai_processs data/processes using telegram, extractfromfile, n8n-nodes-langchain.textsplitterrecursivecharactertextsplitter, triggered via manual",
      "complexity_score": 47
    },
    {
      "original_filename": "639_.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/639_.json",
      "workflow_name": "",
      "suggested_filename": "util_automate_sse.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "sseTrigger"
      ],
      "primary_integrations": [
        "sse"
      ],
      "total_nodes": 1,
      "node_types": [
        "n8n-nodes-base.sseTrigger"
      ],
      "business_description": "UTIL workflow that automates data/processes using sse, triggered via manual",
      "complexity_score": 2
    },
    {
      "original_filename": "U6cY7PPR0vaRl1I0_Scrape_Web_Data_with_Bright_Data,_Google_Gemini_and_MCP_Automated_AI_Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/U6cY7PPR0vaRl1I0_Scrape_Web_Data_with_Bright_Data,_Google_Gemini_and_MCP_Automated_AI_Agent.json",
      "workflow_name": "Scrape Web Data with Bright Data, Google Gemini and MCP Automated AI Agent",
      "suggested_filename": "ai_scrape_ai_process_n8nnodeslangchainmemorybufferwindow_httprequest.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "httpRequest",
        "readWriteFile",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "function"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "httprequest",
        "readwritefile"
      ],
      "total_nodes": 19,
      "node_types": [
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-mcp.mcpClient",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-mcp.mcpClientTool",
        "n8n-nodes-mcp.mcpClient",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-mcp.mcpClientTool",
        "n8n-nodes-mcp.mcpClientTool",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.function",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, httprequest, readwritefile, triggered via manual",
      "complexity_score": 28
    },
    {
      "original_filename": "wi2ZWKN9XPR0jkvn_OpenSea_AI-Powered_Insights_via_Telegram.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/wi2ZWKN9XPR0jkvn_OpenSea_AI-Powered_Insights_via_Telegram.json",
      "workflow_name": "OpenSea AI-Powered Insights via Telegram",
      "suggested_filename": "ai_opensea_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "n8n-nodes-langchain.chatTrigger",
        "set",
        "n8n-nodes-langchain.lmChatOpenAi",
        "telegramTrigger",
        "n8n-nodes-langchain.toolWorkflow",
        "telegram",
        "n8n-nodes-langchain.agent"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "n8n-nodes-langchain.lmchatopenai"
      ],
      "total_nodes": 13,
      "node_types": [
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.telegramTrigger",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.telegram",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, n8n-nodes-langchain.lmchatopenai, triggered via manual",
      "complexity_score": 22
    },
    {
      "original_filename": "2434_workflow_2434.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2434_workflow_2434.json",
      "workflow_name": "2434_workflow_2434",
      "suggested_filename": "ai_2434_workflow_2434_automate_splitinbatches_strapi.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "splitInBatches",
        "strapi",
        "wordpress",
        "switch",
        "n8n-nodes-langchain.chainLlm",
        "if",
        "stickyNote",
        "set",
        "webflow",
        "httpRequest",
        "splitOut",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "googleDrive",
        "aggregate",
        "googleSheets",
        "executeWorkflow",
        "executeWorkflowTrigger"
      ],
      "primary_integrations": [
        "splitinbatches",
        "strapi",
        "wordpress"
      ],
      "total_nodes": 36,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.executeWorkflowTrigger",
        "n8n-nodes-base.executeWorkflow",
        "n8n-nodes-base.set",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.set",
        "n8n-nodes-base.if",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.strapi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.wordpress",
        "n8n-nodes-base.webflow",
        "n8n-nodes-base.httpRequest",
        "@n8n/n8n-nodes-langchain.chainLlm"
      ],
      "business_description": "AI workflow that automates data/processes using splitinbatches, strapi, wordpress, triggered via manual",
      "complexity_score": 54
    },
    {
      "original_filename": "2342_workflow_2342.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2342_workflow_2342.json",
      "workflow_name": "2342_workflow_2342",
      "suggested_filename": "ai_2342_workflow_2342_automate_n8nnodeslangchainoutputparserautofixing_n8nnodesl.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "n8n-nodes-langchain.outputParserAutofixing",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "stickyNote",
        "scheduleTrigger",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.lmChatOpenAi",
        "airtable",
        "n8n-nodes-langchain.agent",
        "switch",
        "twilioTrigger",
        "twilio"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserautofixing",
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured"
      ],
      "total_nodes": 36,
      "node_types": [
        "n8n-nodes-base.twilioTrigger",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.twilio",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.twilio",
        "n8n-nodes-base.twilio",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.switch",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "@n8n/n8n-nodes-langchain.outputParserAutofixing",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserautofixing, n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, triggered via cron",
      "complexity_score": 48
    },
    {
      "original_filename": "2393_workflow_2393.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2393_workflow_2393.json",
      "workflow_name": "2393_workflow_2393",
      "suggested_filename": "comm_2393_workflow_2393_automate_gmail_httprequest.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "noOp",
        "gmailTrigger",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "splitOut",
        "googleDrive",
        "html",
        "filter"
      ],
      "primary_integrations": [
        "gmail",
        "httprequest",
        "googledrive"
      ],
      "total_nodes": 13,
      "node_types": [
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.if",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.html"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, httprequest, googledrive, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "514_workflow_514.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/514_workflow_514.json",
      "workflow_name": "514_workflow_514",
      "suggested_filename": "content_514_workflow_514_automate_manual_facebookgraphapi.json",
      "category": "CONTENT",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "manualTrigger",
        "facebookGraphApi"
      ],
      "primary_integrations": [
        "manual",
        "facebookgraphapi"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.facebookGraphApi"
      ],
      "business_description": "CONTENT workflow that automates data/processes using manual, facebookgraphapi, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "441_workflow_441.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/441_workflow_441.json",
      "workflow_name": "441_workflow_441",
      "suggested_filename": "util_441_workflow_441_automate_signl4_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "signl4",
        "manualTrigger"
      ],
      "primary_integrations": [
        "signl4",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.signl4"
      ],
      "business_description": "UTIL workflow that automates data/processes using signl4, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "reQhibpNwU63Y8sn_Microsoft_Outlook_AI_Email_Assistant.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/reQhibpNwU63Y8sn_Microsoft_Outlook_AI_Email_Assistant.json",
      "workflow_name": "Microsoft Outlook AI Email Assistant",
      "suggested_filename": "ai_microsoft_ai_process_splitinbatches_n8nnodeslangchainoutputparserstructured_c.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "splitInBatches",
        "merge",
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "stickyNote",
        "set",
        "microsoftOutlook",
        "markdown",
        "scheduleTrigger",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "airtable",
        "mondayCom"
      ],
      "primary_integrations": [
        "splitinbatches",
        "n8n-nodes-langchain.outputparserstructured",
        "microsoftoutlook"
      ],
      "total_nodes": 28,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.microsoftOutlook",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.microsoftOutlook",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.if",
        "n8n-nodes-base.microsoftOutlook",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.mondayCom",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.markdown",
        "n8n-nodes-base.set",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.airtable",
        "n8n-nodes-base.splitInBatches",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using splitinbatches, n8n-nodes-langchain.outputparserstructured, microsoftoutlook, triggered via cron",
      "complexity_score": 42
    },
    {
      "original_filename": "AqWXpCre4fsPEkAH_Simple_OpenAI_Image_Generator.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AqWXpCre4fsPEkAH_Simple_OpenAI_Image_Generator.json",
      "workflow_name": "Simple OpenAI Image Generator",
      "suggested_filename": "ai_simple_ai_process_httprequest_form.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "httpRequest",
        "form",
        "convertToFile",
        "formTrigger"
      ],
      "primary_integrations": [
        "httprequest",
        "form",
        "converttofile"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.formTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.form",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using httprequest, form, converttofile, triggered via manual",
      "complexity_score": 10
    },
    {
      "original_filename": "2456_workflow_2456.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2456_workflow_2456.json",
      "workflow_name": "2456_workflow_2456",
      "suggested_filename": "ai_2456_workflow_2456_automate_webhook_n8nnodeslangchainopenai_webhook.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "webhook",
      "integrations": [
        "stickyNote",
        "webhook",
        "switch",
        "n8n-nodes-langchain.openAi",
        "respondToWebhook"
      ],
      "primary_integrations": [
        "webhook",
        "n8n-nodes-langchain.openai",
        "respondtowebhook"
      ],
      "total_nodes": 10,
      "node_types": [
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.respondToWebhook",
        "n8n-nodes-base.webhook",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.openAi",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using webhook, n8n-nodes-langchain.openai, respondtowebhook, triggered via webhook",
      "complexity_score": 15
    },
    {
      "original_filename": "2320_workflow_2320.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2320_workflow_2320.json",
      "workflow_name": "2320_workflow_2320",
      "suggested_filename": "ai_2320_workflow_2320_automate_n8nnodeslangchainchainllm_n8nnodeslangchainoutput.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "merge",
        "n8n-nodes-langchain.chainLlm",
        "n8n-nodes-langchain.outputParserStructured",
        "gmailTrigger",
        "stickyNote",
        "wait",
        "n8n-nodes-langchain.lmOpenAi",
        "httpRequest",
        "gmail",
        "set",
        "if",
        "aggregate",
        "splitOut",
        "switch",
        "googleSheets"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.chainllm",
        "n8n-nodes-langchain.outputparserstructured",
        "gmail"
      ],
      "total_nodes": 26,
      "node_types": [
        "@n8n/n8n-nodes-langchain.lmOpenAi",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmailTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.chainLlm",
        "n8n-nodes-base.if",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.chainllm, n8n-nodes-langchain.outputparserstructured, gmail, triggered via manual",
      "complexity_score": 41
    },
    {
      "original_filename": "BMI5WkmyU8nZqfII_modelo_do_chatbot.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/BMI5WkmyU8nZqfII_modelo_do_chatbot.json",
      "workflow_name": "modelo do chatbot",
      "suggested_filename": "ai_modelo_automate_mysql_n8nnodeslangchainmemorypostgreschat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "mySqlTool",
        "n8n-nodes-langchain.memoryPostgresChat",
        "if",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-langchain.openAi"
      ],
      "primary_integrations": [
        "mysql",
        "n8n-nodes-langchain.memorypostgreschat",
        "n8n-nodes-langchain.chat"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.openAi",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "n8n-nodes-base.mySqlTool",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "@n8n/n8n-nodes-langchain.toolHttpRequest",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.openAi"
      ],
      "business_description": "AI workflow that automates data/processes using mysql, n8n-nodes-langchain.memorypostgreschat, n8n-nodes-langchain.chat, triggered via manual",
      "complexity_score": 20
    },
    {
      "original_filename": "2088_workflow_2088.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2088_workflow_2088.json",
      "workflow_name": "2088_workflow_2088",
      "suggested_filename": "comm_2088_workflow_2088_automate_gmail_schedule_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "merge",
        "stickyNote",
        "set",
        "gmail",
        "scheduleTrigger",
        "googleSheets",
        "filter"
      ],
      "primary_integrations": [
        "gmail",
        "schedule",
        "googlesheets"
      ],
      "total_nodes": 12,
      "node_types": [
        "n8n-nodes-base.filter",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.googleSheets",
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.merge"
      ],
      "business_description": "COMM workflow that automates data/processes using gmail, schedule, googlesheets, triggered via cron",
      "complexity_score": 19
    },
    {
      "original_filename": "AI-Driven Lead Management and Inquiry Automation with ERPNext & n8n.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI-Driven Lead Management and Inquiry Automation with ERPNext & n8n.json",
      "workflow_name": "AI-Driven Lead Management and Inquiry Automation with ERPNext & n8n",
      "suggested_filename": "ai_driven_ai_process_generic.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [],
      "primary_integrations": [],
      "total_nodes": 0,
      "node_types": [],
      "business_description": "AI workflow that ai_processs data/processes using generic components, triggered via manual",
      "complexity_score": 0
    },
    {
      "original_filename": "🔥📈🤖 AI Agent for n8n Creators Leaderboard - Find Popular Workflows.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/🔥📈🤖 AI Agent for n8n Creators Leaderboard - Find Popular Workflows.json",
      "workflow_name": "🔥📈🤖 AI Agent for n8n Creators Leaderboard - Find Popular Workflows",
      "suggested_filename": "ai_agent_ai_process_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "merge",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "readWriteFile",
        "sort",
        "n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-langchain.toolWorkflow",
        "limit",
        "n8n-nodes-langchain.agent",
        "aggregate",
        "n8n-nodes-langchain.lmChatOllama",
        "splitOut",
        "convertToFile",
        "executeWorkflowTrigger",
        "filter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 43,
      "node_types": [
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.filter",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.executeWorkflowTrigger",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "@n8n/n8n-nodes-langchain.toolWorkflow",
        "n8n-nodes-base.convertToFile",
        "n8n-nodes-base.set",
        "@n8n/n8n-nodes-langchain.agent",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatOllama",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.merge",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.splitOut",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.limit",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 61
    },
    {
      "original_filename": "84_Get_a_pipeline_in_CircleCI.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/84_Get_a_pipeline_in_CircleCI.json",
      "workflow_name": "Get a pipeline in CircleCI",
      "suggested_filename": "util_pipeline_read_circleci_manual.json",
      "category": "UTIL",
      "business_function": "read",
      "trigger_type": "manual",
      "integrations": [
        "circleCi",
        "manualTrigger"
      ],
      "primary_integrations": [
        "circleci",
        "manual"
      ],
      "total_nodes": 2,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.circleCi"
      ],
      "business_description": "UTIL workflow that reads data/processes using circleci, manual, triggered via manual",
      "complexity_score": 4
    },
    {
      "original_filename": "dgBdnnnY0622JwGy_workflow_dgBdnnnY0622JwGy.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/dgBdnnnY0622JwGy_workflow_dgBdnnnY0622JwGy.json",
      "workflow_name": "dgBdnnnY0622JwGy_workflow_dgBdnnnY0622JwGy",
      "suggested_filename": "ai_dgbdnnny0622jwgy_workflow_dgbdnnny0622jwgy_automate_n8nnodeslangchainoutputpa.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.outputParserStructured",
        "if",
        "gmail",
        "noOp",
        "set",
        "aggregate",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "telegram"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.outputparserstructured",
        "gmail",
        "manual"
      ],
      "total_nodes": 17,
      "node_types": [
        "n8n-nodes-base.gmail",
        "n8n-nodes-base.manualTrigger",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.gmail",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.outputParserStructured",
        "n8n-nodes-base.if",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.telegram",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.aggregate",
        "n8n-nodes-base.gmail"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.outputparserstructured, gmail, manual, triggered via manual",
      "complexity_score": 27
    },
    {
      "original_filename": "3996_workflow_3996.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/3996_workflow_3996.json",
      "workflow_name": "3996_workflow_3996",
      "suggested_filename": "util_3996_workflow_3996_automate_n8n_manual.json",
      "category": "UTIL",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "stickyNote",
        "n8n",
        "manualTrigger",
        "if"
      ],
      "primary_integrations": [
        "n8n",
        "manual"
      ],
      "total_nodes": 5,
      "node_types": [
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.if",
        "n8n-nodes-base.n8n",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "UTIL workflow that automates data/processes using n8n, manual, triggered via manual",
      "complexity_score": 9
    },
    {
      "original_filename": "2704_workflow_2704.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/2704_workflow_2704.json",
      "workflow_name": "2704_workflow_2704",
      "suggested_filename": "comm_2704_workflow_2704_automate_slack_datetime_cron.json",
      "category": "COMM",
      "business_function": "automate",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "if",
        "dateTime",
        "noOp",
        "stickyNote",
        "scheduleTrigger",
        "serviceNow",
        "sort",
        "manualTrigger"
      ],
      "primary_integrations": [
        "slack",
        "datetime",
        "schedule"
      ],
      "total_nodes": 14,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.dateTime",
        "n8n-nodes-base.serviceNow",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.sort",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.noOp",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "COMM workflow that automates data/processes using slack, datetime, schedule, triggered via cron",
      "complexity_score": 23
    },
    {
      "original_filename": "9w5vu5VmXxpdBLWi_Send_Daily_Birthday_Reminders_from_Google_Contacts_to_Slack.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/9w5vu5VmXxpdBLWi_Send_Daily_Birthday_Reminders_from_Google_Contacts_to_Slack.json",
      "workflow_name": "Send Daily Birthday Reminders from Google Contacts to Slack",
      "suggested_filename": "ai_send_ai_process_slack_googlecontacts_cron.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "cron",
      "integrations": [
        "slack",
        "if",
        "stickyNote",
        "googleContacts",
        "scheduleTrigger",
        "filter"
      ],
      "primary_integrations": [
        "slack",
        "googlecontacts",
        "schedule"
      ],
      "total_nodes": 7,
      "node_types": [
        "n8n-nodes-base.scheduleTrigger",
        "n8n-nodes-base.googleContacts",
        "n8n-nodes-base.if",
        "n8n-nodes-base.slack",
        "n8n-nodes-base.filter",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that ai_processs data/processes using slack, googlecontacts, schedule, triggered via cron",
      "complexity_score": 13
    },
    {
      "original_filename": "90_Extract_expenses_from_emails_and_add_to_Google_Sheet.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/90_Extract_expenses_from_emails_and_add_to_Google_Sheet.json",
      "workflow_name": "Extract expenses from emails and add to Google Sheet",
      "suggested_filename": "ai_extract_ai_process_mindee_googlesheets.json",
      "category": "AI",
      "business_function": "ai_process",
      "trigger_type": "manual",
      "integrations": [
        "if",
        "set",
        "mindee",
        "googleSheets",
        "emailReadImap"
      ],
      "primary_integrations": [
        "mindee",
        "googlesheets",
        "emailreadimap"
      ],
      "total_nodes": 6,
      "node_types": [
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.emailReadImap",
        "n8n-nodes-base.mindee",
        "n8n-nodes-base.set",
        "n8n-nodes-base.googleSheets"
      ],
      "business_description": "AI workflow that ai_processs data/processes using mindee, googlesheets, emailreadimap, triggered via manual",
      "complexity_score": 11
    },
    {
      "original_filename": "AI Agent to chat with Airtable and analyze data.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/AI Agent to chat with Airtable and analyze data.json",
      "workflow_name": "AI Agent to chat with Airtable and analyze data",
      "suggested_filename": "ai_agent_analyze_generic.json",
      "category": "AI",
      "business_function": "analyze",
      "trigger_type": "manual",
      "integrations": [],
      "primary_integrations": [],
      "total_nodes": 0,
      "node_types": [],
      "business_description": "AI workflow that analyzes data/processes using generic components, triggered via manual",
      "complexity_score": 0
    },
    {
      "original_filename": "Talk to your SQLite database with a LangChain AI Agent.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/Talk to your SQLite database with a LangChain AI Agent.json",
      "workflow_name": "SQL agent with memory",
      "suggested_filename": "ai_agent_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainchat.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "stickyNote",
        "set",
        "n8n-nodes-langchain.chatTrigger",
        "httpRequest",
        "readWriteFile",
        "n8n-nodes-langchain.lmChatOpenAi",
        "manualTrigger",
        "n8n-nodes-langchain.agent",
        "compression"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.chat",
        "httprequest"
      ],
      "total_nodes": 13,
      "node_types": [
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.compression",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.readWriteFile",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.set",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.chatTrigger"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.chat, httprequest, triggered via manual",
      "complexity_score": 23
    },
    {
      "original_filename": "7cXvgkl9170QXzT2_RAG_Workflow_For_Company_Documents_stored_in_Google_Drive.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/7cXvgkl9170QXzT2_RAG_Workflow_For_Company_Documents_stored_in_Google_Drive.json",
      "workflow_name": "RAG Workflow For Company Documents stored in Google Drive",
      "suggested_filename": "ai_company_automate_n8nnodeslangchainmemorybufferwindow_n8nnodeslangchainvectors.json",
      "category": "AI",
      "business_function": "automate",
      "trigger_type": "manual",
      "integrations": [
        "n8n-nodes-langchain.memoryBufferWindow",
        "n8n-nodes-langchain.toolVectorStore",
        "stickyNote",
        "googleDriveTrigger",
        "n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-langchain.embeddingsGoogleGemini",
        "n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-langchain.agent",
        "googleDrive",
        "n8n-nodes-langchain.documentDefaultDataLoader",
        "n8n-nodes-langchain.vectorStorePinecone",
        "n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"
      ],
      "primary_integrations": [
        "n8n-nodes-langchain.memorybufferwindow",
        "n8n-nodes-langchain.vectorstore",
        "googledrive"
      ],
      "total_nodes": 18,
      "node_types": [
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "@n8n/n8n-nodes-langchain.agent",
        "@n8n/n8n-nodes-langchain.toolVectorStore",
        "@n8n/n8n-nodes-langchain.vectorStorePinecone",
        "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
        "n8n-nodes-base.googleDrive",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.googleDriveTrigger",
        "n8n-nodes-base.googleDriveTrigger",
        "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "@n8n/n8n-nodes-langchain.chatTrigger",
        "n8n-nodes-base.stickyNote",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that automates data/processes using n8n-nodes-langchain.memorybufferwindow, n8n-nodes-langchain.vectorstore, googledrive, triggered via manual",
      "complexity_score": 30
    },
    {
      "original_filename": "MfKB97VVSuXMo3Fm_Create_Animated_Stories_using_GPT-4o-mini,_Midjourney,_Kling_and_Creatomate_API.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/MfKB97VVSuXMo3Fm_Create_Animated_Stories_using_GPT-4o-mini,_Midjourney,_Kling_and_Creatomate_API.json",
      "workflow_name": "Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API",
      "suggested_filename": "ai_create_create_httprequest_manual.json",
      "category": "AI",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "wait",
        "if",
        "stickyNote",
        "set",
        "httpRequest",
        "manualTrigger",
        "code",
        "switch"
      ],
      "primary_integrations": [
        "httprequest",
        "manual"
      ],
      "total_nodes": 51,
      "node_types": [
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.code",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.if",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.set",
        "n8n-nodes-base.set",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.if",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.wait",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.switch",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.httpRequest",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote",
        "n8n-nodes-base.stickyNote"
      ],
      "business_description": "AI workflow that creates data/processes using httprequest, manual, triggered via manual",
      "complexity_score": 59
    },
    {
      "original_filename": "102_Insert_data_into_a_new_row_for_a_table_in_Coda.json",
      "original_path": "/Users/ben/code/n8n-workflows/workflows/102_Insert_data_into_a_new_row_for_a_table_in_Coda.json",
      "workflow_name": "Insert data into a new row for a table in Coda",
      "suggested_filename": "data_insert_create_manual_coda.json",
      "category": "DATA",
      "business_function": "create",
      "trigger_type": "manual",
      "integrations": [
        "set",
        "manualTrigger",
        "coda"
      ],
      "primary_integrations": [
        "manual",
        "coda"
      ],
      "total_nodes": 3,
      "node_types": [
        "n8n-nodes-base.manualTrigger",
        "n8n-nodes-base.coda",
        "n8n-nodes-base.set"
      ],
      "business_description": "DATA workflow that creates data/processes using manual, coda, triggered via manual",
      "complexity_score": 6
    }
  ],
  "naming_conventions": {
    "pattern": "[CATEGORY]_[FUNCTION]_[PRIMARY-INTEGRATIONS]_[TRIGGER-TYPE].json",
    "categories": [
      "AI",
      "UTIL",
      "DATA",
      "COMM",
      "OPS",
      "BIZ",
      "ANALYTICS",
      "CONTENT",
      "ECOMMERCE",
      "MARKETING"
    ],
    "description": "Enhanced naming for improved organization and developer understanding"
  }
}